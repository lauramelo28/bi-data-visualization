owner,is_accepted,score,last_activity_date,creation_date,answer_id,question_id,content_license,body,last_edit_date,posted_by_collectives,is_post_ai
"{'account_id': 19901828, 'reputation': 28, 'user_id': 14581663, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/720aaa1b772b8474a317a7884ef6f4cd?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Hxng', 'link': 'https://stackoverflow.com/users/14581663/hxng'}",True,1,1728261121,1728261121,79060313,79060236,CC BY-SA 4.0,"<ol> <li>I think you do not need to use a state to control the color transition. You have the option to apply the classes <code>grayscale hover:grayscale-0</code> to your image as seen on the documentation <a href=""https://tailwindcss.com/docs/grayscale"" rel=""nofollow noreferrer"">here</a>.</li> <li>I have also removed <code><div className=""absolute inset-0 bg-gradient-to-t from-black via-transparent to-transparent opacity-25 transition-opacity duration-300 hover:opacity-100"" /></code> from your code as it appears to affect the grayscale-to-color transition.</li> </ol> <p>Here is the final piece code</p> <pre><code>const WatchFilm = ({ movie }) => {   const genreName = movie.genres.length > 0 ? movie.genres[0].name : ""Sin GÃ©nero"";    const animationVariants = {     hidden: { opacity: 0, scale: 0.8 },     visible: { opacity: 1, scale: 1 },   };    return (     <motion.div       className=""relative cursor-pointer bg-blue-700 rounded-lg overflow-hidden transition-all duration-500 hover:bg-gradient-to-r hover:from-blue-500 hover:to-purple-600 w-64 mx-2 my-12 transform hover:scale-110""       initial=""hidden""       animate=""visible""       variants={animationVariants}       transition={{ duration: 0.5 }}     >        <img         className={""h-96 w-full object-cover transition-transform duration-300 hover:scale-105 filter grayscale hover:grayscale-0""}         src={movie.cover}         alt={movie.title}       />       <div className=""absolute bottom-0 left-0 w-full bg-black bg-opacity-60 p-2 text-white text-center transition-all duration-500"">         <h2 className=""text-md sm:text-lg font-light font-afacadFlux"">           {genreName}         </h2>       </div>     </motion.div>   ); }; </code></pre>",,,true
"{'account_id': 13170666, 'reputation': 88007, 'user_id': 9513184, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/176386ce0b94057e55352484e69707f9?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Unmitigated', 'link': 'https://stackoverflow.com/users/9513184/unmitigated'}",True,2,1728263082,1728263082,79060348,79060214,CC BY-SA 4.0,"<p><code>useQueryClient</code> is not reactive to any query data changing. The standard way is to call <code>useQuery</code> to retrieve any data (which handles caching automatically).</p> <pre class=""lang-js prettyprint-override""><code>const allBlogs = useQuery({     queryKey: ['blogs'],     queryFn: () => {/* make request to get blog data*/} }).data; </code></pre>",,,true
"{'account_id': 22990227, 'reputation': 57, 'user_id': 17115833, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/soqTJ.jpg?s=256', 'display_name': 'Narendra Dewasi', 'link': 'https://stackoverflow.com/users/17115833/narendra-dewasi'}",False,0,1728304329,1728304329,79061973,79060158,CC BY-SA 4.0,"<p>issue resolved, when I set timeout on updateNodeInternals.</p> <pre><code> // let ui re-render and then update handles position, without this, Handle position will have issue    setTimeout(() => {      updateNodeInternals(id)    }, 500); </code></pre>",,,true
"{'account_id': 10426633, 'reputation': 20743, 'user_id': 7687666, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/syXeE.png?s=256', 'display_name': 'Jason Pan', 'link': 'https://stackoverflow.com/users/7687666/jason-pan'}",False,-1,1728459909,1728455245,79068827,79060048,CC BY-SA 4.0,"<h3>UPDATE</h3> <p>Since you are using <code>UseHttpsRedirection</code>, and why it is still using <code>http://localhost:5243</code> endpoint in cors error message.</p> <p>So please follow my suggestions below to check if it can fix the issue.</p> <p><em>1. Use https endpoint in your front-end.</em></p> <pre><code>try {      const response = await axios.post(          `https://localhost:port/MemberFirstName=${encodeURIComponent(member.firstName)}&LastName=${encodeURIComponent(member.lastName)}&DOB=${encodeURIComponent(member.dob)}&email=${encodeURIComponent(member.email)}` ); </code></pre> <p><em>2. Use below cors setting.</em></p> <pre><code>builder.Services.AddCors(options => {     options.AddPolicy(name: policyName,         policyBuilder =>         {             policyBuilder.WithOrigins(""http://localhost:3000"")                          .AllowAnyHeader()                          .AllowAnyMethod()                          .WithExposedHeaders(""Access-Control-Allow-Origin"", ""http://localhost:3000"")                          .AllowCredentials();         }); }); </code></pre> <p><em>3. Change the middleware order like below.</em></p> <pre><code>var app = builder.Build();  if (app.Environment.IsDevelopment()) {     app.UseSwagger();     app.UseSwaggerUI(); }  app.UseHttpsRedirection();  app.UseCors(policyName);  app.UseAuthorization();  app.MapControllers();  app.Run(); </code></pre> <p>The cors issue should be fixed by applying the changes above.</p> <h3>PREVIOUS</h3> <p>You can't use <code>WithOrigins</code> and <code>SetIsOriginAllowed</code> together.</p> <p><strong>The following code is an example of a correct CORS setup.</strong></p> <p><em>1. Allow All.</em></p> <pre><code>builder.Services.AddCors(options => options.AddPolicy(""CorsPolicy"", builder => {     builder.AllowAnyMethod()         .SetIsOriginAllowed(_ => true)         .AllowAnyHeader()         .AllowCredentials(); })); </code></pre> <p><em>2. Allow specific Origin.</em></p> <pre><code>builder.Services.AddCors(options => options.AddPolicy(""CorsPolicy"", policy => {     policy         .WithOrigins(""Your A site"")          .AllowAnyMethod()         .AllowAnyHeader()         .AllowCredentials(); })); </code></pre> <p>Here is related link: <a href=""https://stackoverflow.com/a/77520093/7687666"">SignalR Cross Domain</a></p>",1728459909.0,,true
"{'account_id': 36201048, 'reputation': 44, 'user_id': 27617253, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/678342f2b7c963782594055e0a1dde74?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Ghaith Mansour', 'link': 'https://stackoverflow.com/users/27617253/ghaith-mansour'}",False,-1,1728251723,1728251723,79060150,79060048,CC BY-SA 4.0,"<p><code>.WithExposedHeaders(""Access-Control-Allow-Origin"", ""http://localhost:3000"")</code> is used to expose certain response headers to the client, but it's not needed for setting Access-Control-Allow-Origin</p> <p>You should try to pass the data as a JSON object instead of query parameters for security reasons at most, but also to be more aligned with REST principles.</p> <p>one last thing, make sure the recipient method in the controller is decorated with [HttpPost]</p>",,,true
"{'account_id': 36287597, 'reputation': 1, 'user_id': 27660033, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/1465b6be7f8ffe5075f9892405d3e25f?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Nikhil Kurle', 'link': 'https://stackoverflow.com/users/27660033/nikhil-kurle'}",False,0,1728398891,1728246489,79060033,79060031,CC BY-SA 4.0,<p>Just use these commands:</p> <ol> <li><code>npm cache clean --force</code></li> <li><code>cd android</code></li> <li><code>./gradlew clean</code></li> <li><code>cd ..</code></li> <li><code>npx react-native start --reset-cache</code></li> <li><code>npx react-native run-android</code></li> </ol> <p>No need to install the <code>WatchMan</code></p>,1728398891.0,,true
"{'account_id': 29291016, 'reputation': 110, 'user_id': 22441488, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3b260d0990a636748e372d93ef1cad8d?s=256&d=identicon&r=PG', 'display_name': 'dy0gu', 'link': 'https://stackoverflow.com/users/22441488/dy0gu'}",False,0,1728247432,1728246759,79060040,79059952,CC BY-SA 4.0,"<p>What you are asking is an extremely complex thing to do yourself, I would recommend using mature and tested community alternatives first to see if they suit your needs.</p> <p>One such example is the <code>react-live</code> package. On their <a href=""https://commerce.nearform.com/open-source/react-live"" rel=""nofollow noreferrer"">website</a> you can find a demo with a live editor that accepts react code and renders it to the right.</p> <p>You also have <a href=""https://www.npmjs.com/package/react-jsx-parser"" rel=""nofollow noreferrer"">react-jsx-parser</a>. Here is a simple example of the implementation you're looking for using this package:</p> <pre><code>import React from 'react' import JsxParser from 'react-jsx-parser'  const MyComponent = () => (   <JsxParser     jsx={`       <h1>Header</h1>       <div>I am text!</div>     `}   /> ) </code></pre> <p>Note that the <code>jsx</code> prop is a string so you can pass the code as a variable from your backend, this example types it inline for demonstration purposes.</p> <p>You'll have to refer to each project's documentation for more complex examples but most can easily handle custom components and simple hook usage.</p> <p>Keep in mind that if the code from the backend is user created it could expose you to security issues. There is a lot of care to be had when dealing with JSX injection, even if the packages handle most issues for you.</p>",1728247432.0,,true
"{'account_id': 13170666, 'reputation': 88007, 'user_id': 9513184, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/176386ce0b94057e55352484e69707f9?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Unmitigated', 'link': 'https://stackoverflow.com/users/9513184/unmitigated'}",False,0,1728268061,1728268061,79060430,79059873,CC BY-SA 4.0,"<p>You could handle the state for mode in <code>App</code> and pass it down through context.</p> <pre class=""lang-js prettyprint-override""><code>import { createContext, useState } from 'react'; export const ModeContext = createContext(); function App() {   const [mode, setMode] = useState('light');   return (     <ModeContext.Provider value={{mode, setMode}}>       <RouterProvider router={router} />     </ModeContext.Provider>   ); } </code></pre> <p>Then, any component can get (or set) the value.</p> <pre class=""lang-js prettyprint-override""><code>import { ModeContext } from './App'; import { useContext } from 'react'; function Home() {     const { mode } = useContext(ModeContext);     return 'Home content...'; } </code></pre>",,,true
"{'account_id': 26618602, 'reputation': 2870, 'user_id': 20237646, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/fa24d5646e4d1c444b17a77fd8a37337?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Dasari Kamali', 'link': 'https://stackoverflow.com/users/20237646/dasari-kamali'}",False,0,1728645228,1728645228,79077973,79059780,CC BY-SA 4.0,"<p>I successfully authenticated a user with the Microsoft Authentication Library (@azure/msal-react) in the following React application.</p> <p>Here is the complete code from the <a href=""https://github.com/DasariKamali/ReactAppAuthentication"" rel=""nofollow noreferrer"">GitHub repository</a>.</p> <p><strong>src/App.js :</strong></p> <pre class=""lang-js prettyprint-override""><code>import React, { useEffect, useState, useContext } from ""react""; import { Routes, Route, Navigate, useLocation, useNavigate } from ""react-router-dom""; import { ThemeProvider } from ""@mui/material/styles""; import CssBaseline from ""@mui/material/CssBaseline""; import Icon from ""@mui/material/Icon""; import MDBox from ""./components/UI/MDBox""; import theme from ""./styles/theme""; import themeDark from ""./styles/themeDark""; import SignIn from ""./components/Auth/SignIn""; import PrivateRoute from ""./components/Layout/PrivateRoute""; import routes from ""./routes/routes""; import { msalConfig } from ""./config/authConfig""; import { MsalProvider, useMsal, useIsAuthenticated } from ""@azure/msal-react""; import { PublicClientApplication, EventType } from ""@azure/msal-browser""; import { GlobalStateProvider, GlobalStateContext } from ""./contexts/GlobalStateContext"";  const pca = new PublicClientApplication(msalConfig);  function AppContent() {   const location = useLocation();   const navigate = useNavigate();   const [controller, setController] = useState({     miniSidenav: false,     direction: ""ltr"",     layout: ""dashboard"",     openConfigurator: false,     sidenavColor: ""blue"",     transparentSidenav: false,     whiteSidenav: false,     darkMode: false,   });   const {     miniSidenav,     direction,     layout,     openConfigurator,     sidenavColor,     transparentSidenav,     whiteSidenav,     darkMode,   } = controller;   const [onMouseEnter, setOnMouseEnter] = useState(false);   const [allowedPages, setAllowedPages] = useState([""sign-in"", ""sign-up"", ""report"", ""authentication/sign-in"", ""unauthorized""]);   const { instance, accounts, inProgress } = useMsal();   const isAuthenticated = useIsAuthenticated();   const { stateObj } = useContext(GlobalStateContext);    useEffect(() => {     const fetchAllowedPages = async () => {       const allRouteKeys = routes.map((route) => route.key);       setAllowedPages(allRouteKeys);     };     fetchAllowedPages();   }, []);   useEffect(() => {     document.body.setAttribute(""dir"", direction);   }, [direction]);   useEffect(() => {     if (stateObj) {       const { AICallAssuranceAgent, AICallAssuranceMgr, AICallSummary } = stateObj;       let allRouteKeys = AICallSummary ? allowedPages : allowedPages.filter((route) => route !== ""callsummary"");       allRouteKeys = AICallAssuranceAgent || AICallAssuranceMgr ? allRouteKeys : allRouteKeys.filter((route) => route !== ""callassurance"");       if (JSON.stringify(allRouteKeys) !== JSON.stringify(allowedPages)) {         setAllowedPages(allRouteKeys);       }     }     document.documentElement.scrollTop = 0;     document.scrollingElement.scrollTop = 0;   }, [stateObj, allowedPages]);    useEffect(() => {     navigate(location.pathname);   }, [inProgress, accounts, navigate, location.pathname]);   useEffect(() => {     const handleMsalEvent = (event) => {       if (event.eventType === EventType.LOGIN_SUCCESS) {         instance.setActiveAccount(event.payload.account);       }     };     const callbackId = instance.addEventCallback(handleMsalEvent);     return () => {       if (callbackId) {         instance.removeEventCallback(callbackId);       }     };   }, [instance]);   const handleOnMouseEnter = () => {     if (miniSidenav && !onMouseEnter) {       setController((prev) => ({ ...prev, miniSidenav: false }));       setOnMouseEnter(true);     }   };   const handleOnMouseLeave = () => {     if (onMouseEnter) {       setController((prev) => ({ ...prev, miniSidenav: true }));       setOnMouseEnter(false);     }   };   const handleConfiguratorOpen = () => {     setController((prev) => ({ ...prev, openConfigurator: !prev.openConfigurator }));   };   const filteredRoutes = routes.filter((route) => allowedPages.includes(route.key));   const configsButton = (     <MDBox       display=""flex""       justifyContent=""center""       alignItems=""center""       width=""3.25rem""       height=""3.25rem""       sx={{ backgroundColor: ""white"" }}       shadow=""sm""       borderRadius=""50%""       position=""fixed""       right=""2rem""       bottom=""2rem""       zIndex={99}       color=""red""       onClick={handleConfiguratorOpen}     >       <Icon fontSize=""small"" color=""inherit"">         settings       </Icon>     </MDBox>   );   return (     <ThemeProvider theme={darkMode ? themeDark : theme}>       <CssBaseline />       {}       {configsButton}       <Routes>         <Route path=""/authentication/sign-in"" element={<SignIn />} />         {filteredRoutes.map((route) => (           <Route             key={route.key}             path={route.route}             element={               <PrivateRoute>                 {route.component}               </PrivateRoute>             }           />         ))}         <Route path=""*"" element={<Navigate to=""/callsummary"" />} />       </Routes>     </ThemeProvider>   ); } function App() {   return (     <MsalProvider instance={pca}>       <GlobalStateProvider>         <AppContent />       </GlobalStateProvider>     </MsalProvider>   ); } export default App; </code></pre> <p><strong>src/components/Auth/SignIn.js :</strong></p> <pre class=""lang-js prettyprint-override""><code>import React from 'react'; import { useMsal } from '@azure/msal-react'; import MDBox from '../UI/MDBox';  import { Button, TextField } from '@mui/material';  const SignIn = () => {     const { instance } = useMsal();     const handleLogout = () => {         instance.logout();     };     const handleSignIn = (event) => {         event.preventDefault();         instance.loginPopup().catch((error) => {             console.error(""Login failed: "", error);         });     };     return (         <MDBox>             <form onSubmit={handleSignIn}>                 <Button type=""submit"" variant=""contained"" color=""primary"">                     Sign In                 </Button>                 <Button onClick={handleLogout} variant=""outlined"" color=""secondary"">                     Logout                 </Button>             </form>         </MDBox>     ); }; export default SignIn; </code></pre> <p><strong>src/config/authConfig.js :</strong></p> <pre class=""lang-js prettyprint-override""><code>import { LogLevel } from ""@azure/msal-browser"";  export const msalConfig = {   auth: {     clientId: ""<clientID>"",      authority: ""https://login.microsoftonline.com/<tenantID>"",      redirectUri: ""http://localhost:3000"",      postLogoutRedirectUri: ""http://localhost:3000"",   },   cache: {     cacheLocation: ""localStorage"",      storeAuthStateInCookie: false,    },   system: {     loggerOptions: {       loggerCallback: (level, message, containsPii) => {         if (containsPii) return;         switch (level) {           case LogLevel.Error:             console.error(message);             return;           case LogLevel.Info:             console.info(message);             return;           case LogLevel.Verbose:             console.debug(message);             return;           case LogLevel.Warning:             console.warn(message);             return;           default:             return;         }       },       logLevel: LogLevel.Info,       piiLoggingEnabled: false,     },   }, }; export const loginRequest = {   scopes: [""User.Read""], }; </code></pre> <p>I added the below URL in Azure AD under Authentication URIs as a Single-Page Application.</p> <pre><code>http://localhost:3000 </code></pre> <p><img src=""https://i.imgur.com/n8Znxy0.png"" alt=""enter image description here"" /></p> <p><strong>Output :</strong></p> <p>I successfully signed in and signed out as shown below.</p> <pre><code>http://localhost:3000/authentication/sign-in </code></pre> <p><img src=""https://i.imgur.com/QJlm1qg.png"" alt=""enter image description here"" /></p> <p><img src=""https://i.imgur.com/3j6VE8X.png"" alt=""enter image description here"" /></p> <p><img src=""https://i.imgur.com/4zLybSA.png"" alt=""enter image description here"" /></p>",,,true
"{'account_id': 18282742, 'reputation': 3093, 'user_id': 13311273, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GhDN1-9fMTc1eWRay_inGJFCldR3IfJHW1I5ixIiQ=k-s256', 'display_name': 'Oki', 'link': 'https://stackoverflow.com/users/13311273/oki'}",True,1,1728235913,1728235554,79059702,79059550,CC BY-SA 4.0,"<p><code>theme.shape.borderRadius</code> specifies the default border radius value (in pixels)</p> <p>The prop <code>borderRadius</code>, that is passed to components, tells <strong>by how much the theme border radius will be multiplied</strong></p> <p>If a component receives <code>borderRadius</code> as <code>number</code>, it multiplies it by <code>theme.shape.borderRadius</code></p> <p>In your example, your theme border radius is 3 and the Box border radius is also 3 as number (since it returns the theme's one) and that leads to 3x3=9px</p> <p>If you want to use the theme border radius, you can simply pass <strong>1</strong> as value</p> <p><code><Box borderRadius={1} /></code> This tells mui that you want to use the theme border as it is, without the need of a callback to access the theme</p> <p>Here in <a href=""https://mui.com/system/borders/#border-radius"" rel=""nofollow noreferrer"">this example</a> they have a comment that says <code>theme.shape.borderRadius * 1</code></p>",1728235913.0,,true
"{'account_id': 32972129, 'reputation': 116, 'user_id': 25592211, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Jl39Bg2C.jpg?s=256', 'display_name': 'Naren D', 'link': 'https://stackoverflow.com/users/25592211/naren-d'}",False,0,1728232156,1728232156,79059569,79059544,CC BY-SA 4.0,"<p>Include a role property to capture the user's role.</p> <pre><code>if (user.username && user.email && user.password && user.role) </code></pre> <p>use a onChange to handle roles in select</p> <pre><code><select onChange={handleRoleChange} value={user.role}>         <option value="""">Choose Role</option>         <option value=""student"">Student</option>         <option value=""teacher"">Teacher</option>     </select> </code></pre> <p>Example handle Role change function:</p> <pre><code>    const handleRoleChange = (event) => {         setUser((currentUser) => ({             ...currentUser,             role: event.target.value,         }));     }; </code></pre> <p>Hope this Helps!...</p>",,,true
"{'account_id': 14604458, 'reputation': 447, 'user_id': 10547776, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/WMJrY.jpg?s=256', 'display_name': 'alireza alizade', 'link': 'https://stackoverflow.com/users/10547776/alireza-alizade'}",True,0,1728224939,1728224939,79059328,79059327,CC BY-SA 4.0,"<p>First, make sure that you already completed the SSR Inertia doc guide</p> <p>Install <a href=""https://github.com/vbenjs/vite-plugin-compression"" rel=""nofollow noreferrer"">compression</a> lib yarn add vite-plugin-compression</p> <p>Vite config</p> <pre><code>import { defineConfig } from 'vite'; import laravel from 'laravel-vite-plugin'; import react from '@vitejs/plugin-react'; import viteCompression from 'vite-plugin-compression'; import { resolve } from 'path';  export default defineConfig({     plugins: [         laravel({             input: 'resources/js/app.jsx',             ssr: 'resources/js/ssr.jsx',             refresh: true,         }),         react(),         viteCompression({             algorithm: 'gzip',             ext: '.gz',             threshold: 10240,             deleteOriginFile: false,         })     ],     define: {         'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV)     },     resolve: {         alias: {             '@': resolve(__dirname, 'resources/js'),             ziggy: resolve('vendor/tightenco/ziggy/dist'),         },     }, }); </code></pre> <p>Then here is the Nginx conf of my site note that the gzip is already on my using main nginx conf (nginx.conf) <code>gzip on;</code></p> <p>here is my site config in 'sites-available/MYSITE.com'</p> <pre><code>gzip_vary on; gzip_proxied any; gzip_comp_level 6; gzip_buffers 16 8k; gzip_http_version 1.1; gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+>  gzip_static on;  map $uri $gzip_extension {     ~*\.css$ .css.gz;     ~*\.js$ .js.gz; }  server {     server_name YOURDOMAIN.com;     root /var/www/PROJECT_FOLDER_NAME/public;      add_header X-Frame-Options ""SAMEORIGIN"";     add_header X-Content-Type-Options ""nosniff"";      index index.php;      charset utf-8;      location / {         try_files $uri$gzip_extension $uri $uri/ /index.php?$query_string;     }      location = /favicon.ico { access_log off; log_not_found off; }     location = /robots.txt  { access_log off; log_not_found off; }      location ^~ /build/ {         expires max;         add_header Cache-Control ""public, max-age=31536000, immutable"";         try_files $uri$gzip_extension $uri =404;     }      error_page 404 /index.php;      location ~ \.php$ {         fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;         fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;         include fastcgi_params;         fastcgi_hide_header X-Powered-By;     }       location ~ /\.(?!well-known).* {         deny all;     }      location /webhook {      alias /var/www/PROJECT_FOLDER_NAME/webhook.php;      include fastcgi_params;      fastcgi_param SCRIPT_FILENAME $document_root/webhook.php;      fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;     }       location /ssr {         proxy_pass http://127.0.0.1:INERIA_SSR_RUNNING_PORT;         proxy_http_version 1.1;         proxy_set_header Upgrade $http_upgrade;         proxy_set_header Connection 'upgrade';         proxy_set_header Host $host;         proxy_cache_bypass $http_upgrade;         proxy_set_header X-Real-IP $remote_addr;         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;         proxy_set_header X-Forwarded-Proto $scheme;      }      listen [::]:443 ssl ipv6only=on;     listen 443 ssl;     ssl_certificate /etc/letsencrypt/live/YOURDOMAIN/fullchain.pem;     ssl_certificate_key /etc/letsencrypt/live/YOURDOMAIN/privkey.pem;     include /etc/letsencrypt/options-ssl-nginx.conf;     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;  } server {     if ($host = YOURDOMAIN.com) {         return 301 https://$host$request_uri;     }       listen 80;     listen [::]:80;     server_name YOURDOMAIN.com;     return 404; } </code></pre> <p>keep Inertia SSR running on a specific port (INERIA_SSR_RUNNING_PORT) using Pm2 you need to install pm2 on your server</p>",,,true
"{'account_id': 25922441, 'reputation': 115, 'user_id': 19644799, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AItbvmmyxHUa0O1hnK4x3I8ZHeGzqtlhcXclNFES66yG=k-s256', 'display_name': 'WinterSolstice', 'link': 'https://stackoverflow.com/users/19644799/wintersolstice'}",False,-1,1728301036,1728301036,79061770,79058947,CC BY-SA 4.0,"<pre><code>export async function captureFirstPageAsImage(quill: Quill, docName?: string) {   // Custom size in pixels   const CUSTOM_WIDTH = 770; // Width in pixels   const CUSTOM_HEIGHT = 990; // Height in pixels    // Clone the Quill editor's content   const editorContent = quill.root.innerHTML;   const wrapper = document.getElementById(""preview"");   if (!wrapper) return;    wrapper.style.position = ""absolute""; // Position off-screen   wrapper.style.left = ""-9999px""; // Move off-screen   wrapper.style.width = `${CUSTOM_WIDTH}px`; // Set width   wrapper.style.height = `${CUSTOM_HEIGHT}px`; // Set height   wrapper.style.overflow = ""hidden""; // Hide overflow    // Optionally, copy the Quill editor's styles to the wrapper   wrapper.style.fontFamily = ""inherit""; // Inherit font styles (or use custom)   wrapper.style.lineHeight = ""inherit"";   wrapper.style.padding = ""16px"";    wrapper.innerHTML = editorContent;   document.body.appendChild(wrapper);    // Use html2canvas to take a screenshot of the first page   try {     const canvas = await html2canvas(wrapper, {       scale: 0.3,       useCORS: true,       width: CUSTOM_WIDTH,       height: CUSTOM_HEIGHT,     });     const dataUrl = canvas.toDataURL(""image/png"");      const link = document.createElement(""a"");     link.href = dataUrl;     link.download = `${docName || ""document""}.png`;     link.click();   } catch (error) {     console.error(""Error capturing the first page as an image:"", error);   } finally {     // Clean up the off-screen wrapper     document.body.removeChild(wrapper);   } } </code></pre>",,,true
"{'account_id': 18431016, 'reputation': 75, 'user_id': 13426149, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/41c4207dbb945f44b45ac156fdb10fde?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Victor', 'link': 'https://stackoverflow.com/users/13426149/victor'}",True,0,1728523436,1728523436,79072473,79058906,CC BY-SA 4.0,"<p>The problem is that I wasn't handling and allowing OPTIONS requests.</p> <pre><code>func enableCors(w *http.ResponseWriter) {     (*w).Header().Set(""Access-Control-Allow-Origin"", ""*"")      // the below line was added     (*w).Header().Set(""Access-Control-Allow-Methods"", ""GET, POST, PUT, DELETE, OPTIONS"")      (*w).Header().Set(""Access-Control-Allow-Headers"", ""Content-Type"") }  // the below if statement was added if r.Method == ""OPTIONS"" {     enableCors(&w) } </code></pre> <p>With these changes, everything is now working as it previously did.</p>",,,true
"{'account_id': 19080560, 'reputation': 1357, 'user_id': 13932854, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GiiXJUiCmSU3sItgPGm1D77Nn4APfRDFLdnb3l6=k-s256', 'display_name': 'Para', 'link': 'https://stackoverflow.com/users/13932854/para'}",False,0,1728224056,1728224056,79059302,79058906,CC BY-SA 4.0,"<ol> <li>curl will always return the result, because cros is a blocking action made by the browser</li> <li>I tested your code using cors, it's ok.It has nothing to do with golang/axois 's version</li> </ol> <p>you should debug front-end.</p> <ul> <li>Take a look at the url of axios'request.</li> <li>Check whether the headers of the response returned by axios contain 'access-control-allow-origin:*'</li> </ul>",,,true
"{'account_id': 20945104, 'reputation': 2719, 'user_id': 15388164, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/75d88494cbc8f9edc2020019a8c5d945?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'rschristian', 'link': 'https://stackoverflow.com/users/15388164/rschristian'}",False,1,1728248691,1728248691,79060082,79058701,CC BY-SA 4.0,"<p>The library is meant to be a core set of primitives, and therefore doesn't address utilities that can be added from userland. Such things are quite easy to build out yourself. Here's a <a href=""https://gist.github.com/developit/a72311c247756f24da5b22d19c9dad48"" rel=""nofollow noreferrer"">helpful utility that Jason/developit wrote</a> a while back:</p> <pre class=""lang-js prettyprint-override""><code>const Item = ({ v, k, f }) => f(v, k);  /**  * Like signal.value.map(fn), but doesn't re-render.  */ export function For({ each, children: f, fallback }) {     let c = useMemo(() => new Map(), []);     return (         each.value?.map(             (v, k, x) => c.get(v) || (c.set(v, (x = <Item {...{ key: v, v, k, f }} />)), x)         ) ?? fallback     ); } </code></pre> <p>Now for your example, you can use it like so:</p> <pre><code>function ArrayConsumer({ mySignal }: { mySignal: MySignal }) {   const arr = useComputed(() => mySignal.value.someArr);    return (     <>       <For         each={arr}         children={(item) => (           <ArrayItem key={item.id} item={item} />         )}       />     </>   ); } </code></pre>",,,true
"{'account_id': 9442823, 'reputation': 834, 'user_id': 7022662, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/9d113b9608a7c8007f12f4f0bf679359?s=256&d=identicon&r=PG', 'display_name': 'Der Alex', 'link': 'https://stackoverflow.com/users/7022662/der-alex'}",False,0,1728205833,1728205833,79058702,79058678,CC BY-SA 4.0,"<p>On pageLoad you could check if a specific (not allowed) url has been entered and redirect to the startpage or some other page:</p> <pre class=""lang-js prettyprint-override""><code>... const navigate = useNavigate(); const location = useLocation();  const notAllowedUrls = ['/not', '/allowed', '/urls'];  useEffect(() => {   const onLoadHandler = () => {     if (notAllowedUrls.includes(location.pathname)) {       navigate('/');     }   };      window.onload = onLoadHandler;    return () => {     window.onload = null;   }; }, [location, navigate]); ... </code></pre>",,,true
"{'account_id': 14905366, 'reputation': 66, 'user_id': 14064791, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/wiKxGdiY.jpg?s=256', 'display_name': 'Meet Bhalodi', 'link': 'https://stackoverflow.com/users/14064791/meet-bhalodi'}",False,0,1728201064,1728201064,79058602,79058569,CC BY-SA 4.0,"<p>You want BaseEntity values to inherit. so you can create a separate interface for it and create a modification like below to create extended schema</p> <pre><code>export interface BaseEntity {     _id?: BaseId;     createdAt: Date;     updatedAt: Date; }  export const BaseSchema = {     _id: 'objectId',     createdAt: 'date',     updatedAt: 'date', };  export function extendSchema<T extends BaseEntity>(name: string, properties: Realm.ObjectSchema['properties']) {     return class extends Realm.Object<T> {         _id!: Realm.BSON.ObjectId;         createdAt!: Date;         updatedAt!: Date;          static schema: Realm.ObjectSchema = {             name,             properties: {                 ...BaseSchema,                 ...properties,             },             primaryKey: '_id',         };     }; } </code></pre>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",True,1,1728199287,1728198945,79058547,79058542,CC BY-SA 4.0,"<p>The issue is that the <code>Dashboard</code> component is issuing the Axios request as an unintentional side-effect. Each time the data is fetch and <code>getUsers</code> action is dispatch this triggers another component render, and triggers again the data fetch and action dispatch... repeat ad nauseam.</p> <p>Move the data fetching into a <code>useEffect</code> hook to be initiated as an intentional side-effect.</p> <pre><code>const Dashboard = (props) => {   useEffect(() => {     axios.get(""https://jsonplaceholder.typicode.com/users"")       .then(function(response) {         props.getUsers(response.data);       });   }, []);    ... } </code></pre> <p>Also, FWIW, modern Redux no longer recommends using the <code>connect</code> Higher Order Component, instead you should use the <code>useDispatch</code> and <code>useSelector</code> hooks to dispatch actions and subscribe to the store.</p> <p>Example:</p> <pre><code>import { useDispatch, useSelector } from 'react-redux';  const Dashboard = () => {   const dispatch = useDispatch();    const ctr = useSelector(state => state.TestReducer);   const users = useSelector(state => state.Users);    useEffect(() => {     axios.get(""https://jsonplaceholder.typicode.com/users"")       .then(function(response) {         dispatch({ type: ""USERS"", payload: response.data });       });   }, []);    ... };  export default Dashboard; </code></pre>",1728199287.0,,true
"{'account_id': 247108, 'reputation': 5273, 'user_id': 521624, 'user_type': 'registered', 'accept_rate': 71, 'profile_image': 'https://www.gravatar.com/avatar/579b240041b084d221aaf999e0de2929?s=256&d=identicon&r=PG', 'display_name': 'Guillaume Brunerie', 'link': 'https://stackoverflow.com/users/521624/guillaume-brunerie'}",True,2,1728196562,1728196562,79058496,79058462,CC BY-SA 4.0,"<p>There are no technical differences between the two.</p> <p>When it comes to best practices, it depends on your team's conventions, but I think that typically the best practice is to not use default exports at all, use instead</p> <pre class=""lang-js prettyprint-override""><code>export function PriceListPage() {     return (<></>); } </code></pre> <p>The problem with default exports is that it's too easy to rename them, which makes the code harder to understand if the same component is called differently in different files. Named exports can be renamed too if necessary, but at least the import line is much more explicit about the renaming, so it's harder to do it by accident.</p>",,,true
"{'account_id': 27363764, 'reputation': 1, 'user_id': 20870961, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/65jTzKBM.jpg?s=256', 'display_name': 'Arthu0x', 'link': 'https://stackoverflow.com/users/20870961/arthu0x'}",False,0,1728194451,1728194432,79058448,79058330,CC BY-SA 4.0,"<p>Sorry about my english, i am learning. You are trying to make a request but the 'fetch' function returns a promisse but your app is trying to assign the response of 'apiCall' before the data is availabe.</p> <p>Try to use this code:</p> <pre><code>//your imports...  const apiUrl = `https://api.thenewsapi.com/v1/news/top?api_token=${apiKey}&locale=us&limit=1`;  function apiCall() {   return fetch(apiUrl, {     method: 'GET'   })     .then(response => response.json())     .then(data => data.data[0].title)     .catch(error => {       console.error('Error:', error);     }); }  function App() {   const [headlines, setHeadlines] = useState(''); //create a state here     useEffect(() => {     // await the response and set the state     async function fetchHeadlines() {       const headlineData = await apiCall();       setHeadlines(headlineData);     }      fetchHeadlines();   }, []);    return (     <div className=""App"">       <Header />       <Container>         <Row>           <Col><Chart /></Col>           <Col><Headline headline={headlines} /></Col>          </Row>       </Container>       <Footer />     </div>   ); }  export default App; </code></pre>",1728194451.0,,true
"{'account_id': 20283372, 'reputation': 288, 'user_id': 14876576, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-DjzYAxDIsoQ/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucms0haqQkE4nLLaUewtbs0yMIJdQg/s96-c/photo.jpg?sz=256', 'display_name': 'D_Gamer', 'link': 'https://stackoverflow.com/users/14876576/d-gamer'}",True,0,1728422079,1728422079,79067805,79058143,CC BY-SA 4.0,"<p>My bad, I have integrated Auth0 React SDK and that is causing the issue.</p> <p>This snippet fixed the issue.</p> <pre class=""lang-js prettyprint-override""><code>useEffect(() => {     if (!isAuthenticated) {       getAccessTokenSilently();     }   }, [isAuthenticated, getAccessTokenSilently]);  </code></pre>",,,true
"{'account_id': 24802029, 'reputation': 1, 'user_id': 18684324, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2f4tW20M.jpg?s=256', 'display_name': 'Razal Kabeer', 'link': 'https://stackoverflow.com/users/18684324/razal-kabeer'}",False,0,1728196101,1728196101,79058483,79058036,CC BY-SA 4.0,"<p>I believe that to create an android App using C++ without android studio, it involves a lot of manual setup process. You can use command-line tools like CMake, AndroidNDK, and Android Debug Bridge. You can use tools like Visual Studio Code as a Code Editor.</p> <ul> <li><p>You can setup environment variable to make your Android SDK, NDK etc. easily accessible from the terminal</p> <p>export ANDROID_SDK_ROOT=/path/to/your/android-sdk</p> </li> </ul> <p>It can be a challenging task to build Android Apps using C++ from scratch. If you feel stuck during the development. Feel free to ask me.</p>",,,true
"{'account_id': 30682335, 'reputation': 26, 'user_id': 23523076, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocIIdb75y2oj5oy1HHVWA6L9lxHVk2YFWGJQsZSj2dvZEzkA=k-s256', 'display_name': 'Haider Malik', 'link': 'https://stackoverflow.com/users/23523076/haider-malik'}",True,1,1728180969,1728180969,79058244,79058036,CC BY-SA 4.0,"<p>you can try genymotion and virtual box this is a virtual sim, great for amd. also if you dont like JS and react you should use Flutter along with kotlin and java. flutter is a UI kit and uses Dart which is closer to C++ and it works great with firebase too. plus with flutter you can run on ios and web</p>",,,true
"{'account_id': 42065, 'reputation': 54455, 'user_id': 122428, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/a5d95005d7531abdb874dabfd9f64294?s=256&d=identicon&r=PG', 'display_name': 'jitter', 'link': 'https://stackoverflow.com/users/122428/jitter'}",False,1,1728164925,1728164925,79057997,79057980,CC BY-SA 4.0,"<p>Going by <a href=""https://support.google.com/analytics/answer/9216061?hl=en"" rel=""nofollow noreferrer"">[GA4] Enhanced measurement events</a> I would understand that these configurations are done only via the Google Analytics admin panel.</p> <ul> <li>Make sure you have separate data streams for website vs webapp</li> <li>In the admin panel go to <code>Data collection and modification</code></li> <li>Click <code>Data streams</code> and select your stream by name</li> <li>Under <code>Enhanced measurement</code> there is a toggle to enable enhanced measurements <ul> <li>Use the cogwheel to disable/enable events individually</li> </ul> </li> </ul>",,,true
"{'account_id': 9514781, 'reputation': 346, 'user_id': 7071581, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/wt3QWWY8.jpg?s=256', 'display_name': 'Sobowale Bukola', 'link': 'https://stackoverflow.com/users/7071581/sobowale-bukola'}",False,1,1728775168,1728775168,79082129,79057886,CC BY-SA 4.0,"<p>Even if you were able to push the code to github with <code>git lfs</code>, it won't deploy to github pages if the file size was more than <code>100mb</code> by default. As shown in your screenshot, I would advise the large files are hosted somewhere else and link those <code>.mp4</code> files with some urls.</p> <p>However, you can exclude the large files in your <code>gh-pages</code> branch by following the steps below :</p> <ul> <li><p>Build your files with : <code>npm run build</code></p> </li> <li><p>Checkout to your <code>gh-pages</code> branch with: <code>git checkout gh-pages</code></p> </li> <li><p>Remove all the tracked files, including the files tracked by <code>git lfs</code> with: <code>git rm -r *</code> This removes all the files recursively.</p> </li> <li><p>Copy the files from the build folder, often <code>dist</code> with: <code>cp -r dist/* .</code> This copies all in the <code>dist</code> folder into <code>.</code> which is the current context of the <code>gh-pages</code> branch.</p> </li> <li><p>Then proceed to <code>add</code> the new changes to the branch and push to the desired github repository.</p> <pre><code>git add . git commit -m ""commit message"" git push origin gh-pages </code></pre> </li> </ul>",,,true
"{'account_id': 6686335, 'reputation': 191103, 'user_id': 5157454, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-QPadFFLbBGA/AAAAAAAAAAI/AAAAAAAADB8/FkNCMP_vkAc/photo.jpg?sz=256', 'display_name': 'Ori Drori', 'link': 'https://stackoverflow.com/users/5157454/ori-drori'}",False,0,1728154733,1728154733,79057746,79057644,CC BY-SA 4.0,"<p>You are updating the state, which is an async operation, and then synchronously checking if the state changes.</p> <p>Instead, you'll have to take the current state, create <code>tempFacts</code> <code>Set</code>, update and check it synchronously, and when done update the state.</p> <pre><code>const answersToFact = ['a', 'b', 'c', 'f'] as const;  // this functions accept both list and facts, so we can extract it out of the component const factsHasAll = (list: string[], facts: Set<string>) => list.every(item => facts.has(item));  export default function useFacts(answers: boolean[]) {   const [facts, setFacts] = useState<Set<string>>(new Set([]));   const [inferredFacts, setInferredFacts] = useState<Set<string>>(new Set([]));    function populateFacts() {     setFacts(answersToFacts.reduce((set, fact, idx) => {       if(answer[idx]).add(fact);              return set;     }, new Set<string>()));   }    const doForwardChaining = useCallback(     (rules: Rule[]) => {       const inferredFacts = new Set<string>([]);       const tempFacts = new Set(facts); // create a temp facts state        while (true) {         let inferred = false;         for (const rule of rules) {           if (             // check if all facts exists in the tempFacts             factsHasAll(rule.antecedent, tempFacts) &&             !inferredFacts.has(rule.consequent)           ) {             tempFacts.add(rule.consequent); // update tempFacts             inferredFacts.add(rule.consequent);             inferred = true;             break;           }         }         if (!inferred) break;       }        setFacts(facts);       setInferredFacts((prev) => new Set([...prev, ...inferredFacts]));     },     [facts]   );    return {     facts,     populateFacts,     doForwardChaining,     inferredFacts,   }; } </code></pre>",,,true
"{'account_id': 19157844, 'reputation': 16, 'user_id': 13994309, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GgBS-L1pq7CcnN2ZPsz5xMapXpOAZUAAH2i4MoJjA=k-s256', 'display_name': 'Shashi', 'link': 'https://stackoverflow.com/users/13994309/shashi'}",True,0,1728277064,1728276364,79060616,79057500,CC BY-SA 4.0,"<pre><code><Button className='w-10 h-10 rounded-full'><MenuOpenIcon/></Button> </code></pre> <p>update your code with min with class as follows</p> <pre><code><Button className='w-10 h-10 rounded-full min-w-10'><MenuOpenIcon/></Button> </code></pre> <p>to get perfect circle around your button, also you can increase or decrease size of icons by using font size class as follows</p> <pre><code><Button className='w-10 h-10 rounded-full min-w-10'><MenuOpenIcon fontSize='medium'/></Button> </code></pre> <p>hope it will resolve your issue.</p>",1728277064.0,,true
"{'account_id': 35894709, 'reputation': 81, 'user_id': 27458191, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/bef534f1845a6eed419464792ede2194?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Piyush Pamnani', 'link': 'https://stackoverflow.com/users/27458191/piyush-pamnani'}",False,0,1728149445,1728149445,79057578,79057500,CC BY-SA 4.0,"<p>Checkout the MUI documentation when working with Tailwind CSS and MUI.</p> <p><a href=""https://mui.com/material-ui/integrations/interoperability/#tailwind-css"" rel=""nofollow noreferrer"">Documentation</a></p> <p>If you want to work with Tailwind CSS, you can set the precedence of more by setting the important option as true in tailwind.config.js</p> <pre><code>module.exports = {   important: true, } </code></pre> <hr /> <blockquote> <p>But it is not a good practice to work with more than one CSS framework.</p> </blockquote>",,,true
"{'account_id': 27371279, 'reputation': 638, 'user_id': 20877284, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/fYDiC.jpg?s=256', 'display_name': 'Youth Dream', 'link': 'https://stackoverflow.com/users/20877284/youth-dream'}",False,2,1728131555,1728125230,79056874,79056840,CC BY-SA 4.0,"<p>You can't access <code>window</code> during SSR in Next.js. To work around this you can use <code>useEffect</code>, but you don't want to do that since the initial value is not defined initially. To solve this problem, you can use <code>useLayoutEffect</code>. <code>useLayoutEffect</code> is designed to run code before rendering a component, defining the initial value of a color. I provide updated code for it.</p> <pre><code>    const [colors, setColors] = useState(null);     useLayoutEffect(() => {         if(window) {             setColors(localStorage.getItem(""_appColor"") ?             JSON.parse(localStorage.getItem(""_appColor"")) : null)         }else {             setColors(null)          }     }, []); </code></pre> <p>You can get more information about the <code>useLayoutEffect</code> <a href=""https://react.dev/reference/react/useLayoutEffect"" rel=""nofollow noreferrer"">here</a></p>",1728131555.0,,true
"{'account_id': 23416675, 'reputation': 157, 'user_id': 17477534, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/0544eead72541c391a54ddf7bee2b100?s=256&d=identicon&r=PG', 'display_name': 'guriev', 'link': 'https://stackoverflow.com/users/17477534/guriev'}",False,4,1728125403,1728125403,79056881,79056828,CC BY-SA 4.0,"<p>Lazy loading in SPA is recommended even if browser caching is in place. It offers advantages in terms of initial load time and resource efficiency:</p> <ul> <li>Lazy loading reduces the size of the initial packet that needs to be downloaded when a user first visits your site.</li> <li>Initial loading of a large package consumes a lot of memory and resources. Lazy loading loads modules only when they are needed, minimizing resource consumption.</li> <li>Application updates cause cache collapse, then users have to download a new version of the entire package. Lazy loading splits the application into smaller chunks, so only the updated parts need to be downloaded.</li> <li>If network connectivity is poor or unstable, downloading smaller amounts of data as needed can improve user experience and enable faster interactions.</li> </ul>",,,true
"{'account_id': 1804504, 'reputation': 39047, 'user_id': 1641941, 'user_type': 'registered', 'accept_rate': 71, 'profile_image': 'https://i.sstatic.net/Q8zet.png?s=256', 'display_name': 'HMR', 'link': 'https://stackoverflow.com/users/1641941/hmr'}",False,0,1728751306,1728751306,79081455,79056605,CC BY-SA 4.0,"<p>Below is a snippet that shows the problem, using an effect to set a height state value based on a ref doesn't work if you conditionally render components passing the same ref. The solution I used was the one suggested <a href=""https://stackoverflow.com/a/60476525/1641941"">here</a>. Passing the ref.current will solve the issue but that is not how you are supposed to do it and the linter will warn you about it.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""true"" data-babel-preset-react=""true"" data-babel-preset-ts=""false"">  <div class=""snippet-code snippet-currently-hidden"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function App({ nestedLevel = 0 }) {   // const ref = React.useRef(null);   const [message, setMessage] = React.useState("""");   const [selectedContent, setSelectedContent] = React.useState(""1"");   const observerRef = React.useRef(null);    //suggested solution   const ref = React.useCallback((node) => {     if (observerRef.current) {       observerRef.current.disconnect();     }      if (node !== null) {       setMessage(`height: ${node.clientHeight}`);        const resizeObserver = new ResizeObserver((entries) => {         for (let entry of entries) {           setMessage(`height: ${entry.contentRect.height}`);         }       });        resizeObserver.observe(node);       observerRef.current = resizeObserver;     }   }, []);   // React.useEffect(() => {   //   const element = ref.current;   //   if (!element) return;    //   const resizeObserver = new ResizeObserver((entries) => {   //     for (let entry of entries) {   //       setMessage(`height: ${entry.contentRect.height}`);   //     }   //   });    //   resizeObserver.observe(element);    //   return () => {   //     console.log(""cleanup"");   //     resizeObserver.unobserve(element);   //   };   // }, [ref.current]);//bad solution passing ref.current as dependency    return (     <div>       <p>{message}</p>       <p>{selectedContent}</p>       <select         value={selectedContent}         onChange={(e) => setSelectedContent(e.target.value)}       >         <option value=""1"">Option 1</option>         <option value=""2"">Option 2</option>       </select>       {selectedContent === ""1"" && (         <div ref={ref}>           <Content selectedContent={selectedContent} />         </div>       )}       {selectedContent === ""2"" && (         <div ref={ref}>           <Content selectedContent={selectedContent} />         </div>       )}     </div>   ); } function Content({ selectedContent }) {   const [toggle, setToggle] = React.useState(false);   return (     <div>       <button onClick={() => setToggle(!toggle)}>Toggle</button>       {selectedContent === ""1"" ? (         <div>           <p>content 1</p>           {toggle && <p>extra content</p>}         </div>       ) : (         <div>           <p>content 2</p>           <p>content 2</p>           <p>content 2</p>           {toggle && <p>extra content</p>}         </div>       )}     </div>   ); }  ReactDOM.render(<App />, document.getElementById(""root""));</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdnjs.cloudflare.com/ajax/libs/react/17.0.2/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/17.0.2/umd/react-dom.production.min.js""></script>  <div id=""root""></div></code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 6686335, 'reputation': 191103, 'user_id': 5157454, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-QPadFFLbBGA/AAAAAAAAAAI/AAAAAAAADB8/FkNCMP_vkAc/photo.jpg?sz=256', 'display_name': 'Ori Drori', 'link': 'https://stackoverflow.com/users/5157454/ori-drori'}",True,2,1728133901,1728133901,79057129,79056605,CC BY-SA 4.0,"<p>As you can see, your code works. Click the ""Show Content"" button, and the numbers would change. However, this polling the DOM in this way is not exact, and may hurt performance by forcing the DOM to re-layout so it can give you the dimensions. In addition, you render the component itself once per second, which hurts performance as well.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""true"" data-babel-preset-react=""true"" data-babel-preset-ts=""false"">  <div class=""snippet-code snippet-currently-hidden"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const { useRef, useState, useEffect, Fragment } = React;  const Demo = () => {   const stickyContainerRef = useRef();   const [show, setShow] = useState(false);   const [containerHeight, setContainerHeight] = useState(0);   const [checkCompnent, setCheckComponent] = useState(0);    useEffect(() => {     let clear = setTimeout(() => {       console.log('current height', stickyContainerRef.current.clientHeight);       if (         stickyContainerRef.current &&         stickyContainerRef.current.clientHeight       ) {         setContainerHeight(stickyContainerRef.current.clientHeight);                  clearTimeout(clear);       } else {         console.log('retry');         setCheckComponent((c) => c + 1);       }     }, 1000);     return () => {       clearTimeout(clear);     };   }, [checkCompnent]);      return (     <Fragment>       <div>containerHeight: {containerHeight}</div>            <button onClick={() => setShow(!show) }>Show Content</button>            <div id=""whynotworky"" ref={stickyContainerRef}>         {show && <div>content</div>}       </div>     </Fragment>   ); }  ReactDOM   .createRoot(root)   .render(<Demo />);</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.3.1/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.3.1/umd/react-dom.production.min.js""></script>  <div id=""root""></div></code></pre>  </div>  </div>  </p> <p>A better way is to use a <a href=""https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver"" rel=""nofollow noreferrer"">ResizeObserver</a>. The observer runs in the background, and will react when any of the observed elements changes in size. You can then take the values from the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry"" rel=""nofollow noreferrer"">ResizeObserverEntry objects</a> (preferable way), or check the DOM yourself (may hurt the performance). Click ""show content"" to see it working.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"" data-babel-preset-react=""true"" data-babel-preset-ts=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const { useRef, useState, useEffect, Fragment } = React;  const Demo = () => {   const stickyContainerRef = useRef();   const [clientHeight, setClientHeight] = useState(0);   const [blockSize, setBlockSize] = useState(0);   const [show , setShow] = useState(false);      useEffect(() => {     const resizeObserver = new ResizeObserver((entries, observer) => {       for (const entry of entries) {         if(entry.target !== stickyContainerRef.current) continue;                  const [contentBoxSize] = entry.contentBoxSize;                  setClientHeight(entry.target.clientHeight);         setBlockSize(contentBoxSize.blockSize);                  // optional - stop observing if blockSize is not 0         if(contentBoxSize.blockSize > 0) observer.unobserve(stickyContainerRef.current);       }     });          resizeObserver.observe(stickyContainerRef.current);          return () => {       resizeObserver.disconnect();     };   }, [stickyContainerRef]);      return (     <Fragment>       <div>clientHeight: {clientHeight}</div>       <div>blockSize: {blockSize}</div>            <button onClick={() => setShow(!show) }>Show Content</button>            <div id=""whynotworky"" ref={stickyContainerRef}>         {show && <div>content</div>}       </div>     </Fragment>   ); }  ReactDOM   .createRoot(root)   .render(<Demo />);</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.3.1/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.3.1/umd/react-dom.production.min.js""></script>  <div id=""root""></div></code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 7213123, 'reputation': 1155, 'user_id': 7231278, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e480ba5c3f8eaf88fd2207cb5c943a19?s=256&d=identicon&r=PG', 'display_name': 'Mehmet Baker', 'link': 'https://stackoverflow.com/users/7231278/mehmet-baker'}",False,1,1728121503,1728121503,79056764,79056605,CC BY-SA 4.0,"<p><code>clientHeight</code> is not the height of the browser window. It is the height of the div element. Since it has no text in it (which would cause the div to have at least <em>some</em> height) and the height is not set via CSS, the height must be <code>0</code>. The behavior is correct.</p> <p>From <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight"" rel=""nofollow noreferrer"">MDN</a>:</p> <blockquote> <p>The <code>Element.clientHeight</code> read-only property is zero for elements with no CSS or inline layout boxes; otherwise, it's the inner height of an element in pixels. It includes padding but excludes borders, margins, and horizontal scrollbars (if present).</p> </blockquote> <p>Link to the React Playground I worked on: <a href=""https://playcode.io/2032664"" rel=""nofollow noreferrer"">https://playcode.io/2032664</a></p>",,,true
"{'account_id': 25662866, 'reputation': 31, 'user_id': 19428390, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ebba969ffbe4ddce300e72f0bba342e5?s=256&d=identicon&r=PG', 'display_name': 'Super-Kenil', 'link': 'https://stackoverflow.com/users/19428390/super-kenil'}",False,0,1728156399,1728156399,79057797,79056087,CC BY-SA 4.0,"<p>I am not sure it would but, maybe try putting Toast component above children</p> <pre><code><html lang=""en"">   <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>     <ToasterComp />     {children}   </body> </html> </code></pre> <p>Or try lazy loading the component with <strong>ssr:false</strong>, in which you have to show toast on component mount.</p> <pre><code>const MyComponent = dynamic(()=>import(""@/components/MyComponent""),{ssr:false})  export default function Home() {   return (     <div className=""text-center"">       <h1 className="" my-10 text-blue-500 text-3xl"">Sonner render problem example app</h1>       <p className=""text-slate-800"">         Reload this page, if you don&apos;t see a toast then this is not working. if you click the button you will see a toast.       </p>       <MyComponent />     </div>   ); } </code></pre>",,,true
"{'account_id': 6615307, 'reputation': 52364, 'user_id': 5108796, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5792d442b2c7e1ecd6b4efa8c10e6c11?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'ghybs', 'link': 'https://stackoverflow.com/users/5108796/ghybs'}",False,1,1728120351,1728120351,79056738,79056063,CC BY-SA 4.0,"<p>The diagram describes the <strong>Authorization Code</strong> Flow for a Front-End/SPA-<strong>only</strong> application.</p> <p>The Implicit Flow skips steps 2 and 3 of the diagram (the Authorization Code round trip): the AIP (here Microsoft Identity Platform) directly sends the access token when it redirects to the Client application.</p> <p>If you have a .NET Core Back-End, you should use it with <a href=""https://learn.microsoft.com/en-us/entra/msal/dotnet/"" rel=""nofollow noreferrer"">MSAL.NET</a> and an Authorization Code Flow <strong>for Web appplication</strong>.</p> <p>Unfortunately, many diagrams confuse the Front and Back End sides of the Client application, and even for the browser (""user agent"") part, it may not be very clear whether you need your Front-End code or not.</p> <p>Referring to the diagram <a href=""https://medium.com/@thenakliman/oauth2-authorization-code-grant-38d18292c8f1"" rel=""nofollow noreferrer"">here</a>, you need your (React) Front-End only for steps 1 (landing) and 2 (redirection to AIP).</p> <p>Step 4 goes through your visitor's browser, but you should not need any Front-End code there: normally you configure a Back-End route as the redirect configured route to receive the browser request, which includes the Authorization Code. Then you use it in your Back-End with MSAL to get the Access token.</p> <p>With this scheme, your Front-End code does not need MSAL, it is used only initially to send the visitor to the AIP. It also never sees the Authorization Code: sounds like this is the confusing part from your question.</p>",,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",True,2,1728100531,1728100531,79056294,79056021,CC BY-SA 4.0,"<p>There is a very minor syntactical error. The Computed Property Name must be enclosed in square brackets.</p> <p>The below code uses a hard coded  property name ""question"".</p> <pre><code>onChange={(e) => {    setForm({    ...form,    question: e.target.value    }); }} </code></pre> <p>For Computed Property Names, it must be enclosed in square brackets as below. This will evaluate the variable question, and the result will be the property name.</p> <pre><code>onChange={(e) => {    setForm({    ...form,    [ question ]: e.target.value    }); }} </code></pre> <p><strong>Trial run</strong></p> <p><strong>Browser display - Questions and Answers</strong></p> <p><a href=""https://i.sstatic.net/196K05e3.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/196K05e3.png"" alt=""Browser display - Questions and Answers"" /></a></p> <p><strong>Console log of the state - form object</strong></p> <p><a href=""https://i.sstatic.net/v86E3lTo.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/v86E3lTo.png"" alt=""Browser display - "" /></a></p>",,,true
"{'account_id': 23694247, 'reputation': 321, 'user_id': 17718209, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gh-WQR6HeUCFcBM74OhQ3dy3dKQn-doXPAdNpFs=k-s256', 'display_name': 'AL Faiz Ahmed', 'link': 'https://stackoverflow.com/users/17718209/al-faiz-ahmed'}",False,2,1728084770,1728084770,79056054,79056021,CC BY-SA 4.0,"<p>You could try this</p> <pre><code>{Object.keys(form).map((question) => (   <>       <p style={{textAlign: ""left""}}>{question}</p>       <TextField            id={`${question}-textfield`}           value={form[question]}           placeholder={""Your answer here""}           name={question}           onChange={(e) => {               setForm(formState => ({                 ...formState,                 [e.target.name]: e.target.value             }));           }}           rows={4}           multiline           sx={{               marginBottom: ""50px"",               width: ""100%""           }}       />   </> ))} </code></pre>",,,true
"{'account_id': 11233210, 'reputation': 997, 'user_id': 8240417, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/1355618274553313/picture?type=large', 'display_name': 'Arif', 'link': 'https://stackoverflow.com/users/8240417/arif'}",False,0,1728289920,1728286291,79061003,79055997,CC BY-SA 4.0,"<p><strong>Short answer is: no.</strong> You don't need those dependencies to run your project. Even if you keep them it will add extra benefit and will not add any additional code in your production bundle.</p> <p>While you may not need these dependencies directly in your code, they help maintain compatibility across tools in the JavaScript ecosystem that rely on TypeScript types for better developer supportâ in IDE/Code Editors.</p> <p>reference: <a href=""https://www.typescriptlang.org/docs/handbook/intro-to-js-ts.html"" rel=""nofollow noreferrer"">https://www.typescriptlang.org/docs/handbook/intro-to-js-ts.html</a></p>",1728289920.0,,true
"{'account_id': 215866, 'reputation': 23679, 'user_id': 470749, 'user_type': 'registered', 'accept_rate': 73, 'profile_image': 'https://i.sstatic.net/BxOOa.jpg?s=256', 'display_name': 'Ryan', 'link': 'https://stackoverflow.com/users/470749/ryan'}",False,-1,1728077788,1728077788,79055884,79055852,CC BY-SA 4.0,"<p>This seems to work.</p> <p><a href=""https://codesandbox.io/p/devbox/i18n-trans-component-with-suspense-forked-l325zh?workspaceId=3104452f-3c7c-4688-a065-c2cdc2657c24"" rel=""nofollow noreferrer"">https://codesandbox.io/p/devbox/i18n-trans-component-with-suspense-forked-l325zh?workspaceId=3104452f-3c7c-4688-a065-c2cdc2657c24</a></p> <pre><code>""use client"";  import { useEffect, useState } from ""react""; import { Trans } from ""react-i18next""; // https://react.i18next.com/latest/trans-component  // TODO: Delete all the mocking. Replace with real backend calls. const delay = 2_000; const sampleLast4DigitsOfCard = ""3423"";  const mockedFetch = (delayMs: number) => {   return new Promise<string>((resolve) => {     setTimeout(() => {       resolve(sampleLast4DigitsOfCard);     }, delayMs);   }); };  function Loading() {   return (     <span style={{ border: ""1px solid black"", padding: ""2px"" }}>       Loading...     </span>   ); }  function Last4DigitsOfCardSimple() {   return sampleLast4DigitsOfCard; }  function Last4DigitsOfCardAsync() {   const [value, setValue] = useState<string | null>(null);    useEffect(() => {     async function main() {       const lastFourDigits = await mockedFetch(delay);       setValue(lastFourDigits);     }      main();   }, []);    return value ?? <Loading />; }  export function YourPrepaidCardEndingInLastFour({   locale, }: {   locale: string; }) {   return (     <div>       <div>         Async:{"" ""}         <Trans           locale={locale}           i18nKey=""yourPrepaidCardIsReady""           components={{             last4DigitsOfCard: <Last4DigitsOfCardAsync />,           }}         />       </div>       <br />       <br />       <div>         Simple (sync):{"" ""}         <Trans           locale={locale}           i18nKey=""yourPrepaidCardIsReady""           components={{             last4DigitsOfCard: <Last4DigitsOfCardSimple />,           }}         />       </div>     </div>   ); }  </code></pre> <p>But it uses <code>useEffect</code> instead of <code>Suspense</code>.</p> <p>I'm curious to learn how to do it with <code>Suspense</code>.</p>",,,true
"{'account_id': 32295628, 'reputation': 39, 'user_id': 25081079, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2JxyNXM6.jpg?s=256', 'display_name': 'Jaiyash Godani', 'link': 'https://stackoverflow.com/users/25081079/jaiyash-godani'}",False,0,1728151028,1728151028,79057637,79055839,CC BY-SA 4.0,"<p>Try using <code>object-fit: fill</code> The video will stretch or squish to fit the ratio or size without hiding anything or showing white spaces.</p> <p>See this <a href=""https://www.w3schools.com/css/css3_object-fit.asp"" rel=""nofollow noreferrer"">example on w3schools</a></p> <p>You can also set aspect ratio of parent div to fit in a given ratio</p> <p>Hoe this helps...</p>",,,true
"{'account_id': 3009735, 'reputation': 24647, 'user_id': 2553506, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jOi8K.jpg?s=256', 'display_name': 'David L. Walsh', 'link': 'https://stackoverflow.com/users/2553506/david-l-walsh'}",False,0,1728444570,1728433819,79068135,79055634,CC BY-SA 4.0,"<p>I would strongly suggest not using Enums. Enums are a dubious feature of Typescript which map to JavaScript in a strange fashion. See <a href=""https://www.totaltypescript.com/why-i-dont-like-typescript-enums"" rel=""nofollow noreferrer"">https://www.totaltypescript.com/why-i-dont-like-typescript-enums</a></p> <p>It's much simpler to use a union. i.e.</p> <pre><code>type ThemeState = {   mode: 'dark' | 'light'; }  const initialState: ThemeState = {   mode: 'dark', };  const themeSlice = createSlice({   name: 'theme',   initialState,   reducers: {     toggleThemeMode: (state) => {       state.mode = state.mode === 'dark' ? 'light' : 'dark';     },   }, }); </code></pre>",1728444570.0,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,0,1728105768,1728105768,79056376,79055634,CC BY-SA 4.0,"<p>The issues I see in the code:</p> <ul> <li><p>The code attempts to use <code>darkThemeToken</code> and <code>Themes</code> before they are declared. The variables and types should be declared before using them, so move <code>themeState</code>, the <code>Themes</code> enum, and <code>darkThemeToken</code> and <code>lightThemeToken</code> declarations above the <code>themeTokenSlice</code> slice declaration where they are referenced.</p> </li> <li><p>The <code>toggleThemeToken</code> reducer is reassigning the state. In Redux-Toolkit you can either mutate the current state <em><strong>or</strong></em> return new state, <em><strong>never both</strong></em>, and <em><strong>never</strong></em> reassign the <code>state</code> a different value.</p> <p>Examples:</p> <pre class=""lang-js prettyprint-override""><code>state.theme = Themes.dark; </code></pre> <pre class=""lang-js prettyprint-override""><code>state.theme = Themes.light; </code></pre> <pre class=""lang-js prettyprint-override""><code>return darkThemeToken; </code></pre> <pre class=""lang-js prettyprint-override""><code>return lightThemeToken; </code></pre> </li> <li><p>There is a logical issue/bug where you are returning the ""dark theme"" value when the current state is already the dark theme, and vice-versa for the light theme. These values should be inverted, i.e. if the current state is the dark theme, then update to the light theme.</p> </li> </ul> <p>Example Refactor:</p> <p>themeToken.slice.ts</p> <pre class=""lang-js prettyprint-override""><code>import { createSlice } from ""@reduxjs/toolkit"";  export enum Themes {   dark = ""dark"",   light = ""light"", }  export interface themeState {   theme: Themes; }  const initialState: themeState = {   theme: Themes.dark, };  const themeTokenSlice = createSlice({   name: ""themeToken"",   initialState,   reducers: {     toggleThemeToken: (state) => {       // switch (state.theme) {       //   case Themes.dark:       //     state.theme = Themes.light;       //     break;       //   case Themes.light:       //     state.theme = Themes.dark;       //     break;       //   default:       //     // do nothing       // }        state.theme = state.theme === Themes.dark ? Themes.light : Themes.dark;     },   }, });  export const { toggleThemeToken } = themeTokenSlice.actions;  export default themeTokenSlice.reducer; </code></pre> <p>Demo</p> <p><a href=""https://codesandbox.io/p/sandbox/7svq7h"" rel=""nofollow noreferrer""><img src=""https://codesandbox.io/static/img/play-codesandbox.svg"" alt=""Edit sweet-platform"" /></a></p>",,,true
"{'account_id': 24311095, 'reputation': 1, 'user_id': 18253097, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GgEKtWSIZXTjiHyBkYuDrc97jYjCuabkKk6pfGAjw=k-s256', 'display_name': 'Majorek', 'link': 'https://stackoverflow.com/users/18253097/majorek'}",False,0,1728071278,1728071270,79055656,79055634,CC BY-SA 4.0,"<p>This is how your code should look like (i think so) but you had issues with types, now they should be resolved</p> <pre class=""lang-js prettyprint-override""><code>export interface themeState {   theme: Themes;   colorPrimary: string,   colorLink: string,   colorLinkHover: string,   colorBgBase: string, } export enum Themes {   dark = ""dark"",   light = ""light"", } export const darkThemeToken: themeState = {   theme: ""dark"" as Themes.dark,   colorPrimary: '#f01879',   colorLink: '#f01879',   colorLinkHover: '#f66eab',   colorBgBase: '#242424', }; export const lightThemeToken: themeState = {   theme: ""dark"" as Themes.dark,   colorPrimary: '#f01879',   colorLink: '#f01879',   colorLinkHover: '#f66eab',   colorBgBase: '#242424', }; export const themeTokenSlice = createSlice({   name: ""themeToken"",   initialState: darkThemeToken,   reducers: {       toggleThemeToken: (state: themeState) => {           switch (state.theme) {               case Themes.dark:                   state = darkThemeToken;                   break;               case Themes.light:                   state = lightThemeToken;                   break;               default:                   return state;           }       }   } });  </code></pre>",1728071278.0,,true
"{'account_id': 23338152, 'reputation': 1, 'user_id': 17413433, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GhCe7nb-a2rjbAVso48M_omrIDRyEh5odBGy_K2=k-s256', 'display_name': 'Ibtesum Reza Aninda', 'link': 'https://stackoverflow.com/users/17413433/ibtesum-reza-aninda'}",False,0,1728213306,1728213306,79058946,79055401,CC BY-SA 4.0,"<p>At first, check your vscode version. I faced kind of similar problems in vscode yesterday with the latest release <a href=""https://code.visualstudio.com/updates/v1_94"" rel=""nofollow noreferrer"">Version 1.94</a> .</p> <p>However, I was not working with React.js, I was working with node.js and the Intellisense was not working properly. There was no code suggestions and code completions were not working.</p> <p>A lot of other people are facing similar issues. You can check vscode github issues <a href=""https://github.com/microsoft/vscode/issues"" rel=""nofollow noreferrer"">here.</a></p> <p><strong>One possible temporary workaround is</strong>: go back to previous version of VS Code.</p> <p>To do that:</p> <ol> <li>Go to the first link you I provided</li> <li>Download a previous version of vscode.</li> <li>Uninstall current vscode.</li> <li><strong>Disconnect your internet connection to prevent it from auto-updating</strong>.</li> <li>Intall the previous version of vscode you just downloaded.</li> <li><strong>Disable auto update</strong>.</li> </ol> <p>But going back to previous version has some caveats. Specially for security issues. So, once vscode maintainers solves this problem, update you vscode.</p>",,,true
"{'account_id': 27371279, 'reputation': 638, 'user_id': 20877284, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/fYDiC.jpg?s=256', 'display_name': 'Youth Dream', 'link': 'https://stackoverflow.com/users/20877284/youth-dream'}",False,0,1728066612,1728066612,79055451,79055401,CC BY-SA 4.0,<p>I faced the same problem and solved it by updating vscode to the latest version.</p>,,,true
"{'account_id': 17675033, 'reputation': 117, 'user_id': 12830157, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-8Y4JL1C7O9w/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3re9wMZ9ZApKtdjWq444yRmqczJfOg/photo.jpg?sz=256', 'display_name': 'Kirstie Wilkinson', 'link': 'https://stackoverflow.com/users/12830157/kirstie-wilkinson'}",True,0,1728063535,1728063149,79055309,79055276,CC BY-SA 4.0,"<p>You need to add ""relative"" as a className to your card, so the absolute className has something to refer to for its placement.</p> <p>This should work:</p> <pre><code>return (         <div className=""container mx-auto p-4"">             <h1 className=""text-4xl font-bold text-center mb-6 text-amber-100"">Task List</h1>             <div className=""overflow-x-auto  scrollbar-custom"">                 <ul className=""flex space-x-4 mb-10 blue"" style={{ listStyleType: 'none', padding: 0 }}>                     { tasks.map((task) =>                         (                             <li key={task.id}                                  className=""relative TaskBox bg-white shadow-lg shadow-amber-200/60 rounded-lg p-8 shadow-sm min-w-[300px] max-w-[300px] flex-shrink-0"">                                 <div className=""deleteTask"">                                     <DeleteTask task={task}/>                                 </div>                                 <div className=""TaskInfo"">                                 <h4 className=""text-2xl font-semibold text-gray-800 mb-2"">{task.title}</h4>                                 <p  className=""text-sm text-gray-500 mb-2""                                     >Created on: {new Date(task.createdAt).toLocaleDateString('en-US', {                                     year: 'numeric',                                     month: 'long',                                     day: 'numeric'                                 })}</p>                                 <p className=""text-gray-600 mb-4"">{task.description}</p>                                 <p  className={`text-sm ${task.isCompleted ? 'text-green-500' : 'text-red-500'}`}>Completed: {task.isCompleted ? 'Yes' : 'No'}</p>                                 </div>                             </li>                         ))}                 </ul>             </div>         </div>     ); </code></pre>",1728063535.0,,true
"{'account_id': 6185082, 'reputation': 23, 'user_id': 4819429, 'user_type': 'registered', 'accept_rate': 75, 'profile_image': 'https://www.gravatar.com/avatar/4236d8782da2bea4f984c9040937c6ab?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Chandonne', 'link': 'https://stackoverflow.com/users/4819429/chandonne'}",False,0,1728164795,1728164795,79057994,79055108,CC BY-SA 4.0,"<p>I ended up using  <a href=""https://www.django-unicorn.com/"" rel=""nofollow noreferrer"">django-unicorn</a>. There you can call the backend from your template:</p> <pre><code>c.on('click', function (e) {                             Unicorn.call('sidebar','get_details',this.marker_id,this.marker_type)                         }); </code></pre> <p>In the view you can make your query and give the result back to the template :</p> <pre><code>class SidebarView(UnicornView):     name = """"      def get_details(self,id_string,marker_type):         print(id_string) </code></pre>",,,true
"{'account_id': 30715605, 'reputation': 101, 'user_id': 23551715, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLBqYl1Bad3WSM7I2Euu5cWm5W_J-h3JFBhDXU-JBQPiQ=k-s256', 'display_name': 'zxc123', 'link': 'https://stackoverflow.com/users/23551715/zxc123'}",False,0,1728074249,1728074249,79055761,79054953,CC BY-SA 4.0,"<p>I solved the issue by not including testResultsList in useGetTestResultsQuery and instead using { page, limit, username }. I removed testResultsList based on advice from ChatGPT and Claude, who suggested that this approach is better for handling dynamic data.</p> <p>I also discovered that the initial error I encountered, which stated undefined testResultsList, was related to the Prefetch feature. To resolve that, I made sure to pass the same parameters to the prefetch, which fixed the error:</p> <pre><code>store.dispatch(       testResultsApiSlice.util.prefetch(         'getTestResults',         { page, limit, username },         {           force: true,         }       )     ); </code></pre> <p>Now, when I start the app or navigate, all three fields in req.query have values.</p> <p><strong>Current Issue</strong></p> <p>Even though the data I receive based on the network requests is correct, I'm observing a behavior in Redux DevTools where the page parameter does not change in the cached query results for getTestResults.</p> <p>this is what i see in the network</p> <ul> <li>paginate to page 1 request</li> <li>url: http://localhost:3500/testResults?page=1&limit=10&username=teste</li> <li>the response is correct and no error</li> <li>paginate to page 2 request</li> <li>url: http://localhost:3500/testResults?page=2&limit=10&username=teste</li> <li>the response is correct and no error</li> </ul> <p>but i noticed that whenever i moved to another page in redux dev tools -> api -> queries -></p> <ul> <li>â¼ getTestResults({""limit"":10,""page"":1,""username"":""teste""}) (pin)</li> <li>status(pin):""fulfilled"" endpointName(pin):""getTestResults""</li> <li>requestId(pin):""onuIfA8pgFJbmmZoaKiJ7""</li> <li>â¼ original args   page(pin):1</li> <li>limit(pin):10   username(pin):""teste""</li> <li>data is correct</li> <li>startedTimeStamp(pin):1728072720521</li> <li>fulfilledTimeStamp(pin):1728072720691</li> </ul> <p>why is it that getTestResults({""limit"":10,""page"":1,""username"":""teste""}) is not changing whenever i moved to another page? {""limit"":10,""page"":1,""username"":""teste""} in the pin is just the value of orginal args?  is this normal that it shouldnt be changing for cached or when i moved to another page or it should be changing based on the page?</p> <p>updated source code TestResultsList.jsx</p> <pre><code>    const TestResultsList = () => {    const { username } = useAuth();   const [selectedTestResult, setSelectedTestResult] = useState(null);  const [isEditing, setIsEditing] = useState(false);   const [search, setSearch] = useState('');   const [page, setPage] = useState(1);   const limit = 10;    const {     data: testResults,     isLoading,     isSuccess,     isError,     error,   } = useGetTestResultsQuery(     { page, limit, username },     {       pollingInterval: 60000,       refetchOnFocus: true,       refetchOnMountOrArgChange: true,     }   ); </code></pre> <p>testResultsApiSlice.jsx</p> <pre><code>getTestResults: builder.query({       query: ({ page, limit, username }) => ({         url: `/testResults`,         params: { page, limit, username },         validateStatus: (response, result) => {           return response.status === 200 && !result.isError;         },       }),       transformResponse: (responseData) => {         console.log(responseData);          const loadedTestResults = responseData.testResults.map((testResult) => {           testResult.id = testResult._id;           return testResult;         });         return {           testResults: loadedTestResults,           totalPages: responseData.totalPages,           currentUser: responseData.currentUser,         };       },       providesTags: (result, error, arg) => {         if (result?.testResults) {           return [             { type: 'TestResult', id: 'LIST' },             { type: 'TestResult', id: `PAGE_${arg.page}` },             ...result.testResults.map(({ id }) => ({ type: 'TestResult', id })),           ];         } else {           return [{ type: 'TestResult', id: 'LIST' }];         }       },     }), </code></pre> <p>testResultsController.js</p> <pre><code>const getAllTestResults = async (req,res) => {   const { page, limit, username } = req.query;   const skip = (page - 1) * limit;    const currentUser = await User.findOne({ username })     .select('-password')     .lean()     .exec();    if (!currentUser) {     return res.status(400).json({ message: 'Current user not found' });   }    const totalTestResults = await TestResult.countDocuments({ user: currentUser._id });   const totalPages = Math.ceil(totalTestResults / limit);    const testResults = await TestResult.find({ user: currentUser._id })     .skip(skip)     .limit(limit)     .lean();    res.status(200).json({     totalPages,     testResults,     currentUser   }); } </code></pre>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,0,1728056949,1728056295,79054969,79054953,CC BY-SA 4.0,"<h1>Issue</h1> <p>I suspect the issue is that <code>username</code> from the <code>useAuth</code> hook is not available on the initial render when the <code>useGetTestResultsQuery</code> is called the first time. It's sending an undefined <code>username</code> value to the backend and the <code>getAllTestResults</code> API handler is unable to find a match and returns a 400 error.</p> <pre class=""lang-js prettyprint-override""><code>const getAllTestResults = async (req,res) => {   const { page, limit, username } = req.query;   const skip = (page - 1) * limit;    const currentUser = await User.findOne({ username })     .select('-password')     .lean()     .exec();    if (!currentUser) {     return res.status(400).json({ message: 'Current user not found' });   }    ... } </code></pre> <h1>Solution Suggestion</h1> <p>Use the query's <code>skip</code> option to conditionally call the endpoint only when all the required parameters are available. See <a href=""https://redux-toolkit.js.org/rtk-query/usage/conditional-fetching"" rel=""nofollow noreferrer"">Conditional Fetching</a> for details.</p> <p>Basic Example:</p> <pre class=""lang-js prettyprint-override""><code>const { username } = useAuth();  ...  const {   data: testResults,   isLoading,   isSuccess,   isError,   error, } = useGetTestResultsQuery(   ['testResultsList', { page: currentPage, limit: itemsPerPage, username }],   {     pollingInterval: 60000,     refetchOnFocus: true,     refetchOnMountOrArgChange: true,     skip: !!username // <-- skip query when username is falsey   } ); </code></pre> <p>You may also want/care to update the backend logic to better handle potentially bad requests and return more informative errors.</p> <p>Example:</p> <pre class=""lang-js prettyprint-override""><code>const getAllTestResults = async (req,res) => {   const { page = 1, limit = 0, username } = req.query;    const skip = (page - 1) * limit;    if (!username) {     return res.status(400).json({ message: 'No username provided' });   }    const currentUser = await User.findOne({ username })     .select('-password')     .lean()     .exec();    if (!currentUser) {     return res.status(400).json({ message: 'Current user not found' });   }    const totalTestResults = await TestResult.countDocuments({ user: currentUser._id });   const totalPages = Math.ceil(totalTestResults / limit);    const testResults = await TestResult.find({ user: currentUser._id })     .skip(skip)     .limit(limit)     .lean();    res.status(200).json({     totalPages,     testResults,     currentUser   }); } </code></pre>",1728056949.0,,true
"{'account_id': 13468738, 'reputation': 7423, 'user_id': 9718056, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ee99b210db5777e5e0a69aaa025cd461?s=256&d=identicon&r=PG', 'display_name': 'Arkellys', 'link': 'https://stackoverflow.com/users/9718056/arkellys'}",False,0,1728107145,1728107145,79056409,79054952,CC BY-SA 4.0,"<p>There are at least two problems with your code.</p> <p>First, you get this error because you try to compile Node.js code (i.e. <code>electron</code> here by importing <code>ipcRenderer</code>) with webpack, and that it is not configured for it (see the <a href=""https://webpack.js.org/configuration/target/"" rel=""nofollow noreferrer""><code>target</code></a> configuration of webpack). <strong>But it doesn't mean you should change its configuration</strong>. You React code is on the <a href=""https://www.electronjs.org/docs/latest/tutorial/process-model#the-renderer-process"" rel=""nofollow noreferrer"">renderer process</a>, and for <a href=""https://www.electronjs.org/docs/latest/tutorial/security#2-do-not-enable-nodejs-integration-for-remote-content"" rel=""nofollow noreferrer"">security reasons</a>, you should not use Node.js on this process.</p> <p>To solve this first issue, you need to use your <a href=""https://www.electronjs.org/docs/latest/tutorial/tutorial-preload"" rel=""nofollow noreferrer"">preload</a> file to expose what you need (<em>only</em> what you need, <a href=""https://www.electronjs.org/docs/latest/tutorial/context-isolation#security-considerations"" rel=""nofollow noreferrer"">not the whole IPC API</a>). You can find plenty of examples on the official <a href=""https://www.electronjs.org/docs/latest/tutorial/ipc"" rel=""nofollow noreferrer"">IPC documentation</a> and the other docs I linked here.</p> <p>Once you solved that, you may get a <code>module not found</code> error on your preload file. By default, and still for <a href=""https://www.electronjs.org/docs/latest/tutorial/security#4-enable-process-sandboxing"" rel=""nofollow noreferrer"">security reasons</a>, preload scripts are <a href=""https://www.electronjs.org/docs/latest/tutorial/sandbox#preload-scripts"" rel=""nofollow noreferrer"">sandboxed</a>, it means you can only import a specific subset of Electron and Node's built-in modules on it. If you want to import <code>socket.io-client</code> and follow security recommandations, you need to do it on your <a href=""https://www.electronjs.org/docs/latest/tutorial/process-model#the-main-process"" rel=""nofollow noreferrer"">main process</a>.</p>",,,true
"{'account_id': 8280583, 'reputation': 1451, 'user_id': 6225426, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/ssquG.jpg?s=256', 'display_name': 'Md Riadul Islam', 'link': 'https://stackoverflow.com/users/6225426/md-riadul-islam'}",False,-1,1728064790,1728064790,79055375,79054875,CC BY-SA 4.0,"<p>Hope it will fix your issues:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-css lang-css prettyprint-override""><code>      body {         height: 100vh;         margin: 0;         padding-bottom: 80px; /* Adjust this value based on your footer height */       }       .fixed-footer {         position: fixed;         bottom: 0;         left: 0;         width: 100%;         z-index: 1300;         background: #ffffff;         padding: 16px 42px;         box-shadow: 0px -3px 4px rgba(0, 0, 0, 0.25);         border-top: 1px solid #bebec1;       }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code>    <div style=""width: 30%; height: 100%; border: 1px solid; overflow-y: auto"">       <div         class=""MuiBox-root css-11b71wf""         data-testid=""create-contract-content""       >         <div class=""wrapper-container css-1rnkd8n MuiBox-root css-0"">           <div class=""title-container css-1112he MuiBox-root css-0"">             <h2               class=""MuiTypography-root MuiTypography-body1 css-1ecwa68-MuiTypography-root""             >               Add New Contract             </h2>           </div>           <form novalidate>             <div               class=""MuiGrid-root MuiGrid-container box css-crtrjo-MuiGrid-root""             ></div>           </form>         </div>       </div>     </div>     <div class=""fixed-footer css-imiwo4 MuiBox-root css-0"">       <div class=""css-gg4vpm MuiBox-root css-0"">         <div>           <button             class=""MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium base-btn ,undefined css-wpz0ho-MuiButtonBase-root-MuiButton-root""             tabindex=""0""             type=""button""             dpw-variant=""secondary""           >             CANCEL           </button>           <button             class=""MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium base-btn ,undefined css-14tsggr-MuiButtonBase-root-MuiButton-root""             tabindex=""0""             type=""submit""             dpw-variant=""primary""           >             CREATE           </button>         </div>       </div>     </div></code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 24704328, 'reputation': 1344, 'user_id': 18595321, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/b4GR7.png?s=256', 'display_name': 'PeterJames', 'link': 'https://stackoverflow.com/users/18595321/peterjames'}",False,0,1728063918,1728063918,79055340,79054875,CC BY-SA 4.0,"<p>To make a sticky header or footer then you need to add <code>position: sticky;</code> to your classes and then set the distance from the top or the bottom to 0px, for example, if you want those elements to stick to the top or the bottom of the container, respectively.</p> <p>In addition, I put an overflow scroll in the vertical direction with <code>overflow-y: scroll;</code></p> <p>However, I am not sure that making a sticky footer is the best way to approach the problem of putting buttons at the bottom of a container. You might also want to look at <a href=""https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox"" rel=""nofollow noreferrer"">CSS flexbox</a> or <a href=""https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Grids"" rel=""nofollow noreferrer"">CSS grid layout</a>.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-css lang-css prettyprint-override""><code>body {}  h2 {   margin: 0px; }  .container {   width: 30%;   height: 100vh;   border: solid 3px green;   overflow-y: scroll; }  .fixed-header {   position: sticky;   top: 0px;   left: 0px;   width: 100%;   background: yellow; }  .fixed-footer {   position: sticky;   bottom: 0px;   background: pink;   padding: 16px 0px; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div class=""container"">   <div class=""fixed-header"">     <h2>       Add New Contract     </h2>   </div>   <form novalidate="""">     <div>       <input /> 1<br/>       <input /><br/>       <input /><br/>       <input /><br/>       <input /><br/>       <input /> 2<br/>       <input /><br/>       <input /><br/>       <input /><br/>       <input /><br/>       <input /> 3<br/>       <input /><br/>       <input /><br/>       <input /><br/>       <input /><br/>       <input /> 4<br/>       <input /><br/>       <input /><br/>       <input /><br/>       <input /><br/>       <input /> 5<br/>       <input /><br/>       <input /><br/>       <input /><br/>       <input /><br/>       <input /> 6<br/>       <input /><br/>       <input /><br/>       <input /><br/>       <input /><br/>       <input /> 7<br/>       <input /><br/>       <input /><br/>       <input /><br/>       <input /><br/>       <input /> 8<br/>     </div>     <div class=""fixed-footer"">       <button type=""button"">CANCEL</button>       <button type=""submit"">CREATE</button>     </div>   </form> </div></code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 27371279, 'reputation': 638, 'user_id': 20877284, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/fYDiC.jpg?s=256', 'display_name': 'Youth Dream', 'link': 'https://stackoverflow.com/users/20877284/youth-dream'}",False,0,1728056898,1728056898,79055020,79054875,CC BY-SA 4.0,"<p>You can achieve this layout. But to do this, you need to change layout of the footer. I provide updated code for it. But with my code, when you click the create button, it will not trigger submit of <code>form</code>. To solve the issue, you can do it in javascript.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>document.getElementById('create-button').addEventListener('click', function() {     document.getElementById('contract-form').submit(); });</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>body {     height: 100vh }  .fixed-footer {     position: absolute;     bottom: 0;     left: 0;     width: 100%;     z-index: 1300;     background: #ffffff;     padding: 16px 0;     box-shadow: 0px -3px 4px rgba(0, 0, 0, 0.25);     border-top: 1px solid #bebec1;      display: flex;     align-items: center;     justify-content: center;     gap: 8px; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div style=""width:30%;height:100%;border:1px solid; position: relative;"">     <div class=""MuiBox-root css-11b71wf"" data-testid=""create-contract-content"">         <div class=""wrapper-container css-1rnkd8n MuiBox-root css-0"">             <div class=""title-container css-1112he MuiBox-root css-0"">                 <h2 class=""MuiTypography-root MuiTypography-body1 css-1ecwa68-MuiTypography-root"">Add New Contract</h2>             </div>             <form id=""contract-form"" novalidate="""">                 <div class=""MuiGrid-root MuiGrid-container box css-crtrjo-MuiGrid-root"">                 </div>             </form>         </div>     </div>     <div class=""fixed-footer css-imiwo4 MuiBox-root css-0"">         <button class=""MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium base-btn ,undefined css-wpz0ho-MuiButtonBase-root-MuiButton-root"" tabindex=""0"" type=""button"" dpw-variant=""secondary"">CANCEL<span class=""MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root""></span></button>         <button id=""create-button"" class=""MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium base-btn ,undefined css-14tsggr-MuiButtonBase-root-MuiButton-root"" tabindex=""0"" type=""button"" dpw-variant=""primary"">CREATE</button>     </div> </div></code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 24321392, 'reputation': 410, 'user_id': 18261729, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GgywYCFfbjlhaBULcCTqJ1MjJ1qJSGxulemCF4MtA=k-s256', 'display_name': 'be MrZulf', 'link': 'https://stackoverflow.com/users/18261729/be-mrzulf'}",True,1,1728294151,1728294151,79061428,79054726,CC BY-SA 4.0,"<p>Yes so I got the answer as React Select do serve Promises. So here while fetching the New List the Options are going to be append and that to be in Async method.</p> <pre><code>import AsyncSelect from 'react-select/async';  <AsyncSelect     cacheOptions     defaultOptions     className=""form-control""     loadOptions={(inputValue) => handleSearch(inputValue, data.id)}     onChange={(selectedOption) => handleEntityChange(selectedOption, data.id)}     value={data?.selectedEntity || null}     placeholder=""Search Entity Name""     noOptionsMessage={() => 'No options available'} /> </code></pre> <p>So here we are to be in need of React Async Select.</p>",,,true
"{'account_id': 8280583, 'reputation': 1451, 'user_id': 6225426, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/ssquG.jpg?s=256', 'display_name': 'Md Riadul Islam', 'link': 'https://stackoverflow.com/users/6225426/md-riadul-islam'}",False,1,1728063710,1728063710,79055336,79054608,CC BY-SA 4.0,<p>You can use JSDoc comment:</p> <pre><code>/**  * @param {object} props  * @param {number} [props.value=0] - The slider value  * @ param {function} [props.onChange] - The change handler function   */ const Slider = fâ¦ </code></pre>,,,true
"{'account_id': 6316535, 'reputation': 42, 'user_id': 6722849, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/1387621034599564/picture?type=large', 'display_name': 'Kirill T.', 'link': 'https://stackoverflow.com/users/6722849/kirill-t'}",True,1,1728057932,1728057932,79055073,79054608,CC BY-SA 4.0,<p>The only thing you can do in this situation is to use JSDoc comments in order to help VSCode to be able to make suggestions. Something like this</p> <pre><code>/**  * @typedef {Object} SliderProps  * @property {number} [value] - The current value of the slider.  * @property {function(number):void} [onChange] - Callback function triggered when the value changes.  */  /**  * Slider component  * @param {SliderProps} props  * @param {React.Ref} ref - Forwarded ref for the slider element.  * @returns {React.ReactElement} The Slider component.  */ const Slider = forwardRef(...) </code></pre>,,,true
"{'account_id': 10814137, 'reputation': 46, 'user_id': 7953777, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5232d95ec8f710807838da6df633f3d7?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Lama Ibrahim', 'link': 'https://stackoverflow.com/users/7953777/lama-ibrahim'}",False,1,1728285860,1728285860,79060982,79054427,CC BY-SA 4.0,"<p>useTranslations from next-intl is designed to work in both client and server contexts. It doesn't rely on browser-only APIs, side effects, or client-side state managementâthings that are restricted in RSC. Instead, it simply retrieves translations, which can be done during the server-side rendering phase without needing client-side interactions.</p> <p>Certain hooks like useTranslations are designed to work in the server environment because:</p> <ul> <li>They don't manage state or perform side effects.</li> <li>They only depend on the availability of data at the time of rendering (like fetching translations from the server).</li> </ul> <p>That's why useTranslations can be used in a file that doesn't include the ""use client"" direct</p> <p>the <a href=""https://next-intl-docs.vercel.app/"" rel=""nofollow noreferrer"">next-intl</a> documentation has specific sections about how their API works with server components.</p>",,,true
"{'account_id': 27371279, 'reputation': 638, 'user_id': 20877284, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/fYDiC.jpg?s=256', 'display_name': 'Youth Dream', 'link': 'https://stackoverflow.com/users/20877284/youth-dream'}",False,0,1728052159,1728052159,79054729,79054294,CC BY-SA 4.0,"<p>I found the correct solution. In <code>cloudinary</code>, it returns only a few details such as <code>status</code> and <code>batch_id</code> for tracking the upload. So to get full response, you need to set <code>notification_url</code> and will get the result via the url. It means, <code>cloudinary</code> support <code>webhook</code> notification method. So to notify the uploading result, I think you can implement websocket loigc so you will get the uploading result from cloudinary via <code>webhook</code> and then will send the result to the client with websocket.</p>",,,true
"{'account_id': 27371279, 'reputation': 638, 'user_id': 20877284, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/fYDiC.jpg?s=256', 'display_name': 'Youth Dream', 'link': 'https://stackoverflow.com/users/20877284/youth-dream'}",False,0,1728047484,1728047484,79054434,79054294,CC BY-SA 4.0,"<p>I just checked your code carefully and almost correct, but you made some mistakes in <code>largeFileUploader</code> function. <code>cloudinary.upload.upload_large</code> is async function so you should use <code>await</code> here to waits uploading results from cloudinary. But you didn't used <code>await</code> and handled the result in <code>callback</code> of <code>upload_large</code>. In this case, the result will be returned once you already sent response to the client so it's wrong. I provide updated code for it.</p> <pre><code>export const largeFileUploader = async(props: {targetedFile: string})=> {     const {targetedFile} = props;      try {         const result = await cloudinary.uploader.upload_large(targetedFile, {             resource_type: 'video',             chunk_size: 6000000,             folder: 'folderName',             upload_preset: 'presetName',         });          return result;     } catch (err) {         console.log(err)         throw new Error('file upload error');     } }; </code></pre>",,,true
"{'account_id': 129540, 'reputation': 217665, 'user_id': 328193, 'user_type': 'registered', 'accept_rate': 91, 'profile_image': 'https://i.sstatic.net/FnwU5.jpg?s=256', 'display_name': 'David', 'link': 'https://stackoverflow.com/users/328193/david'}",False,2,1728047197,1728047197,79054414,79054294,CC BY-SA 4.0,"<p>The <code>largeFileUploader</code> function is <code>async</code>, but it doesn't <code>await</code> anything.  The asynchronous operation therein is using a callback rather than a Promise:</p> <pre><code>cloudinary.uploader.upload_large(   targetedFile,   { resource_type: ""video"", chunk_size: 6000000, folder: 'folderName', upload_preset: 'presetName' },    function(error, result) {     console.log(error, 'error')     if(error)       throw 'Error encountered';     return result   } ); </code></pre> <p><strong>If the service provides an <em>awaitable</em> API, it is recommended to use that instead.</strong>  If they don't, one option is to wrap this callback structure in a Promise and return that so consuming code can <code>await</code> it.  For example:</p> <pre><code>return new Promise(function(resolve, reject) {   cloudinary.uploader.upload_large(     targetedFile,     { resource_type: ""video"", chunk_size: 6000000, folder: 'folderName', upload_preset: 'presetName' },      function(error, result) {       console.log(error, 'error')       if(error)         reject('Error encountered'); // <-- reject the Promise       resolve(result); // <-- resolve the Promise     }   ); }); </code></pre>",,,true
"{'account_id': 27297954, 'reputation': 28, 'user_id': 27530379, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/8847b34adc70ca56875269facc62a648?s=256&d=identicon&r=PG', 'display_name': 'Ali Heydari', 'link': 'https://stackoverflow.com/users/27530379/ali-heydari'}",False,0,1728895315,1728895315,79085387,79053708,CC BY-SA 4.0,"<p>In the <code>fetchAndSyncData</code> function, you call <code>getAllData</code> every time the fetcher runs. Since <code>useSWR</code> revalidates data periodically (auto refreshes), each fetcher call triggers a new promise to access <code>IndexedDB</code>, leading to increased memory usage over time.</p> <p>You can update your code for handle your <code>getAllData</code> function:</p> <pre><code>export const useSWRData = (params) => {   const [initialData, setInitialData] = useState<Data[]>([])    useEffect(() => {     // Fetch IndexedDB data once, outside the fetcher     getAllData('myData').then(setInitialData)   }, [])    const { data, isValidating, error } = useSWR<Data[]>(     { key: 'fetchData', params, initialData }, // Pass initial data to fetcher     fetchAndSyncData   )    return useMemo(() => ({     data: data ?? initialData, // Use initialData if no fresh data     isValidating,     error,   }), [data, initialData, isValidating, error]) } </code></pre> <p>Now refactor your fetcher:</p> <pre><code>export const fetchAndSyncData = async ({ params, initialData }: { params: AnyRecord, initialData: Data[] }) => {   try {     const lastDate = getLastDate(initialData) // Use pre-fetched IndexedDB data     const newData = await fetchData({ params, startDate: lastDate })      if (newData.length > 0) {       await addData('myData', newData) // Sync new data to IndexedDB     }      // Combine new and old data     return sortObjArrByKey([...newData, ...initialData], 'timestamp')   } catch (error) {     console.error('Error fetching and syncing data:', error)     return initialData // Return cached data if fetch fails   } } </code></pre>",,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",False,-1,1728118389,1728108324,79056424,79053702,CC BY-SA 4.0,"<p><strong>The issue happens only when there is no horizont_start or no horizont_end from the backend.</strong> The dates created in such cases are based on the locale time zone. In all other cases, the dates are created based on the UTC time zone. <em>This is the conflict occurs in the code.</em></p> <p><strong>The solution is to use Date.UTC function to create dates always with respect to UTC time in all cases. This solution also has been demoed below.</strong></p> <p>Please see below for <strong>a detailed review of the case</strong>.</p> <p>The following two dates have no timezone offset specified, instead there is only a literal Z. It means that it is the UTC time.</p> <pre><code>""horizont_start"": ""2024-05-01T00:00:00Z"" ""horizont_end"": ""2025-01-26T00:00:00Z"", </code></pre> <p>Therefore the following two new date objects will also be in UTC time.</p> <pre><code>const horizont_start = '2024-05-01T00:00:00Z'; const horizont_end = '2025-01-26T00:00:00Z'; const date_horizont_start = new Date(horizont_start); const date_horizont_end = new Date(horizont_end); console.log(date_horizont_start); //2024-05-01T00:00:00.000Z UTC time console.log(date_horizont_end); // 2025-01-26T00:00:00.000Z UTC time </code></pre> <p>However, when there is no horizont_start or horizont_end dates from the backend, there are issues in the present code. The following two dates are with respect to the locale time zone. It is not with respect to UTC as it is in the above cases.</p> <p><em><strong>It may require a close attention over here</strong></em></p> <p><em>Further on the same point, new Date (2014, 0, 1) below creates a date value with respect to the local time zone - Asia/Calcutta, which is ahead of UTC by 5.30 hh:mm. This is quite clear from the console log. The console log over here shows date in UTC timezone which is trailing by 5.30 hh:mm. The same happens for the date in date_horizont_end as well.</em></p> <p><em>Ideally what would have happened was new Date(2014, 0, 1) should have created with respect to UTC time, if it was the case, the console log would have shown the same date value, it would not have been trailing by 5.30 hh:mm. The solution below address the issue.</em></p> <pre><code>const horizont_start = null; const horizont_end = null; const date_horizont_start = new Date(2014, 0, 1); const date_horizont_end = new Date(new Date()); console.log(date_horizont_start); // 2013-12-31T18:30:00.000Z UTC time trailing by 5.30 hh:mm console.log(date_horizont_end); // 2024-10-05T05:50:22.716Z UTC time trailing by 5.30 hh:mm </code></pre> <p>The solution is to use Date.UTC in this case as well, as below. This will keep UTC time in either case.</p> <pre><code>const horizont_start = null; const horizont_end = null; const date_horizont_start = new Date(Date.UTC(2014, 0, 1)); const date_horizont_end = new Date(   Date.UTC(new Date().getFullYear(), new Date().getMonth(), new Date().getDay()) ); console.log(date_horizont_start); // 2014-01-01T00:00:00.000Z UTC time console.log(date_horizont_end); // 2024-10-06T00:00:00.000Z UTC time </code></pre> <p>The code may require to modify as below:</p> <pre><code><NewGanttChart     start={         new Date(             gantt?.horizont_start ||                 new Date(                     Date.UTC(new Date().getFullYear(),                     0,                     1)                 )         )     }     end={         new Date(             gantt?.horizont_end ||                 new Date(   Date.UTC(new Date().getFullYear(), new Date().getMonth(), new Date().getDay()) )          )     }     data={gantt?.machine_types || []}     isTooltip={true}     tooltip={tooltip} /> </code></pre>",1728118389.0,,true
"{'account_id': 4947591, 'reputation': 20938, 'user_id': 3982562, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/2a3c7aae1d762372cda697833c602ec8?s=256&d=identicon&r=PG', 'display_name': '3limin4t0r', 'link': 'https://stackoverflow.com/users/3982562/3limin4t0r'}",False,3,1728047111,1728039679,79053959,79053702,CC BY-SA 4.0,"<p>The time <code>00:00:00</code> UTC is the same moment in time as <code>05:00:00</code> in a +5h time zone.</p> <p>To solve you issue you'll probably want to be working with the UTC representation. To do this replace the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date"" rel=""nofollow noreferrer"">Date</a> methods you're using to their UTC variants:</p> <ul> <li><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCDate"" rel=""nofollow noreferrer""><code>getUTCDate()</code></a>/<a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCDate"" rel=""nofollow noreferrer""><code>setUTCDate()</code></a></li> <li><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCDay"" rel=""nofollow noreferrer""><code>getUTCDay()</code></a></li> <li><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCFullYear"" rel=""nofollow noreferrer""><code>getUTCFullYear()</code></a>/<a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCFullYear"" rel=""nofollow noreferrer""><code>setUTCFullYear</code></a></li> <li><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCHours"" rel=""nofollow noreferrer""><code>getUTCHours()</code></a>/<a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCHours"" rel=""nofollow noreferrer""><code>setUTCHours()</code></a></li> <li><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCMilliseconds"" rel=""nofollow noreferrer""><code>getUTCMilliseconds()</code></a>/<a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCMilliseconds"" rel=""nofollow noreferrer""><code>setUTCMilliseconds()</code></a></li> <li><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCMinutes"" rel=""nofollow noreferrer""><code>getUTCMinutes()</code></a>/<a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCMinutes"" rel=""nofollow noreferrer""><code>setUTCMinutes()</code></a></li> <li><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCMonth"" rel=""nofollow noreferrer""><code>getUTCMonth()</code></a>/<a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCMonth"" rel=""nofollow noreferrer""><code>setUTCMonth()</code></a></li> <li><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCSeconds"" rel=""nofollow noreferrer""><code>getUTCSeconds()</code></a>/<a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCSeconds"" rel=""nofollow noreferrer""><code>setUTCSeconds()</code></a></li> </ul> <p>To log/display the time you can use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString"" rel=""nofollow noreferrer""><code>toUTCString()</code></a> or <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"" rel=""nofollow noreferrer""><code>toISOString()</code></a>, depending on the preferred format.</p> <p>Working with the above methods lets you work with the same time zone that the server provides. Meaning that time doesn't jump, assuming the server always provides UTC time.</p> <pre><code>// assuming your time zone is set to Uzbekistan Standard Time new Date(""2024-05-01T00:00:00Z"").getHours() //=> 5 new Date(""2024-05-01T00:00:00Z"").getUTCHours() //=> 0 </code></pre> <hr /> <p>Alternatively you could ignore the time zone, and read the dates in local time. This can be done by chopping of the <code>Z</code> which denotes UTC.</p> <pre><code>const horizont_start = ""2024-05-01T00:00:00Z"".replace('Z', ''); console.log(new Date(horizont_start)); // without the Z // Wed May 01 2024 00:00:00 GMT+0500 (Uzbekistan Standard Time) </code></pre> <p><strong>WARNING:</strong> Do note that <code>2024-05-01T00:00:00Z</code> and <code>2024-05-01T00:00:00+05:00</code> are two different moments in time:</p> <pre class=""lang-none prettyprint-override""><code>2024-05-01T00:00:00Z = 2024-05-01T05:00:00+05:00 2024-04-30T19:00:00Z = 2024-05-01T00:00:00+05:00 </code></pre> <p>So if the exact moment in time is important you do NOT want to use this method.</p>",1728047111.0,,true
"{'account_id': 30926684, 'reputation': 55, 'user_id': 23744018, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/7826031ae483c0bc116dd5b408513869?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'David Abramov', 'link': 'https://stackoverflow.com/users/23744018/david-abramov'}",False,-2,1728041335,1728041335,79054051,79053702,CC BY-SA 4.0,"<p>So, i've decided to get timeZoneOffSet and use it in my function like this and it's working for me:</p> <pre><code>const timeAxis = useMemo(() => {         const startOffset = start.getTimezoneOffset()         const endOffset = end.getTimezoneOffset()          const adjustedStart = new Date(             start.getTime() + startOffset * 60 * 1000         )          const adjustedEnd = new Date(end.getTime() + endOffset * 60 * 1000)          const axisLength = Math.ceil(             (adjustedEnd - adjustedStart) / (measure * 60 * 60 * 1000)         )          const axisDates = new Array(axisLength).fill(0).map((_, i) => {             const date = new Date(adjustedStart.getTime())             const newDate = new Date(                 date.getTime() + 1000 * 60 * 60 * measure * i             )              return newDate.getTime()         })          return axisDates     }, [end, measure, start])  </code></pre>",,,true
"{'account_id': 29175110, 'reputation': 109, 'user_id': 22350513, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AAcHTteVoTk0umy4iAUncP8uCyU1of5oUtm9N8jJx5rvJYY6=k-s256', 'display_name': 'Ozgur E.', 'link': 'https://stackoverflow.com/users/22350513/ozgur-e'}",False,-2,1728040534,1728035873,79053742,79053702,CC BY-SA 4.0,"<p>When you create a new date instance with the returned string it will be in client local time:</p> <pre><code>const incoming_value = ""2024-05-01T00:00:00Z""; console.log(""incoming_value:\n"" + incoming_value); // Expected output: ""2024-05-01T00:00:00Z""  const horizont_start_local = new Date(incoming_value);  console.log(""horizont_start as local time:\n"" + horizont_start_local); // Expected output: ""Wed May 01 2024 03:00:00 GMT+0300 (GMT+03:00)""  const horizont_start_UTC = new Date(incoming_value).toISOString();  console.log(""horizont_start as UTC:\n"" + horizont_start_UTC); // Expected output: ""2024-05-01T00:00:00.000Z"" </code></pre> <p>Looks like it is the only way using <code>.toISOString()</code> to display it as it is.</p>",1728040534.0,,true
"{'account_id': 21309, 'reputation': 166982, 'user_id': 51685, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/vVhK5.jpg?s=256', 'display_name': 'AKX', 'link': 'https://stackoverflow.com/users/51685/akx'}",False,0,1728039219,1728039219,79053928,79053441,CC BY-SA 4.0,"<p>In short: you can't make a <code>react-select</code> <code><Select></code> required like you can with regular form elements.</p> <p><code>react-select</code>'s <code><Select></code> does not have a <code>required</code> prop, because it's not a regular HTML form element (which is where <code>required</code> would have an effect on the validation of the owning form), and such a prop would have no effect.</p> <p>What should happen when there is no value for a <code>react-select</code> depends entirely on your particular app, and you'll need to do that validation ""by hand"". For instance, you could set <a href=""https://react-select.com/props"" rel=""nofollow noreferrer"">the <code>aria-invalid</code> prop</a> on the field, and disable your form's submit button.</p>",,,true
"{'account_id': 27371279, 'reputation': 638, 'user_id': 20877284, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/fYDiC.jpg?s=256', 'display_name': 'Youth Dream', 'link': 'https://stackoverflow.com/users/20877284/youth-dream'}",False,1,1728033293,1728033293,79053575,79053441,CC BY-SA 4.0,"<p>It seems like the <code>Select</code> component doesn't support <code>required</code> property as default. In this case, you can make a custom <code>Select</code> component inherited the original <code>Select</code>. I provide sample code for it.</p> <pre><code>const CustomSelect = ({ required = false, wrapperClass, optionClass, onChange, value, options, selectedOption, placeholder}) => {     const [isValid, setIsValid] = useState(true);      useEffect(() => {         setIsValid(!!selectedOption);     }. [selectedOption]);      <div className={wrapperClass}>         <Select             placeholder={placeholder}             value={selectedOption}             options={options}             className={optionClass}             onChange={onChange}         />         {!isValid && <p className='error-message'>This field is required</p>}     </div> } </code></pre> <p>you can use the <code>required</code> property with the above <code>CustomSelect</code> component. Hope it helps you.</p>",,,true
"{'account_id': 25598084, 'reputation': 18, 'user_id': 19373501, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/98b2f771f33c40d31df8338c766cb2ee?s=256&d=identicon&r=PG', 'display_name': 'root69', 'link': 'https://stackoverflow.com/users/19373501/root69'}",False,0,1728045138,1728045138,79054276,79053396,CC BY-SA 4.0,<p>Adding another answer since I cannot comment due to lack of reputation.</p> <p>Update your amplify.yaml with this:</p> <pre><code>version: 1 backend:   phases:     preBuild:       commands:         - npm install         - amplify pull --appId $AWS_APP_ID --envName $AWS_BRANCH     build:       commands:         # Caching and building backend resources         - npm ci --cache .npm --prefer-offline         - npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID  frontend:   phases:     preBuild:       commands:         - npm install     build:       commands:         # This should generate amplify_outputs.json locally         - npm run build   artifacts:     baseDirectory: dist     files:       - '**/*'   cache:     paths:       - .npm/**/*       - node_modules/**/* </code></pre>,,,true
"{'account_id': 17254973, 'reputation': 128, 'user_id': 12494286, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-KaFLbWUtM3Q/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rd-cNUGdtHur4Ch2FKcON2J8JXFhg/photo.jpg?sz=256', 'display_name': 'Nick', 'link': 'https://stackoverflow.com/users/12494286/nick'}",True,0,1728040146,1728037402,79053836,79053396,CC BY-SA 4.0,"<p>Hi I did have to add a amplify.yaml but through different testing this is what I needed:</p> <pre><code>version: 1 backend:   phases:     build:       commands:         - npm ci --cache .npm --prefer-offline         - npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID frontend:   phases:     build:       commands:         - npm run build   artifacts:     baseDirectory: dist     files:       - '**/*'   cache:     paths:       - .npm/**/*       - node_modules/**/* </code></pre> <p>Here is the link for this: <a href=""https://docs.amplify.aws/react/deploy-and-host/fullstack-branching/mono-and-multi-repos/"" rel=""nofollow noreferrer"">https://docs.amplify.aws/react/deploy-and-host/fullstack-branching/mono-and-multi-repos/</a></p>",1728040146.0,,true
"{'account_id': 25598084, 'reputation': 18, 'user_id': 19373501, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/98b2f771f33c40d31df8338c766cb2ee?s=256&d=identicon&r=PG', 'display_name': 'root69', 'link': 'https://stackoverflow.com/users/19373501/root69'}",False,0,1728033272,1728033272,79053574,79053396,CC BY-SA 4.0,"<p><code>amplify_outputs.json</code> should be in in <code>.gitignore</code> since it can change as the environment or resources change.</p> <p>First ensure that the backend is correctly deployed by running <code>amplify push</code> then <code>amplify pull --appId APP_ID</code> to regenerate the <code>amplify_outputs.json</code> file locally.</p> <p>If the above doesn't work, try adding this to <code>amplify.yml</code> file:</p> <pre><code>preBuild:   commands:     - npm ci     - amplify pull --appId APP_ID --envName ENV_NAME </code></pre>",,,true
"{'account_id': 426109, 'reputation': 314680, 'user_id': 807126, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/xpNqK.jpg?s=256', 'display_name': 'Doug Stevenson', 'link': 'https://stackoverflow.com/users/807126/doug-stevenson'}",True,1,1728063924,1728043835,79054193,79052833,CC BY-SA 4.0,"<p>Follow the example in the <a href=""https://firebase.google.com/docs/firestore/manage-data/add-data#increment_a_numeric_value"" rel=""nofollow noreferrer"">documentation</a>.  There is no need to import or use FieldValue directly when using the newer modular API.</p> <pre><code>import { query, collection, doc, updateDoc, increment } from ""firebase/firestore"";  const queryCompanyProduct = query(collection(db, ""order"")) await updateDoc(doc(db, ""order"", data.id), {   grandtotal: increment(50),  }) </code></pre>",1728063924.0,"[{'tags': ['google-cloud-dlp', 'rest-firebase', 'google-cloud-messaging', 'firebase-storage', 'google-cloud-composer', 'maven-jib', 'google-cloud-repository', 'google-container-builder', 'google-cloud-python', 'google-cloud-robotics', 'firebase-cli', 'google-fusion-tables', 'google-cloud-dataprep', 'google-cloud-dataflow', 'google-cloud-shell-editor', 'google-cloud-monitoring', 'google-cloud-code', 'firebase-analytics', 'google-cloud-run', 'google-cloud-translate', 'google-app-engine-patch', 'google-cloud-instance-template', 'google-cloud-nl', 'google-cloud-datalab', 'cloud-document-ai', 'google-cloud-pubsublite', 'google-cloud-recommendation', 'google-container-optimized-os', 'firebase-remote-config', 'google-cloud-memorystore', 'google-cloud-internal-load-balancer', 'google-cloud-tasks', 'firebase-invites', 'google-cloud-sdk', 'firebaseui', 'firebase-assistant', 'firebase-admin', 'google-cloud-marketplace', 'google-cloud-automl-nl', 'google-cloud-api-gateway', 'firebase-polymer', 'google-cloud-sql', 'google-cloud-test-lab', 'google-cloud-dataproc', 'google-cloud-deploy', 'firebase-dynamic-links', 'looker', 'google-app-engine-python', 'google-cloud-profiler', 'google-cloud-launcher', 'firebase-extensions', 'google-cloud-language', 'firebase-realtime-database', 'nativescript-firebase', 'dialogflow-es-fulfillment', 'google-cloud-endpoints', 'google-cloud-search', 'google-cloud-vertex-ai', 'google-app-engine', 'google-kubernetes-engine', 'firebase-security', 'vertex-ai-search', 'firebase-util', 'google-cloud-cpp', 'google-cloud-storage', 'google-cloud-datastore', 'firebase-queue', 'google-analytics-firebase', 'gcloud', 'stackdriver', 'google-app-engine-php', 'google-container-registry', 'google-cloud-print', 'google-cloud-filestore', 'firebase-console', 'google-bigquery', 'firebase-crash-reporting', 'google-cloud-vision', 'firebase-database', 'google-cloud-ml-engine', 'firebasesimplelogin', 'google-container-os', 'google-cloud-cdn', 'google-cloud-registry', 'google-cloud-build', 'google-cloud-console', 'google-cloud-functions', 'google-cloud-transcoder', 'google-cloud-asset-inventory', 'firebase-cloud-messaging', 'google-cloud-router', 'apigee-baas', 'google-cloud-save', 'google-cloud-load-balancer', 'firebase-admob', 'google-cloud-url-maps', 'google-cloud-shell', 'google-cloud-dataproc-metastore', 'google-cloud-print-privet', 'google-dataflow', 'google-cloud-webrisk', 'jib', 'recaptcha-enterprise', 'google-cloud-healthcare', 'google-cloud-workstations', 'google-app-engine-deploy', 'google-cloud-ml', 'google-cloud-trace', 'firebase-machine-learning', 'firebase-hosting', 'apigee', 'firebase-predictions', 'firebase-job-dispatcher', 'google-cloud-interconnect', 'google-cloud-identity-aware-proxy', 'google-cloud-billing', 'google-cloud-instances', 'google-cloud-ai', 'google-app-engine-go', 'redux-saga-firebase', 'firebase-app-indexing', 'google-compute-engine', 'google-cloud-network-load-balancer', 'firebase-notifications', 'google-cloud-intellij', 'firebase-ab-testing', 'google-cloud-source-repos', 'google-cloud-storage-r', 'firebase-performance', 'google-cloud-node', 'dialogflow-es', 'google-app-engine-launch', 'google-cloud-speech', 'google-cloud-powershell', 'google-cloud-scheduler', 'google-cloud-networking', 'firebase-mlkit', 'google-cloud-data-transfer', 'cordova-plugin-firebasex', 'google-cloud-error-reporting', 'google-cloud-armor', 'google-cloud-proxy', 'google-cloud-metrics', 'google-cloud-visualstudio', 'google-cloud-iot', 'firebase-tools', 'google-cloud-spanner-emulator', 'google-translate', 'google-cloud-endpoints-v2', 'google-cloud-kms', 'google-cloud-automl', 'google-app-engine-golang', 'google-cloud-dns', 'google-cloud-platform', 'google-cloud-ai-platform-pipelines', 'google-cloud-stackdriver', 'google-cloud-tools', 'react-redux-firebase', 'google-cloud-spanner', 'google-cloud-vpn', 'react-native-firebase', 'google-prediction', 'firebase-app-check', 'google-cloud-bigtable', 'dialogflow-cx', 'firebase-test-lab', 'google-cloud-resource-manager', 'google-cloud-php-client', 'google-cloud-http-load-balancer', 'firebase-authentication', 'google-cloud-tpu', 'google-migrate-for-compute-engine', 'google-cloud-pubsub', 'firebase-app-distribution', 'firebase', 'google-cloud-identity', 'google-cloud-data-fusion', 'google-cloud-logging', 'google-cloud-firestore', 'bigtable', 'google-cloud-ops-agent', 'google-anthos', 'firebase-in-app-messaging', 'google-cloud-debugger', 'google-cloud-iam', 'looker-studio', 'google-cloud-talent-solution'], 'external_links': [{'type': 'support', 'link': 'https://stackoverflow.com/contact?topic=15'}], 'description': 'A collective for developers who utilize Google Cloudâs infrastructure and platform capabilities. This collective is organized and managed by the Stack Overflow community.', 'link': '/collectives/google-cloud', 'name': 'Google Cloud', 'slug': 'google-cloud'}]",true
"{'account_id': 5010771, 'reputation': 379, 'user_id': 4087306, 'user_type': 'registered', 'accept_rate': 29, 'profile_image': 'https://www.gravatar.com/avatar/2fb44f667a0fc6c6557dfb3e336af8b1?s=256&d=identicon&r=PG', 'display_name': 'binarylegit', 'link': 'https://stackoverflow.com/users/4087306/binarylegit'}",True,0,1728322940,1728322940,79063054,79052206,CC BY-SA 4.0,"<p>The issue, it turns out was in the nginx config, not react.</p> <p>nginx was missing <code>include mime.types</code> under http and therefore was returning css as <code>text/plain</code> instead of <code>text/css</code>.</p>",,,true
"{'account_id': 22764972, 'reputation': 575, 'user_id': 16923160, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/QdPqFHnZ.jpg?s=256', 'display_name': 'vzsoares', 'link': 'https://stackoverflow.com/users/16923160/vzsoares'}",False,1,1727988980,1727988980,79052144,79052048,CC BY-SA 4.0,"<p>When it comes to sharing <code>localStorage</code> between an <code>iframe</code> and the page, there are significant privacy concerns due to third-party cookie and state restrictions that modern browsers impose. The <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Storage_Access_API/Using"" rel=""nofollow noreferrer""><strong>Storage Access API</strong></a> helps to request access to third-party cookies and unpartitioned state(e.g: localstorage). Browsers may deny requests automatically unless previously granted or triggered by a user action.</p> <p>Instead goin fully on that, a more straightforward method is to use the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage"" rel=""nofollow noreferrer"">window.postMessage()</a> method for cross-origin communication which is widely supported.</p> <p>Example:</p> <h3>Page:</h3> <pre class=""lang-js prettyprint-override""><code>// Listen for messages from the iframe window.addEventListener(""message"", (event) => {   if (event.origin !== ""https://my-iframe.com"") return;   console.log(""Received from iframe:"", event.data); }, false); </code></pre> <h3>Iframe:</h3> <pre class=""lang-js prettyprint-override""><code>// Post message window.parent.postMessage(localStorage.getItem('someKey'), ""https://my-iframe.com""); </code></pre>",,,true
"{'account_id': 19381373, 'reputation': 23, 'user_id': 14172565, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/6c5057686075893db7fde65f0bc857d4?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Bn&#39;R', 'link': 'https://stackoverflow.com/users/14172565/bnr'}",True,0,1728153548,1728153204,79057702,79052001,CC BY-SA 4.0,"<p>SOLUTÄ°ON I created fragment and uniform template for sticker and added them dynamicly into fragments and also i put add sticker and update sticker functions inside startTransition</p> <p>fragment template:</p> <pre><code>const createStickerFragment = (index) => `   vec2 translatedUV${index} = (vUv - stickerPosition${index}) / stickerScale${index};   vec2 stickerCenter${index} = vec2(0.5, 0.5);   vec2 centeredUV${index} = translatedUV${index} - stickerCenter${index};   float cosTheta${index} = cos(stickerRotation${index});   float sinTheta${index} = sin(stickerRotation${index});   mat2 rotationMatrix${index} = mat2(cosTheta${index}, -sinTheta${index}, sinTheta${index}, cosTheta${index});   vec2 rotatedUV${index} = rotationMatrix${index} * centeredUV${index} + stickerCenter${index};   vec4 stickerColor${index} = texture2D(stickerTexture${index}, rotatedUV${index});    if (rotatedUV${index}.x >= 0.0 && rotatedUV${index}.x <= 1.0 && rotatedUV${index}.y >= 0.0 && rotatedUV${index}.y <= 1.0) {     baseColor = mix(baseColor, stickerColor${index}.rgb * lightIntensity, stickerColor${index}.a);   } `; </code></pre> <p>uniform template:</p> <pre><code>const createStickerFragmentUniforms = (index) => `   uniform sampler2D stickerTexture${index};   uniform float stickerScale${index};   uniform vec2 stickerPosition${index};   uniform float stickerRotation${index}; `; </code></pre> <p>adding stickers without suspending the dom with startTransition:</p> <pre><code>const addSticker = () => {     startTransition(() => {       setStickers((currentStickers) => [         ...currentStickers,         { texture: ""/t1.png"", position: [0.5, 0.5], scale: 1.0, rotation: 0.0 },       ]);     });   }; </code></pre> <p>How to generate dynamic declaration for stickers</p> <pre><code>const stickerFragmentsUniforms = stickers.map((_, index) =>     createStickerFragmentUniforms(index)   );   const stickerFragments = stickers.map((_, index) =>     createStickerFragment(index)   ); </code></pre> <p>How to turn every sticker in shader:</p> <pre><code><Suspense fallback={<p>wait please</p>}>         <mesh geometry={nodes.cloth_parent.geometry}>           <shaderMaterial             uniforms={{               leftSleeveColor: { value: new Vector3(...leftSleeveColor) },               blendFactor: { value: blendFactor },               lightPosition: { value: new Vector3(2.0, 2.0, 2.0) }, // Lighting position               diffuseMap: { value: diffuseMapTexture },               normalMap: { value: normalMapTexture },               ...stickers.reduce(                 (acc, sticker, i) => ({                   ...acc,                   [`stickerTexture${i}`]: { value: stickerTextures[i] },                   [`stickerPosition${i}`]: {                     value: new Vector2(...sticker.position),                   },                   [`stickerScale${i}`]: { value: sticker.scale },                   [`stickerRotation${i}`]: { value: sticker.rotation },                 }),                 {}               ),             }}             vertexShader={vertexShader}             fragmentShader={fragmentShader}           />         </mesh>       </Suspense> </code></pre> <p>How to implement uniforms and fragments in to fragmentshader:</p> <pre><code>const fragmentShader = `     uniform vec3 leftSleeveColor;     uniform float blendFactor;     uniform vec3 lightPosition;     uniform sampler2D diffuseMap;     uniform sampler2D normalMap;     varying vec2 vUv;     varying vec3 vNormal;     varying vec3 vPosition;      ${stickerFragmentsUniforms.join(       ""\n""     )} // Insert dynamically generated uniforms      void main() {       // Sample the normal map and adjust normals       vec3 normalFromMap = texture2D(normalMap, vUv).rgb;       normalFromMap = normalize(normalFromMap * 2.0 - 1.0);       vec3 adjustedNormal = normalize(vNormal + normalFromMap);        // Lighting calculation       vec3 lightDir = normalize(lightPosition - vPosition);       float lightIntensity = max(dot(adjustedNormal, lightDir), 0.0);        // Sample base diffuse map texture       vec3 baseColor = texture2D(diffuseMap, vUv).rgb * lightIntensity;        // Apply the red color to the left sleeve       if (vUv.x > 0.1 && vUv.x < 0.3 && vUv.y > 0.6 && vUv.y < 0.8) {         vec3 sleeveColorWithLight = leftSleeveColor * lightIntensity;         baseColor = mix(baseColor, sleeveColorWithLight, blendFactor);       }        ${stickerFragments.join(         ""\n""       )} // Insert dynamically generated sticker logic        gl_FragColor = vec4(baseColor, 1.0);     }   `; </code></pre>",1728153548.0,,true
"{'account_id': 8045378, 'reputation': 193, 'user_id': 6065749, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://i.sstatic.net/LI2bQ.jpg?s=256', 'display_name': 'Arindam', 'link': 'https://stackoverflow.com/users/6065749/arindam'}",False,0,1727993721,1727993721,79052334,79051828,CC BY-SA 4.0,"<p>If anyone wants to figure out this. Here is the solution found in Discord</p> <p>Solution : <a href=""https://www.typescriptlang.org/play/?#code/JYWwDg9gTgLgBAJQKYEMDGMA0cDejUYByEAJktgGIDC2AggHZoAW0AEgCoCyAMrTDFGAAjAK4wkAZ2wAhMTAj0OPPgOFjJ2ERKQBlGCnFwAvnABmUCCDgAiKARjWA3AChnweuKin0SOAAULMAkAHnYAPlxnOGi4ZmAAGxI7egB%20AC58dBhiMiiY9kEAc0KkKCpLSHokDwyACjBAiQy8BSp44DQAazqASjgAXgiANwhgEmM4ADI4dj7BzKJSJDzouwkYAuBi0oCIIIziAEl6U1LQiOmGZjYuXn5BUXEQpV5GFigAUXikEGqYC7gsn4CheKge6metyB8noXx%20fzCziMriQAA9ILAzCJGDBgAp-HsIEMzuF6o0Mrsguc%20jgVrEFOtIjFmTMiiUyhUFH9MHTmWsNmydo0eSyYnFEskRTETP04A09hIXMy0Az4ABtCQsADufkJxKg2G0MB02t1kH1AF0BnAtLp9OJat54toeq5laq4Ap2BBit9rbU5hFaaLokaTRAdXrSrUyUghoG4ABCBpx13M5F0uwwERQehwWq8mLBEjAIaIkMs0KCjngLkeQsV6Ktdpdfo4L0%20wrfEyN0UNxs4AB0w-5m22UEpEhMAHpy73cJqI2aiaUptMC-PKyWhv3N2h4igJBJCChfv1rJBzaUALQqjx-ay7kNzzeinDipLVZGvovT7cvxsem-ENgj-UsANdDMYAATzAXxuHcTpKWtYMYiYOxTAydZBHoQo6RVeJoHSOAAHISBQXDShIuAAB9SLQQRcTQFB4mo2jSIaUAUCgaCSLpcRURgNJsPcQoYjpZsOk6YiAwGYZRhIJFXDvRkEPoTp-RwdCkFMTABKwAjoCMNI1KQwIekGVDViQbNczgYIUDgbTTDbZyTHWaDvjbd8IEIqAjCMMIcH0oxQJQREoNg3xoQUZDZTwcT3T84iSM4kBuN49iSO0O9yJ46j%20LRISRNwiT6DaKSZITEYxiU5wVPgGK81lWpgqKzBDP8tImspCygszGyczzYJHhhOAPK8nAfL8gKgpC0DRoUCLXHqj0AEd-T6qy4CzIb7OXfVWS2dlylrKoPDbJqTFHatJ28-S0hIxb6BI7BnMegBGAAmABmEiArgWc6oauB4BaraBts4aDtXMcTs5c6YDbUzrskAVjqFBV7qKx72nU173pIgBif6ZwioA"" rel=""nofollow noreferrer"">Typescript Playground</a></p> <p>Solution Explanation : <a href=""https://discord.com/channels/508357248330760243/1291473186042548225"" rel=""nofollow noreferrer"">Discord Channel</a></p>",,,true
"{'account_id': 24743445, 'reputation': 197, 'user_id': 18629913, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/eaf63f0c2d25f333cd82351a89aaca46?s=256&d=identicon&r=PG', 'display_name': 'Octavian', 'link': 'https://stackoverflow.com/users/18629913/octavian'}",False,0,1727984699,1727984699,79051978,79051798,CC BY-SA 4.0,"<p>I've cloned your <a href=""https://github.com/SHLcomp/youFitnessApp"" rel=""nofollow noreferrer"">repository</a> (which you should have linked), and was able to deploy it to GitHub pages:</p> <p><a href=""https://i.sstatic.net/yAhfih0w.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/yAhfih0w.png"" alt=""OP's site live on GitHub pages"" /></a></p> <p>For <code>gh-pages</code> <code>npm run deploy</code> method:</p> <ol> <li>remove the unnecessary directory nesting that you have in the repository; your entire project that you are pushing to GitHub is inside of a directory <code>fitness</code> which will make it harder for you to deploy the app since some tools may struggle to find the <code>dist</code> build output without proper configuration.</li> <li>Install <code>gh-pages</code> package since you seem to be trying to use it for deployments but it's not actually part of your <code>package.json</code>.</li> <li>Run <code>npm run deploy</code></li> </ol> <p>You seem to have also setup a <code>deploy.yml</code> GitHub actions workflow, but it is broken due to credential errors. Your template is different from the one shown on the <a href=""https://vite.dev/guide/static-deploy#github-pages"" rel=""nofollow noreferrer"">official vite documentation</a>, which I've used and has worked for me although I had to change some repository settings to undo the configuration done by <code>gh-pages</code>. Pick one way to deploy and stick with it otherwise they will be conflicting with each other.</p> <p>The deployment is not perfect and it seems that your routing is not playing nicely with GitHub pages. I tried to set the vite configuration <code>base</code> to <code>/{repo_name}/</code> as instructed in the vite docs, but it doesn't work: If I refresh the page, it goes into 404. I suspect the root page of your routing implementation is interfering with GitHub trying to set the root as the name of the repository, but I'm sure you can figure that part out as you are more familiar with your project and needs.</p>",,,true
"{'account_id': 10203787, 'reputation': 666, 'user_id': 7533126, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/JJs35.jpg?s=256', 'display_name': 'Abhinandan Kushwaha', 'link': 'https://stackoverflow.com/users/7533126/abhinandan-kushwaha'}",False,0,1728596555,1728596555,79076234,79051773,CC BY-SA 4.0,"<p>You can get the first and last (or the first few and the last few) indices even if the number of data points is variable.</p> <p>The first few indices will always be 0,1,2...<br /> The last few indices will always be <code>data.length-1</code>, <code>data.length-2</code>, <code>data.length-3</code>...</p> <p>Once you have the required indices, you can conditionally shift their data point labels towards left or right to avoid truncation.</p>",,,true
"{'account_id': 6316535, 'reputation': 42, 'user_id': 6722849, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/1387621034599564/picture?type=large', 'display_name': 'Kirill T.', 'link': 'https://stackoverflow.com/users/6722849/kirill-t'}",False,0,1727998921,1727998921,79052491,79051638,CC BY-SA 4.0,"<p>Instead of using useModalControlStore directly in test you should create and configure it manually and pass it to Provider.</p> <pre><code>  describe('PopUpModal Component', () => {   let modalControlStore;   let rootStore;    beforeEach(() => {      rootStore = new RootStore();     modalControlStore = new ModalControlStore(rootStore);          modalControlStore.setModalIsOpen(true);   });    it('should display the modal when modalIsOpen is true', () => {        const { getByText } = render(       <Provider modalControlStore={modalControlStore}>         <PopUpModal />       </Provider>     )   // the rest of your test    }); });  </code></pre>",,,true
"{'account_id': 13468738, 'reputation': 7423, 'user_id': 9718056, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ee99b210db5777e5e0a69aaa025cd461?s=256&d=identicon&r=PG', 'display_name': 'Arkellys', 'link': 'https://stackoverflow.com/users/9718056/arkellys'}",True,1,1727970485,1727969264,79051213,79051077,CC BY-SA 4.0,"<p>You get this error because your created your app with <a href=""https://create-react-app.dev/"" rel=""nofollow noreferrer"">CRA</a> and Electron-builder has a <a href=""https://www.electron.build/app-builder-lib.interface.configuration#extends_1"" rel=""nofollow noreferrer"">built-in preset</a> for it, which it will apply by default when detecting <code>react-scripts</code>:</p> <blockquote> <h4>extends?</h4> <p><code>optional</code> <strong>extends</strong>: <code>null</code> | <code>string</code> | <code>string[]</code></p> <p>The name of a built-in configuration preset (currently, only <code>react-cra</code> is supported) or any number of paths to config files (relative to project dir).</p> <p>The latter allows to mixin a config from multiple other configs, as if you <code>Object.assign</code> them, but properly combine <code>files</code> glob patterns.</p> <p>If <code>react-scripts</code> in the app dependencies, <code>react-cra</code> will be set automatically. Set to <code>null</code> to disable automatic detection.</p> </blockquote> <p>This preset expects your entry file to be named <code>electron.js</code> and to be in the <code>build</code> folder when packaging.</p> <p>You can either decide to respect the expected file structure, or you can disable the preset using the <code>extends</code> option on your configuration:</p> <pre class=""lang-json prettyprint-override""><code>""build"": {   ""extends"": null,   // ... } </code></pre> <hr /> <p>For the record, when the preset is detected and you don't have the expected files, usually the packaging step fails with the following error:</p> <pre><code>Application entry file ""build/electron.js"" in the ""xxx"" does not exist. Seems like a wrong configuration. </code></pre> <p>I'm not sure why yours passed.</p>",1727970485.0,,true
"{'account_id': 14143908, 'reputation': 669, 'user_id': 10217754, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/L0nLQ.jpg?s=256', 'display_name': 'Exter', 'link': 'https://stackoverflow.com/users/10217754/exter'}",True,2,1728651779,1728651779,79078355,79050838,CC BY-SA 4.0,"<p>I was doing 2 things incorrectly. One was using a plugin in babelrc that <a href=""https://babeljs.io/docs/babel-plugin-transform-modules-commonjs"" rel=""nofollow noreferrer"">transforms ECMAScript modules to CommonJS</a> which was generating require statements in the build file. Removing this plugin from babel was one of the fixes required.</p> <p>Plugin was - <code>@babel/plugin-transform-modules-commonjs</code></p> <p>Another thing was how webpack was handling externals. For setting node_modules as externals we made use of <code>nodeExternals</code> which is a part of <a href=""https://www.npmjs.com/package/webpack-node-externals"" rel=""nofollow noreferrer""><code>webpack-node-externals</code> package</a>. This, by design, uses require to import these external packages at runtime. This can be changed by setting the <code>importType</code> property in nodeExternals:</p> <pre><code>nodeExternals({       importType: 'module',       allowlist: [/\.(?!(?:jsx?|json)$).{1,5}$/i, /react-toolbox/], }), </code></pre> <p>This results in a build file which does not use <code>require</code> to fetch external packages and hence is compatible with ES module.</p>",,,true
"{'account_id': 36097873, 'reputation': 71, 'user_id': 27562283, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/8a93b8ec04d1f97ed22a4678c030a771?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'sebbanwalker', 'link': 'https://stackoverflow.com/users/27562283/sebbanwalker'}",False,2,1728549543,1728549543,79073460,79050838,CC BY-SA 4.0,"<p>The issue is from the fact that your codebase is being treated as an ES module (due to the ""type"": ""module"" field in package.json), but Webpack is generating CommonJS-style require calls, which are incompatible with ES module syntax.</p> <p>Your Webpack is generating require calls, you need to make sure that your configuration properly handles ES modules. You can fix it like so:</p> <pre><code>// webpack.config.js module.exports = {   output: {     filename: 'bundle.js',     libraryTarget: 'module',  // Use ES Module   },   experiments: {     outputModule: true,  // This allows Webpack to output ESM   },   // Ensure target is modern   target: ['web', 'es2020'],  }; </code></pre>",,,true
"{'account_id': 24018169, 'reputation': 13, 'user_id': 18000848, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/DdJxhJU4.jpg?s=256', 'display_name': 'sfwnisme', 'link': 'https://stackoverflow.com/users/18000848/sfwnisme'}",False,1,1727965628,1727965516,79050988,79050822,CC BY-SA 4.0,"<p>you need to pass the entire class from the mod state for example</p> <pre><code>// ther right way const [mod, setMod] = useState('navbar-lightl') </code></pre> <p>the second issue you used <code>mod</code> prop while it should be <code>mode</code> as it is the prop name you passed from the component</p>",1727965628.0,,true
"{'account_id': 22387743, 'reputation': 5194, 'user_id': 16600319, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RbWBs.jpg?s=256', 'display_name': 'Alvin Zhao - MSFT', 'link': 'https://stackoverflow.com/users/16600319/alvin-zhao-msft'}",False,0,1728290259,1728290259,79061215,79050805,CC BY-SA 4.0,"<p>Based on the update, it seemed that your pipeline was able to run and <code>build</code> the code from different branches of your repo and <code>publish</code> the npm package into the Azure Artifacts Feed. The only difference was the package version that was set.</p> <p>For this, you may try and use the command below to install the expected package, whose version was built with the code in the <code>master</code> branch.</p> <pre><code>npm install mypackage@1.0.0 </code></pre> <p>Please also get prepared to <a href=""https://learn.microsoft.com/en-us/azure/devops/artifacts/get-started-npm?view=azure-devops#connect-to-a-feed"" rel=""nofollow noreferrer"">Connect to a feed</a> first.</p>",,,true
"{'account_id': 13933225, 'reputation': 959, 'user_id': 10060917, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-2SLFlJYyIoU/AAAAAAAAAAI/AAAAAAAAOIo/U-oxSXyefHs/photo.jpg?sz=256', 'display_name': 'Andrei Kovalev', 'link': 'https://stackoverflow.com/users/10060917/andrei-kovalev'}",False,0,1727979535,1727979535,79051753,79050805,CC BY-SA 4.0,"<p>The latest version of the package is determined by the tag <code>latest</code>. It applies automatically unless you use the option <code>--tag</code>. Reading the <a href=""https://docs.npmjs.com/cli/v10/commands/npm-dist-tag"" rel=""nofollow noreferrer"">npm docs</a>:</p> <blockquote> <p>Publishing a package sets the <code>latest</code> tag to the published version unless the <code>--tag</code> option is used. For example, <code>npm publish --tag=beta</code>.</p> </blockquote>",,,true
"{'account_id': 7603926, 'reputation': 2188, 'user_id': 5767484, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/8Eb9C.png?s=256', 'display_name': 'NotX', 'link': 'https://stackoverflow.com/users/5767484/notx'}",True,2,1727964602,1727964602,79050933,79050804,CC BY-SA 4.0,"<p>What you've created is a React Server Page - it is allowed be invoked async, but does not permit any interactivity/dynamic scripts. Instead, you have to make it a React Client Page. Here's a sketch - the filter thingy is a bit unclear and I think out of the scope of question on how to avoid reloading. Here's a sketch where I left the filter aspect out mostly.</p> <pre class=""lang-js prettyprint-override""><code>'use client'; // Now, this is not a React Server Component anymore import connection from '/lib/db'; import { format } from 'date-fns'; import ClientTableRow from '@/components/ClientTableRow'; import { useEffect, useState } from 'react';  export default function Home() { // We cannot use async now, so I removed it   const [selectedFilter, setSelectedFilter] = useState(); // no clue how filter looks like   const [data, setData] = useState({});   useEffect(() => {     async function loadData() {       const [rows] = await connection.query('SELECT * FROM clients');       const data = rows.map(row => ({         ...row,         created_at: format(new Date(row.created_at), 'dd-MM-yyyy HH:mm:ss'),       }));       setData(data);     }      loadData(); // We're invoking this async method in a useEffect callback, which triggers a re-rendering when data gets changed   }, [/* We load the data once, when rendering the first time */  ]);     return (     <table className=""min-w-full divide-y divide-gray-300"">       <thead className=""bg-gray-50"">       <tr>         {/*filter should be here*/}          {/* TODO: add some kind of button logic here, which on click invokes setSelectedFilter with the clicked filter*/}          <td>ID</td>         <td>Name</td>         <td>Last name</td>         <td>Phone</td>         <td>Email</td>         <td>Created at</td>          <td></td>       </tr>       </thead>       <tbody className=""divide-y divide-gray-200 bg-white"">        {data.filter(d => true /*TODO check whether d matches the selectedFilter*/).map((item, index) => (         <ClientTableRow key={index} client={item} />       ))}        </tbody>     </table>   ) }; </code></pre>",,,true
"{'account_id': 1607789, 'reputation': 8597, 'user_id': 1487475, 'user_type': 'registered', 'accept_rate': 93, 'profile_image': 'https://www.gravatar.com/avatar/fab22a058d6ddae05a6a8b70465436ed?s=256&d=identicon&r=PG', 'display_name': 'zdd', 'link': 'https://stackoverflow.com/users/1487475/zdd'}",True,0,1728004234,1728004234,79052598,79050672,CC BY-SA 4.0,"<p>From Angular 18 <a href=""https://angular.dev/cli/serve"" rel=""nofollow noreferrer"">documentation</a>, <code>public-host</code> option has no effects when using esbuild.</p> <pre class=""lang-bash prettyprint-override""><code>public-host The URL that the browser client (or live-reload client, if enabled) should use to connect to the development server. Use for a complex dev server setup, such as one with reverse proxies. This option has no effect when using the 'application' or other esbuild-based builders. </code></pre> <p>You can try to use webpack builder in angular.json</p> <p><code>""builder"": ""@angular-devkit/build-angular:application""</code> --> <code>""builder"": ""@angular-devkit/build-angular:browser""</code>.</p> <p>Here is the list of available builders for your references. <a href=""https://www.npmjs.com/package/@angular-devkit/build-angular"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/@angular-devkit/build-angular</a></p>",,,true
"{'account_id': 27357050, 'reputation': 673, 'user_id': 20865302, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/9b6ac891ec666bd5d56024ef184a9387?s=256&d=identicon&r=PG', 'display_name': 'Dileepa Mabulage', 'link': 'https://stackoverflow.com/users/20865302/dileepa-mabulage'}",False,1,1727975374,1727975374,79051548,79050596,CC BY-SA 4.0,"<p><a href=""https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/token-lifetimes.md#avoiding-interactive-interruptions-in-the-middle-of-a-users-session"" rel=""nofollow noreferrer"">https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/token-lifetimes.md#avoiding-interactive-interruptions-in-the-middle-of-a-users-session</a></p> <pre><code>var request = {     scopes: [""Mail.Read""],     account: currentAccount,     forceRefresh: true     refreshTokenExpirationOffsetSeconds: 7200 // 2 hours * 60 minutes * 60 seconds = 7200 seconds };  const tokenResponse = await msalInstance.acquireTokenSilent(request).catch(async (error) => {     if (error instanceof InteractionRequiredAuthError) {         // fallback to interaction when silent call fails         await msalInstance.acquireTokenRedirect(request);     } }); </code></pre> <p>add this function into useEffect and update the component</p> <pre><code>import React, { useEffect } from ""react""; import { useMsal } from ""@azure/msal-react""; import { InteractionRequiredAuthError } from ""@azure/msal-browser"";  const YourComponent = () => {   const { instance, accounts } = useMsal();    useEffect(() => {     const checkTokenExpiration = async () => {       if (accounts.length > 0) {         const currentAccount = accounts[0];         const request = {           scopes: [""Mail.Read""],           account: currentAccount,           forceRefresh: true, // Forces to refresh token           refreshTokenExpirationOffsetSeconds: 7200, // 2 hours         };          try {           // Try to acquire a token silently           const tokenResponse = await instance.acquireTokenSilent(request);           console.log(""Token acquired:"", tokenResponse);         } catch (error) {           if (error instanceof InteractionRequiredAuthError) {             // Fallback to interactive token acquisition when silent call fails             await instance.acquireTokenRedirect(request);           } else {             console.error(""Error acquiring token silently:"", error);           }         }       }     };      checkTokenExpiration();   }, [accounts, instance]);    return <div>{/* Your component content */}</div>; };  export default YourComponent; </code></pre>",,,true
"{'account_id': 27672605, 'reputation': 39, 'user_id': 21123098, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/80ef71c6832b7a735094901fc3e034a5?s=256&d=identicon&r=PG', 'display_name': 'Ali Raza', 'link': 'https://stackoverflow.com/users/21123098/ali-raza'}",False,0,1727962421,1727962421,79050768,79050057,CC BY-SA 4.0,"<p>I created <em><<strong>BoxedText</strong>/></em> component and i used <em><strong>splitTextIntoChunks()</strong></em> function to split text into chunks that fit within a dynamic box size.</p> <pre class=""lang-bash prettyprint-override""><code>import React, { useState, useEffect } from 'react';  const BoxedText = ({ text, boxSizes }) => {   const [textChunks, setTextChunks] = useState([]);    useEffect(() => {     // Function to split text into chunks that fit within a dynamic box size     const splitTextIntoChunks = (text, boxSizes) => {       const words = text.split(' ');       const chunks = [];       let currentChunk = '';       let boxIndex = 0;        let tempDiv = document.createElement('div');       tempDiv.style.position = 'absolute';       tempDiv.style.visibility = 'hidden';       tempDiv.style.fontSize = '16px';       document.body.appendChild(tempDiv);        words.forEach((word) => {         // Set the current box size dynamically         const { width, height } = boxSizes[boxIndex];         tempDiv.style.width = `${width}px`;          tempDiv.innerHTML = currentChunk + (currentChunk ? ' ' : '') + word;          // If the content overflows, save the chunk and move to the next box         if (tempDiv.offsetHeight > height) {           chunks.push({ chunk: currentChunk, width, height });           currentChunk = word;           boxIndex = (boxIndex + 1) % boxSizes.length; // Move to next box         } else {           currentChunk += (currentChunk ? ' ' : '') + word;         }       });        if (currentChunk) {         const { width, height } = boxSizes[boxIndex];         chunks.push({ chunk: currentChunk, width, height });       }        document.body.removeChild(tempDiv);       return chunks;     };      // Split the text based on the box sizes when the component mounts     const chunks = splitTextIntoChunks(text, boxSizes);     setTextChunks(chunks);   }, [text, boxSizes]);    return (     <div style={{ display: 'flex', flexWrap: 'wrap' }}>       {textChunks.map((chunkData, index) => (         <div           key={index}           style={{             width: `${chunkData.width}px`,             height: `${chunkData.height}px`,             border: '1px solid black',             margin: '5px',             overflow: 'hidden',             padding: '10px',           }}         >           {chunkData.chunk}         </div>       ))}     </div>   ); }; export default BoxedText; </code></pre> <p>And passed text and sizes of all boxes in props.</p> <pre class=""lang-bash prettyprint-override""><code>import BoxedText from ""./BoxedText"";  export default function App() {   const text = `Once upon a time...`;      // Define different sizes for each box   const boxSizes = [     { width: 200, height: 200 },     { width: 160, height: 400 },     { width: 300, height: 270 },     { width: 200, height: 230 },   ];    return (     <div>       <BoxedText text={text} boxSizes={boxSizes} />     </div>   ); } </code></pre>",,,true
"{'account_id': 25935217, 'reputation': 21550, 'user_id': 19655631, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Qbm7w.png?s=256', 'display_name': 'Wongjn', 'link': 'https://stackoverflow.com/users/19655631/wongjn'}",False,0,1728064539,1728064539,79055360,79050052,CC BY-SA 4.0,"<p>It seems like the <code>d</code> command in the <code><path></code> element for the SVG would not draw what you intend:</p> <pre class=""lang-none prettyprint-override""><code>Start at 0,0      0        â          â            1 ââââââââââââââââââââââââââ 2 h16          M4 6                         â   Draw horizontally 16 units       Move to 4,6             â â â â              â â â â â â â â            3 ââââââââââââââââââââââââââ 4 h16          M4 12                        â   Draw horizontally 16 units       Move to 4,12                â â                           â â â â                         5 âââââââââââââ 6 h7                       m-7 6               Draw horizontally 7 units         Move left 7 units and move down 6 units </code></pre> <p>The last command only moves the ""pointer"" back 7 units, whereas the other commands move back to 4 on the x-axis. Thus, the last line starts from 13 instead of 4 (like the other lines).</p> <p>You could consider reworking the last 2 commands to be the same as the other commands, to draw the line fully:</p> <pre class=""lang-none prettyprint-override""><code>Start at 0,0      0        â          â            1 ââââââââââââââââââââââââââ 2 h16          M4 6                         â   Draw horizontally 16 units       Move to 4,6             â â â â              â â â â â â â â            3 ââââââââââââââââââââââââââ 4 h16          M4 12                        â   Draw horizontally 16 units       Move to 4,12           ãâ â â â              â â â â â â â â            5 ââââââââââââââââââââââââââ 6 h16          M4 18                            Draw horizontally 16 units       Move to 4,18 </code></pre> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""true"" data-babel-preset-react=""true"" data-babel-preset-ts=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const { useState } = React;  const Navbar = () => {   const [isOpen, setIsOpen] = useState(false);    const toggleMenu = () => {     setIsOpen(!isOpen);   };    return (     <nav className=""bg-gradient-to-r from-red-600 to-orange-500 p-4"">       <div className=""container mx-auto flex justify-between items-center"">         <a href=""/"" className=""flex items-center"">           <img             src=""https://picsum.photos/48/48""             alt=""Paolo's Pizza Logo""             className=""h-12 w-12 rounded-full border-2 border-white""           />           <span className=""hidden sm:block text-white text-2xl font-semibold ml-4"">             Paolo's Pizza and Ristorante           </span>         </a>          <div className=""sm:hidden"">           <button             onClick={toggleMenu}             className=""text-white focus:outline-none""           >             <svg               className=""w-8 h-8""               fill=""none""               stroke=""currentColor""               viewBox=""0 0 24 24""               xmlns=""http://www.w3.org/2000/svg""             >               <path                 strokeLinecap=""round""                 strokeLinejoin=""round""                 strokeWidth=""2""                 d=""M4 6h16M4 12h16M4 18h16""               ></path>             </svg>           </button>         </div>          <ul className=""hidden sm:flex space-x-8 text-lg text-white font-rubik"">           <li>             <a href=""#home"" className=""hover:bg-orange-700 px-2 py-1 rounded"">               Home             </a>           </li>           <li>             <a href=""#menu"" className=""hover:bg-orange-700 px-2 py-1 rounded"">               Menu             </a>           </li>           <li>             <a               href=""#reservations""               className=""hover:bg-orange-700 px-2 py-1 rounded""             >               Reservations             </a>           </li>           <li>             <a href=""#about"" className=""hover:bg-orange-700 px-2 py-1 rounded"">               About Us             </a>           </li>           <li>             <a               href=""#contact""               className=""hover:bg-orange-700 px-2 py-1 rounded""             >               Contact             </a>           </li>         </ul>       </div>        {isOpen && (         <div className=""sm:hidden mt-4"">           <ul className=""flex flex-col items-center space-y-4 text-white"">             <li>               <a                 href=""#home""                 onClick={toggleMenu}                 className=""hover:bg-orange-700 px-4 py-2 rounded""               >                 Home               </a>             </li>             <li>               <a                 href=""#menu""                 onClick={toggleMenu}                 className=""hover:bg-orange-700 px-4 py-2 rounded""               >                 Menu               </a>             </li>             <li>               <a                 href=""#reservations""                 onClick={toggleMenu}                 className=""hover:bg-orange-700 px-4 py-2 rounded""               >                 Reservations               </a>             </li>             <li>               <a                 href=""#about""                 onClick={toggleMenu}                 className=""hover:bg-orange-700 px-4 py-2 rounded""               >                 About Us               </a>             </li>             <li>               <a                 href=""#contact""                 onClick={toggleMenu}                 className=""hover:bg-orange-700 px-4 py-2 rounded""               >                 Contact               </a>             </li>           </ul>         </div>       )}     </nav>   ); };  ReactDOM.createRoot(document.getElementById('app')).render(<Navbar/>);</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.3.1/umd/react.production.min.js"" integrity=""sha512-QVs8Lo43F9lSuBykadDb0oSXDL/BbZ588urWVCRwSIoewQv/Ewg1f84mK3U790bZ0FfhFa1YSQUmIhG+pIRKeg=="" crossorigin=""anonymous"" referrerpolicy=""no-referrer""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.3.1/umd/react-dom.production.min.js"" integrity=""sha512-6a1107rTlA4gYpgHAqbwLAtxmWipBdJFcq8y5S/aTge3Bp+VAklABm2LO+Kg51vOWR9JMZq1Ovjl5tpluNpTeQ=="" crossorigin=""anonymous"" referrerpolicy=""no-referrer""></script> <script src=""https://cdn.tailwindcss.com/3.4.5""></script>  <div id=""app""></div></code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 2198555, 'reputation': 5506, 'user_id': 1943607, 'user_type': 'registered', 'accept_rate': 89, 'profile_image': 'https://www.gravatar.com/avatar/f7ddb00a729f61f7c6568353df38d2d9?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Reinherd', 'link': 'https://stackoverflow.com/users/1943607/reinherd'}",False,0,1727948461,1727948461,79049956,79049832,CC BY-SA 4.0,"<p>There was some dependency issue. I have removed the ""mantine"" and ""emotion"" from the project's <code>package.json</code>. I have reinstalled it by running:</p> <pre><code>npm install @mantine/core @mantine/hooks @emotion/react </code></pre> <p>and it's displaying the grid as expected!</p>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",True,1,1727933403,1727933403,79049240,79049234,CC BY-SA 4.0,"<p>I see a log where <code>data</code> is defined, and then a log correctly showing <code>data.role</code> as undefined. <code>data</code> has <code>user</code> and <code>message</code> properties. I assume you meant to log <code>data.user.role</code> instead. It looks like all the properties you are trying to access are on <code>data.user</code> and not on the root <code>data</code> reference. Based on the <code>getUserDetails</code> return type it appears you should ""unpack""/return <code>data.user</code> from <code>getUserDetails</code>.</p> <pre class=""lang-js prettyprint-override""><code>async function getUserDetails(id: Types.ObjectId): Promise<IUser | undefined>{   try {     const res = await fetch(`/api/users/${id}`, {       method: 'GET',       headers: {         'Content-Type': 'application/json'       }     });     const { user } = await res.json();     return user; // <-- return the res.data.user IUser object   } catch {     return undefined;   } } </code></pre>",,,true
"{'account_id': 23591117, 'reputation': 1, 'user_id': 17628877, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJzzJltCoSyKiDyJJw6sPU5Q_UY1KKP0Ufyh3rM0=k-s256', 'display_name': 'Hedi', 'link': 'https://stackoverflow.com/users/17628877/hedi'}",False,0,1728309329,1727944510,79049725,79049175,CC BY-SA 4.0,"<p>Is <a href=""https://codesandbox.io/p/sandbox/header-show-hide-animation-depending-on-the-scroll-direction-forked-dt7xp6?file=%2Fsrc%2FApp.js%3A5%2C1-40%2C1"" rel=""nofollow noreferrer"">this</a> what you wanted to do ?</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const Header = () => {   const navShowHide = useRef(null);    useEffect(() => {     let scrollPosition = window.scrollY;      const handleScroll = () => {       const currScrollPos = window.scrollY;       const headerSection = navShowHide.current;        if (!headerSection) return;        if (scrollPosition > currScrollPos)         headerSection.style.transform = ""translateY(0)"";       else headerSection.style.transform = ""translateY(-200px)"";        scrollPosition = currScrollPos;     };      window.addEventListener(""scroll"", handleScroll);      return () => {       window.removeEventListener(""scroll"", handleScroll);     };   }, []);    return (     <>       <div         style={{           color: ""white"",           padding: 20,           backgroundColor: ""green"",         }}         className=""my-transition""         ref={navShowHide}       >         <h1>Header</h1>       </div>     </>   ); };</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.my-transition {   transition: all 0.5s ease-out; }</code></pre>  </div>  </div>  </p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.headershow {   transition: all 300ms;   transform: translateY(0); }  .headerhide {   transition: all 300ms;   transform: translateY(-100%); }</code></pre>  </div>  </div>  </p>",1728309329.0,,true
"{'account_id': 19560622, 'reputation': 693, 'user_id': 14313917, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/OJZ1o.png?s=256', 'display_name': 'clarkf', 'link': 'https://stackoverflow.com/users/14313917/clarkf'}",False,0,1728291867,1728028800,79053321,79049175,CC BY-SA 4.0,"<p>I'm answering my own question. But I will keep this question open for others to share their answer.</p> <p>Here is the updates inside <code>useEffect hook</code>.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>import React, { useEffect, useRef } from ""react""; import ""./styles.css""; /*import Header from ""./components/Header"";*/  const Header = () => {   const navShowHide = useRef(null);    useEffect(() => {     let scrollPosition = window.scrollY;      const handleScroll = () => {       const currScrollPos = window.scrollY;       const headerSection = navShowHide.current;        if (!headerSection) return;        if (scrollPosition > currScrollPos)         headerSection.style.transform = ""translateY(0)"";       else headerSection.style.transform = ""translateY(-200px)"";        scrollPosition = currScrollPos;     };      window.addEventListener(""scroll"", handleScroll);      return () => {       window.removeEventListener(""scroll"", handleScroll);     };   }, []);    return (     <>       <div         style={{           color: ""white"",           padding: 20,           backgroundColor: ""green"",         }}         ref={navShowHide}       >         <h1>Header</h1>       </div>     </>   ); };  export default function App() {   return (     <>       <Header />       <div         className=""App""         style={{           height: 2000,         }}       >         <h1>Hello CodeSandbox</h1>         <h2>Start editing to see some magic happen!</h2>       </div>     </>   ); }</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.my-transition {   --transition-easing-ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);   position: fixed;   top: 0px;   left: 0px;   right: 0px;   transition-property: transform;   transition-duration: 0.3s;   transition-timing-function: var(--transition-easing-ease-in-out);   background-color: #18181b;   z-index: 9; }</code></pre>  </div>  </div>  </p>",1728291867.0,,true
"{'account_id': 30959935, 'reputation': 26, 'user_id': 23775487, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/166a499cbb3fae65dd078f8cb026dab2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Youssef Halim', 'link': 'https://stackoverflow.com/users/23775487/youssef-halim'}",False,0,1727936925,1727936925,79049364,79049175,CC BY-SA 4.0,"<p>I faced two issues with a scroll-based header update:</p> <ul> <li>Class Names Not Updating on Scroll</li> <li>Header Moving to the Top of the Page</li> </ul> <p>This is the updated code</p> <pre><code>import React, { useEffect, useState } from ""react""; import ""./styles.css"";  const Header = () => {   const [prevScrollY, setPrevScrollY] = useState(0);   const [headerTransform, setHeaderTransform] = useState(""translateY(0)"");    useEffect(() => {     const handleScroll = () => {       const currentScrollY = window.scrollY;        if (currentScrollY > prevScrollY)          setHeaderTransform(""translateY(-100%)"");       else          setHeaderTransform(""translateY(0)"");        setPrevScrollY(currentScrollY);     };      window.addEventListener(""scroll"", handleScroll);      return () => {       window.removeEventListener(""scroll"", handleScroll);     };   }, [prevScrollY]);    return (     <div       style={{         color: ""white"",         padding: 20,         backgroundColor: ""green"",         transition: ""transform 0.3s ease-in-out"",         transform: headerTransform,          position: ""fixed"",         top: 0,         width: ""100vw"",       }}     >       <h1>Header</h1>     </div>   ); };  export default function App() {   return (     <>       <Header />       <div         className=""App""         style={{           height: 2000,         }}       >         <h1>Hello CodeSandbox</h1>         <h2>Start editing to see some magic happen!</h2>       </div>     </>   ); } </code></pre>",,,true
"{'account_id': 36221916, 'reputation': 1, 'user_id': 27628592, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/yrmJXFe0.jpg?s=256', 'display_name': 'Anastasiia Nahaiska', 'link': 'https://stackoverflow.com/users/27628592/anastasiia-nahaiska'}",False,-1,1728051929,1728050608,79054655,79049122,CC BY-SA 4.0,"<p>I think the error throws because of double-wrapping the same content inside <code>CartProvider</code>. In <code>index.ts</code>, you wrap the whole app with a <code>CartProvider</code>, but you aslo wrap the <code>Cart</code> screen component inside another CartProvider.</p> <p>It can produce issues related to context creation and their appearances in the tree. As a result, the <code>useCart</code> hook checks the context, finds it undefined, and throws the error message which you define in <code>useCart</code> hook:</p> <pre><code>export const useCart = () => {   const context = useContext(CartContext);   if (!context) { // true     throw new Error(""useCart must be used within a CartProvider"");   }   return context; }; </code></pre> <p>You only need a single <code>Provider</code> to manage the state for the same nested content within your app. Use separate providers only when wrapping different parts of your app that require their own context. For shared state among the same nested components, stick to one <code>Provider</code>.</p> <p>BTW, it's better to wrap only the part of your app that actually uses the context in the Provider. This minimizes unnecessary re-renders for components that don't rely on the context, improving performance.</p> <p>I hope it helps:)</p>",1728051929.0,,true
"{'account_id': 5407689, 'reputation': 115, 'user_id': 4305617, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e074f57d7748982d280c598a7718a9c3?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Jazzman', 'link': 'https://stackoverflow.com/users/4305617/jazzman'}",False,1,1727988471,1727988471,79052122,79049083,CC BY-SA 4.0,"<p>I was not checking for all scenarios, was also not extracting the message(s) correctly from the response. Below is the corrected code:</p> <pre><code>    export const registerUser = (payload: RegisterPayload) => async (dispatch: AppDispatch) => {     dispatch(registerFailure(null)); // Clear any previous error messages before starting the request     dispatch(registerStart());     try {         const response = await axiosClient.post('/register', payload);          let successMessage = 'Operation successful';          // Access the message from the first element of the data array if it exists         if (Array.isArray(response.data) && response.data[0]?.message) {             successMessage = response.data[0].message;         }          dispatch(registerSuccess(response.data));         dispatch(showToast({ message: successMessage, type: 'success' }));         dispatch(registerFailure(null)); // Clear any previous error messages         return { success: true, data: response.data, message: successMessage };      } catch (error: any) {         if (error.response?.data?.detail) {             if (error.response?.status === 500) {                 const errorMessage = 'Internal Server Error. The page will refresh shortly.';                 dispatch(registerFailure(errorMessage));                 dispatch(showToast({ message: errorMessage, type: 'error' }));                 return { success: false, message: errorMessage, refresh: true };             } else if (Array.isArray(error.response.data.detail)) {                 // Assume it's a list of field validation errors                 let errorMessage = 'An error occurred';                 errorMessage = error.response.data.detail                     .map((err: { msg: string }) => {                         // Assuming each error in the array has a ""msg"" property                         const errorMsg = err.msg;                         const commaIndex = errorMsg.indexOf(', ');                          // Check for the existence of comma and trim the message accordingly.                         if (commaIndex !== -1) {                             return errorMsg.substring(commaIndex + 2);                         }                         return errorMsg;                     })                     .join('\n ');                  dispatch(registerFailure(errorMessage));                 dispatch(showToast({ message: errorMessage, type: 'error' }));                 return { success: false, message: errorMessage };              } else {                 // Assume it's a single detail message                 const errorMessage = error.response.data.detail;                 dispatch(registerFailure(errorMessage));                 dispatch(showToast({ message: errorMessage, type: 'error' }));                 return { success: false, message: errorMessage };             }         } else {             const errorMessage = 'An unexpected error occurred';             dispatch(registerFailure(errorMessage));             dispatch(showToast({ message: errorMessage, type: 'error' }));             return { success: false, message: errorMessage };         }     } }; </code></pre>",,,true
"{'account_id': 32070083, 'reputation': 35, 'user_id': 24873433, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/2b5f5ed65d9a5a085bb621573627bcf1?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Kurt Bernstein Blancia', 'link': 'https://stackoverflow.com/users/24873433/kurt-bernstein-blancia'}",False,-1,1727930158,1727930158,79049138,79049061,CC BY-SA 4.0,<p>maybe try implementing a custom hook that utilizes the useEffect hook along with the usePrompt approach??</p>,,,true
"{'account_id': 8884317, 'reputation': 51, 'user_id': 6633103, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/XDGU5.jpg?s=256', 'display_name': 'Ravi Akella', 'link': 'https://stackoverflow.com/users/6633103/ravi-akella'}",False,0,1727984686,1727984686,79051977,79049029,CC BY-SA 4.0,"<p>API Gateway by definition means it sits behind a front-end client to access the backend API. So, no. Sending a JSP is not a practice.</p>",,,true
"{'account_id': 22492006, 'reputation': 1, 'user_id': 16689600, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GhUS1GHOTqeOdU4wPjVyzsOdQ3J2J6rZkJqTYHclw=k-s256', 'display_name': 'Asad Raza', 'link': 'https://stackoverflow.com/users/16689600/asad-raza'}",False,0,1727942932,1727942932,79049638,79048960,CC BY-SA 4.0,"<h3>Accessing and Enabling Location Services in React Native</h3> <p>If youâre facing issues with <code>react-native-location-enabler</code> and are looking for a reliable solution to access and enable location services in your React Native app using TypeScript, you can utilize <code>react-native-maps</code> along with <code>react-native-permissions</code> for managing permissions.</p> <h4>Step-by-step Guide:</h4> <ol> <li><p><strong>Install Required Packages:</strong></p> <p>First, ensure you have the necessary packages installed. You can do this by running:</p> <pre class=""lang-bash prettyprint-override""><code>npm install react-native-maps react-native-permissions </code></pre> <p>Make sure you also link the libraries if you're not using auto-linking (React Native < 0.60):</p> <pre class=""lang-bash prettyprint-override""><code>react-native link react-native-maps react-native link react-native-permissions </code></pre> </li> <li><p><strong>Setup Permissions:</strong></p> <p>You need to configure the permissions for location access in your app.</p> <p><strong>For iOS:</strong></p> <ul> <li>Open your <code>Info.plist</code> and add the following keys:</li> </ul> <pre class=""lang-xml prettyprint-override""><code><key>NSLocationWhenInUseUsageDescription</key> <string>We need your location to show nearby places.</string> <key>NSLocationAlwaysUsageDescription</key> <string>We need your location to provide better services.</string> </code></pre> <p><strong>For Android:</strong></p> <ul> <li>In your <code>AndroidManifest.xml</code>, add the following permissions:</li> </ul> <pre class=""lang-xml prettyprint-override""><code><uses-permission android:name=""android.permission.ACCESS_FINE_LOCATION"" /> <uses-permission android:name=""android.permission.ACCESS_COARSE_LOCATION"" /> </code></pre> </li> <li><p><strong>Request Location Permissions:</strong></p> <p>Use <code>react-native-permissions</code> to request location permissions in your component.</p> <pre class=""lang-js prettyprint-override""><code>import React, { useEffect, useState } from 'react'; import { View, Text, Button } from 'react-native'; import MapView, { Marker } from 'react-native-maps'; import { PermissionsAndroid, Platform } from 'react-native';  const App = () => {     const [locationGranted, setLocationGranted] = useState(false);     const [region, setRegion] = useState({         latitude: 37.78825,         longitude: -122.4324,         latitudeDelta: 0.0922,         longitudeDelta: 0.0421,     });      useEffect(() => {         const requestLocationPermission = async () => {             if (Platform.OS === 'android') {                 const granted = await PermissionsAndroid.request(                     PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,                     {                         title: ""Location Permission"",                         message: ""This app requires access to your location."",                         buttonNeutral: ""Ask Me Later"",                         buttonNegative: ""Cancel"",                         buttonPositive: ""OK""                     }                 );                 setLocationGranted(granted === PermissionsAndroid.RESULTS.GRANTED);             } else {                 // For iOS, you can directly set locationGranted to true                 setLocationGranted(true);             }         };         requestLocationPermission();     }, []);      // Optionally add a method to get the user's current location     const getCurrentLocation = () => {         navigator.geolocation.getCurrentPosition(             (position) => {                 const { latitude, longitude } = position.coords;                 setRegion({                     latitude,                     longitude,                     latitudeDelta: 0.0922,                     longitudeDelta: 0.0421,                 });             },             (error) => console.log(error),             { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 },         );     };      return (         <View style={{ flex: 1 }}>             {locationGranted ? (                 <MapView style={{ flex: 1 }} region={region}>                     <Marker coordinate={region} />                 </MapView>             ) : (                 <Text>Location permission denied</Text>             )}             <Button title=""Get Current Location"" onPress={getCurrentLocation} />         </View>     ); };  export default App; </code></pre> </li> </ol> <h3>Key Points:</h3> <ul> <li><strong>Permissions:</strong> Always request location permissions before trying to access the device's location.</li> <li><strong>Handling Location:</strong> Use <code>navigator.geolocation.getCurrentPosition</code> to fetch the current location once permissions are granted.</li> <li><strong>Testing on Physical Devices:</strong> Remember that location services may not work properly on emulators; testing on a real device is essential.</li> </ul> <p>This approach leverages <code>react-native-maps</code> for displaying maps and <code>react-native-permissions</code> for handling permissions, providing a clean and effective way to manage location services in your app.</p> <p>Feel free to modify the code according to your app's requirements!</p> <p>Make sure to test your implementation thoroughly and check the official documentation for any updates on the libraries you are using. Good luck with your project!</p> <p>[react-native] [typescript] [location] [geolocation]</p>",,,true
"{'account_id': 3009735, 'reputation': 24647, 'user_id': 2553506, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jOi8K.jpg?s=256', 'display_name': 'David L. Walsh', 'link': 'https://stackoverflow.com/users/2553506/david-l-walsh'}",True,3,1727920359,1727920359,79048903,79048884,CC BY-SA 4.0,"<blockquote> <p>I've checked if the roles are deeply equal but the re-render happens regardless.</p> </blockquote> <p>React renders when the state changes <em>reference</em>. Deep equality isn't important here; if you're creating a new array with the same values, that will trigger a re-render.</p> <p>It would help to see what your <code>useSession</code> hook looks like.</p>",,,true
"{'account_id': 3009735, 'reputation': 24647, 'user_id': 2553506, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jOi8K.jpg?s=256', 'display_name': 'David L. Walsh', 'link': 'https://stackoverflow.com/users/2553506/david-l-walsh'}",True,-1,1727920980,1727920980,79048917,79048847,CC BY-SA 4.0,"<p>The map function of your <code>Task</code> component doesn't return anything. You need to return the JSX you're generating. You should also have a <code>return null</code> outside your if statement.</p> <pre><code>   {tasks.map((t, index) => {       if (t) {         // wrap in return         return (           <div className=""taskWrapper"" key={index}>             <div className=""front"">               <h1>Title: {t.title}</h1>             </div>             <div className=""back"">               <h2>Due Date: {t.dueDate}</h2>               <h2>Priority: {t.priority}</h2>               <h2>Status: {t.status}</h2>               <h2>Description: {t.description}</h2>             </div>           </div>         );       }        return null; // return null when if case fails     })} </code></pre>",,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",True,0,1727934229,1727933808,79049252,79048716,CC BY-SA 4.0,"<p>Most of your code is well set, we need to discuss only the below exception.</p> <p><strong>The exception:</strong></p> <p>Although the intent of the below code is correct, the implementation is incorrect. The code is intended to keep the tasks updated with respect to the user interaction. It is absolutely required. However, implementing the same by changing props is incorrect. It affects the purity of the component. Impure components are inconsistent in rendering. You can read more about it from here : <a href=""https://react.dev/learn/keeping-components-pure"" rel=""nofollow noreferrer"">Keeping Components Pure</a>.</p> <pre><code>tasks[index].done = value; // handleChange in ToDoTable </code></pre> <p>Therefore please try refactoring the code to meet intent implemented in the most recommended way. One of the refactored versions may be as below.</p> <p><strong>A solution:</strong></p> <pre><code>// a) Bring the tasks down into the component ToDoTable  // b) And make it a state over there </code></pre> <p>Please see below a sample code in the same line in its most basic form.</p> <p><strong>App.js</strong></p> <pre><code>import { useState } from 'react';  export default function OnboardingTasks() {   const [allTasksComplete, setAllTasksComplete] = useState(false);   return (     <>       <ToDoTable onCompletingTask={setAllTasksComplete} />       <button         disabled={!allTasksComplete}         onClick={() => console.log('a handler to follow')}       >         Save and Next       </button>     </>   ); }  function ToDoTable({ onCompletingTask }) {    // please note a new property sortorder added   // and is used to keep the order in rendering   const initialTasklist = [     {       name: 'Discuss and set your first 30/60/90-day goals with your manager',       done: false,       sortorder: 1,     },     {       name: 'Complete personal info & documents on Bluewave HRM',       done: false,       sortorder: 2,     },     {       name: 'Sign and submit essential documents',       done: false,       sortorder: 3,     },   ];   const [tasks, setTasks] = useState(initialTasklist);    function handleClick(updatedTask) {     // updating tasks state without mutating     // step 1: filter out the tasks except the currently updated one     const tasktemp = tasks.filter(       (tasktemp) => tasktemp.sortorder !== updatedTask.sortorder     );     // step 2: Add the currently updated task into the list of other tasks     tasktemp.push(updatedTask);     // update the tasks state     setTasks(tasktemp);     // update the task completion status in the parent object     onCompletingTask(tasktemp.filter((task) => !task.done).length == 0);   }   return (     <>       Tasks:       <ul>         {tasks           .sort((task1, task2) => task1.sortorder - task2.sortorder)           .map((task) => (             <li key={task.sortorder}>               <label>                 {task.name}                 <input                   type=""checkbox""                   value={task.done}                   onChange={(e) =>                     handleClick({                       name: task.name,                       done: e.target.checked,                       sortorder: task.sortorder,                     })                   }                 />               </label>             </li>           ))}       </ul>     </>   ); } </code></pre> <p><strong>Test run:</strong></p> <p><strong>On load of the app, the button is disabled</strong></p> <p><a href=""https://i.sstatic.net/eAfpXzev.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/eAfpXzev.png"" alt=""Browser display on load of the app"" /></a></p> <p><strong>On completing the first task, still the button is disabled</strong></p> <p><a href=""https://i.sstatic.net/rUUnLtAk.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/rUUnLtAk.png"" alt=""Browser display - On completing the first task"" /></a></p> <p><strong>On completing the last task, the button is enabled</strong></p> <p><a href=""https://i.sstatic.net/UmLuf7ZE.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/UmLuf7ZE.png"" alt=""Browser display - On completing the last task"" /></a></p>",1727934229.0,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,1,1727917521,1727917521,79048848,79048716,CC BY-SA 4.0,"<p>You are missing some React basics. The main issue is that the <code>tasks</code> data you are using is declared <em><strong>inside</strong></em> <code>OnboardingTasks</code>, so any time <code>OnboardingTasks</code> renders for any reason, <code>tasks</code> is redeclared with the <code>done: false</code> properties. <code>tasks</code> should be the React state, and the <code>allTasksComplete</code> should <em><strong>not</strong></em> be in state since it is a derived value from the <code>tasks</code> ""source of truth"" state.</p> <p>Suggested refactor:</p> <ul> <li>Convert the <code>tasks</code> to local state</li> <li>Convert <code>allTasksComplete</code> to a memoized derived value</li> <li>Move the change handler into <code>OnboardingTasks</code> and pass down to <code>ToDoTable</code> as props</li> </ul> <pre><code>const initialState = [   {     name: 'Discuss and set your first 30/60/90-day goals with your manager',     done: false   },   {     name: 'Complete personal info & documents on Bluewave HRM',     done: false   },   {     name: 'Sign and submit essential documents',     done: false   } ];  export default function OnboardingTasks({ style }) {   const [tasks, setTasks] = useState(initialState);    const allTasksComplete = useMemo(() => tasks.every((task) => task.done));    const handleChange = (index, done) => {     // Use functional state update to shallow copy tasks state,      // and then shallow copy the task that is being updated     setTasks(tasks => tasks.map((task, i) =>       i === index         ? { ...task, done }         : task     ));   }    return (     <Box       sx={{         ...style         border: ""1px solid #EBEBEB"",         borderRadius: ""10px"",         minWidth: ""1003px"",         paddingX: ""113px"",         paddingY: ""44px"",         fontFamily: fonts.fontFamily       }}     >       <h4 style={{textAlign: ""center"", marginTop: 0}}>         Complete your to-do items       </h4>       <p style={{textAlign: ""center"", marginBottom: ""50px""}}>         You may discuss your to-dos with your manager       </p>       <ToDoTable          tasks={tasks}          onChange={handleChange}          style={{marginBottom: ""50px""}}       />       <Stack direction=""row"" alignContent=""center"" justifyContent=""space-between"">         <HRMButton           mode=""secondaryB""           startIcon={<ArrowBackIcon />}         >           Previous         </HRMButton>         //This button needs to be enabled         <HRMButton           mode=""primary""           enabled={allTasksComplete}         >           Save and next         </HRMButton>       </Stack>     </Box>   ); }; </code></pre> <ul> <li>Move <code>TableHeaderCell</code> declaration outside ReactTree so it's a stable reference and not redeclared each render cycle</li> </ul> <pre><code>// Custom style elements const TableHeaderCell = styled(TableCell)({   color: colors.darkGrey,   paddingTop: ""10px"",   paddingBottom: ""10px"" });  export default function ToDoTable({ tasks, onChange, style }) {   return (     <TableContainer       sx={{         ...style,         minWidth: ""1003px"",         fontFamily: fonts.fontFamily       }}     >       <Table>         <TableHead>           <TableRow sx={{backgroundColor: ""#F9FAFB""}}>             <TableHeaderCell>               <b style={{color: colors.grey}}>To-Do</b>             </TableHeaderCell>             <TableHeaderCell align=""right"">               <b style={{color: colors.grey}}>Done</b>             </TableHeaderCell>           </TableRow>         </TableHead>         <TableBody>           {tasks.map((task, index) => (             <TableRow key={index}>               <TableCell>{task.name}</TableCell>               <TableCell align=""right"">                 <Checkbox                   type=""checkbox""                   id={`${task.name}-done`}                   name={`${task.name}-done`}                   value={`${task.name}-done`}                   size=""large""                   onChange={() => onChange(index, !task.done)}                 />               </TableCell>             </TableRow>           ))}         </TableBody>       </Table>     </TableContainer>   ); }; </code></pre>",,,true
"{'account_id': 20303058, 'reputation': 78, 'user_id': 14892008, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/dd9ab70f10565ebbf8c2e0b2041ddef3?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Abhishekjoshi99', 'link': 'https://stackoverflow.com/users/14892008/abhishekjoshi99'}",True,1,1728501091,1728439828,79068273,79047982,CC BY-SA 4.0,"<p>You can try this code and just turn it to typescript .</p> <pre><code>    import React, { useState, useRef, ChangeEvent } from 'react'; import { Canvas, Image as FabricImage } from 'fabric';  interface ImageElementProps {   canvas: Canvas;   canvasRef: React.RefObject<HTMLCanvasElement>; }  const ImageElement: React.FC<ImageElementProps> = ({ canvas, canvasRef }) => {   const [imageSrc, setImageSrc] = useState<string | null>(null);   const [image, setImage] = useState<FabricImage | null>(null);   const [uploadMessage, setUploadMessage] = useState<string>(""Upload Image"");   const imageUploadRef = useRef<HTMLInputElement>(null);    const imageUpload = (e: ChangeEvent<HTMLInputElement>) => {     const file = e.target.files?.[0];     console.log(file);     if (file) {       const url = URL.createObjectURL(file);       console.log(url);       setImageSrc(url);       setUploadMessage(""Change Image"");        const ImageElement = new Image();       ImageElement.src = url;       ImageElement.crossOrigin = ""anonymous"";       ImageElement.onload = () => {         console.log(""Image Loaded"");         const imageWidth = ImageElement.width;         const imageHeight = ImageElement.height;         const canvasWidth = canvasRef.current?.width ?? 0;         const canvasHeight = canvasRef.current?.height ?? 0;         const scale = Math.min(           canvasWidth / imageWidth,           canvasHeight / imageHeight         );         const fabricImage = new FabricImage(ImageElement, {           left: 0,           top: 0,           scaleX: scale,           scaleY: scale,         });         setImage(fabricImage);         canvas.add(fabricImage);         canvas.renderAll();       };       ImageElement.src = url;     }   }; };  export default ImageElement; </code></pre> <p>The changes done in the code</p> <p>what i have done here in the code is that</p> <p>Image Upload and Processing:</p> <p>The imageUpload function handles file selection and image processing. It creates an object URL for the selected file and updates the component state. A new Image object is created to load the image and calculate its dimensions.</p> <p>Canvas Integration:</p> <p>The code uses the fabric.js library to create and manipulate images on a canvas so I make a image element first and then with that Image element.It calculates the appropriate scale to fit the image within the canvas dimensions and in FabricImage we create a new image using this FabricElement.</p> <p>Then we add the created image to canva using canvas.add and then renderAll on the screen.</p>",1728501091.0,,true
"{'account_id': 13468738, 'reputation': 7423, 'user_id': 9718056, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ee99b210db5777e5e0a69aaa025cd461?s=256&d=identicon&r=PG', 'display_name': 'Arkellys', 'link': 'https://stackoverflow.com/users/9718056/arkellys'}",False,0,1727895531,1727895531,79048133,79047932,CC BY-SA 4.0,"<p>As stated on <a href=""https://www.electronjs.org/docs/latest/tutorial/esm#sandboxed-preload-scripts-cant-use-esm-imports"" rel=""nofollow noreferrer"">Electron's documentation about ESM</a>:</p> <blockquote> <p><strong>Sandboxed preload scripts can't use ESM imports</strong></p> <p>Sandboxed preload scripts are run as plain JavaScript without an ESM context. If you need to use external modules, we recommend using a bundler for your preload code. Loading the <code>electron</code> API is still done via <code>require('electron')</code>.</p> </blockquote> <p>If you don't use a bundler and want to keep sanboxing enabled, use <code>require</code> instead of <code>import</code> on the preload.</p>",,,true
"{'account_id': 129540, 'reputation': 217665, 'user_id': 328193, 'user_type': 'registered', 'accept_rate': 91, 'profile_image': 'https://i.sstatic.net/FnwU5.jpg?s=256', 'display_name': 'David', 'link': 'https://stackoverflow.com/users/328193/david'}",False,2,1727892060,1727892060,79047966,79047893,CC BY-SA 4.0,"<p>This certainly won't catch any 404 errors:</p> <pre><code>try {     const linkHost = new URL(bookmarkLink).hostname;     return `https://icons.duckduckgo.com/ip3/${linkHost}.ico`; } catch {     return ""https://placehold.co/24/202124/FFF?text=>""; } </code></pre> <p>All this code does is create a URL.  It doesn't make any <em>requests</em> to that URL.</p> <p>But if <em>this</em> is producing an error at runtime when making a request to the resulting URL:</p> <pre><code><img src={getFaviconLink(link)} className={styles.favicon} /> </code></pre> <p>Then you should be able to observe that error with an <code>onError</code> event handler.  For example:</p> <pre><code><img src={getFaviconLink(link)} className={styles.favicon} onError={handleError} /> </code></pre> <p>And create a function to handle that error:</p> <pre><code>const handleError = (e) => {   // do whatever you need here to handle the error }; </code></pre>",,,true
"{'account_id': 24577093, 'reputation': 51, 'user_id': 18482784, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/2bc1571a200f12eefcdf2b510ef5860d?s=256&d=identicon&r=PG', 'display_name': 'Default', 'link': 'https://stackoverflow.com/users/18482784/default'}",True,0,1728830354,1728830354,79083415,79047610,CC BY-SA 4.0,"<p>The problem was quite obvious, when I re-built a similar structure for another component I noticed that the autocomplete was working. Unlike the Avatar component, memo() was not used in it. Having removed it from the code, everything really worked as it should. <br>Here's what it might look like:</p> <pre><code>interface AvatarProps<T extends ElementType = 'div'> {     className?: string     src?: string     as?: T     alt?: string     color?: AvatarColor     theme?: AvatarTheme     size?: AvatarSize }  type Props<T extends ElementType> = AvatarProps<T> & Omit<ComponentPropsWithoutRef<T>, keyof AvatarProps<T>>  export const Avatar = <T extends ElementType = 'div'>(props: Props<T>) => {     const {         as: Component = 'div',         ...     } = props      return (         <Component>             ...         </Component>     ) } </code></pre>",,,true
"{'account_id': 1058766, 'reputation': 1755, 'user_id': 1060851, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://www.gravatar.com/avatar/f7bf66fa0d9fc0532a323f47a5c3ba95?s=256&d=identicon&r=PG', 'display_name': 'Spawnrider', 'link': 'https://stackoverflow.com/users/1060851/spawnrider'}",False,0,1728292452,1728292452,79061320,79047593,CC BY-SA 4.0,"<p>For now, there is no fix for this issue. You need to install the latest version of AJV dependency as Orval is still using an old version.</p> <p>For me, <em>npm i -D ajv@latest</em> did the trick</p> <p>Check this related issue for the fix : <a href=""https://github.com/orval-labs/orval/issues/1454"" rel=""nofollow noreferrer"">https://github.com/orval-labs/orval/issues/1454</a></p>",,,true
"{'account_id': 16610898, 'reputation': 512, 'user_id': 12003949, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/E4jEM.jpg?s=256', 'display_name': 'Iorweth333', 'link': 'https://stackoverflow.com/users/12003949/iorweth333'}",False,0,1727904988,1727904988,79048537,79047504,CC BY-SA 4.0,"<p>I've read the source code of <code>DashboardLayout</code>. There is no way to provide default state of the drawer. It is closed by default when viewport is narrower than <code>md</code> breakoint (which is defined by the MUI Theme, 900 px by default) and open when the viewport is wider.</p> <p>There is no ellegant way to deal with that. You could:</p> <ul> <li>override the value of <code>md</code> breakpoint in the theme, but that will apply for all components within that theme; perhaps you could craft a specific theme for <code>DashboardLayout</code> only? They work just like Context after all...</li> </ul> <pre><code>      <ThemeProvider theme={themeWithOverridenMdBreakpoint}>         <DashboardLayout           slots={{             toolbarAccount: CustomToolbarAccount,           }}         >           <ThemeProvider theme={themeForEverythingElse}>             {children}           </ThemeProvider>         </DashboardLayout>       </ThemeProvider> </code></pre> <ul> <li>you could also try to somehow get a reference to the button and then ""click"" it programmatically:</li> </ul> <pre class=""lang-js prettyprint-override""><code>  React.useEffect(() => {     const timeoutId = setTimeout(() => drawerButton.click(), 0);     return () => clearTimeout(timeoutId);   }, []) </code></pre> <p>However I don't know how would you get that reference to the button in a way that would not break when they change the implementation - Toolpad Core is still a beta. This is also going to make the drawer close after some delay, it will not be closed from the start.</p> <p>This is clearly an imperfection in ToolpadCore, they should definitely add a proprty for that. But again - still a beta, can't expect too much.</p>",,,true
"{'account_id': 26550614, 'reputation': 193, 'user_id': 20179987, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu3lqsX0fHuccAqxq0wNsDlIjjQU6QgU2JSfLxLM=k-s256', 'display_name': 'GABRIEL R GARCIA-AVILES', 'link': 'https://stackoverflow.com/users/20179987/gabriel-r-garcia-aviles'}",False,0,1728389941,1728389941,79065928,79047157,CC BY-SA 4.0,"<p>Based on Drew's answer, I made this hook to allow getting and setting the URL search params:</p> <pre class=""lang-js prettyprint-override""><code>import { useMemo } from ""react""; import { useHistory, useLocation } from ""react-router-dom"";  //A similar function is implemented in react-router-dom v6, but we are using v5 at time of writing function useSearchParams() {   const { search } = useLocation();   const history = useHistory();    const searchParams = useMemo(() => new URLSearchParams(search), [search]);    function setSearchParams(key: string, value: string | number | boolean, reload?: boolean) {     searchParams.set(key, value.toString());      if (reload) {       //reloads the page       window.location.search = searchParams.toString();     } else {       history.push(window.location.pathname + ""?"" + searchParams.toString());     }   }    return { searchParams, setSearchParams }; }  export default useSearchParams; </code></pre>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",True,1,1728233744,1727883003,79047481,79047157,CC BY-SA 4.0,"<p>Use the <a href=""https://reactrouter.com/en/main/hooks/use-search-params"" rel=""nofollow noreferrer""><code>useSearchParams</code></a> hook in the target component, when the matched route's URL path + searchParams update it should trigger a component rerender.</p> <p><strong>Basic React-Router-DOM v6 Example:</strong></p> <pre><code>import { useEffect } from ""react""; import { Routes, Route, Link, useSearchParams } from ""react-router-dom"";  const RouteLocations = () => {   const [searchParams] = useSearchParams();    ...    return (     ...   ); }; </code></pre> <pre><code><Route path=""/route/locations"" element={<RouteLocations />} /> </code></pre> <p><a href=""https://i.sstatic.net/2BPFxnM6.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/2BPFxnM6.png"" alt=""enter image description here"" /></a></p> <p><strong>Basic React-Router-DOM v5 Example:</strong></p> <p>Use the <code>location.search</code> value. It's common to abstract this logic into a custom hook.</p> <pre><code>import { useEffect, useMemo } from ""react""; import { Switch, Route, Link, useLocation } from ""react-router-dom"";  const useSearchParams = () => {   const { search } = useLocation();    const searchParams = useMemo(() => new URLSearchParams(search), [search]);    return [searchParams]; };  const RouteLocations = () => {   const [searchParams] = useSearchParams();    useEffect(() => {     console.log(""RouteLocations rendered"", searchParams.toString());   });    return (     ...   ); }; </code></pre> <pre><code><Route path=""/route/locations"" component={RouteLocations} /> </code></pre>",1728233744.0,,true
"{'account_id': 35518659, 'reputation': 17, 'user_id': 27254454, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/XWhDSHsc.jpg?s=256', 'display_name': 'donny', 'link': 'https://stackoverflow.com/users/27254454/donny'}",False,-2,1728025739,1728025739,79053167,79047107,CC BY-SA 4.0,"<p>About why the elements of restarting the server change</p> <ul> <li><p>React renders to display content on the screen.</p> </li> <li><p>React initially renders only once and then does not render any more unless the element is updated. So you have to rerun the server to get the updated elements.</p> </li> <li><p>In order to update, the value of the state must be updated through the setState function of useState. I'll show you example code that updates this setState's function.</p> </li> </ul> <p><a href=""https://i.sstatic.net/VKSDg6th.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/VKSDg6th.png"" alt=""enter image description here"" /></a></p>",,,true
"{'account_id': 11467508, 'reputation': 27624, 'user_id': 8405310, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/oTdtMh9A.jpg?s=256', 'display_name': 'TkDodo', 'link': 'https://stackoverflow.com/users/8405310/tkdodo'}",True,1,1727883198,1727883198,79047496,79047094,CC BY-SA 4.0,"<p><code>useAuth0</code> is a hook, and the rules of hooks forbid calling hooks from functions that arenât themselves hooks. So this is a violation of the rules of hooks:</p> <pre><code>export const getUser = async (): Promise<IUser> => {   const { getAccessTokenSilently } = useAuth0() </code></pre> <p>The second approach works because <code>useAuth0</code> is called within another hook, <code>useEndUser</code>.</p> <p>There are linters that catch these errors, I would encourage you to enable them in your code-base.</p>",,,true
"{'account_id': 21309, 'reputation': 166982, 'user_id': 51685, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/vVhK5.jpg?s=256', 'display_name': 'AKX', 'link': 'https://stackoverflow.com/users/51685/akx'}",True,1,1727933498,1727876166,79047006,79046729,CC BY-SA 4.0,"<p>The <code>@types/react</code> you're using don't yet have that name, so TypeScript is confused.</p> <p>You could try a local module augmentation file (e.g. <code>src/react-19.d.ts</code>):</p> <pre><code>/// <reference types=""react"" />  declare namespace React {   export function use(): void;  // fill in with the correct signature } </code></pre>",1727933498.0,,true
"{'account_id': 34480556, 'reputation': 149, 'user_id': 26592787, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5b4ddd206a5a44f0dae0fb2dcea85d67?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'jupremator', 'link': 'https://stackoverflow.com/users/26592787/jupremator'}",False,-1,1727875765,1727875765,79046972,79046729,CC BY-SA 4.0,"<p>you actually can not use the <code>use</code> inside a typescript project, because the react.d.ts do not have the <code>use</code> member.</p> <p>Go with a js project and it will work as expected.</p> <p>I set up a really quick project to use React 19 if you want to <a href=""https://github.com/juprem/sandbox-react-19/tree/main"" rel=""nofollow noreferrer"">React 19</a></p>",,,true
"{'account_id': 9606741, 'reputation': 36834, 'user_id': 7132550, 'user_type': 'registered', 'accept_rate': 75, 'profile_image': 'https://graph.facebook.com/1063981417044495/picture?type=large', 'display_name': 'MichaÅ Turczyn', 'link': 'https://stackoverflow.com/users/7132550/micha%c5%82-turczyn'}",False,0,1727873315,1727873315,79046815,79046729,CC BY-SA 4.0,"<p>As could be read in <a href=""https://github.com/facebook/react/issues/30448"" rel=""nofollow noreferrer"">GitHub issue</a></p> <blockquote> <p>It is only available in canary channel docs</p> </blockquote> <p>So, at page of <a href=""https://www.npmjs.com/package/react/v/19.0.0-canary-cb151849e1-20240424?activeTab=versions"" rel=""nofollow noreferrer"">react npm</a> I found latest Canary version: <code>19.0.0-canary-cb151849e1-20240424</code> and I have installed it for <code>react</code> and <code>react-dom</code>.</p> <p>Now, everything seems to be working with <code>use</code> hook, however the error remains.</p>",,,true
"{'account_id': 25617321, 'reputation': 60, 'user_id': 19389732, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/AJmKMVo8.jpg?s=256', 'display_name': 'Kia S', 'link': 'https://stackoverflow.com/users/19389732/kia-s'}",True,0,1727885470,1727885470,79047629,79046563,CC BY-SA 4.0,"<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>import { useEffect, useRef, useState } from ""react""; import ""./styles.css"";  const App = () => {   const scrollToDiv = useRef(null);   const [items, setItems] = useState([""hi"", ""hello"", ""master""]);   const generateRandomWord = () => {     const word = ""demo"";     setItems((prev) => {       return [...prev, word];     });   };    useEffect(() => {     if (scrollToDiv.current) {       scrollToDiv.current.scrollIntoView({         behavior: ""smooth"",         block: ""nearest"",       });     }   }, [items]);    return (     <div className=""container"">       <div className=""x_container"">         {items?.map((a, i) => {           return (             <span key={i}>               {i + 1}. {a}             </span>           );         })}         <div ref={scrollToDiv}></div>       </div>       <button onClick={generateRandomWord}>Add random word</button>     </div>   ); };  export default App;</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.container {   display: flex;   flex-direction: column;   gap: 1rem;   justify-content: center;   align-items: center; }  .x_container {   display: flex;   gap: 8px;   border: 1px solid grey;   width: 300px;   overflow-x: scroll;   padding: 1rem 0.5rem; }  .x_container span {   text-wrap: nowrap; } .x_container::-webkit-scrollbar {   /* display: none; */ }</code></pre>  </div>  </div>  </p> <p>hey if you're looking for something like this: everytime new item adds up to list it should scroll to last item , you can use this</p> <p><a href=""https://codesandbox.io/p/sandbox/gy9qrg"" rel=""nofollow noreferrer"">https://codesandbox.io/p/sandbox/gy9qrg</a></p>",,,true
"{'account_id': 19843492, 'reputation': 625, 'user_id': 14535636, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-5VeafhDxXMk/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuckf79ZHjEfXzhPMzM0eiDS55zVOyw/s96-c/photo.jpg?sz=256', 'display_name': 'Hamed Jimoh', 'link': 'https://stackoverflow.com/users/14535636/hamed-jimoh'}",False,0,1727869615,1727869615,79046583,79046552,CC BY-SA 4.0,"<p>You need to add the hostname and http protocol from Vercel to your CORS <code>allowedOrigins</code> array.</p> <pre><code>const allowedOrigins = [   'https://www.asunatech.com',   'http://localhost:3000', // For local development   'https://askida-backend.vercel.app' ]; </code></pre>",,,true
"{'account_id': 13034209, 'reputation': 111, 'user_id': 9419692, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-K1Z9tOcK9I4/AAAAAAAAAAI/AAAAAAAACZY/c26WXkPTeME/photo.jpg?sz=256', 'display_name': 'Shabuktagin Photon Khan', 'link': 'https://stackoverflow.com/users/9419692/shabuktagin-photon-khan'}",True,0,1727872468,1727871168,79046701,79046546,CC BY-SA 4.0,"<p>I hope it helps.</p> <p>Here is the basic idea</p> <ul> <li><p>There are few palettes</p> </li> <li><p>like primary, secondary etc</p> </li> <li><p>To customize the color</p> <ul> <li>Use the palette property to modify <ul> <li>In the example, I just updated the primary</li> <li>You can do it for secondary, success, error, info, warning</li> <li>You can also add more properties but requires typescript fix, globally</li> </ul> </li> </ul> </li> <li><p>To customize the components globally use components property</p> <ul> <li>MuiButton <ul> <li>Provided an example for this</li> </ul> </li> <li>MuiTable</li> <li>MuiInput etc... <ul> <li>Now think about default colors and design</li> <li>Also care about their variants</li> </ul> </li> </ul> </li> </ul> <pre class=""lang-js prettyprint-override""><code>import { createTheme, ThemeOptions, Theme } from '@mui/material/styles'  const primary = {   main: '#7A5AF8',   light: '#F4F3FF',   dark: '#3E1C96',   contrastText: '#FFFFFF',   50: '#F4F3FF',   100: '#EBE9FE',   200: '#D9D6FE',   300: '#BDB4FE',   400: '#9B8AFB',   500: '#7A5AF8',   600: '#6938EF',   700: '#5925DC',   800: '#4A1FB8',   900: '#3E1C96' }  export const lightTheme: ThemeOptions = createTheme({   palette: {     primary,   },   components: {     MuiButton: {       defaultProps: {         disableRipple: true,         variant: 'contained'       },       styleOverrides: {         root: {           textTransform: 'none',           borderRadius: '6px',           padding: '10px 16px',           fontWeight: 500         }       },       variants: [         {           props: {             variant: 'contained'           },           style: ({ theme }: { theme: Theme }) => ({             paddingTop: theme.spacing(0.75),             paddingBottom: theme.spacing(0.75),           })         }       ]     }   } })  </code></pre> <ul> <li>Make a seperate component to provide the theme</li> </ul> <pre><code>import CssBaseline from '@mui/material/CssBaseline' import { ThemeProvider as MuiThemeProvider } from '@mui/material/styles' import { lightTheme } from 'your-constant-location'   const ThemeProvider = ({ children }) => {    return (      <MuiThemeProvider theme={lightTheme}>        <CssBaseline />        <>{children}</>      </MuiThemeProvider>    ) }   </code></pre> <p>Use this provider in your root app</p> <pre><code>const App = () => {   return (     <ThemeProvider>        ...your app     </ThemeProvider>    ) } </code></pre> <p>Customize Locally</p> <pre><code><Box   sx={{     bgcolor: (theme) => theme.palette.grey[100],     p: 4,     '& span': {       color: 'blue',       fontWeight: 'bold',       fontSize: '20px',     },   }} >   <span>Hello world</span> </Box> </code></pre>",1727872468.0,,true
"{'account_id': 22803523, 'reputation': 45, 'user_id': 16955863, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gg8_ANWaeFVFRpmstQ56MQxoC3VW9qkLoutVSLZRw=k-s256', 'display_name': 'Md. Ta-Seen Fuad Jeem', 'link': 'https://stackoverflow.com/users/16955863/md-ta-seen-fuad-jeem'}",True,1,1727888758,1727888758,79047801,79046311,CC BY-SA 4.0,"<p>In my case I found the solution to this strange problem. After I uninstalled the extension <em>""JavaScript and TypeScript Nightly""</em> from my VS Code everything was fine. Thank you so much guys</p> <p><a href=""https://i.sstatic.net/QhT4QBnZ.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/QhT4QBnZ.png"" alt=""JavaScript and TypeScript Nightly Vs Code extension"" /></a></p>",,,true
"{'account_id': 20236328, 'reputation': 21, 'user_id': 14841397, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/0fa0b20e2f206db48f74f6f6af0ab5d6?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'steve02x', 'link': 'https://stackoverflow.com/users/14841397/steve02x'}",False,1,1727876806,1727876806,79047042,79046311,CC BY-SA 4.0,"<p>If I'm change the TypeScript Version to 5.6.2 (my workspace version & current stable) in VSCode the error is gone... When I go back to TS 5.7.0-dev.20241001 the umd global error comes back.</p> <p>I would recommend to use a stable ts version, until its supported with newer ones.</p>",,,true
"{'account_id': 35585589, 'reputation': 1, 'user_id': 27291572, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/cacf99864bc9ab918bbff80a585e716b?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'anubhav adarsh', 'link': 'https://stackoverflow.com/users/27291572/anubhav-adarsh'}",False,0,1727867574,1727867574,79046452,79046237,CC BY-SA 4.0,<p>Issue resolved by moving the alias inside ./tsconfig.app.json</p>,,,true
"{'account_id': 16610898, 'reputation': 512, 'user_id': 12003949, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/E4jEM.jpg?s=256', 'display_name': 'Iorweth333', 'link': 'https://stackoverflow.com/users/12003949/iorweth333'}",True,0,1727861648,1727861648,79046149,79046015,CC BY-SA 4.0,"<p>If you could move the logic from <code>onClose</code> handler then you could use <code>hysteresis</code> prop:</p> <blockquote> <p>hysteresis (number, 0.52 by default) affects how far the drawer must be opened/closed to change its state. Specified as percent (0-1) of the width of the drawer</p> </blockquote> <pre class=""lang-js prettyprint-override""><code><SwipeableDrawer   hysteresis={logic ? undefined : 1}   //... </code></pre> <p>Another simple but not very elegant solution would be to let it close and then reopen it:</p> <pre class=""lang-js prettyprint-override""><code>    onClose={() => {       setOpen(false)       if (!logic) {         setTimeout(() => setOpen(true), 0);       }     }} </code></pre> <p>I investigated how the drawer is engineered. There is a <code>Paper</code> comonent in it which has CSS <code>transform</code> style applied to it. It's <code>translate(0px)</code> when the drawer is fully open and it changes as you swipe the drawer. Perhaps you could somehow get a reference to it and reset its styles, but that would make you reliant on the implementation of <code>SwipeableDrawer</code> component.</p>",,,true
"{'account_id': 2371392, 'reputation': 43243, 'user_id': 2075944, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/CGDE9.png?s=256', 'display_name': 'phry', 'link': 'https://stackoverflow.com/users/2075944/phry'}",True,0,1727943616,1727943616,79049679,79045981,CC BY-SA 4.0,"<p>This could happen if your bundler somehow bundles <code>libs/store</code> twice in different bundles.</p> <p>If that happens, you could get around that by doing something like</p> <pre><code>window[Symbol.for(""ReduxStore"")] = window[Symbol.for(""ReduxStore"")] || configureStore(...)  export const store = window[Symbol.for(""ReduxStore"")] </code></pre> <p>in your <code>libs/store</code></p>",,,true
"{'account_id': 21851293, 'reputation': 11, 'user_id': 16143336, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/V0kvCZkt.jpg?s=256', 'display_name': 'Sunil Sharma', 'link': 'https://stackoverflow.com/users/16143336/sunil-sharma'}",False,0,1727867842,1727867842,79046463,79045293,CC BY-SA 4.0,"<pre><code>const [isClient, setIsClient] = useState(false);  useEffect(() => {   setIsClient(true); }, []);  if (!isClient) {   return <Loader2 className=""animate-spin"" />; } </code></pre> <p>In <code>AppointmentDocument</code>, <code>Loader2</code> component is being returned first time since initial state of <code>isClient</code> is false which causes the error.</p> <p>if you need the condition for whatever reason then move it to the <code>PDFDownload</code> component and conditionally render <code>BlobProvider</code>.</p>",,,true
"{'account_id': 29536735, 'reputation': 1, 'user_id': 22636213, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/0bd377d7a965353332b7a7759e42e881?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Om Srivastava', 'link': 'https://stackoverflow.com/users/22636213/om-srivastava'}",False,0,1728288256,1727881232,79047355,79045213,CC BY-SA 4.0,"<h1>The Theory</h1> <p>DOM Manipulation, as you know, is an <strong>expensive process</strong>. The reflow, the repaint, executing the scripts, all of that takes a toll on the browser. React is efficient exactly for the optimized the <strong>diffing</strong> and the <strong>reconciliation</strong> algorithms.</p> <p>React maintains a <strong>lightweight virtual DOM</strong>, which is nothing but <strong>just a JavaScript object</strong>. It compares the differences between the new VDOM and the current one every time it's required to re-render the component.</p> <p>Think of it this way. What makes React re-render its components? Any changes in <strong>state variable</strong> or <strong>props</strong> values. So, React does not need to update the whole DOM tree. It updates only what is necessary. In other words, only the elements that are <strong>dependent</strong> on the props data or the state variable.</p> <blockquote> <p><img src=""https://i.sstatic.net/8MHrh0aT.gif"" alt=""Check this demonstration from React's original docs."" /></p> </blockquote> <p>Now, it's not like after transpilation React turns into regular JavaScript; but rather, React itself is just <strong>a bunch of functions and algorithms written in JavaScript</strong>. It's the JSX codes that get transpiled into a React element (which is again just a JS object). So, when you write React code like setState or useState, React internally manages the state and invokes its algorithms to compute changes and re-render the component, allowing partial updates to the real DOM.</p> <p>At runtime, the browser still executes this JavaScript logic, which includes React's diffing algorithm to figure out which DOM elements need to change. So, itâs not that the browser suddenly âknowsâ the code came from React; instead, itâs Reactâs efficient DOM manipulation logic embedded in the JavaScript code that ensures partial updates.</p> <blockquote> <p><img src=""https://i.sstatic.net/24rAkhM6.png"" alt=""Check React's language composition. Most of React is written in Js and Ts. Meanwhile, the JSX compiler is written in Rust."" /></p> </blockquote> <h1>Let's implement it!</h1> <h3>A skeleton HTML page that will be populated using JavaScript</h3> <pre class=""lang-html prettyprint-override""><code><!DOCTYPE html> <html lang=""en"">   <head>     <meta charset=""UTF-8"" />     <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />     <title>Imitating React</title>   </head>   <body>     <button id=""content""></button> <button id=""element""></button>     <div id=""root""></div>   </body> </html>  </code></pre> <h3>Let's create a React-like functional component in plain JavaScript</h3> <pre class=""lang-js prettyprint-override""><code><script>   const btn = document.querySelector(""#content"");   btn.textContent = ""Change Content"";   btn.setAttribute(""onClick"", ""changeElement(true)"");    const btn2 = document.querySelector(""#element"");   btn2.textContent = ""Change Element"";   btn2.setAttribute(""onClick"", ""changeElement(false)"");     // React-like functional component   const App = () => {         const div = document.createElement('main');         div.setAttribute(""id"", ""main"");         const article = document.createElement(""article"");         article.setAttribute(""class"", ""post"");         article.setAttribute(""id"", `post-1`);          const h2 = document.createElement(""h2"");         h2.textContent = `Common Raven`;         article.appendChild(h2);          const p = document.createElement(""p"");         p.textContent = `This is a bird.`;         article.appendChild(p);          div.appendChild(article);         return div;    };    // rendering the App in root   const root = document.getElementById(""root"");   root.appendChild(App()); </script> </code></pre> <p>The React <strong>Diffing algorthim</strong> works in two ways. If the updated element in the new VDOM is of the same type, it only changes the content of the element. Else it replaces the old element with a new one.</p> <pre class=""lang-js prettyprint-override""><code><script>     const changeElement = (isElementSameType) => {         // Diffing Algorithm Running to determine the difference         if(isElementSameType)            updateContent();         else           updateElement();    }; </script> </code></pre> <h2>Try it out yourself</h2> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const btn = document.querySelector(""#content""); btn.textContent = ""Change Content""; btn.setAttribute(""onClick"", ""changeElement(true)"");  const btn2 = document.querySelector(""#element""); btn2.textContent = ""Change Element""; btn2.setAttribute(""onClick"", ""changeElement(false)"");  // React-like functional component const App = (elem) => {   const div = document.createElement('main');   div.setAttribute(""id"", ""main"");   const article = document.createElement(""article"");   article.setAttribute(""class"", ""post"");   article.setAttribute(""id"", `post-1`);    const h2 = document.createElement(""h2"");   h2.textContent = `Common Raven`;   article.appendChild(h2);    const p = document.createElement(""p"");   p.textContent = `This is a bird.`;   article.appendChild(p);    div.appendChild(article);    return div; };   const root = document.getElementById(""root""); root.appendChild(App('div'));  const updateContent = () => {   const Birds = [     ""American Robin"",     ""Blue Jay"",     ""Northern Cardinal"",     ""Black-capped Chickadee"",     ""House Sparrow"",     ""European Starling"",     ""American Goldfinch"",     ""Downy Woodpecker"",     ""Red-winged Blackbird"",     ""Mourning Dove"",   ];    document.getElementById(""post-1"").children[0].textContent =     Birds[Math.floor(Math.random() * 10)]; };  const updateElement = () => {   randomElements = [     ""h1"",     ""h2"",     ""h3"",     ""p""   ];   child = document.getElementById(""post-1"").children[0];   newChild = document.createElement(     randomElements[Math.floor(Math.random() * 4)]);   newChild.textContent = child.textContent;   child.parentNode.replaceChild(newChild, child); };  const changeElement = (isElementSameType) => {   // Diffing Algorithm Running to find the difference    if (isElementSameType)     updateContent();   else     updateElement();  };</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><!DOCTYPE html> <html lang=""en"">  <head>   <meta charset=""UTF-8"" />   <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />   <title>Imitating React</title> </head>  <body>   <button id=""content""></button>   <button id=""element""></button>   <div id=""root""></div> </body>  </html></code></pre>  </div>  </div>  </p> <p>If you want to make sure that only the particular element is changing and not the whole tree, Inspect Element on that element and check the elements that blink when you click any of those buttons. <a href=""https://i.sstatic.net/cWHummpg.png"" rel=""nofollow noreferrer"">Partial Rendering in browser</a></p>",1728288256.0,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",False,-1,1728023666,1728019910,79052933,79045213,CC BY-SA 4.0,"<p>Perhaps the exact point which requires clarification may be this :</p> <p><strong>The difference between :</strong></p> <p>a) A regular web page</p> <p>b) A web page in a SPA - single page application</p> <p>As we know, a regular web page is essentially an HTML file optionally including JavaScript code for interactivity.</p> <p>We also know, SPA is essentially an application in a Browser which shows web contents with respect to user interactions, it shows everything in the same single HTML page, and SPA does its work using JavaScript code alone, it cannot use anything other than JavaScript for this purpose since it runs in a Web browser. Therefore A web page in a SPA is the work of some JavaScript code.</p> <p>From a userâs point of view, apparently both are the same. Still from a technical or run-time system point of view, both are different. Now if we figure out the run-time difference, it may be the answer to the question. The fundamental difference is the display or rendering logic in SPA. This rendering logic is not there in a regular web page.</p> <p>This rendering logic should not be necessarily provided by a third party as it is in the case of a React application. This logic can be developed as part of the application code itself. And everything can be seen as monolithic code. However, when it comes to reusability or sharing the same rendering logic in multiple applications, it becomes natural to see that part of the code alone is separated as a library or a framework. However at runtime, it becomes part of the application, and runs as a single system.</p> <p><em>So answering the question - So how does the code only update the parts of the DOM that need updating?</em></p> <p><em><strong>The answer is the runtime code knows it. It is a complete set of code, consisting of both - the application logic as well as rendering logic. It knows since it has the extra code or logic in it. This extra code is in JavaScript itself.</strong></em></p> <p>Now JSX is not a need of a run-time system, rather it is a need of a developmental system. JSX makes programming more and more declarative in nature. Therefore once the developmental phase is over, and the run-time system has been built, there is only JavaScript code - doing the intended job in Browsers. And it is delivered to Browser and it runs there as a SPA powered by JavaScript alone.</p>",1728023666.0,,true
"{'account_id': 4687875, 'reputation': 83797, 'user_id': 3794812, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/91da5cf982069e22d3bd0b514dfb45e2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Nicholas Tower', 'link': 'https://stackoverflow.com/users/3794812/nicholas-tower'}",False,2,1727992383,1727840438,79045286,79045213,CC BY-SA 4.0,"<p>When you do something like this:</p> <pre><code><div>Hello World</div> </code></pre> <p>It gets transpiled to something like this:</p> <pre><code>import { jsx } from 'react/jsx-runtime'; // ... jsx('div', { children: ""Hello World"" }); </code></pre> <p>That <code>jsx</code> function returns a small object which looks roughly like this:</p> <pre><code>{   type: 'div',   key: null,   props: {     children: ""Hello World""   } } </code></pre> <p>In more complicated examples the <code>children</code> property can be (and often is) another element, which could then have children of its own, and so on. So as your components render you are building up a bunch of these objects in a tree.</p> <p>To figure out what has changed, react compares the tree from the previous render with the new tree. For a given element, react first looks at the type and key. If either one of those has changed, then this is a new element; it must be unmounted and a new one mounted in its place. If the type and key match, it next checks the props. If the props have changed, then it knows it needs to update that prop.</p> <p>After that it repeats the comparison for the children of the element, then the children's children, etc. At the end it has built up a list of changes, and it then pushes those changes (if any) to the DOM, using built in browser functions like <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild"" rel=""nofollow noreferrer"">appendChild</a></p>",1727992383.0,,true
"{'account_id': 17021750, 'reputation': 40, 'user_id': 12314122, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AAuE7mCrIEwrJY8XbaKYwHwIPs-0cKCFstbMH5JwLScpTA=k-s256', 'display_name': 'ClockworkOnion', 'link': 'https://stackoverflow.com/users/12314122/clockworkonion'}",True,0,1728007246,1728005958,79052626,79045211,CC BY-SA 4.0,"<p>Well, after nearly despairing and trying everything that worked for others and remotely resembled my problem, I stumbled upon a solution by chance. In <code>resources/js/bootstrap.js</code> I added these two lines:</p> <pre class=""lang-js prettyprint-override""><code>window.axios.defaults.withCredentials = true;  window.axios.defaults.withXSRFToken = true; </code></pre> <p>Even though examining the Network requests in the browser, the XSRF token now seemed to be present, perhaps it was nevertheless not getting transmitted correctly, or something was wrong with it.</p> <p>Here's where I found the solution that worked for me: <a href=""https://laracasts.com/discuss/channels/inertia/laravel-10-inertia-error-419-on-production"" rel=""nofollow noreferrer"">https://laracasts.com/discuss/channels/inertia/laravel-10-inertia-error-419-on-production</a></p> <p>The user JussiManisto also offered a possible explanation in there, which I'm going to quote here.</p> <blockquote> <p>Axios received a CVE in October regarding the withCredentials option. As a result the behavior of the option was changed so that it no longer automatically adds the XSRF header to cross-origin requests. They later added the withXSRFToken option to mimic the old behavior.</p> <p>Do note that adding withXSRFToken adds the token to all requests. This is what the CVE was about. So use different Axios settings if you're sending requests to 3rd party APIs and don't want to leak your XSRF token.</p> </blockquote>",1728007246.0,,true
"{'account_id': 7084284, 'reputation': 41854, 'user_id': 5421539, 'user_type': 'registered', 'accept_rate': 66, 'profile_image': 'https://www.gravatar.com/avatar/e7d7d3f1b775287a7a9eaed48446380c?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Joey Yi Zhao', 'link': 'https://stackoverflow.com/users/5421539/joey-yi-zhao'}",False,0,1729119234,1729119234,79096024,79045129,CC BY-SA 4.0,<p>Found the issue. The cache doesn't work when running the server in my local computer but it works fine when I deploy to cloud environment <code>vercel</code>. Probably nextjs's cache depends on cloud environment somehow.</p>,,,true
"{'account_id': 13494249, 'reputation': 3, 'user_id': 9735558, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-CyE4S4UTG7g/AAAAAAAAAAI/AAAAAAAAABU/BKgDyHadmPw/photo.jpg?sz=256', 'display_name': 'Michael Zetterberg', 'link': 'https://stackoverflow.com/users/9735558/michael-zetterberg'}",False,0,1728634398,1728634398,79077311,79045129,CC BY-SA 4.0,"<p>I cannot comment yet, but to clarify Josh Fradley's answer:</p> <p>The problem with your code is that it is calling <code>unstable_cache()</code> every time you call <code>fetchProductWithCache</code>.  The code is creating a new instance of the cached function for each call to <code>fetchProductWithCache</code>, effectively creating a new independent cache entry but for the same key. This is very prone to race conditions in regards to the cached data returned. It is just plain incorrect.</p> <p>The correct way is to do what Josh Fradley wrote. Declare your cached function once, meaning only call <code>unstable_cache()</code> once for the function you want to cache. Then call that function with your argument for country.</p> <p>So replace your declaration of <code>fetchProductWithCache</code> with his and it should work.</p> <p>BTW, just a heads up. You cannot mix time based revalidation with tags.</p>",,,true
"{'account_id': 167314, 'reputation': 563, 'user_id': 392041, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://www.gravatar.com/avatar/e5de98e48a5a3a92f3bba3f138c6189d?s=256&d=identicon&r=PG', 'display_name': 'Josh Fradley', 'link': 'https://stackoverflow.com/users/392041/josh-fradley'}",False,0,1728153705,1728153705,79057713,79045129,CC BY-SA 4.0,"<p>The unstable_cach should be used to wrap the whole function (fetchProductWithCache)</p> <pre><code>export const fetchProductWithCache = unstable_cache(     async (country: string) => {        return fetchProductWithDelay(country)     },     ['product'],     { revalidate: 10, tags: ['product'] }, );  </code></pre>",,,true
"{'account_id': 27769827, 'reputation': 108, 'user_id': 21200312, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/9gzu7.jpg?s=256', 'display_name': 'Antonio', 'link': 'https://stackoverflow.com/users/21200312/antonio'}",False,0,1727863025,1727863025,79046209,79045034,CC BY-SA 4.0,"<p>Insert the HabitList into the App computer. Also, currently, the function inside the useSelector doesn't return anything. You should remove those parentheses. Here's the updated the code</p> <p>habits-list.tsx</p> <pre><code>import React from ""react""; import { useSelector } from ""react-redux""; import { RootState } from ""../store/store""; import { Box } from ""@mui/material"";  const HabitList: React.FC = () => {   const { habits } = useSelector((state: RootState) => state.habits);   return <Box>{console.log(""habits"", habits)}</Box>; };  export default HabitList; </code></pre> <p>App.tsx</p> <pre><code>import ""./styles.css""; import { Provider } from ""react-redux""; import store from ""./store/store""; import { Container, Typography } from ""@mui/material""; import AddHabitForm from ""./components/add-habit-form""; import HabitList from ""./components/habits-list"";  export default function App() {   return (     <Provider store={store}>       <Container maxWidth=""md"">         <Typography component=""h1"" variant=""h2"" align=""center"">           Habit Tracker           <AddHabitForm />           <HabitList/>          </Typography>       </Container>     </Provider>   ); } </code></pre>",,,true
"{'account_id': 34865644, 'reputation': 143, 'user_id': 26832816, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/dfb9f6aa1f687f0e5cadd7b3974fd382?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Anthony S', 'link': 'https://stackoverflow.com/users/26832816/anthony-s'}",False,0,1727835017,1727835017,79045166,79045034,CC BY-SA 4.0,"<p>This is because you haven't included the HabbitList component in the App.</p> <p>Make the following changes to your app.tsx;</p> <p>First import the component.</p> <pre><code>import HabitList from ""./components/habits-list""; </code></pre> <p>And then include that component in the <code><App></code> just below the <code><AddHabitForm /></code></p> <pre><code>  <AddHabitForm />   <HabitList/>  </code></pre>",,,true
"{'account_id': 14588149, 'reputation': 1175, 'user_id': 10536232, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-esWCOSge7t0/AAAAAAAAAAI/AAAAAAAAAAs/EcUKJynKuW8/photo.jpg?sz=256', 'display_name': 'Scott Z', 'link': 'https://stackoverflow.com/users/10536232/scott-z'}",True,2,1727831137,1727831137,79045097,79044745,CC BY-SA 4.0,"<p>Due to how closures work in JS, the callback functions for eventlisteners as well as timeouts and intervals will hold onto the original value of state even if state has subsequently been updated.  Stale state in evenlistener/timeout/interval callbacks is a common issue with react.</p> <p>With event listeners the only way for the callback function to have a fresh value of state is to remove then re-add the event listener when state updates.</p> <p>This pattern here is how we can make sure an event listener always has the current value for state.</p> <pre><code>const [myValue, setMyValue] = useState(""hello"")  useEffect(()=>{   function handleEvent(){   console.log(myValue)   } document.addEventListener(""onScroll"", handleEvent) return()=>{   document.revmoveEventListener(""onScroll"", handleEvent)   } },[myValue])  </code></pre> <p>When the component mounts the event listener is added.  Then every time <code>myValue</code> updates the event listener is remove, then re-added with the fresh state.</p> <p>So, in the code you have provided we can do something like this.</p> <pre><code>import { useState, useEffect, useRef } from 'react';  const OtherComponent = ({ locked }) => {   return (     <div style={{ position: 'fixed' }}>{locked ? 'Locked' : 'Unlocked'}</div>   ); };  const PageComponent = () => {   const [locked, setLocked] = useState(false);   const mainRef = useRef(null);    useEffect(() => {     document.addEventListener('scroll', scrollListener, { passive: true });   }, []);    const scrollListener = () => {     document.removeEventListener('scroll', scrollListener);     setLocked(true);   };    useEffect(() => {     if (locked) {       mainRef.current.addEventListener('wheel', wheelEventListener, {         passive: true,       });     }     return () => {       mainRef.current.removeEventListener('wheel', wheelEventListener);     };   }, [locked]);    const wheelEventListener = () => {     // locked always === false here, expecting true     console.log('locked: ', locked);   };    return (     <div ref={mainRef} style={{ height: '5000px' }}>       <OtherComponent locked={locked} />     </div>   ); };  export default PageComponent; </code></pre> <p>In this implementation, when <code>locked</code> changes to false we have a <code>useEffect</code> that will add the <code>wheel</code> event listener.  Then if locked changes back to <code>true</code> we will remove the event listener.</p> <p>In your scenario we are only listening to a boolean value, so our add/remove logic is simple.  But if state was a another sort of primitive, or an array/object then the logic for when to add the event listener might be a bit more complex.</p>",,,true
"{'account_id': 14588149, 'reputation': 1175, 'user_id': 10536232, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-esWCOSge7t0/AAAAAAAAAAI/AAAAAAAAAAs/EcUKJynKuW8/photo.jpg?sz=256', 'display_name': 'Scott Z', 'link': 'https://stackoverflow.com/users/10536232/scott-z'}",True,1,1727832569,1727814310,79044647,79044597,CC BY-SA 4.0,"<p>With react, if you ever need to call <code>window.reload</code> you're doing it wrong.</p> <p>Anytime a value returned from a <code>useState</code> hook is updated the page will rerender and anywhere that value is consumed will be updated.</p> <p>Take this simple component for example.</p> <pre><code>function Counter(){ const [count, setCount] = useState(0)  return <button onClick={()=> setCount(prev=> prev+1)}>Click Count: {count}</button> } </code></pre> <p>Anytime you click the button to update state, react will re-render the component and the <code>count</code> of the button will update on the page.   The same is true for all state.  So if you have something like this</p> <pre><code>const [cartData, setCartData] = useState([]) </code></pre> <p>anytime you call <code>setCartData((pre => ([...pre, ....your new data....]))</code></p> <p>you can consume that state in your JSX like so and the page will update as you add or remove values by calling <code>setCartData</code></p> <pre><code><div>Cart Count {cartData.length}</div> </code></pre> <p>Persisting state in local storage is a very common pattern, many people write a custom hook that synchronizes app state on initial render by reading from localStorage.  Then everytime state updates it also writes to localStorage.</p> <p>You've provided a lot of code, some of which already applies the state subscription strategy I outlined above.  I can only assume that you have copied this code from somewhere else and are attempting to add functionality.  I would start with a small app and learn the basics of useState and useEffect and experiment with how they work. Causing the page to re-render by subscribing to state is the most basic concept of react.</p> <h2>Edit</h2> <p>here is a link to a playground demonstrating a basic app that has state lifted up to a common parent so two sibling components can read a common state value.</p> <p><a href=""https://stackblitz.com/edit/vitejs-vite-uube3y?file=src%2Fassets%2Fbook-list.tsx"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/vitejs-vite-uube3y?file=src%2Fassets%2Fbook-list.tsx</a></p> <p>Here is an example of a parent component that shares state with two sibling components.  <code>App</code> constains the state, and both <code>NavBar</code> and <code>BookList</code> consume the state.   And <code>BookList</code> can also update the state.</p> <pre><code>import { useState } from 'react'; import './App.css'; import NavBar from './assets/nav-bar'; import BookList, { Cart } from './assets/book-list';  function App() {   const [cart, setCart] = useState<Cart[]>([]);    return (     <div>       <NavBar cart={cart} />       <BookList cart={cart} setCart={setCart} />     </div>   ); }  export default App; </code></pre> <p>Knowing when to lift state up, verses when to reach for a global state manager is a difficult one.  I usually try to lift state up first, but often that can lead to a lot of prop drilling to get that state back down to the components that need to consume it.  My rule of thump is if I'm prop drilling more than 2 layers, I'll start thinking about state management.  I use both the react context api and zustand.</p>",1727832569.0,,true
"{'account_id': 21851293, 'reputation': 11, 'user_id': 16143336, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/V0kvCZkt.jpg?s=256', 'display_name': 'Sunil Sharma', 'link': 'https://stackoverflow.com/users/16143336/sunil-sharma'}",False,0,1727870030,1727870030,79046625,79044550,CC BY-SA 4.0,"<pre><code>import * as pdfjs from ""pdfjs-dist/webpack.mjs""; </code></pre> <p>Try importing from <code>pdfjs-dist/webpack.mjs</code></p> <p>And for typing you can declare module in <code>.d.ts</code> file. Code from my <code>index.d.ts</code> file:</p> <pre><code>declare module ""pdfjs-dist/webpack.mjs"" {   export * from ""pdfjs-dist""; } </code></pre>",,,true
"{'account_id': 21408326, 'reputation': 149, 'user_id': 15769109, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/a4c3bdd88a0b6dcb233be422af61b98f?s=256&d=identicon&r=PG', 'display_name': 'Kim Minh Tháº¯ng', 'link': 'https://stackoverflow.com/users/15769109/kim-minh-th%e1%ba%afng'}",False,0,1727849662,1727849662,79045549,79044550,CC BY-SA 4.0,"<p>You can try grant the <code>workerSrc</code> by <code>//mozilla.github.io/pdf.js/build/pdf.worker.mjs</code>. Please refer to this document: <a href=""https://mozilla.github.io/pdf.js/examples/"" rel=""nofollow noreferrer"">https://mozilla.github.io/pdf.js/examples/</a></p>",,,true
"{'account_id': 36124407, 'reputation': 1, 'user_id': 27577052, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/33288bc97f7635aacf4d614a0abf5fbd?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'user27577052', 'link': 'https://stackoverflow.com/users/27577052/user27577052'}",False,0,1728831940,1728831940,79083459,79044474,CC BY-SA 4.0,"<p>I found the issue was due to improper ISOString date being passed caused the Moment library to fail parsing the data correctly. Another issue I found is that the date Moment was creating didn't work correctly on Safari because of the single Day and Month value doesn't work on Safari, has to be a two digit value: ex. 2024-01-01 and not 2024-1-1.</p>",,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",False,-2,1728121549,1728121549,79056767,79044474,CC BY-SA 4.0,"<p>The solution proposed and demoed below assumes that the number of timezones to handle is small enough to be either hard-coded or managed with a small list. This assumption is sought in favour of the simplicity and brevity of the solution.</p> <p>Request to seek alternatives in case this assumption does not suit your needs. However it may help you if you go through the answering part at least. It mentions about the following topics. Perhaps it may benefit you.</p> <p><strong>Answering part:</strong></p> <ol> <li>Date parser function</li> <li>Time zones</li> <li>Timezone offset</li> <li>ISO 8601 date time string format.</li> </ol> <p>It is very easy to use the Date constructor in the JavaScript standard library.</p> <p>Let us take a sample date string below: The below statement returns a date in UTC timezone. It gives UTC time since there is no timezone offset specified in the date string passed into it.</p> <pre><code>const date = new Date('2024-10-04'); console.log(date); // 2024-10-04T00:00:00.000Z UTC time </code></pre> <p>Now let us see another case with the same date string, but this time with a timezone offset. The timezone offset is a signed one with the format HH:mm. The list of all is available in this Wiki page <a href=""https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"" rel=""nofollow noreferrer"">List of tz database time zones</a>.</p> <p>Let us take the timezone America/New_York. This timezone is trailing UTC by 5 hours. Therefore the below date time string shows the local time in the timezone America/New_York. When the local time in America/New_York is '2024-10-04T00:00â, the equivalent UTC time is 2024-10-04T05:00:00.000Z which is the value of the date created below.</p> <pre><code>const date = new Date('2024-10-04T00:00-05:00'); console.log(date); // 2024-10-04T05:00:00.000Z UTC time equivalent to the local time in New York. </code></pre> <p><em>In plain words, when the local time in New-york is 2024, Oct, 5 12 AM, start of the day, the equivalent time in UTC is the same except it has passed 5 hours of the day since New York timezone trails with UTC by 5 hours. So the solution proposed over here is just append the string âT00:00-05:30â to the date string. This will result in a new date based on the local time in America/New_York.</em> This has been detailed here in the section <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#date_time_string_format"" rel=""nofollow noreferrer"">ISO 8601 date time string format</a></p> <p><strong>A Sample code</strong></p> <pre><code>const changeDate = (dateString, timezoneOffset = 'Z') => {   return new Date(dateString + 'T00:00:00' + timezoneOffset); };  const date1 = changeDate('2024-10-04'); const date2 = changeDate('2024-10-04', '-05:00'); // NewYork timezone offset const date3 = changeDate('invalid date string');  console.log(date1); // 2024-10-04T00:00:00.000Z UTC time console.log(date2); // 2024-10-04T05:00:00.000Z UTC time  console.log(date3); // Invalid Date </code></pre>",,,true
"{'account_id': 129540, 'reputation': 217665, 'user_id': 328193, 'user_type': 'registered', 'accept_rate': 91, 'profile_image': 'https://i.sstatic.net/FnwU5.jpg?s=256', 'display_name': 'David', 'link': 'https://stackoverflow.com/users/328193/david'}",True,1,1727799274,1727799274,79043951,79043892,CC BY-SA 4.0,"<blockquote> <p>it still submits even when the information is wrong</p> </blockquote> <p><em>Technically</em> no it doesn't.  What <em>does</em> happen is the <code>handleSubmit</code> function is called.  But it's not being called by the form submitting.  It's being called by clicking the button:</p> <pre><code>onClick={(e) => handleSubmit(e)} </code></pre> <p>Validation doesn't prevent the user from clicking a button.</p> <p>The form is already calling <code>handleSubmit</code> when it's submitted:</p> <pre><code><form onSubmit={handleSubmit} className='form'> </code></pre> <p>There's no need to call it twice.  Just remove that <code>onClick</code> handler from the button.  (And remove <code>type=""button""</code> so the button will submit the form.)</p>",,,true
"{'account_id': 20463653, 'reputation': 16270, 'user_id': 15015675, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ff211bb4861cad48fa31f72b1ac9597b?s=256&d=identicon&r=PG', 'display_name': 'herrstrietzel', 'link': 'https://stackoverflow.com/users/15015675/herrstrietzel'}",False,0,1727831729,1727831729,79045116,79043889,CC BY-SA 4.0,"<p>As explained by <a href=""https://stackoverflow.com/questions/79043889/how-to-ensure-consistent-text-rendering-between-split-and-non-split-text/79044255#79044255"">ThatNerd</a> the spacing differences are caused by <a href=""https://en.wikipedia.org/wiki/Kerning"" rel=""nofollow noreferrer"">kerning</a> (adding positive or negative offsets based on defined character sequences like Yo).</p> <h3>Normalize to unkerned</h3> <p>If you can live without kerning in the initial/unseparated state of the text  just apply CSS <a href=""https://developer.mozilla.org/en-US/docs/Web/CSS/font-kerning"" rel=""nofollow noreferrer""><code>font-kerning: none</code></a>.</p> <h3>kerning across multiple text nodes</h3> <p>To my own surprise, modern browsers are pretty smart at applying kerning to multiple elements, as long as they have an <code>inline</code> display context. (Whereas splitting text nodes usually breaks ligatures â that's why I'm surprised)</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-css lang-css prettyprint-override""><code>@import 'https://fonts.googleapis.com/css2?family=Fira+Sans:ital,wght@0,400;0,700;1,400;1,700&display=swap';  body{   font-family: 'Fira Sans';   font-size:5em; }  .inl-blc{   display:inline-block;   outline: 1px solid red; }  strong{   margin:0;   font-size:0.75rem; } p{   margin:0; }  .kerning{     font-kerning: normal; }  .nokerning{     font-kerning: none; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><p class=""kerning""><span class=""inl-blc"">Yo</span> <strong>Kerning applied</strong></p> <p class=""nokerning""><span class=""inl-blc"">Yo</span> <strong>No Kerning applied</strong></p> <p class=""kerning""><span class=""inl-blc""><span class=""Y"">Y</span><span class=""o"">o</span></span> <strong>Split â kerning across spans</strong></p></code></pre>  </div>  </div>  </p> <p>In other words: for simple animations like a typewriter-effect (showing characters progressively) it might be enough to ensure all spans are in inline display mode.</p> <h3>Emulate kerning?</h3> <p>Unfortunately, once you apply another display value e.g <code>inline-block</code> or <code>inline-flex</code> â allowing individual margins or transformations â browsers will omit horizontal letter-spacing adjustments as defined by the font's kerning pairs.<br /> Theoretically, you could write your custom kerning logic e.g by retrieving the font's kerning data and writing your own CSS classes for certain character combinations/kerning-pairs. But frankly, this might be an overkill ...</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-css lang-css prettyprint-override""><code>@import 'https://fonts.googleapis.com/css2?family=Fira+Sans:ital,wght@0,400;0,700;1,400;1,700&display=swap';    body{   font-family: 'Fira Sans';   font-size:10em; }  .inl-blc{   display:inline-block;   outline: 1px solid red; }  .inl-flx{   display:inline-flex;   outline: 1px solid red; }  strong{   margin:0;   font-size:0.75rem; } p{   margin:0; }  .kerning{     font-kerning: normal; }  .nokerning{     font-kerning: none; }  /* CSS kerning pair */ .Y+.o{   margin-left:-0.06em; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><p class=""kerning""><span class=""inl-blc"">Yo</span> <strong>Kerning applied</strong></p> <p class=""kerning""><span class=""inl-flx""><span>Y</span><span>o</span></span> <strong>Inline-flex â no kerning across spans</strong></p> <p class=""kerning""><span class=""inl-blc"">Yo</span> <strong>Kerning applied</strong></p> <p class=""kerning""><span class=""inl-flx""><span class=""Y"">Y</span><span class=""o"">o</span></span> <strong>Inline-flex â manual kerning across spans</strong></p></code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 23879074, 'reputation': 155, 'user_id': 17879981, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/o3CeI.jpg?s=256', 'display_name': 'ThatNerd', 'link': 'https://stackoverflow.com/users/17879981/thatnerd'}",True,1,1727805941,1727805941,79044255,79043889,CC BY-SA 4.0,"<p>There isn't any extra width in the splitted text.</p> <p>The lack of the gap between the Y and the o in the non-splitted text is a result of kerning pairs in the font you are using. If you set a different font (through <code>font-mono</code> or similar), the rendering will become consistent between both versions.</p> <p>The horizontal spacing is disrupted in the splitted version because you set <code>[&>*]:inline-flex</code> on the individual letter spans, which forces each to be an individual container and prevents the kerning pairing from taking place. You can see this by either removing <code>[&>*]:inline-flex</code>, or by splitting on every second letter (which causes the first span to contain <code>Yo</code> together), either of which allow the kerning to happen properly (removing the extra space).</p> <p>Possible fixes - which is correct will depend on the context you are using this in:</p> <ul> <li>remove <code>[&>*]:inline-flex</code> - not sure why it's necessary here</li> <li>use a different font without kerning pairs</li> </ul>",,,true
"{'account_id': 31842489, 'reputation': 33, 'user_id': 24655765, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/pBwvtqHf.png?s=256', 'display_name': 'Abdelkader Boukhalfoun', 'link': 'https://stackoverflow.com/users/24655765/abdelkader-boukhalfoun'}",False,1,1727821143,1727821143,79044893,79043745,CC BY-SA 4.0,"<p>Make sure you've registered the italic font correctly in <code>react-pdf</code></p> <pre><code>import { Font } from '@react-pdf/renderer'; Font.register({   family: 'Roboto',   fonts: [     { src: 'path/to/Roboto-Regular.ttf' },     { src: 'path/to/Roboto-Bold.ttf', fontWeight: 'bold' },     { src: 'path/to/Roboto-Italic.ttf', fontStyle: 'italic' },   ], }); </code></pre> <p>Then apply:</p> <pre><code>Inspection: {   top: 15,   left: 55,   fontFamily: ""Roboto"",   fontStyle: ""italic"",   fontSize: 7,   fontWeight: 'bold' } </code></pre>",,,true
"{'account_id': 6313442, 'reputation': 42039, 'user_id': 5625547, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/oqCND.jpg?s=256', 'display_name': '0stone0', 'link': 'https://stackoverflow.com/users/5625547/0stone0'}",False,2,1727948699,1727793086,79043598,79043574,CC BY-SA 4.0,"<p>You can <code>map()</code> over the <code>props.children</code>, then use the <code>index</code> from <code>map</code> to pass along to the Child using <code>cloneElement</code>.</p> <p>I've incremented the <code>index</code> by <code>1</code> since your example does not start from <code>0</code>.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const App = () => (     <PagesContainer>         <Page />         <Page />         <Page />         <Page />     </PagesContainer> )  const PagesContainer = (props) => props.children.map(     (Child, index) => React.cloneElement(Child, { index: index + 1 }) );  const Page = ({ index }) => (<p>Page #{index}</p>);  ReactDOM.render(<App />, document.getElementById(""react""));</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdnjs.cloudflare.com/ajax/libs/react/17.0.1/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/17.0.1/umd/react-dom.production.min.js""></script> <div id=""react""></div></code></pre>  </div>  </div>  </p>",1727948699.0,,true
"{'account_id': 18251252, 'reputation': 1, 'user_id': 13286207, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/00343ee7b20b3d2411d351fcbc4cf3ed?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'CornMan123', 'link': 'https://stackoverflow.com/users/13286207/cornman123'}",False,0,1727809350,1727809350,79044419,79043574,CC BY-SA 4.0,"<p>You can use a forwardRef and useImperativeHandle and useState.</p> <pre><code> export default function Test() {   const parentRef = useRef(null);   const childRef = useRef([]);   useEffect(() => {     if (childRef.current !== null) {       childRef.current.forEach((cr, i) => {         cr.setPageNumber(i + 1);       });     }   });   const addToRefs = (el) => {     childRef.current.push(el);   };   return (     <div ref={parentRef}>       <Child ref={addToRefs} />       <Child ref={addToRefs} />       <Child ref={addToRefs} />       <Child ref={addToRefs} />     </div>   ); }  const Child = forwardRef(function Child(props, ref) {   const [pageNumber, setPageNumber] = useState(0);   useImperativeHandle(ref, () => {     return {       setPageNumber(n) {         setPageNumber(n);       },     };   });   return <div>{pageNumber}</div>; }); </code></pre>",,,true
"{'account_id': 26404808, 'reputation': 36, 'user_id': 20054758, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/1e0a5a7c3b958ed0154bedf0d587a4d4?s=256&d=identicon&r=PG', 'display_name': 'Samuel Santos', 'link': 'https://stackoverflow.com/users/20054758/samuel-santos'}",True,0,1727805405,1727805405,79044228,79043555,CC BY-SA 4.0,"<p>I use this component in my app:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>export const AutoFillAwareTextField = ({ onChange, inputProps, InputLabelProps, ...rest }: TextFieldProps) => {   const [fieldHasValue, setFieldHasValue] = useState(false);   const makeAnimationStartHandler =     (stateSetter: React.Dispatch<React.SetStateAction<boolean>>) =>     (e: React.AnimationEvent<HTMLInputElement | HTMLTextAreaElement>) => {       const autofilledBrowser = Boolean((e.target as any)?.matches('*:-webkit-autofill'));       const autofilled = autofilledBrowser || (exists(rest.value) && !isEmptyString(rest.value as any));       if (e.animationName === 'mui-auto-fill' || e.animationName === 'mui-auto-fill-cancel') {         stateSetter(autofilled);       }     };    const _onChange = useCallback(     (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {       onChange?.(e.target.value as any);       setFieldHasValue(e.target.value !== '');     },     [onChange],   );    return (     <TextField       inputProps={{         onAnimationStart: makeAnimationStartHandler(setFieldHasValue),         ...inputProps,       }}       InputLabelProps={{         shrink: fieldHasValue,         ...InputLabelProps,       }}       onChange={_onChange}       {...rest}     />   ); };</code></pre>  </div>  </div>  </p> <p>It basically has an animation listener and wraps the <code>onChange</code> function to store state indicating whether the input has something or not, and shrink the <code>InputLabel</code> based on that.</p>",,,true
"{'account_id': 23957290, 'reputation': 1, 'user_id': 17947971, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/0d338a87acb494c3cc618289569ae151?s=256&d=identicon&r=PG', 'display_name': 'CreedCoding', 'link': 'https://stackoverflow.com/users/17947971/creedcoding'}",False,0,1727871135,1727853512,79045711,79043117,CC BY-SA 4.0,"<p>I don't know how exactly it worked, but I woke up today and it was working, here are the things I have:</p> <p>1- ""homepage"": ""."" in my package.json 2- Adding CI=false to the build command, ex: ""CI=false vite build"" 3- Creating a _redirects file in the public directory with the following content:</p> <pre><code>/*    /index.html   200 </code></pre> <p>4- Changed my vite.config.js as follows:</p> <pre><code>import { defineConfig } from ""vite""; import react from ""@vitejs/plugin-react"";    // https://vitejs.dev/config/    export default defineConfig({       plugins: [react()],       base: ""/"",    });     Make sure the base is / not ./ for loading the page on refresh as well. When I put it ""./"", the page was not blank on the first load but it was becoming blank whenever I refresh </code></pre> <p>5- Added netlify.toml file with the following content:</p> <pre><code>    [[redirects]]        from = ""/*""        to = ""/index.html""        status = 200 </code></pre>",1727871135.0,,true
"{'account_id': 36100602, 'reputation': 7, 'user_id': 27563884, 'user_type': 'unregistered', 'profile_image': 'https://www.gravatar.com/avatar/2530a69e680adc86907470c5ebf76996?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Justin', 'link': 'https://stackoverflow.com/users/27563884/justin'}",False,0,1727787752,1727787152,79043225,79043114,CC BY-SA 4.0,"<p>Add <code>value</code> prop to the datepicker and put your date inside it when you set value to null date should be cleared</p> <pre><code>   <Datepicker       options={dateOptions(""Start Date"")}       onChange={handleStartDateChange}       show={showStartDate}       value={startDate} // add this       setShow={setShowStartDate}     /> </code></pre>",1727787752.0,,true
"{'account_id': 36100602, 'reputation': 7, 'user_id': 27563884, 'user_type': 'unregistered', 'profile_image': 'https://www.gravatar.com/avatar/2530a69e680adc86907470c5ebf76996?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Justin', 'link': 'https://stackoverflow.com/users/27563884/justin'}",False,-1,1727845787,1727845787,79045410,79042885,CC BY-SA 4.0,<pre><code>const Test = ({ id }: { id: string }) => (      <TableRow key={id}>        <TableCell>Tony Reichert</TableCell>       <TableCell>CEO</TableCell>           <TableCell>Active</TableCell>          </TableRow>         ); </code></pre>,,,true
"{'account_id': 28353521, 'reputation': 11, 'user_id': 21684617, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/10221742547022819/picture?type=large', 'display_name': 'supah0t', 'link': 'https://stackoverflow.com/users/21684617/supah0t'}",False,0,1727787649,1727787649,79043263,79042885,CC BY-SA 4.0,<p>Based on @Tim van Dam comment it doesn't seem to be currently possible</p>,,,true
"{'account_id': 29330379, 'reputation': 11, 'user_id': 22471962, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/4c65f628014169a4f7e90b67919004e0?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'ItsaMeEr', 'link': 'https://stackoverflow.com/users/22471962/itsameer'}",True,0,1728547089,1728547089,79073309,79042720,CC BY-SA 4.0,"<p>The whole issue luckily wasnt because of the error invalid refresh token. It was part of the issue, but it wasnt the direct cause of the issue.</p> <p>The issue had to do with the following piece of code:</p> <pre><code>  const [loaded] = useFonts({    SpaceMono: require('../../assets/fonts/SpaceMono-Regular.ttf'),   });    useEffect(() => {    if (loaded) {    SplashScreen.hideAsync();    }   }, [loaded]);    if (!loaded) {    return null;   } </code></pre> <p>If the font didnt load the page never loads and it just shows a white screen. What fixed my problem was to look up the official way to do this. So i found the following in the docs of expo. <a href=""https://docs.expo.dev/versions/latest/sdk/splash-screen/"" rel=""nofollow noreferrer"">https://docs.expo.dev/versions/latest/sdk/splash-screen/</a></p> <p>I followed this and used the recommended way of loading the fonts, and hiding the splashscreen. And it Fixed the whole problem for me.</p> <p>For any questions or needed information just comment and ill explain happily.</p>",,,true
"{'account_id': 293841, 'reputation': 9596, 'user_id': 597384, 'user_type': 'registered', 'accept_rate': 83, 'profile_image': 'https://www.gravatar.com/avatar/63dc1fa1adc218aa2e8b1e30d17d2d0a?s=256&d=identicon&r=PG', 'display_name': 'TommyBs', 'link': 'https://stackoverflow.com/users/597384/tommybs'}",False,0,1727786761,1727786761,79043202,79042720,CC BY-SA 4.0,"<p>I think you've had exactly the same issue I had. You don't need the call to <code>getSession</code> from supabase in your <code>useEffect</code>. Just add an <code>else</code> statement in your auth state change handler to set your state to <code>null</code> as well and rely on that.</p> <p>I was tearing my hair out over this and unfortunately my question just got downvoted on SO. However on the supabase discord I was pointed out to the fact that calling other supabase functions in the auth state change handler can have side effects - <a href=""https://supabase.com/docs/reference/javascript/auth-onauthstatechange"" rel=""nofollow noreferrer"">https://supabase.com/docs/reference/javascript/auth-onauthstatechange</a>.</p> <p>You should wrap the profile fetch in a <code>setTimeout</code> within your authState change when you have a session. Or have another <code>useEffect</code> that uses <code>newSession</code> as a dependency e.g</p> <pre><code> if (session) {             // fetch profile setTimeout(async () => {             const { data } = await supabase               .from('profiles')               .select('*')               .eq('id', session.user.id)               .single();             setProfile(data || null);   }, 0)           }    </code></pre>",,,true
"{'account_id': 21549240, 'reputation': 1, 'user_id': 15885623, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/oIY9EeA4.jpg?s=256', 'display_name': 'FastBack2499', 'link': 'https://stackoverflow.com/users/15885623/fastback2499'}",False,0,1727868877,1727868877,79046534,79042664,CC BY-SA 4.0,"<p>If you want to use Image in another path other then public, you can import it, like this:</p> <pre><code>import python from '../assets/python.png' </code></pre> <p>and use name you imported that with to use it:</p> <pre><code><img src={python}/> </code></pre> <p>if not so, you should put it in public folder and use it directly.</p>",,,true
"{'account_id': 36100602, 'reputation': 7, 'user_id': 27563884, 'user_type': 'unregistered', 'profile_image': 'https://www.gravatar.com/avatar/2530a69e680adc86907470c5ebf76996?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Justin', 'link': 'https://stackoverflow.com/users/27563884/justin'}",False,-1,1727784248,1727777676,79042672,79042664,CC BY-SA 4.0,"<p>Move the Image to the public Folder</p> <pre><code>public/  âââ images/      âââ here.jpg </code></pre> <p>Then, update your code to-</p> <pre><code><div className=""min-h-screen flex flex-row justify-between items-center lg:px-32 px-5 relative bg-[url('/images/here.jpg')] bg-cover bg-no-repeat pt-20""> </code></pre>",1727784248.0,,true
"{'account_id': 27931376, 'reputation': 1, 'user_id': 21329305, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AGNmyxb-FcXlzMFzyZruR1nteQkWgrCCmHuFluJ1doPB=k-s256', 'display_name': 'Joshua Edo', 'link': 'https://stackoverflow.com/users/21329305/joshua-edo'}",False,0,1727897090,1727897090,79048192,79042490,CC BY-SA 4.0,"<p>After a LOT of debugging, I discovered that the <a href=""https://lenis.darkroom.engineering/"" rel=""nofollow noreferrer"">Lenis</a> instance I initialized was the culprit preventing me from horizontally scrolling.</p> <p>I didn't notice this earlier because this particular page on my app is meant to be 100svh, and the other pages did not need horizontal scrolling.</p> <p>After implementing a route check for the instance, I was able to come up with this, largely inspired by the original webpage:</p> <pre><code> <section id='bedroom'>       <div         className='relative overflow-x-auto overflow-y-hidden'        >         <div className='relative h-[100svh] aspect-[16/10] lg:w-full'>           <picture className='h-[100svh] aspect-[16/10] lg:object-cover object-center'>             <source media='(min-width: 1024px)' srcSet={`${src}?w=4000`} />             <source media='(min-height: 600px)' srcSet={`${src}?w=2560`} />             <source media='(min-height: 500px)' srcSet={`${src}?w=1920`} />             <Image               src={`${src}?w=1024`}               alt={title}               placeholder='blur'               blurDataURL={blurDataURL}               width={4000}               height={2500}               className='h-[100svh] aspect-[16/10] lg:object-cover'               priority             />           </picture>           <div className='absolute inset-0'>             {hotspots.map((hotspot, index) => (               <BedroomHotspot                 hotspot={hotspot}                 key={index}               />             ))}           </div>         </div>       </div>     </section> </code></pre>",,,true
"{'account_id': 7519811, 'reputation': 1025, 'user_id': 5712125, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/BXRuU.jpg?s=256', 'display_name': 'Akshay Kumar', 'link': 'https://stackoverflow.com/users/5712125/akshay-kumar'}",False,0,1727782122,1727782122,79042942,79042414,CC BY-SA 4.0,"<p>I see a design issue here. Session is to make api accessible to the user. For anything UI related you have state. Instead of trying to pass the session around, try to think it in terms of:</p> <ul> <li>how to send session on each api call (cookies maybe, as you no longer need to worry about attaching session on each api call)</li> <li>what to do if an api call fails with a 401 (have a state in app, <code>isLoggedIn</code>, and redirect the user to login if its false)</li> </ul>",,,true
"{'account_id': 32295628, 'reputation': 39, 'user_id': 25081079, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2JxyNXM6.jpg?s=256', 'display_name': 'Jaiyash Godani', 'link': 'https://stackoverflow.com/users/25081079/jaiyash-godani'}",False,0,1727802684,1727802684,79044108,79042343,CC BY-SA 4.0,"<p>For making this type of animation  you may need to use <code>useRef</code> and <code>classList.add()</code> .First of all create <code>ref</code> for login and sign up</p> <pre><code> const signInFormRef = useRef(null);  const loginFormRef = useRef(null); </code></pre> <p>Then assign <code>ref</code> to each of them</p> <pre><code>   {/* Sign In Form will be active by default*/}     <form ref={signInFormRef} className={`form active`}>     ...     {/* Login Form */}     <form ref={loginFormRef} className={`form`}>     ... </code></pre> <p>After that create a <code>handler</code> for each button.</p> <pre><code>  const handleLogInButton = () => {      signInFormRef.current.classList.remove(""active"");      loginFormRef.current.classList.add(""active"");   }   const handlesignUpButton = () => {      signInFormRef.current.classList.add(""active"");      loginFormRef.current.classList.remove(""active"");   } </code></pre> <p>Add a active class in css having all proerties. But this will apply same properties to both for having move to opposite direction you need to make 2 classes <code>activelogin</code> and <code>activesignup</code></p> <pre><code>  const handleLogInButton = () => {      signInFormRef.current.classList.remove(""activesignup"");      loginFormRef.current.classList.add(""activelogin"");   }   const handlesignUpButton = () => {      signInFormRef.current.classList.add(""activesignup"");      loginFormRef.current.classList.remove(""activelogin"");   }         </code></pre> <p>Make sure to make this change in <code>signup form</code></p> <pre><code>   {/* Sign In Form will be active by default*/}     <form ref={signInFormRef} className={`form activesignup`}>     ... </code></pre> <p>Hope this helps...</p>",,,true
"{'account_id': 6686335, 'reputation': 191103, 'user_id': 5157454, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-QPadFFLbBGA/AAAAAAAAAAI/AAAAAAAADB8/FkNCMP_vkAc/photo.jpg?sz=256', 'display_name': 'Ori Drori', 'link': 'https://stackoverflow.com/users/5157454/ori-drori'}",False,0,1727785516,1727785516,79043141,79042090,CC BY-SA 4.0,"<p>Changes to an object property are not tracked by React, and don't cause it re-render the parent and children.</p> <p>You can wrap the instance in <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"" rel=""nofollow noreferrer"">Proxy</a> with a <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/set"" rel=""nofollow noreferrer"">set() handler</a> to catch changes to the <code>data</code> property, and set a state accordingly.</p> <p>In addition, since listening to external events is a side effect, this should happen  inside a <code>useEffect</code> block. This will prevent an infinite loop of trigger listen -> set state -> re-render -> trigger listen -> ...</p> <pre><code>const MainPage = () => {   const [message, setMessage] = useState('');    useEffect(() => {     const msg = new Proxy(Message.getInstance(), {       set(target, key, value) {           target[key] = value;                      // update the component's state only if the key is data           if(key === 'data') setMessage(value);                      return true;       }     });      msg.listenForIncomingMessage();   }, []);    return (     <div className=""panel"">       <Result message={message} />     </div>   ); };   const Result = ({ message }) => {   useEffect(() => {     console.log(message);    }, [message]);  )}; </code></pre> <p>If you need to use the proxied instance for other things, you can wrap it in <code>useMemo</code>. The listen to changes, however, still needs to happen inside <code>useEffect</code>:</p> <pre><code>const MainPage = () => {   const [message, setMessage] = useState('');      const msg = useMemo(() => new Proxy(Message.getInstance(), {     set(target, key, value) {         target[key] = value;          // update the component's state only if the key is data         if(key === 'data') setMessage(value);          return true;     }   }));    useEffect(() => {     msg.listenForIncomingMessage();   }, [msg]);    return (     <div className=""panel"">       <Result message={message} />     </div>   ); }; </code></pre>",,,true
"{'account_id': 1915753, 'reputation': 402, 'user_id': 1728379, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c06a7fc686bc021258d1bf34c3397b6e?s=256&d=identicon&r=PG', 'display_name': 'krzysu', 'link': 'https://stackoverflow.com/users/1728379/krzysu'}",False,0,1728984233,1728984233,79089302,79042066,CC BY-SA 4.0,"<p>Itâs a common practice in React apps to store instances of shared classes in a React context and provide access to them through custom hooks. This approach allows components to easily share and access these instances. You can read more about it here: <a href=""https://react.dev/learn/passing-data-deeply-with-context"" rel=""nofollow noreferrer"">Passing data deeply with context.</a></p>",,,true
"{'account_id': 25263321, 'reputation': 1831, 'user_id': 19093908, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/aBvU6.jpg?s=256', 'display_name': 'Åukasz D. Mastalerz', 'link': 'https://stackoverflow.com/users/19093908/%c5%81ukasz-d-mastalerz'}",False,0,1727789553,1727789553,79043389,79042039,CC BY-SA 4.0,"<p>I have never done such an implementation and if I understand you correctly and what you want to achieve, you can try using <code>StereoCamera</code>.</p> <p><a href=""https://threejs.org/docs/#api/en/cameras/StereoCamera"" rel=""nofollow noreferrer"">StereoCamera</a></p> <p>More info about setttings and calibration you can find in this <a href=""https://dibyendu-biswas.medium.com/stereo-camera-calibration-and-depth-estimation-from-stereo-images-29d87bc702f3"" rel=""nofollow noreferrer"">article</a>.</p> <p>Official example reconstructed with videos <a href=""https://codesandbox.io/p/sandbox/compassionate-moore-lrz5dy?file=%2Fsrc%2FApp.tsx%3A9%2C20"" rel=""nofollow noreferrer"">CodeSandbox</a></p> <pre><code>import React, { useEffect, useRef } from 'react' import * as THREE from 'three' import { StereoEffect } from 'three/examples/jsm/effects/StereoEffect.js'  const App: React.FC = () => {   const containerRef = useRef<HTMLDivElement | null>(null)   const videoRefs = useRef<HTMLVideoElement[]>([])    useEffect(() => {     if (!containerRef.current) return      let camera: THREE.PerspectiveCamera     let scene: THREE.Scene     let renderer: THREE.WebGLRenderer     let effect: StereoEffect      function init() {       camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 1, 10000)       camera.position.z = 2000        scene = new THREE.Scene()       scene.background = new THREE.Color(0x333333)        const video1 = document.createElement('video')       video1.src = 'https://cdn.pixabay.com/video/2021/11/30/99350-653447896_tiny.mp4' // Replace with your video path       video1.crossOrigin = 'anonymous'       video1.loop = true       video1.muted = true       video1.setAttribute('playsinline', '')       video1.oncanplay = () => video1.play()       videoRefs.current.push(video1)        const video2 = document.createElement('video')       video2.src = 'https://cdn.pixabay.com/video/2021/11/30/99350-653447896_tiny.mp4' // Replace with your video path       video2.crossOrigin = 'anonymous'       video2.loop = true       video2.muted = true       video2.setAttribute('playsinline', '')       video2.oncanplay = () => video2.play()       videoRefs.current.push(video2)        const texture1 = new THREE.VideoTexture(video1)       const texture2 = new THREE.VideoTexture(video2)        const planeGeometry = new THREE.PlaneGeometry(800, 450)       const planeMaterial1 = new THREE.MeshBasicMaterial({ map: texture1 })       const planeMaterial2 = new THREE.MeshBasicMaterial({ map: texture2 })        const videoPlane1 = new THREE.Mesh(planeGeometry, planeMaterial1)       const videoPlane2 = new THREE.Mesh(planeGeometry, planeMaterial2)        videoPlane1.position.set(-600, 0, 0)       videoPlane2.position.set(600, 0, 0)        scene.add(videoPlane1)       scene.add(videoPlane2)        renderer = new THREE.WebGLRenderer()        if (!containerRef.current) return       renderer.setSize(window.innerWidth, window.innerHeight)       containerRef.current.appendChild(renderer.domElement)        effect = new StereoEffect(renderer)       effect.setSize(window.innerWidth, window.innerHeight)        animate()     }      function animate() {       camera.lookAt(scene.position)       effect.render(scene, camera)       requestAnimationFrame(animate)     }      init()      return () => {       if (renderer) {         renderer.dispose()       }     }   }, [])    return <div ref={containerRef} /> }  export default App </code></pre>",,,true
"{'account_id': 35518659, 'reputation': 17, 'user_id': 27254454, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/XWhDSHsc.jpg?s=256', 'display_name': 'donny', 'link': 'https://stackoverflow.com/users/27254454/donny'}",False,0,1727766888,1727766888,79042043,79041815,CC BY-SA 4.0,"<ol> <li>Use Object.keys(education) to retrieve the keys of each field to handle multiple fields with a single  component.</li> <li>Pass the key to the name attribute of each  to identify which field has changed.</li> <li>In the onChange event, pass both (event, index) to determine the field and the index of the education object it belongs to.</li> <li>Extract event.target.name and event.target.value from the event to get the field name and the new value.</li> <li>Copy the educations array using the spread operator (...), then create a new array and update the object at the specified index.</li> <li>Use the index to update the specific field of the object within the copied array.</li> <li>Finally, pass the updated array to the setEducations function to update the state.</li> </ol> <h1>What needs to be fixed</h1> <p><a href=""https://i.sstatic.net/B2Uma2zu.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/B2Uma2zu.png"" alt=""enter image description here"" /></a></p>",,,true
"{'account_id': 13468738, 'reputation': 7423, 'user_id': 9718056, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ee99b210db5777e5e0a69aaa025cd461?s=256&d=identicon&r=PG', 'display_name': 'Arkellys', 'link': 'https://stackoverflow.com/users/9718056/arkellys'}",True,1,1727761012,1727761012,79041769,79041721,CC BY-SA 4.0,"<p>The component <a href=""https://nextui.org/docs/components/link"" rel=""nofollow noreferrer""><code><Link></code></a> renders an anchor element <a href=""https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a"" rel=""nofollow noreferrer""><code><a></code></a>, and <code>booleanProps</code> is not a valid attribute for <code><a></code> (or any other HTML/DOM element), that's what the error tells you.</p> <p>If you <em>really</em> need a custom property for such HTML elements, you can use a <a href=""https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes"" rel=""nofollow noreferrer"">data attribute</a>.</p>",,,true
"{'account_id': 21408326, 'reputation': 149, 'user_id': 15769109, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/a4c3bdd88a0b6dcb233be422af61b98f?s=256&d=identicon&r=PG', 'display_name': 'Kim Minh Tháº¯ng', 'link': 'https://stackoverflow.com/users/15769109/kim-minh-th%e1%ba%afng'}",True,2,1727757212,1727757212,79041650,79041591,CC BY-SA 4.0,"<p>You can grant the <code>LiveChat</code> to <code>window</code> scope and in React component just access it from <code>window</code>.</p> <p>This is the example code:</p> <ol> <li>Where you declared the LiveChat variable</li> </ol> <pre class=""lang-js prettyprint-override""><code>window.LiveChat = ... </code></pre> <ol start=""2""> <li>In the react component</li> </ol> <pre><code>const launchChat = () => {   window.LiveChat.openChatWindow(); } </code></pre>",,,true
"{'account_id': 33593006, 'reputation': 131, 'user_id': 26007375, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/cab800d8c84c79c925d573f87445f567?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Carsten Codes', 'link': 'https://stackoverflow.com/users/26007375/carsten-codes'}",False,0,1727859039,1727859039,79046009,79041535,CC BY-SA 4.0,"<p>You could try to use <code>useEffect</code>. It would look something like this;</p> <pre><code>import { useEffect, useState } from 'react';  function App() {     const [currentPage, setCurrentPage] = useState(PageTypes.Home.toString());     let sidePanelScriptHelper: SidePanelScriptHelper | null = null;      useEffect(() => {         sidePanelScriptHelper = SidePanelScriptHelper.getInstance(handleIncomingMessage);          return () => {             // Clean up the listener when component unmounts             sidePanelScriptHelper.cleanup();         }     }, []);      function loadActiveTabText() {         debug(""loadActiveTabText - on page "" + currentPage);         if (currentPage !== PageTypes.Home.toString()) {             setCurrentPage(PageTypes.Home.toString());             debug(""Switch to HOME"");         }     }      function handleIncomingMessage(message: ExtMessage) {         debug('sidepanel received message:');          // Force state update via React's state setter         setCurrentPage(PageTypes.About.toString());         debug('Set currentPage to About');     }      return (         ...          ); }  export default App; </code></pre>",,,true
"{'account_id': 26763380, 'reputation': 63, 'user_id': 20360947, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/wim6PHhY.png?s=256', 'display_name': 'khalifa R.', 'link': 'https://stackoverflow.com/users/20360947/khalifa-r'}",False,0,1727879747,1727879747,79047249,79041520,CC BY-SA 4.0,"<p>You don't need CSRF protection in your case because:</p> <ol> <li>You need CSRF protection only if you use a session-based authentication, that is because the browser will include the session token on any request made by the user even if it is just a script sent by a malicious person.</li> <li>you don't need it on the login page because the user is not yet authenticated.</li> </ol> <p>Instead, you must build a login endpoint where the user submits his credentials and gets a JWT token. after that, you send the JWT token in all endpoint that needs authentication, preferably the header Authorization in your spring application you need to configure a filter to authenticate the user based on the content of the header Authorization. you can find more about how to build JWT based authentication in the internet there are many articles about that.</p> <p>RECAP: you don't need CSRF protection as long as you don't use session-based authentication. also don't use session-based authentication with react</p>",,,true
"{'account_id': 25496443, 'reputation': 136, 'user_id': 19290428, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/gqktm.jpg?s=256', 'display_name': 'Sojo C Johny', 'link': 'https://stackoverflow.com/users/19290428/sojo-c-johny'}",False,0,1727784644,1727784644,79043081,79041483,CC BY-SA 4.0,"<p>If you are using vite, just replace this in the scripts in package.json file:</p> <blockquote> <p>""dev"": ""vite""</p> </blockquote> <p>with</p> <blockquote> <p>""dev"": ""vite --host""</p> </blockquote> <p>Then run <code>npm run dev</code> you would be able to see the network link for your app to run on another device on same network</p>",,,true
"{'account_id': 36100602, 'reputation': 7, 'user_id': 27563884, 'user_type': 'unregistered', 'profile_image': 'https://www.gravatar.com/avatar/2530a69e680adc86907470c5ebf76996?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Justin', 'link': 'https://stackoverflow.com/users/27563884/justin'}",False,0,1727780999,1727780999,79042864,79041483,CC BY-SA 4.0,<p>Use ngrok simply to run it across multiple devices</p>,,,true
"{'account_id': 26319614, 'reputation': 1003, 'user_id': 19981810, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Yttj1px7.png?s=256', 'display_name': '0xKevin', 'link': 'https://stackoverflow.com/users/19981810/0xkevin'}",False,0,1727754317,1727754317,79041580,79041461,CC BY-SA 4.0,"<p>The scrollbar isn't appearing because the <code>.thelist</code> container is wrapping each individual task instead of the entire list of tasks. This means there's no overflow within <code>.thelist</code> to trigger the scrollbar.<br /> To fix this, you should move the <code>.thelist</code> div to wrap around all the <code>ListNote</code> components collectively.</p> <p>Here's how you can modify your code.</p> <p><strong>Update your parent component to wrap all tasks within <code>.thelist</code>:</strong></p> <pre class=""lang-js prettyprint-override""><code>function TaskList({ tasks, onDelete, onEdit }) {   return (     <div className=""thelist"">       {tasks.map(task => (         <ListNote           key={task.id}           title={task.title}           id={task.id}           onDelete={onDelete}           onEdit={onEdit}         />       ))}     </div>   ); } </code></pre> <p><strong>And your <code>ListNote</code> component:</strong></p> <pre class=""lang-js prettyprint-override""><code>function ListNote({ title, onDelete, onEdit, id }) {   return (     <div className='task-item'>       <span className='task-name'>{title}</span>       <div className='button-group'>         <button onClick={() => onEdit(id)}>Edit</button>         <button onClick={() => onDelete(id)}>Delete</button>       </div>     </div>   ); } </code></pre>",,,true
"{'account_id': 74671, 'reputation': 38487, 'user_id': 214446, 'user_type': 'registered', 'accept_rate': 74, 'profile_image': 'https://www.gravatar.com/avatar/5deb6b87326686b1f2e9fdb37ceac210?s=256&d=identicon&r=PG', 'display_name': 'mb21', 'link': 'https://stackoverflow.com/users/214446/mb21'}",False,0,1727766539,1727766539,79042022,79041380,CC BY-SA 4.0,"<p>You can assign values in an <a href=""https://docs.astro.build/en/guides/middleware/"" rel=""nofollow noreferrer"">Astro middleware</a> to <code>Astro.locals</code>, but that you can only read out in Astro components, not framework components.</p> <p>If you have a React framework component, you can use <a href=""https://react.dev/reference/react/createContext"" rel=""nofollow noreferrer"">React context</a>:</p> <p>Astro part:</p> <pre><code>--- import { getTranslations } from ""@/i18n/utils""  const lang = Astro.currentLocale const t = getTranslations(lang) --- <App client:load lang={lang} /> </code></pre> <p>React part:</p> <pre><code>// LangContext.jsx import { createContext } from 'react'  export const LangContext = createContext() </code></pre> <pre><code>// App.jsx import { LangContext } from './LangContext'  export const App = (props) =>   <LangContext.Provider value={props.lang}>     <InventorySummaryLineChart />     <InventorySummaryBarChart />     <InventorySummaryPieChart />   </LangContext> </code></pre> <p>The various charts can now access the React context.</p>",,,true
"{'account_id': 195407, 'reputation': 33177, 'user_id': 438273, 'user_type': 'registered', 'accept_rate': 70, 'profile_image': 'https://www.gravatar.com/avatar/88ad8bc15f1a9e787531e9b20340973a?s=256&d=identicon&r=PG', 'display_name': 'jsejcksn', 'link': 'https://stackoverflow.com/users/438273/jsejcksn'}",True,0,1728154562,1728154562,79057739,79041258,CC BY-SA 4.0,"<p>You can use a <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import#namespace_import"" rel=""nofollow noreferrer"">namespace import</a> to create an object that will have as its properties all of the exports from the module â this includes the associated type information:</p> <p><a href=""https://www.typescriptlang.org/play/?noUncheckedIndexedAccess=true&removeComments=true&target=99&jsx=4&moduleDetection=3&exactOptionalPropertyTypes=true&inlineSourceMap=true&inlineSources=true&isolatedDeclarations=true&isolatedModules=true&noErrorTruncation=true&noImplicitOverride=true&pretty=true#code/JYWwDg9gTgLgBAKjgQwM4oDYYMIQ9dAMyghDgCIABEAV2AHoRkYBTKYZDegYzwPIDcAKCGccfKKgB0yEACM2UgIIBGAAxqh9enF179+gHoB+EWNz5JU1p2UAWDVp0GXcEyO1xAZAQsY3KUJAA"" rel=""nofollow noreferrer"">TS Playground</a></p> <pre class=""lang-ts prettyprint-override""><code>import * as allColors from ""@mui/material/colors"";  allColors.amber.A100 //              ^? (property) A100: ""#ffe57f""  allColors.teal.A400 //             ^? (property) A400: ""#1de9b6""  // â¦etc. </code></pre>",,,true
"{'account_id': 32389242, 'reputation': 38, 'user_id': 25158350, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/25ee1f15599579b4e99bed58de6623d6?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Peter Wang', 'link': 'https://stackoverflow.com/users/25158350/peter-wang'}",True,1,1727807482,1727807482,79044332,79041219,CC BY-SA 4.0,"<p>Here's my solution: <a href=""https://codesandbox.io/p/sandbox/3g62fp"" rel=""nofollow noreferrer"">Select COIs Label Problem</a>. All I did was remove shrink and label and update the renderValue ever so slightly.</p> <p>Maybe you can give some more information on what you have? Pictures maybe. It could maybe be a MUI version problem as well?</p>",,,true
"{'account_id': 25935217, 'reputation': 21550, 'user_id': 19655631, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Qbm7w.png?s=256', 'display_name': 'Wongjn', 'link': 'https://stackoverflow.com/users/19655631/wongjn'}",False,0,1727762760,1727762760,79041830,79041131,CC BY-SA 4.0,"<p>You'd want to ensure your <a href=""https://tailwindcss.com/docs/content-configuration"" rel=""nofollow noreferrer""><code>content</code> file globs sufficiently cover your template files</a>.</p> <p>Specifically in your situation, consider adding something like <code>./client/src/*.jsx</code> to cover the <code>client/src/App.jsx</code> file:</p> <pre class=""lang-js prettyprint-override""><code>content: [   './index.html',   './src/**/*.{js,ts,jsx,tsx}',   './client/src/*.jsx', ], </code></pre>",,,true
"{'account_id': 23694704, 'reputation': 2530, 'user_id': 17718587, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ef5499a9309bca805ef9789c6f5801da?s=256&d=identicon&r=PG', 'display_name': 'ChenBr', 'link': 'https://stackoverflow.com/users/17718587/chenbr'}",False,0,1727790935,1727790935,79043466,79041071,CC BY-SA 4.0,"<p>The <code>TimePicker</code> doesn't receive the <code>dir</code> attribute, you want to modify the time-panel directly. You can think about the following two separate components as the <code>TimePicker</code>:</p> <ol> <li>Input Field:</li> </ol> <p><a href=""https://i.sstatic.net/Qs4d1cDn.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/Qs4d1cDn.png"" alt=""Input Field"" /></a></p> <ol start=""2""> <li>Time Panel (This is the one you refer to):</li> </ol> <p><a href=""https://i.sstatic.net/0pY1YYCY.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/0pY1YYCY.png"" alt=""Time Panel"" /></a></p> <hr /> <p>The problem is that the <code>TimePicker</code> creates multiple <code>div</code>s (so the Time Panel will be able to have its CSS modified without affecting the Input Field).</p> <p>So modifying the <code>TimePicker</code> directly won't work. You can think about it as the container of both the Input Field and the Time Panel. And we want to modify the Time Panel, not its container.</p> <p>The Time Panel is the container of the hours and minutes columns.</p> <hr /> <p>I went into the Inspect Tools and checked which class the TimePicker Panel has that can be modified to change the direction. The answer is the <code>ant-picker-time-panel</code> class.</p> <p>So you can add some CSS to modify this class as the following:</p> <pre class=""lang-css prettyprint-override""><code>.ant-picker-time-panel {   direction: ltr; } </code></pre> <p><a href=""https://codepen.io/ChenBri/pen/QWeyKBN"" rel=""nofollow noreferrer"">CodePen</a></p>",,,true
"{'account_id': 32295628, 'reputation': 39, 'user_id': 25081079, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2JxyNXM6.jpg?s=256', 'display_name': 'Jaiyash Godani', 'link': 'https://stackoverflow.com/users/25081079/jaiyash-godani'}",False,0,1727795872,1727795872,79043767,79040991,CC BY-SA 4.0,"<p>Instead of setting intial value of <code>setRedLedOn</code> to <code>processLedData</code> set it to <code>false</code></p> <pre><code> const [redLedOn, setRedLedOn] = useState(false); </code></pre> <p>Why? As <code>processLedData</code> returns nothing in code but it sets a value to <code>redLedOn</code> when you use useEffect te data will be fetched and set to the actual value automatically</p>",,,true
"{'account_id': 22764972, 'reputation': 575, 'user_id': 16923160, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/QdPqFHnZ.jpg?s=256', 'display_name': 'vzsoares', 'link': 'https://stackoverflow.com/users/16923160/vzsoares'}",False,0,1727726312,1727726312,79040878,79040519,CC BY-SA 4.0,"<p>You are missing a <code>*</code> in your <code>RewriteRule</code>, and also remove <code>RewriteBase</code> and add the slash to the first <code>RewriteRule</code> cause it's affecting the last RewriteRule as well:</p> <pre><code><IfModule mod_rewrite.c>   RewriteEngine On   RewriteRule ^/index\.html$ - [L]      RewriteCond %{REQUEST_FILENAME} !-f   RewriteCond %{REQUEST_FILENAME} !-d   RewriteCond %{REQUEST_FILENAME} !-l      RewriteRule .* /index.html [L] </IfModule> </code></pre>",,,true
"{'account_id': 21549240, 'reputation': 1, 'user_id': 15885623, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/oIY9EeA4.jpg?s=256', 'display_name': 'FastBack2499', 'link': 'https://stackoverflow.com/users/15885623/fastback2499'}",False,0,1728393840,1727957805,79050502,79040050,CC BY-SA 4.0,"<p>If you try to resize your page as a dev option in browsers inspect views its normal to show borders, in build version it won't appear if it's only appears that way if not so let me know.</p> <p>Edit: Did you mean the way it acts when you use map and border together? If you want that only certain cards have border you should put condition on which indexes have border-t or border-b or whatever border you want to add on it.</p> <p>It's something like this:</p> <pre><code>{ index === 1 && ( <div className=""relative bg-black bg-opacity-30 w-full h-full min-h-[200px] transition-all duration-300 hover:bg-opacity-50 border-4 lg:border-2 border-[#fffdf3]"">             <p className=""text-white text-xl sm:text-2xl md:text-3xl p-3 font-bold absolute inset-0 flex items-end justify-start uppercase"">               {item.title}             </p>           </div> )}  { index !== 1 && ( <div className=""relative bg-black bg-opacity-30 w-full h-full min-h-[200px] transition-all duration-300 hover:bg-opacity-50 border-b-4 border-x-4 lg:border-b-2 lg:border-x-2 border-[#fffdf3]"">             <p className=""text-white text-xl sm:text-2xl md:text-3xl p-3 font-bold absolute inset-0 flex items-end justify-start uppercase"">               {item.title}             </p>           </div> )} </code></pre> <p>this is just sample you should edit it to match what you want.</p>",1728393840.0,,true
"{'account_id': 7426710, 'reputation': 49809, 'user_id': 5648954, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2noo3.jpg?s=256', 'display_name': 'Nick Parsons', 'link': 'https://stackoverflow.com/users/5648954/nick-parsons'}",False,0,1727700544,1727699780,79039376,79039302,CC BY-SA 4.0,"<p>You seem to have your object properties mixed up, your <code>onGetAction</code> should register your callback, and then <code>onTrigerAction</code> should trigger the callback stored in your ref (if it's set). You currently have it the wrong way around and also need to change it so you're invoking the callback stored in <code>current</code> with <code>()</code>:</p> <pre class=""lang-js prettyprint-override""><code>const value = useMemo(   () => ({     onGetAction: registerCallback,     onTrigerAction: (...args) => triggerCallbackRef.current?.(...args),   }),   [] ); </code></pre> <p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code snippet-currently-hidden"">  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.2.0/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.2.0/umd/react-dom.production.min.js""></script> <script src=""https://unpkg.com/@babel/standalone@7.25.6/babel.min.js""></script> <script type=""text/babel""> const { createContext, useCallback, useContext, useRef, useMemo, useEffect } = React;  // Define context properties const ActionsContext = createContext();  const ActionsProvider = ({ children }) => {   const triggerCallbackRef = useRef(null);    // Function to register the callback   const registerCallback = useCallback((callback) => {     triggerCallbackRef.current = callback; // Store the callback   }, []);    const value = useMemo(     () => ({       onGetAction: registerCallback,       onTrigerAction: (...args) => triggerCallbackRef.current?.(...args),     }),     [triggerCallbackRef, registerCallback] // these are both stable so this is equivalent to having an empty dependency array   );    return (     <ActionsContext.Provider value={value}>{children}</ActionsContext.Provider>   ); };  // Custom hook to use the PageActions context const useActions = () => {   const context = useContext(ActionsContext);   if (!context) {     throw new Error("" must be used within a Provider"");   }   return context; };  const MyComponent = () => {   const { onTrigerAction } = useActions(); // Get the register function    return <button onClick={onTrigerAction}>click</button>; };  const MyOtherComponent = () => {   const { onGetAction } = useActions();   onGetAction(() => {     console.log(""button is cliked"");   });   return ""Hello""; };  ReactDOM.createRoot(document.body).render(<ActionsProvider>   <MyComponent />   <MyOtherComponent /> </ActionsProvider>); </script></code></pre>  </div>  </div>  </p>",1727700544.0,,true
"{'account_id': 36040339, 'reputation': 32, 'user_id': 27533695, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/7e0f2ad8e8f426a7e5a9977eba39e0d8?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'punit-suman', 'link': 'https://stackoverflow.com/users/27533695/punit-suman'}",False,0,1727707515,1727707515,79039895,79039158,CC BY-SA 4.0,"<p>Do you see any errors when running project in dev? Try looking in console also in browser inspect. Basically, error is there at root page so it is not specifying any particular path.</p>",,,true
"{'account_id': 26766083, 'reputation': 13, 'user_id': 20363204, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ebee8e4379d4af1c4a95eef84bff8827?s=256&d=identicon&r=PG', 'display_name': 'Akshay Kumar K', 'link': 'https://stackoverflow.com/users/20363204/akshay-kumar-k'}",False,0,1728043984,1728043984,79054199,79039149,CC BY-SA 4.0,"<p>directly importing csv files will not work in nextjs. need to specify the path to the file importing. next will consider imported files as a js module. since csv files is not a js module it will not work.</p> <pre><code>const response = await fetch('/dictionaries/en.csv', {       headers : {          'content-type': 'text/csv;charset=UTF-8'        }       })       .catch(function() {         console.log(""error"");        });                const data = await response.text(); </code></pre>",,,true
"{'account_id': 10274975, 'reputation': 559, 'user_id': 7582211, 'user_type': 'registered', 'accept_rate': 0, 'profile_image': 'https://i.sstatic.net/FWd51.jpg?s=256', 'display_name': 'Guy who types fast', 'link': 'https://stackoverflow.com/users/7582211/guy-who-types-fast'}",False,1,1727694285,1727694285,79039075,79039067,CC BY-SA 4.0,"<p>You can use <a href=""https://www.npmjs.com/package/uuid"" rel=""nofollow noreferrer"">uuid</a>.</p> <pre><code>import { v4 as uuidv4 } from 'uuid'; uuidv4(); // â¨ '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d' </code></pre>",,,true
"{'account_id': 13984567, 'reputation': 21, 'user_id': 10099991, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/65eGIDpB.jpg?s=256', 'display_name': 'Simar Rajput', 'link': 'https://stackoverflow.com/users/10099991/simar-rajput'}",False,0,1727781427,1727781427,79042895,79038984,CC BY-SA 4.0,"<p>Make sure your app is connected with bundle server , Here some steps you can follow to debug this issue.</p> <p>1.Clear Cache:</p> <pre><code>npx react-native start --reset-cache </code></pre> <p>2.Check Bundle File: If you are running a production build, ensure that the JavaScript bundle is included. You can generate the bundle manually with:</p> <pre><code> npx react-native bundle --platform ios --dev false --entry-file index.js --bundle-output ios/main.jsbundle --assets-dest ios </code></pre> <p>If you still encounter issues, let me know and any additional context about your setup!</p>",,,true
"{'account_id': 20438881, 'reputation': 7610, 'user_id': 14996050, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/19e8fed0b56124fdaa61ba528146c4ad?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'wade zhou - MSFT', 'link': 'https://stackoverflow.com/users/14996050/wade-zhou-msft'}",False,0,1727695901,1727690288,79038839,79038774,CC BY-SA 4.0,"<blockquote> <p>I can't get the pdf file from local because the PDF blob is downloaded file from cloud.</p> </blockquote> <p>It's <strong>not</strong> supported to upload pdf Blob object directly to azure devops, you need to download the file to local and then to upload. To upload local pdf to devops work item, please refer to your <a href=""https://stackoverflow.com/a/79026438/14996050"">original ticket</a>.</p> <p>Edit:</p> <p>If you would like to upload base64 pdf file, you can check below script:</p> <pre><code>const fs = require('fs'); const axios = require('axios');  const addPdfAttachmentToWorkItem = async (   workItemId,   pat,   organizationUrl,   projectId,   filePath,   fileName ) => {   try {     const pdfBuffer = fs.readFileSync(filePath);     const pdfBase64 = pdfBuffer.toString('base64');      const encodedPat = Buffer.from(`:${pat}`).toString('base64');     const uploadUrl = `${organizationUrl}/${projectId}/_apis/wit/attachments?api-version=6.0&fileName=${fileName}&uploadType=simple`;      const attachRes = await axios({       method: 'POST',       url: uploadUrl,       data: pdfBase64,       headers: {         Authorization: `Basic ${encodedPat}`,         'Content-Type': 'application/octet-stream',         'Content-Transfer-Encoding': 'base64',       },     });      const attachmentUrl = attachRes.data.url;      const workItemUrl = `${organizationUrl}/${projectId}/_apis/wit/workitems/${workItemId}?api-version=6.0`;      const workItemData = [       {         op: 'add',         path: '/relations/-',         value: {           rel: 'AttachedFile',           url: attachmentUrl,           attributes: {             comment: `Attached PDF document to work item ${workItemId}`,           },         },       },     ];      const response = await axios.patch(workItemUrl, workItemData, {       headers: {         Authorization: `Basic ${encodedPat}`,         'Content-Type': 'application/json-patch+json',       },     });      console.log('Attachment added successfully:', response.data);     return response.data;   } catch (error) {     console.error('Error attaching file to work item:', error.response?.data || error.message);     throw error;   } };  (async () => {   const workItemId = 3321;   const pat = 'PAT';   const organizationUrl = 'https://dev.azure.com/org';   const projectId = 'projectname';   const filePath = 'C:\\Users\\wade\\test.pdf';    const fileName = 'test.pdf';     await addPdfAttachmentToWorkItem(workItemId, pat, organizationUrl, projectId, filePath, fileName); })();  </code></pre> <p><a href=""https://i.sstatic.net/TM3nzPtJ.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/TM3nzPtJ.png"" alt=""enter image description here"" /></a></p> <p><a href=""https://i.sstatic.net/IbsQutWk.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/IbsQutWk.png"" alt=""enter image description here"" /></a></p>",1727695901.0,,true
"{'account_id': 5112567, 'reputation': 705, 'user_id': 4098749, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/K2NYJ.jpg?s=256', 'display_name': 'Ernesto Alfonso', 'link': 'https://stackoverflow.com/users/4098749/ernesto-alfonso'}",True,0,1727685040,1727685040,79038525,79038476,CC BY-SA 4.0,"<p>You need to work with the react lifecycle.</p> <p>The react <code>useEffect</code> do not handle async callbacks, so you should use promises without the <code>await</code>, just using the <code>.then</code> and the <code>useSetate</code>, for example:</p> <pre class=""lang-js prettyprint-override""><code>// outside the component context if it's possible async function checkCache();   async function downloadAndSetSmallAndMediumImages();  ...   const [raceResult, setRaceResult] = useState(false):   useEffect(() => {        Promise.race([checkCache(), downloadAndSetSmallAndMediumImages()]).then(setRaceResult);    }, [imageSource])    useEffect(() => {     console.log('here', raceResult);     if (isCacheChecked && !cacheHit) {       console.log('cache miss');       // Use fire and forget if it's possible and apply the same approach with the useState in case of require to handle an action once the promise finish       downloadAndSetSmallAndMediumImages().then(() => handleFinalBigImageDownloadAndSet());     else {       console.log('cache hit');     }   }, [raceResult, isCacheChecked, cacheHit]) </code></pre>",,,true
"{'account_id': 27371279, 'reputation': 638, 'user_id': 20877284, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/fYDiC.jpg?s=256', 'display_name': 'Youth Dream', 'link': 'https://stackoverflow.com/users/20877284/youth-dream'}",True,1,1727727223,1727727223,79040912,79038425,CC BY-SA 4.0,"<p>The reason is that you used the <code>Layout</code> component twice. You need to use the <code>Layout</code> component once at the root level and place your routes inside the <code>children</code> array directly. I provide updated code for that.</p> <pre><code>const router = createBrowserRouter([     {         element: <Layout />,         children: [             {                 path: '/',                 element: <Home />             },             {                 path: '/about',                 element: <About />             }         ]     } ])  export { router } </code></pre>",,,true
"{'account_id': 23770614, 'reputation': 84, 'user_id': 17784719, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/2f619cea2f929d1e4925c5ac20ad3724?s=256&d=identicon&r=PG', 'display_name': 'PanCaro', 'link': 'https://stackoverflow.com/users/17784719/pancaro'}",False,-1,1727688153,1727688153,79038693,79038414,CC BY-SA 4.0,"<ol> <li>AdSense works based on content. I see that you have articles, but there are very few indexed links in Google search. You need to create long, valuable and unique articles. Write about 30-40 articles. Remember to submit them for indexing in Search Console.</li> </ol> <p>2, 3 - a book can be written about this. There are many tutorials on the Internet and also on my blog. It is impossible to describe it in two sentences.</p>",,,true
"{'account_id': 1448879, 'reputation': 1239, 'user_id': 1366467, 'user_type': 'registered', 'accept_rate': 98, 'profile_image': 'https://i.sstatic.net/MkO2g.jpg?s=256', 'display_name': 'Ninita', 'link': 'https://stackoverflow.com/users/1366467/ninita'}",False,0,1728031672,1728031672,79053480,79038385,CC BY-SA 4.0,"<p><strong>Possible help:</strong></p> <p><em><strong>no-compilation-cache</strong></em></p> <p>I followed this suggestion <a href=""https://dev.to/retyui/resolve-memory-leaks-caused-by-jest-with-nodejs-16x-and-18x-javascript-heap-out-of-memory-3md5"" rel=""nofollow noreferrer"">https://dev.to/retyui/resolve-memory-leaks-caused-by-jest-with-nodejs-16x-and-18x-javascript-heap-out-of-memory-3md5</a> and just added <code>--no-compilation-cache</code> to <em><strong>package.json</strong></em> but I don't see any improvement.</p> <p><em><strong>Static maxWorkers</strong></em></p> <p>I found <code>--maxWorkers</code> doesn't work very well in a CI environment. I'm requesting 9000m (9 cores) of CPU to the CI build. And with <code>--maxWorkers=20%</code> sometimes the tests run with 9 cores, sometimes with 6, sometimes with 4. So, if I'm requesting 9000m, probably is better to use <code>--maxWorkers=9</code> or <code>--maxWorkers=7</code>.</p> <p><em><strong>Coverage</strong></em></p> <p>I read somewhere that gathering test coverage during test execution can increase test execution time. So I'm thinking about moving test coverage gathering to a different stage of CI.</p> <p>To do that, I believe, in the <em><strong>package.json</strong></em> I need to add another command and call it in the new CI stage: <code>""test:coverage"": ""jest --coverage""</code>.</p> <p>And in my <em><strong>jest.config.js</strong></em>, I need to disable coverage gathering during tests execution: <code>collectCoverage: false</code>.</p> <p><em><strong>Promises</strong></em></p> <p>I have always extra care with promises because I know they can exponentially increase my tests time and they can cause multiple flaky tests. So I:</p> <ul> <li>always try to use <code>async-await</code> instead of <code>.then()</code>;</li> <li>ensure the promise is always returned when I use <code>.then()</code>;</li> <li>always <code>await</code> for promises result. If I'm not sure if a function will return a promise or not, I check what kind of result it will return, and if is a promise, so I obviously need to <code>await</code> for it;</li> <li>never use <code>async</code> or / and <code>await</code> if not necessary. I've noticed that if any <code>async</code> or / and <code>await</code> are used incorrectly in the code, it will cause some flakyness in the tests.</li> </ul> <p>To prevent some of those cases, I added these rules in my <em><strong>.eslintrc.json</strong></em>:</p> <pre><code>""require-await"": ""error"", ""no-return-await"": ""error"", </code></pre> <p>Another suggestion is to use this: <a href=""https://www.npmjs.com/package/eslint-plugin-promise"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/eslint-plugin-promise</a></p> <p>A thing I'm wandering is if doing this can increase memory leaks (because I have many tests like this):</p> <pre><code>functionToBeTested() {   requestSomeThingToTheServer(123).then(apiResult => {     doSomething(apiResult);     doSomethingMore();   }); }  test(""check the Server request"", (done) => {      mockServerRequest((requestParams) => { //is mocking requestSomeThingToTheServer() action     expect(requestParams).toEqual(123);     done();   });      functionToBeTested(); }); </code></pre> <p>According with this link <a href=""https://betterprogramming.pub/the-4-types-of-memory-leaks-in-node-js-and-how-to-avoid-them-part-2-f21fbda5c33b"" rel=""nofollow noreferrer"">https://betterprogramming.pub/the-4-types-of-memory-leaks-in-node-js-and-how-to-avoid-them-part-2-f21fbda5c33b</a>:</p> <blockquote> <p>Promises get stored in memory and they do not clear until they are either handled or rejected</p> </blockquote> <p>So if I use <code>done()</code> in the test during the promise execution, it memory will not clear and can be a problem?</p> <p><em><strong>Vitest</strong></em></p> <p>I'm strongly considering migrating to Vitest. People say it's faster than Jest and doesn't seem difficult to migrate:</p> <ul> <li><a href=""https://medium.com/wiiisdom-labs/how-to-migrate-from-jest-to-vitest-without-headaches-ee200510738e"" rel=""nofollow noreferrer"">https://medium.com/wiiisdom-labs/how-to-migrate-from-jest-to-vitest-without-headaches-ee200510738e</a></li> <li><a href=""https://vitest.dev/guide/migration#migrating-from-jest"" rel=""nofollow noreferrer"">https://vitest.dev/guide/migration#migrating-from-jest</a></li> </ul> <p><em><strong>React 18</strong></em></p> <p>I'm not using React 18 yet but I'm concern because of this: <a href=""https://github.com/testing-library/react-testing-library/issues/1235"" rel=""nofollow noreferrer"">https://github.com/testing-library/react-testing-library/issues/1235</a></p> <p>Seems the tests time will increase even more with React 18.</p> <p><em><strong>Some extra info</strong></em></p> <p><a href=""https://apidog.com/blog/jest-test-running-concurrently/"" rel=""nofollow noreferrer"">https://apidog.com/blog/jest-test-running-concurrently/</a> <a href=""https://snird.medium.com/do-not-use-node-js-optimization-flags-blindly-3cc8dfdf76fd"" rel=""nofollow noreferrer"">https://snird.medium.com/do-not-use-node-js-optimization-flags-blindly-3cc8dfdf76fd</a> <a href=""https://gist.github.com/stormwild/4bd3c1ec50ed055a363012a403b16365"" rel=""nofollow noreferrer"">https://gist.github.com/stormwild/4bd3c1ec50ed055a363012a403b16365</a> <a href=""https://www.npmjs.com/package/eslint-plugin-promise"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/eslint-plugin-promise</a></p>",,,true
"{'account_id': 922620, 'reputation': 714, 'user_id': 954014, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/9ccfcfb490e093bbf8fc294086f228b3?s=256&d=identicon&r=PG', 'display_name': 'Anbin Muniandy', 'link': 'https://stackoverflow.com/users/954014/anbin-muniandy'}",True,1,1727762653,1727762653,79041826,79038299,CC BY-SA 4.0,"<p>It's because <></> is actually the top level React component. <> is just a syntactic sugar for <code><Fragment /></code>. In your case, removing <></> should fix it.</p> <p>Do this instead.</p> <pre><code>logs && logs.map((_item, i) => {              return (                  <tr key={i}>                      <td  className=""text-end"">{_item.exception}</td>                      <td  className=""text-center"" >{new Date(_item.timeStamp).toLocaleDateString('fa-IR')} {new Date(_item.timeStamp).toLocaleTimeString('fa-IR')}</td>                      <td  className=""text-end"">{_item.message}</td>                      <td  className=""text-end"">{_item.id}</td>                  </tr>              )          })      } </code></pre>",,,true
"{'account_id': 29855332, 'reputation': 1, 'user_id': 22880296, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b471beb75fae75e5196ab30c43b3e1f3?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Arti Mourya', 'link': 'https://stackoverflow.com/users/22880296/arti-mourya'}",False,0,1727761684,1727758059,79041676,79038299,CC BY-SA 4.0,"<p>Use parenthesis for wrapping return statement code, e.g:</p> <pre><code><tbody>   {logs &&     logs.map((_item, i) => {       return (         <>           <tr key={i}>             <td className=""text-end"">{_item.exception}</td>             <td className=""text-center"">               {new Date(_item.timeStamp).toLocaleDateString(""fa-IR"")}{"" ""}               {new Date(_item.timeStamp).toLocaleTimeString(""fa-IR"")}             </td>             <td className=""text-end"">{_item.message}</td>             <td className=""text-end"">{_item.id}</td>           </tr>         </>       );     })} </tbody> </code></pre>",1727761684.0,,true
"{'account_id': 36023089, 'reputation': 34, 'user_id': 27525418, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e50843ba475f13a15929fe633d1f6836?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Amisha Singla', 'link': 'https://stackoverflow.com/users/27525418/amisha-singla'}",True,1,1727679512,1727679512,79038229,79038092,CC BY-SA 4.0,"<p>Try these below steps:</p> <ol> <li><p>Delete node_modules and Reinstall Dependencies <code>rm -rf node_modules package-lock.json</code><br /> <code>npm install</code></p> </li> <li><p>Check Vite Plugin for React <code>npm install @vitejs/plugin-react</code></p> </li> <li><p>Ensure react-refresh is installed <code>npm install react-refresh</code></p> </li> <li><p>Update both Vite and React <code>npm update vite react react-dom</code></p> </li> <li><p>If the project is in OneDrive, it can sometimes cause path issues. Try moving the project to a local directory (e.g., C:\Projects\virtualr) and then run: <code>npm install</code> <code>npm run dev</code></p> </li> <li><p>Ensure the vite.config.js is correctly configured for React.</p> </li> </ol>",,,true
"{'account_id': 18062094, 'reputation': 296, 'user_id': 13265113, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/bZuH3lQU.png?s=256', 'display_name': 'Shilpe Saxena', 'link': 'https://stackoverflow.com/users/13265113/shilpe-saxena'}",True,2,1727677582,1727677582,79038141,79038005,CC BY-SA 4.0,"<p>You can add trigger and mode: onSubmit for this.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const {       setValue,       getValues,       formState: { isValid },       trigger, // Added trigger for manual validation control     } = useForm<FormData>({       resolver: zodResolver(schema),       mode: 'onSubmit', // Validation happens only on submit initially       defaultValues: {         customFields: [],       },     }); and put this inside your CustomFields component.     <CustomFields   fields={getValues('customFields')}   keysOnly   onChange={(fields) => { setValue('customFields', fields, {   shouldDirty: true, });  // Manually trigger validation after the form is valid/submitted if (isValid) {   trigger('customFields');  // Trigger validation on each change after the first submission }   }} /></code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 22778169, 'reputation': 25, 'user_id': 16934483, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GhXJL07QlajFwJP1hpvHurLdEm3v91C1CNgOCGz=k-s256', 'display_name': 'yayuyo', 'link': 'https://stackoverflow.com/users/16934483/yayuyo'}",False,0,1729048900,1729048900,79092358,79037997,CC BY-SA 4.0,"<p>Finally, we were able to display something CSR-like by displaying Next.js static HTML over Iframe (Note that it is assumed that it is of the same origin).</p> <p>parent HTML:</p> <pre class=""lang-html prettyprint-override""><code><div id=""target"" data-id=""product1""></div> <script ""src=""/js/loadIframe.js></script>   </code></pre> <p>js for calling iframe:</p> <pre class=""lang-js prettyprint-override""><code>(function () {      const embedTarget = document.getElementById('target');   if(!embedTarget) {     throw new Error('Not found target element');   }   const productId = embedTarget.getAttribute('data-id');   if(!productId) {     throw new Error('Not specified product ID');   }    const iframe = document.createElement('iframe');   const iframeSrc = `/assets/products/${productId}.html`   iframe.id = 'iframeId';   iframe.src = iframeSrc;   iframe.style.width = '100%';   iframe.style.overflow = 'hidden';   iframe.scrolling = 'no';    iframe.onload = function () {     iframe.contentWindow.postMessage({       type: 'MESSAGE_FROM_PARENT_HTML',       data: { productId },     });   };   embedTarget.appendChild(iframe);  })(); </code></pre> <p>Next.js(Client Component Root):</p> <pre class=""lang-js prettyprint-override""><code>'use client';  import { ReactNode, useCallback, useEffect, useState } from 'react';   interface MessageDataProps {   productId: string; }  interface OwnProps {   children: ReactNode; }  export function ClientComponent({ children }: OwnProps) {   const [messageData, setMessageData] = useState<MessageDataProps>();     const receiveMessage = useCallback(     (event: MessageEvent<{ type: string; data: HTMLPartsDataProps }>) => {       const response = event.data;       if (response.type === 'MESSAGE_FROM_PARENT_HTML') {         setMessageData(response.data);       }     },     []   );    useEffect(() => {     if (typeof window === 'object') {       window.addEventListener('message', receiveMessage);     }     return () => window.removeEventListener('message', receiveMessage);   }, [messageData]);    if (messageData) {     return (       <div         ref={ref}         data-id={messageData.productId}       >{children}       </div>     );   }  } </code></pre>",,,true
"{'account_id': 25408899, 'reputation': 26, 'user_id': 19217109, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJx1qZxUWZaMewUJDthu9CGyG9vH0POgkWgk0vCn=k-s256', 'display_name': 'Matthew', 'link': 'https://stackoverflow.com/users/19217109/matthew'}",False,0,1727727148,1727727148,79040907,79037934,CC BY-SA 4.0,"<p>I can't see endpoint /public/test in your backend.</p> <p>but i think you can use this simpler solution:</p> <p>backend:</p> <pre><code>const express = require(""express""); const cors = require(""cors""); const fs = require(""fs"");  const app = express();  const corsOptions = {   origin: [""http://localhost:3000""], };  app.use(cors(corsOptions)); app.use(express.json());  app.get(""/video/:videoPath"", (req, res) => {   const range = req.headers.range;   const videoPath = ""./"" + req.params.videoPath;   let videoSize;   console.log(videoPath);   try {     videoSize = fs.statSync(videoPath).size;   } catch {     res.status(400).send();     return;   }   const chunkSize = 1 * 1e6;   const start = Number(range.replace(/\D/g, """"));   const end = Math.min(start + chunkSize, videoSize - 1);   const contentLength = end - start + 1;   const headers = {     ""Content-Range"": `bytes ${start}-${end}/${videoSize}`,     ""Accept-Ranges"": ""bytes"",     ""Content-Length"": contentLength,     ""Content-Type"": ""video/mkv"",   };   res.writeHead(206, headers);   const stream = fs.createReadStream(videoPath, {     start,     end,   });   stream.pipe(res); });  app.listen(3001, () => {   console.log(""Server running on port 3001""); }); </code></pre> <p>front:</p> <pre><code><div className=""App"">   <video className=""videoPlayer"" src={""http://localhost:3001/video/test.mkv""} controls/> </div> </code></pre> <p>and if you need to edit video before showing:</p> <pre><code>const fileStream = fs.createReadStream(filePath, { start, end });  const ffmpegStream = ffmpeg(fileStream)   .noAudio()   .videoCodec('libx264')   .format('mp4')   .outputOptions('-movflags frag_keyframe+empty_moov')   .on('end', () => {     console.log('Streaming finished');   })   .on('error', (err) => {     console.error(err);   });  ffmpegStream.pipe(res); </code></pre>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,0,1727667357,1727667357,79037839,79037694,CC BY-SA 4.0,"<pre class=""lang-js prettyprint-override""><code>return redirect('/login'); </code></pre> <p>Is <em>basically</em> a shortcut for:</p> <pre class=""lang-js prettyprint-override""><code>return new Response("""", {   status: 302,   headers: {     Location: ""/app/login"",   }, }); </code></pre> <p>You can try specifying the full URL or <a href=""https://reactrouter.com/en/main/route/loader#returning-responses"" rel=""nofollow noreferrer"">return a <code>Response</code> object</a> and set an absolute path from the origin.</p> <p>Examples:</p> <pre class=""lang-js prettyprint-override""><code>return redirect(`${window.location.origin}/login`); </code></pre> <pre class=""lang-js prettyprint-override""><code>return new Response("""", {   status: 302,   headers: {     Location: `${window.location.origin}/login`,   }, }); </code></pre>",,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",False,0,1727682173,1727676157,79038076,79037689,CC BY-SA 4.0,"<p><strong>Reactive values and Dependency arrays are the two key constructs working under the hood.</strong></p> <p>As we know, <strong>Reactive values</strong> of a component include - the props, state and the local variables computed on props or state. You would be able to know more on this from here : <a href=""https://react.dev/learn/lifecycle-of-reactive-effects#all-variables-declared-in-the-component-body-are-reactive"" rel=""nofollow noreferrer"">All variables declared in the component body are reactive</a></p> <p>The <strong>Dependency array</strong> or list is the mechanism which makes it possible to find the changes in Reactive values between the two renders - current and the previous. More can be read from here : <a href=""https://react.dev/learn/synchronizing-with-effects#step-2-specify-the-effect-dependencies"" rel=""nofollow noreferrer"">Specify the Effect dependencies</a></p> <p>By the way, useCallback may be better understood if we discuss the same under the background of the very familiar hook useEffect.  As we know, this hook acts as a gateway between a React component and a non-React system.  The reason for bringing useEffect over here for our discussion is that, just like useCallback, useEffect also has âthe need to check and decideâ if there is something to do with the code passed into it. For this requirement, useEffect also depends upon the Reactive values and its dependency array. These two examples may prompt us to draw the underlying parameters of useCallback and useEffect hooks - Both work on the Reactive values and dependency array or in short the âdependency array of Reactive valuesâ.</p> <p>Please do note that while useEffect runs its handler just after every render if and only if the dependencies have been changed between the renders, useCallback returns the function definition whether a new definition or the previous one itself, again depending upon the status of dependency array. Although functionally both are different, the parameters under which they operate are the same - The Reactive values and the dependency arrays.</p> <p><strong>Now coming to the specific question:</strong></p> <p>Please see below a sample code which is based on the code snippet of your question.</p> <p>Please take note of the important steps in it :</p> <p><strong>Step 1 : Initial render</strong></p> <p>a) App and Child components will render.</p> <p>b) During the initial render, the variables handlerFunction and handlerFunction2 will be assigned with the given function definitions.</p> <p><em>Please do note that each and every definition of an arrow function encounter in the program will create a new function object. Therefore the functional values in the two variables handlerFunction and handlerFunction2 will be different although both has the same body in this question.</em></p> <p>c) These variables are passed into the component Child as its props with the same values in the initial render.</p> <p><strong>Step 2 : While clicking the button</strong></p> <p>a) This will trigger a state change in the component App.</p> <p>b) However, during the rerender, the variables handlerFunction and handlerFunction2 will remain unchanged.</p> <p>c) This is due to the fact that the dependency array is empty ([ ]), it has no reactive values, and therefore there is no change which necessitates to redefine the functional values in the two variables. <em><strong>This is the most important aspect to take note of</strong></em>.</p> <p>d) As the functional values in the two variables remain unchanged, the props passed into the component Child will also remain unchanged.</p> <p>e) Since Child has been already enclosed in memo function, it will keep skipping rendering Child as long as the props remain unchanged.</p> <p>f) Therefore the Child will never re-render, this can be verified by ensuring that the statement console.log('Child rendered') is not getting executed during render.</p> <p><strong>App.js</strong></p> <pre><code>import { useCallback, useEffect, useState, memo } from 'react';  export default function App() {   const [someState, setSomeState] = useState('');    const handlerFunction = useCallback(() => console.log('I am memoized'), []);    const handlerFunction2 = useCallback(() => console.log('I am memoized'), []);    return (     <>       <Child         onSomeButtonClick={handlerFunction}         onSomeAnotherButtonClick={handlerFunction2}       />       <hr />       <button         onClick={(e) => {           setSomeState(Math.random());         }}       >         Force App component to Render, causing Child to render normally       </button>     </>   ); }  const Child = memo(function Child({   onSomeButtonClick,   onSomeAnotherButtonClick, }) {   console.log('Child rendered');   return <>Child rendered</>; }); </code></pre> <p><strong>Test run</strong></p> <p><strong>a) On load of the App</strong> <a href=""https://i.sstatic.net/5he9tDHO.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/5he9tDHO.png"" alt=""Browser display - on load of the App"" /></a></p> <p><strong>b) On Button click, there is nothing logged in the Console from Child component</strong></p> <p><a href=""https://i.sstatic.net/md1OCfsD.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/md1OCfsD.png"" alt=""Browser display - On Button click"" /></a></p>",1727682173.0,,true
"{'account_id': 4687875, 'reputation': 83797, 'user_id': 3794812, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/91da5cf982069e22d3bd0b514dfb45e2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Nicholas Tower', 'link': 'https://stackoverflow.com/users/3794812/nicholas-tower'}",True,3,1727661598,1727661262,79037713,79037689,CC BY-SA 4.0,"<blockquote> <p>In the second call to useCallback(), will it recognize the function as the same as that passed to the first call and return the memoized function?</p> </blockquote> <p>No.</p> <blockquote> <p>If not, how would it compare the function passed to useCallback() to the memoized function in the cache upon re-rendering?</p> </blockquote> <p>The functions are never compared. Each <code>useCallback</code> is independent, and is just checking whether it's dependency array has changed compared to the last render.</p> <p>As for how it implements this, hooks are designed with the assumption that you will always call the same number of hooks in the same order. This is referred to as the <a href=""https://react.dev/reference/rules/rules-of-hooks"" rel=""nofollow noreferrer"">rules of hooks</a>. Because react can assume you are following the rules of hooks, it just needs to keep track of the order.</p> <p>React keeps an internal array to track the data needed for hooks. Every time your component renders, react sets an internal index to 0. You call <code>useCallback</code> the first time, and react saves whatever data it needs in index 0. Then you call <code>useCallback</code> again, and the necessary data is saved in index 1. The next time the component renders, the index starts counting from 0 again. Your first call to <code>useCallback</code> interacts with the data in index 0, returning the saved function if appropriate. Then your second call to <code>useCallback</code> interacts with the data in index 1.</p>",1727661598.0,,true
"{'account_id': 3533231, 'reputation': 1036, 'user_id': 2952180, 'user_type': 'registered', 'accept_rate': 88, 'profile_image': 'https://www.gravatar.com/avatar/e362c29e4b4064020158f329d0331fd2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Ferry To', 'link': 'https://stackoverflow.com/users/2952180/ferry-to'}",True,0,1727786136,1727786136,79043178,79037578,CC BY-SA 4.0,"<p>By extracting the nested set function out with the use of another <code>useEffect()</code>, I've managed to make the state change of <code>rows</code> in a more idempotent manner under double invocation in strict mode, the log now shows 2 entries per interval instead of 3, as expected.</p> <pre><code>  useEffect(() => {     if (secondsPassed % thresold === 0)     {       setRow(prevRows => {         const nextRows = prevRows + 1;         console.log(`setRow: ${nextRows}`);         return nextRows;       });     }   }, [secondsPassed]); </code></pre> <pre><code>App.jsx:42 timer update App.jsx:45 next: 10 App.jsx:45 next: 10 App.jsx:54 setRow: 3 App.jsx:54 setRow: 3 </code></pre> <p>The lesson I've learned is not to nest set function as the state change will not easy to determine. Thanks the help from @WeDoTheBest4You and @Scott Z</p>",,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",False,-1,1727685500,1727685500,79038550,79037578,CC BY-SA 4.0,"<p>As it is in the another answer, the useEffect hook in the following code also works only on two events because of the empty dependency array. You may please check and see, the statement console.log('clearInterval') executes only on unmount - <em>you can mock that event by page refresh)</em></p> <pre><code>import { useState, useEffect } from 'react';  export default function Clock() {   const [now, setNow] = useState(new Date());    useEffect(() => {     const intervalId = setInterval(() => {       setNow(new Date());     }, 1000);      return () => {       console.log('clearInterval');       clearInterval(intervalId);     };   }, []);    return <h2>Time now is {now.getSeconds()}</h2>; } </code></pre>",,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",False,1,1727685117,1727685117,79038529,79037578,CC BY-SA 4.0,"<p>Please see the dependency array, it now is empty. It means the code inside the hook will run only on two events - mount and unmount of the components. The code inside the hook will run on mount, and the code returned by this code will run on unmount. That is the reason the clearInterval now works only once. However this code works fine and gives you the correct results.</p> <pre><code> useEffect(() => {     console.log(""effect start"");     ...   }, []); </code></pre> <p>If you still want to see how to force a clearInterval, please see below one of the ways for doing it.</p> <p><strong>Steps to do:</strong></p> <p>a) Please add a dependency to the hook.</p> <p>b) The onInterval function has to move out of the hook. And then set it as its dependency.</p> <p>c) What would now happen is that on each render, the function onInterval will be re-defined and will result a new functional object.</p> <p>d) This will cause the dependency in the hook to be identified as a change.</p> <p>e) And that will lead to a re-synchronise action.</p> <p>f) Every re-synchronise action will start with the execution of the returned function and then proceed with the handler of the hook.</p> <p><strong>App.js</strong></p> <pre><code>import { useEffect, useState } from 'react';  export default function Timer() {   const [secondsPassed, setSecondPassed] = useState(0);   const [rows, setRow] = useState(1);   const thresold = 60;    function onInterval() {     setSecondPassed((prevSec) => {       let currentSecond = prevSec + 1;       console.log(currentSecond);       if (currentSecond % thresold === 0) {         setRow((prevRow) => prevRow + 1);       }       return currentSecond;     });   }    useEffect(() => {     console.log('effect start');      const intervalId = setInterval(onInterval, 1000);     console.log(`setinterval: ${intervalId}`);      return () => {       console.log(`clearInterval: ${intervalId}`);       clearInterval(intervalId);     };   }, [onInterval]);    return (     <>       <div className=""box-x"" style={{ width: secondsPassed % thresold }}>         seconds passed : {secondsPassed}       </div>     </>   ); } </code></pre> <p><strong>Test run</strong></p> <p><a href=""https://i.sstatic.net/oJ3gauHA.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/oJ3gauHA.png"" alt=""Browser display"" /></a></p>",,,true
"{'account_id': 16095601, 'reputation': 1, 'user_id': 11617850, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-qV8lhbZ-ooU/AAAAAAAAAAI/AAAAAAAAAOQ/KG9aSkV3uXg/photo.jpg?sz=256', 'display_name': 'Josue Labres', 'link': 'https://stackoverflow.com/users/11617850/josue-labres'}",False,0,1727649303,1727649303,79037501,79037410,CC BY-SA 4.0,"<p>When your frontend and backend are hosted on different domains (like Netlify for the frontend and Heroku for the backend), you might encounter issues with cross-origin requests due to the sameSite attribute in cookies. If you set sameSite: ""strict"", the browser may block the cookie from being sent between these domains, which could interfere with authentication or session persistence.</p> <p>To resolve this, you should use sameSite: ""none"" instead of ""strict"". However, when using sameSite: ""none"", the cookie must also be marked as secure, meaning it will only be sent over HTTPS connections.</p>",,,true
"{'account_id': 35894709, 'reputation': 81, 'user_id': 27458191, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/bef534f1845a6eed419464792ede2194?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Piyush Pamnani', 'link': 'https://stackoverflow.com/users/27458191/piyush-pamnani'}",True,1,1727642113,1727642113,79037336,79037272,CC BY-SA 4.0,"<p>I can see there is a CORS policy error in your code. It arises because you are working on two different URLs, one for backend and one for frontend, and to resolve it you have to do changes in your flask code. Install <code>flask_cors</code> package and than import modules from it;</p> <pre><code>from flask_cors import cross_origin  #for specific route from flask_cors import CORS  #for whole app </code></pre> <p>after importing</p> <pre><code>analysis_ns = Flask(__name__)  #you might have done this in beginning your code CORS(analysis_ns)  #for enabling CORS in whole app, define it at the beginning of your code  #rest of your code  @analysis_ns.route('/upload', methods=[""POST"", ""GET""]) @cross_origin  #for enabling CORS in specific route  #rest of your code </code></pre> <p>This might help to resolve the error. I had the CORS policy issue during my internship where I was working with same technology, that is, Flask and React.</p>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",True,0,1727639277,1727639277,79037253,79037246,CC BY-SA 4.0,"<p>The issue is that you are declaring an inline function that returns the inner input. The anonymous function is a new reference each render cycle. You can fix this by passing <code>InnerInput</code> as the <code>input</code> slot component, and pass the additional props via the <code>slotProps</code> prop. See <a href=""https://mui.com/joy-ui/customization/overriding-component-structure/#the-slotprops-prop"" rel=""nofollow noreferrer"">SlotProps</a> for complete details.</p> <p>Example:</p> <pre><code>export const TextInput = ({   label,   errorHelperText,   helperText,   focus,   showIcon,   optional,   ...props }: TextInputBaseProps) => {   return (     <FormControl>       <Input         {...props}         onChange={props.onChange}         endDecorator={optional ? ""(Optional)"" : null}         sx={{           ...(focus && {             outline: ""0.125rem solid var(--colorSystemColorsFocus500)"",             outlineOffset: ""-0.0625rem"",           }),         }}         slotProps={{           input: { showIcon, label },  // <-- pass component props         }}         slots={{           input: InnerInput,           // <-- pass component reference         }}       />       {helperText && !props.error && (         <FormHelperText>{helperText}</FormHelperText>       )}       {errorHelperText && props.error && (         <FormHelperText sx={{ color: ""var(--colorSystemColorsDanger500)"" }}>           <Image src={errorhelper} alt={""""} width={16} height={16} />{"" ""}           {errorHelperText}         </FormHelperText>       )}     </FormControl>   ); }; </code></pre>",,,true
"{'account_id': 11708781, 'reputation': 1578, 'user_id': 8571434, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/esq34.jpg?s=256', 'display_name': 'Anton', 'link': 'https://stackoverflow.com/users/8571434/anton'}",False,0,1727760993,1727760993,79041767,79037218,CC BY-SA 4.0,"<p>The type of the <code>useActionState</code> state is <code>State</code> since that's the type of <code>initialState</code> and that's the return type of <code>createBook</code>. Thus this should also be the input type of <code>createBook</code>, instead of <code>[State]</code>.</p> <p>So try changing</p> <pre class=""lang-js prettyprint-override""><code>export async function createBook(prevState: [State], formData: FormData) { </code></pre> <p>to</p> <pre class=""lang-js prettyprint-override""><code>export async function createBook(prevState: State, formData: FormData) { </code></pre>",,,true
"{'account_id': 10173342, 'reputation': 933, 'user_id': 7512914, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/rX85A.jpg?s=256', 'display_name': 'svyat1s', 'link': 'https://stackoverflow.com/users/7512914/svyat1s'}",True,1,1727638327,1727638327,79037225,79037164,CC BY-SA 4.0,"<p>It's because you are reusing <strong>query</strong> variable for select and mutating the data. You can try to separate the logic like:</p> <pre><code>export const createEditCabin = async (newCabin: createCabinType, id?: number) => {     let imagePath = """";     let imageName = """";     if (typeof newCabin.image === ""object"") {         imageName = `${Math.floor(Math.random() * 10)}-${newCabin.image.name}`.replaceAll(""/"", """");         imagePath = `${supabaseUrl}/storage/v1/object/public/cabin-images/${imageName}`;     } else {         imagePath = newCabin.image;     }      if (!id) {         const { data, error } = await supabase             .from(""Cabins"")             .insert([{ ...newCabin, image: imagePath }])             .select()             .single();          if (error) throw error;         return data;     }      if (id) {         const { data, error } = await supabase             .from(""Cabins"")             .update({ ...newCabin, image: imagePath })             .eq(""id"", id)             .select()             .single();          if (error) throw error;         return data;     }      return null; }; </code></pre>",,,true
"{'account_id': 30810573, 'reputation': 1, 'user_id': 23634787, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/oD1si.jpg?s=256', 'display_name': 'Chathura_Dilshan', 'link': 'https://stackoverflow.com/users/23634787/chathura-dilshan'}",False,0,1727704908,1727704852,79039710,79037011,CC BY-SA 4.0,<p>Try this --> src='/public/logo512.png'</p> <p><strong>Explantion</strong></p> <p>It seems you are in the <strong>src folder</strong> --> index.js file and try to access a file in <strong>public folder</strong>. It means you have to go a folder back to access that folder since <strong>public and src folder hold a common root</strong>.</p> <p><em>1. If the file you're currently working on and the file you're going to access in the same folder you can start it like this './'</em></p> <p><em>2. If the folder of the file you are currently working on and the folder of the file you're going to access have a common root you can access it like this '/'</em></p>,1727704908.0,,true
"{'account_id': 36040339, 'reputation': 32, 'user_id': 27533695, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/7e0f2ad8e8f426a7e5a9977eba39e0d8?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'punit-suman', 'link': 'https://stackoverflow.com/users/27533695/punit-suman'}",False,-1,1727636587,1727636587,79037167,79037011,CC BY-SA 4.0,"<p>Simply use</p> <pre><code><img src=""logo512.png"" width=""40px""/> </code></pre> <p>React by default points assets from public folder.</p>",,,true
"{'account_id': 30237710, 'reputation': 11, 'user_id': 23173597, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocISQbjpvLEQqwaOFj_kLgis1C30MGkAkrEP1CuMJnKeUNE=k-s256', 'display_name': 'Momentus', 'link': 'https://stackoverflow.com/users/23173597/momentus'}",False,-1,1727634884,1727634884,79037106,79037011,CC BY-SA 4.0,"<p>Try use <code>/public/logo512.png</code> as image url.</p> <pre><code><img src=""/public/logo512.png"" width=""40px""/> </code></pre> <p>This should be correct path.</p>",,,true
"{'account_id': 30237710, 'reputation': 11, 'user_id': 23173597, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocISQbjpvLEQqwaOFj_kLgis1C30MGkAkrEP1CuMJnKeUNE=k-s256', 'display_name': 'Momentus', 'link': 'https://stackoverflow.com/users/23173597/momentus'}",False,1,1727637016,1727637016,79037181,79036908,CC BY-SA 4.0,"<p>You can try to replace</p> <pre><code>server.listen(PORT, '0.0.0.0', () => {         console.log(`Server is running on http://localhost:${PORT}`);     }); </code></pre> <p>with</p> <pre><code>server.listen(PORT); </code></pre> <p>in <code>SockerComponent.jsx</code> try to replace</p> <pre><code>const url = 'http://localhost:3000'; </code></pre> <p>with</p> <pre><code>const url = '/'; // If the client and server are co-located </code></pre> <p>or you should check on which domain your server is located and use</p> <pre><code>const url = 'http://YOUR_DOMAIN_HERE'; // or 'http://YOUR_DOMAIN_HERE' </code></pre> <p>The problem is that when the server is deployed, the client must connect <strong>not to</strong> <code>localhost:3000</code> as it was during development, but to the new server address. If you have the IP address of the server, you can use <code>http://SERVER_IP_ADDRESS</code>.</p>",,,true
"{'account_id': 14309325, 'reputation': 1284, 'user_id': 10336155, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/brAJ9.jpg?s=256', 'display_name': 'Mojtaba Nejad Poor Esmaeili', 'link': 'https://stackoverflow.com/users/10336155/mojtaba-nejad-poor-esmaeili'}",False,0,1727637600,1727637600,79037204,79036821,CC BY-SA 4.0,"<p>You have to provide HttpClient in appConfig file. I changed your example.</p> <p><a href=""https://stackblitz.com/edit/stackblitz-starters-ptpyaq?description=An%20angular-cli%20project%20based%20on%20@angular/animations,%20@angular/common,%20@angular/compiler,%20@angular/core,%20@angular/forms,%20@angular/platform-browser,%20@angular/platform-browser-dynamic,%20@angular/router,%20core-js,%20rxjs,%20tslib%20and%20zone.js&file=src%2Fmain.ts,src%2Fuser-search.component.html&template=node&title=Angular%20Starter"" rel=""nofollow noreferrer"">See the correct example here</a></p>",,,true
"{'account_id': 21641765, 'reputation': 39, 'user_id': 15963853, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJxw5undCQScLHDnWLRaChNJ52AooSqN2c7OkPkM=k-s256', 'display_name': 'Marvin Lee', 'link': 'https://stackoverflow.com/users/15963853/marvin-lee'}",False,0,1727642037,1727642037,79037335,79036223,CC BY-SA 4.0,"<p>I found the solution. The problem is that my code and the example I'm following is using ag-grid 30's implementation. Latest ag-grid is v32, and it uses a whole new method.</p> <p><a href=""https://codesandbox.io/p/sandbox/f7scdz"" rel=""nofollow noreferrer"">https://codesandbox.io/p/sandbox/f7scdz</a></p> <p>Instead of passing ref, you're now passing only props: CustomCellEditorProps. And all you need essentailly are</p> <ol> <li>value: for the values you passed to your cellEditorParams</li> <li>onValueChange: to set your selected value(s)</li> <li>stopEditing: to tell ag-grid you're done editing and pass the values you set to it.</li> </ol> <p>The example doesn't show you how to keep track of your component focus, as you'll need it if you're going to implement multiselect. You don't want to call stopEditing() on your select component's onchange. Here's a sample on how to set up tracking your component's focus, and call stopEditing() when it's out of focus, and ag-grid will handle the rest.</p> <pre><code>import React, { useState, useEffect, useRef, memo } from 'react'; import Select from 'react-select'; import type { CustomCellEditorProps } from '@ag-grid-community/react';  export const FontierEditor = memo(({ values, onValueChange, stopEditing }: CustomCellEditorProps) => {     const [selectedRecords, setSelectedRecords] = useState([]);     const refContainer = useRef<HTMLDivElement>(null);      useEffect(() => {         const handleFocusOut = (event: FocusEvent) => {             if (refContainer.current && !refContainer.current.contains(event.relatedTarget as Node)) {                 // Detect when the focus moves away from the select editor                 stopEditing();             }         };          // Add the focus out listener         const container = refContainer.current;         if (container) {             container.addEventListener('focusout', handleFocusOut);         }          // Cleanup the event listener on component unmount         return () => {             if (container) {                 container.removeEventListener('focusout', handleFocusOut);             }         };     }, [stopEditing]);      return (         <div ref={refContainer}>             <Select                 value={selectedRecords}                 onChange={(newSelected) => {                     setSelectedRecords(newSelected); // Keep selected values in the state                     onValueChange(newSelected.map(record => record.value) || []);                 }}                 options={values}                 isMulti             />         </div>     ); }); </code></pre>",,,true
"{'account_id': 20048851, 'reputation': 5, 'user_id': 14697954, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/01931a931336aee4d93d12c5a139248e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'awelie_go', 'link': 'https://stackoverflow.com/users/14697954/awelie-go'}",True,0,1727607859,1727607859,79036218,79036084,CC BY-SA 4.0,"<p>I actually found the solution which is not in the code I shared above Basically because I'm recursively rendering the comments, I also needed to pass the <code>showAlert</code> prop to the Comment component itself</p> <p>I also lifted the state up to the highest parent</p> <pre><code> {comment.replies?.length !== 0 ? (             <div className='flex w-full'>                 <div className='w-0.5 bg-neutral-gray-light md:ml-12'></div>                 <div className='pl-6 md:pl-12 max-w-full flex-grow'>                     {comment.replies?.map((reply) =>                     (<Comment                         key={reply.id}                         comment={reply}                         currentUser={currentUser}                         commentList={commentList}                         onReply={onReply}                         onEdit={onEdit}                         onDelete={onDelete}                         onScoreChange={onScoreChange}                         showAlert={showAlert}                     />))}                 </div>             </div>) : null} </code></pre>",,,true
"{'account_id': 35698751, 'reputation': 16, 'user_id': 27352440, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/XIt0qIkc.jpg?s=256', 'display_name': 'bountyScript', 'link': 'https://stackoverflow.com/users/27352440/bountyscript'}",True,0,1727612866,1727609343,79036263,79035988,CC BY-SA 4.0,"<p>Option 1: Animate with CSS only You can remove the <code>setInterval</code> and handle the animation with pure CSS by setting the width to 100% initially and letting CSS handle the timing:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const { useState, useEffect } = React;  const Loading = () => {   const [isLoading, setIsLoading] = useState(true);    useEffect(() => {     const timer = setTimeout(() => {       setIsLoading(false);     }, 3000); // 3 seconds timer      return () => clearTimeout(timer);   }, []);    return (     <div className=""canvas"">       {isLoading && (         <div className=""loading_bar""></div>       )}     </div>   ); };  // Render it ReactDOM.createRoot(document.getElementById(""root"")).render(<Loading />);</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.loading_bar {   position: absolute;   top: 0;   left: 0;   width: 0;   height: 5px;   background-color: #c4483f;   animation: load 3s linear forwards; }  @keyframes load {   to {     width: 100%;   } }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div id=""root""></div> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.2.0/umd/react.development.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.2.0/umd/react-dom.development.js""></script></code></pre>  </div>  </div>  </p> <p>Option 2: Animate with JavaScript If you prefer to control the animation manually with JavaScript using <code>setInterval</code>, you don't need the CSS transition property. Here's the corrected approach:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const { useState, useEffect } = React;  const Loading = () => {   const [isLoading, setIsLoading] = useState(true);    useEffect(() => {     const duration = 3000; // 3 seconds     const stepTime = 10; // Interval time in ms     const increment = 100 / (duration / stepTime); // Progress increment per interval      const timer = setInterval(() => {       setProgress((prevProgress) => {         const newProgress = prevProgress + increment;         if (newProgress >= 100) {           clearInterval(timer);           setIsLoading(false);           return 100;         }         return newProgress;       });     }, stepTime);      return () => clearInterval(timer);   }, []);     return (     <div className=""canvas"">       {isLoading && (         <div           className=""loading_bar""           style={{ width: `${progress}%` }}         ></div>       )}     </div>   ); };</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.loading_bar {   position: absolute;   top: 0;   left: 0;   height: 5px;   background-color: #c4483f; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div id=""root""></div> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.2.0/umd/react.development.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.2.0/umd/react-dom.development.js""></script></code></pre>  </div>  </div>  </p>",1727612866.0,,true
"{'account_id': 6819231, 'reputation': 138201, 'user_id': 5246885, 'user_type': 'registered', 'accept_rate': 78, 'profile_image': 'https://i.sstatic.net/Bxclj.jpg?s=256', 'display_name': 'Alex Mamo', 'link': 'https://stackoverflow.com/users/5246885/alex-mamo'}",True,3,1727607221,1727586962,79035660,79035612,CC BY-SA 4.0,"<blockquote> <p>I have been trying to find a way to limit() the read from FireStore but I could not find a way to limit it with the snapshot method. We are not planning to rewrite the whole function another way, just wonder how to add the limit to the current situation where every time we run it, it shows <code>limit()</code> is not a function.</p> </blockquote> <p>If you want to limit the number of documents you read from Firestore, then you have to create a <code>query</code> and pass a <code>limit(x)</code> call to the query function. So please change the following line of code:</p> <pre><code>const colRef = collection(db, ""companyproduct"").limit(20).get() </code></pre> <p>To:</p> <pre><code>const queryCompanyProduct = query(collection(db, ""companyproduct""), limit(20)); onSnapshot(queryCompanyProduct, snapshot => {     //... }) </code></pre> <blockquote> <p>Will Firebase consider it as re-reading the whole 10,000 products?</p> </blockquote> <p>If you're using a <code>get()</code> call, each time you reload the page, you are billed with the number of documents you read.</p> <p>A query will read the documents from the cache only if the user loses the internet connectivity, otherwise, it will always read the online versions of the documents that exist on the Firebase servers. The cached version of the documents works only when the user is offline.</p> <p>If you're using a real-time listener, you're only charged once, when you read the data, and right after that only for what's new. Perhaps, this <a href=""https://medium.com/firebase-tips-tricks/how-to-drastically-reduce-the-number-of-reads-when-no-documents-are-changed-in-firestore-8760e2f25e9e"" rel=""nofollow noreferrer"">article</a> will help you better understand the billing concept.</p>",1727607221.0,"[{'tags': ['jib', 'google-app-engine-golang', 'google-cloud-kms', 'google-cloud-url-maps', 'google-cloud-data-fusion', 'firebase-assistant', 'google-cloud-powershell', 'google-cloud-print-privet', 'google-cloud-translate', 'google-cloud-recommendation', 'google-cloud-dns', 'google-container-optimized-os', 'google-cloud-iot', 'firebase-database', 'google-app-engine-deploy', 'google-cloud-monitoring', 'google-cloud-healthcare', 'google-cloud-sql', 'google-dataflow', 'google-cloud-dataproc', 'google-cloud-storage-r', 'firebase-job-dispatcher', 'recaptcha-enterprise', 'google-cloud-armor', 'google-app-engine', 'google-cloud-http-load-balancer', 'google-cloud-networking', 'google-cloud-debugger', 'rest-firebase', 'google-cloud-identity', 'firebase-notifications', 'react-redux-firebase', 'firebase-machine-learning', 'google-container-registry', 'google-prediction', 'google-cloud-load-balancer', 'google-cloud-datastore', 'google-cloud-instances', 'google-cloud-functions', 'firebase-storage', 'firebase-app-distribution', 'google-cloud-nl', 'google-fusion-tables', 'dialogflow-cx', 'cloud-document-ai', 'google-cloud-ml', 'google-cloud-dataflow', 'google-cloud-dataprep', 'firebase-ab-testing', 'google-cloud-search', 'google-cloud-deploy', 'google-cloud-messaging', 'google-cloud-run', 'google-cloud-save', 'google-cloud-repository', 'google-cloud-filestore', 'looker', 'firebase-polymer', 'google-cloud-vertex-ai', 'looker-studio', 'google-cloud-internal-load-balancer', 'google-cloud-language', 'google-cloud-spanner', 'firebase-test-lab', 'google-cloud-build', 'google-kubernetes-engine', 'google-cloud-asset-inventory', 'google-cloud-api-gateway', 'google-cloud-print', 'google-cloud-tools', 'google-cloud-tpu', 'dialogflow-es-fulfillment', 'google-cloud-spanner-emulator', 'google-cloud-node', 'firebase-app-indexing', 'firebase-cli', 'firebase-predictions', 'google-cloud-pubsub', 'google-bigquery', 'vertex-ai-search', 'google-cloud-interconnect', 'apigee', 'firebase-security', 'google-cloud-intellij', 'google-cloud-shell', 'google-cloud-source-repos', 'google-cloud-instance-template', 'google-cloud-vpn', 'google-cloud-data-transfer', 'google-cloud-console', 'google-cloud-logging', 'apigee-baas', 'firebase-extensions', 'google-cloud-scheduler', 'google-cloud-storage', 'firebase-crash-reporting', 'google-cloud-trace', 'google-cloud-iam', 'google-cloud-endpoints', 'dialogflow-es', 'firebase-hosting', 'firebase-tools', 'google-cloud-ops-agent', 'google-cloud-python', 'google-cloud-proxy', 'google-cloud-webrisk', 'firebase-admob', 'firebase-performance', 'google-cloud-code', 'google-cloud-profiler', 'redux-saga-firebase', 'google-cloud-automl-nl', 'google-cloud-php-client', 'google-cloud-platform', 'google-app-engine-go', 'google-cloud-sdk', 'google-cloud-ml-engine', 'react-native-firebase', 'google-cloud-pubsublite', 'google-cloud-resource-manager', 'firebase-admin', 'google-container-builder', 'google-cloud-ai-platform-pipelines', 'nativescript-firebase', 'google-anthos', 'google-cloud-cpp', 'google-app-engine-php', 'google-cloud-stackdriver', 'google-cloud-test-lab', 'stackdriver', 'google-cloud-error-reporting', 'google-migrate-for-compute-engine', 'google-app-engine-patch', 'google-cloud-identity-aware-proxy', 'google-container-os', 'google-cloud-vision', 'cordova-plugin-firebasex', 'google-cloud-launcher', 'google-cloud-workstations', 'google-cloud-shell-editor', 'google-cloud-speech', 'google-cloud-router', 'firebase', 'google-cloud-dlp', 'firebase-util', 'google-cloud-bigtable', 'maven-jib', 'gcloud', 'firebase-queue', 'google-cloud-talent-solution', 'google-cloud-tasks', 'bigtable', 'google-cloud-memorystore', 'firebase-cloud-messaging', 'google-cloud-firestore', 'google-cloud-robotics', 'firebase-realtime-database', 'google-cloud-marketplace', 'google-cloud-transcoder', 'firebaseui', 'google-cloud-visualstudio', 'google-analytics-firebase', 'firebase-authentication', 'google-compute-engine', 'firebase-dynamic-links', 'google-cloud-dataproc-metastore', 'google-cloud-billing', 'google-cloud-composer', 'firebase-app-check', 'firebase-console', 'google-cloud-metrics', 'google-cloud-registry', 'google-cloud-datalab', 'google-cloud-endpoints-v2', 'google-translate', 'firebase-invites', 'firebasesimplelogin', 'firebase-remote-config', 'google-cloud-ai', 'google-app-engine-launch', 'google-cloud-network-load-balancer', 'google-cloud-cdn', 'firebase-mlkit', 'google-cloud-automl', 'google-app-engine-python', 'firebase-in-app-messaging', 'firebase-analytics'], 'external_links': [{'type': 'support', 'link': 'https://stackoverflow.com/contact?topic=15'}], 'description': 'A collective for developers who utilize Google Cloudâs infrastructure and platform capabilities. This collective is organized and managed by the Stack Overflow community.', 'link': '/collectives/google-cloud', 'name': 'Google Cloud', 'slug': 'google-cloud'}]",true
"{'account_id': 14588149, 'reputation': 1175, 'user_id': 10536232, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-esWCOSge7t0/AAAAAAAAAAI/AAAAAAAAAAs/EcUKJynKuW8/photo.jpg?sz=256', 'display_name': 'Scott Z', 'link': 'https://stackoverflow.com/users/10536232/scott-z'}",False,0,1727616453,1727616453,79036491,79035382,CC BY-SA 4.0,"<p>I agree with Nick that you have stale state values.  It appears to me that neither <code>isUserTurn</code> nor <code>ismComputerMove</code> are used to drive changes in the UI, so they don't really need to be stateful.  If that is so, a fix would be to track them as refs instead of state.</p> <pre><code>const isUserTurnRef = useRef(false) const isComputerMove = useRef(false) </code></pre> <p>set them like so <code>isUserTurnRef.current = true/false</code></p> <p>read them like so <code>if(isComputerMove.current){....</code></p> <p>Is there ever a situation where both of these are true or false at the same time? It feels like they could be redundant and only one would suffice.</p>",,,true
"{'account_id': 7426710, 'reputation': 49809, 'user_id': 5648954, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2noo3.jpg?s=256', 'display_name': 'Nick Parsons', 'link': 'https://stackoverflow.com/users/5648954/nick-parsons'}",True,0,1727581836,1727581836,79035581,79035382,CC BY-SA 4.0,"<p>Your <code>events.move</code> function has a stale closure over the state values in your <code>PuzzlesPage</code> component. The <code>events.move</code> function only knows about the variables/state in its surrounding scope when it was created. Since you only register this function with your <code>Chessground</code> instance in <code>componentDidMount</code> you're only ever registering the first <code>events.move</code> function created in the first render of <code>PuzzlesPage</code> (which only knows about the initial state variables created in that render's scope).</p> <p>You have a few options to fix this:</p> <ul> <li><p>Use the Chessground React wrapper: <a href=""https://github.com/react-chess/chessground"" rel=""nofollow noreferrer"">https://github.com/react-chess/chessground</a> so that a fresh config object is used with the latest function when the config changes</p> </li> <li><p>Reset your <code>Chessground</code> instance to use the latest events object:</p> <pre class=""lang-js prettyprint-override""><code>componentDidUpdate(prevProps) {     // ... existing logic ...     if (prevProps.events !== this.props.events) {       this.groundInstance.set({ events: this.props.events });     } } </code></pre> <p>Note that this triggers on each rerender as your events function changes on each rerender (which you can change by memoizing your callback).</p> </li> </ul>",,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",False,0,1727865306,1727864725,79046300,79035369,CC BY-SA 4.0,"<blockquote> <p>I am having a hard time coming up with a good approach for splitting business logic from a component. Due to different use cases,...</p> </blockquote> <p><strong>Ans:</strong></p> <p>It is ideal to constrain the use cases in a hook, such that it handles only a single use case. And let there be separate hooks handling each use case as you have tried initially. Please see the below quote from React docs in the same line.</p> <p>âIf your custom Hook API doesnât constrain the use cases and is very abstract, in the long run itâs likely to introduce more problems than it solves.â</p> <p><strong>Citation</strong> : <a href=""https://react.dev/learn/reusing-logic-with-custom-hooks#keep-your-custom-hooks-focused-on-concrete-high-level-use-cases"" rel=""nofollow noreferrer"">Keep your custom Hooks focused on concrete high-level use cases</a></p> <blockquote> <p>I am going to overload the App. These hooks have functionality that is causing frequent re-renders...</p> </blockquote> <p><strong>Ans:</strong></p> <p>As we know, rendering is only triggered when the states have been changed. Therefore an increase in the number of hooks in an app may not directly impact its performance by unnecessary renders. It is entirely based on the way the reactive changes have been coded. It is too obvious to have room to improve the codes passing flags just to cut the unnecessary renders. The bottom line is that rendering must be coded in its most <em><strong>natural way as a reaction to the interaction</strong></em>.</p> <blockquote> <p>I cant think of a better way of doing this other than moving the hooks one level above which i wanted to avoid because i wanted to keep map logic within the map itself to avoid issues related to fetching google api data. This needs review.</p> </blockquote> <p><strong>Ans:</strong></p> <p><em>Firstly</em>, by extracting logic into a custom hook, the stateful logic is being shared. It means the same custom hook will become reusable in multiple places across the same component or in other components as well. <em>Even If</em> there is no immediate benefit or need for sharing some stateful logic, extracting logic into custom hooks, still makes the code more declarative. It would make code more expressive in its intent. It hides the gnarly details of any kind of implementation.</p> <p><em>Secondly</em>, even after extraction, a custom hook used in a component really remains as the body of the component. Unlike an event handler, a custom hook has access to the rendering life-cycle of a component. It receives the latest props, states and computed variables. An event handler on the other side, does not take part in the rendering process, it receives only a snapshot of the latest render and it remains so until the next render. Therefore it is <em>quite remote</em> to have issues in extracting custom hooks related with any kind of data fetch in the housing component.</p> <p>Both points above have discussed here : <a href=""https://react.dev/learn/reusing-logic-with-custom-hooks"" rel=""nofollow noreferrer"">Reusing Logic with Custom Hooks</a></p> <p>Please see below a sample code based on the guidelines discussed above. As the custom hook modules cannot be imported in a dynamic way, the conditional has been coded in the respective hooks as it has been answered here : <a href=""https://stackoverflow.com/questions/62298745/dynamic-import-of-react-hooks"">Dynamic import of react hooks</a></p> <p><strong>App.js</strong></p> <pre><code>import { useState, useEffect } from 'react';  const App = ({}) => {   // the below state is used just for  interactivity by the buttons   const [modality, setModality] = useState('A');    const dataArray = [];   dataArray[0] = useHookA(modality);   dataArray[1] = useHookB(modality);    // ...useHookC to useHookY go here    dataArray[25] = useHookZ(modality);    // a valid data will be there only in one of the array posistions   const data = dataArray.filter((item) => item);    function handleClick(modality) {     //this stateSetter is called just to reset the display     setModality(null);     // this is the stateSetter for the new data, it has been made an async call,     // just to avoid batching and bring in the desired display effect     setTimeout(setModality(modality), 0);   }   return (     <>       data for Google Map : {data}       <br />       <br />       <button onClick={() => handleClick('A')}>A Apply modality</button>       <br />       <button onClick={() => handleClick('B')}>B Apply modality</button>       <br />       <button onClick={() => handleClick('X')}>X Apply modality</button>       <br />     </>   ); }; export default App;  function useHookA(modality) {   const [data, setData] = useState(null);   if (modality == 'A') {     // code the logic here during the initial render     // code also the logic here after the data fetch   }   useEffect(() => {     if (modality == 'A') {       // any asyn data fetch here, now mocked by setTimeout       const timer = setTimeout(() => setData('some data A'), 0);       // clean up when the modality changes from A to some other       return () => {         clearTimeout(timer);       };     } else {       // reset the state when the modality changes from non A modality to some other       setData(null);     }   }, [modality]);   return data; }  function useHookB(modality) {   const [data, setData] = useState(null);   if (modality == 'B') {     // code the logic here during the initial render     // code also the logic here after the data fetch   }   useEffect(() => {     if (modality == 'B') {       // any asyn data fetch here, now mocked by setTimeout       const timer = setTimeout(() => setData('some data B'), 0);       // clean up when the modality changes from B to some other       return () => {         clearTimeout(timer);       };     } else {       // reset the state when the modality changes from non B modality to some other       setData(null);     }   }, [modality]);   return data; }  function useHookZ(modality) {   const [data, setData] = useState(null);   if (modality == 'X') {     // code the logic here during the initial render     // code also the logic here after the data fetch   }   useEffect(() => {     if (modality == 'X') {       // any asyn data fetch here, now mocked by setTimeout       const timer = setTimeout(() => setData('some data X'), 0);       // clean up when the modality changes from X to some other       return () => {         clearTimeout(timer);       };     } else {       // reset the state when the modality changes from non X modality to some other       setData(null);     }   }, [modality]);   return data; } </code></pre> <p><strong>Test runs</strong></p> <p><strong>On loading the app</strong></p> <p><a href=""https://i.sstatic.net/oQ2if7A4.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/oQ2if7A4.png"" alt=""Browser display on loading the app"" /></a></p> <p><strong>On changing the modality from A to B</strong></p> <p><a href=""https://i.sstatic.net/oT8K2gsA.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/oT8K2gsA.png"" alt=""Browser display - On changing the modality to B"" /></a></p>",1727865306.0,,true
"{'account_id': 2389551, 'reputation': 42670, 'user_id': 2089675, 'user_type': 'registered', 'accept_rate': 80, 'profile_image': 'https://i.sstatic.net/3wmDV.png?s=256', 'display_name': 'smac89', 'link': 'https://stackoverflow.com/users/2089675/smac89'}",False,1,1727569627,1727569627,79035404,79035369,CC BY-SA 4.0,"<p>I just see that you are writing bad React. You should not be running arbitrary code within the body of a component, which is going to affect the state of the component, without putting that logic inside a hook of some sort.</p> <p>The code you currently have is equivalent to having a <code>useEffect</code> with an undefined dependency array, and this <code>useEffect</code> is changing the state, well of course you'll get frequent re-rendering!</p> <p>See if the following reduces your rendering problems otherwise the <a href=""https://stackoverflow.com/a/79035388/2089675"">other answer</a> is pretty good:</p> <pre><code>const App = ( {modality} ) => {    const dataA = useHookA();    const dataB = useHookB();    const data = useMemo(() => {       switch (modality) {          case 'A':             return dataA;          case 'B':             return dataB;          default:             return undefined;       }    }, [modality]);     return <GoogleMap>{data}</GoogleMap> }; </code></pre> <p>The dependency list for <code>useMemo</code> could also include <code>dataA</code> and <code>dataB</code>, if you expect them to change frequently and you want those changes to affect the state of the component. Otherwise, the list with just <code>modality</code> is fine.</p>",,,true
"{'account_id': 6686335, 'reputation': 191103, 'user_id': 5157454, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-QPadFFLbBGA/AAAAAAAAAAI/AAAAAAAADB8/FkNCMP_vkAc/photo.jpg?sz=256', 'display_name': 'Ori Drori', 'link': 'https://stackoverflow.com/users/5157454/ori-drori'}",False,2,1727568325,1727568325,79035388,79035369,CC BY-SA 4.0,"<p>Instead of maintaining 2 logics, states, etc... when you only need one, create 2 map components, and switch between them:</p> <pre><code>const MapA = () => {   const data = useHookA();      return <GoogleMap>{data}</GoogleMap> }  const MapB = () => {   const data = useHookB();      return <GoogleMap>{data}</GoogleMap> }  const App = ({ modality }) => modality === 'A'   ? <MapA />   : <MapB />; </code></pre> <p>You can also create a map component generator function that accepts a hook, and returns a component to make it more DRY.</p> <pre><code>const createMapComponent = useHook => () => (   const data = useHook();    return <GoogleMap>{data}</GoogleMap> );  const MapA = createMapComponent(useHookA);  const MapB = createMapComponent(useHookB); </code></pre>",,,true
"{'account_id': 4017884, 'reputation': 17, 'user_id': 3309300, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/f52733ad704e62640f11a97503e4b6a2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'user3309300', 'link': 'https://stackoverflow.com/users/3309300/user3309300'}",False,0,1727564336,1727564336,79035320,79035261,CC BY-SA 4.0,"<p>App.jsx: line 23, the promise chain is missing a return line 78, there is a typo.</p>",,,true
"{'account_id': 9163275, 'reputation': 715, 'user_id': 6813906, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/ytQD7Q0w.jpg?s=256', 'display_name': 'Jeferson Macedo', 'link': 'https://stackoverflow.com/users/6813906/jeferson-macedo'}",False,0,1727597229,1727557846,79035210,79035120,CC BY-SA 4.0,"<p>I think the problem may be in your <code>Context</code>, perhaps the changes in the <code>friends</code> variable are not being listened to by the <code>Context</code> but as I don't know how your context is implemented I refactored the code to ensure that the calls follow the desired sequence, as I assume that the <code>getProfile</code> and <code>getAllFriends</code> methods are async, the code below ensures that the calls finish first before the socket is configured</p> <p>I also modified the <code>useEffect</code> of <code>friends</code> to listen to localOnline and added logic so that it only calls <code>setOnlineUsers</code> once.</p> <pre><code>import { useToast } from ""@chakra-ui/toast""; import React, { lazy, Suspense, useContext, useEffect, useState } from ""react""; import { Outlet, useNavigate } from ""react-router-dom""; import { io } from ""socket.io-client""; import Loader from ""../components/Loader""; import { Context } from ""../context/StateProvider"";  const Home = () => {   const SideBar = lazy(() => import(""../components/SideBar""));   const BG = lazy(() => import(""../components/BG""));    const toast = useToast();    let {     setIsAuthenticated,     friends,     getAllFriends,     getProfile,     setOnlineUsers,     socket,     onlineUsers,   } = useContext(Context);    const navigate = useNavigate();    let token = JSON.parse(localStorage.getItem(""token""));   const [loading, setLoading] = useState(true);   const [localOnline, setLocalOnline] = useState([]);    useEffect(() => {     socket.current = io(""http://localhost:3000"", { query: { token } });       const asyncInit = async () => {       // Validate Auth       if(token){ // Authenticated flow          setIsAuthenticated(true);          //Get init info         await getProfile(); // wait get profile info         await getAllFriends();          //Socket listeners         socket.current.on(""connect"", () => {           console.log(""Connected"");         });          socket.current.on(""update-active-users"", (arr) => {           // console.log(""Listening updated users"");           setLocalOnline(arr);         });          socket.current.on(""join-room"", (roomID) => {           toast({             title: ""Enjoy Chatting with your freind"",             status: ""info"",             duration: 2000,             position: ""bottom"",           });         });          socket.current.on(""error"", (error) => {           toast({             title: error.name,             position: ""bottom"",             status: ""error"",             duration: 3000,             isClosable: true,             description: error.message,           });           if (             error.name === ""JsonWebTokenError"" ||             error.name === ""TokenExpiredError""           ) {             localStorage.removeItem(""token"");             navigate(""/auth"");             setIsAuthenticated(false);             return;           }         });        } else {         setIsAuthenticated(false);         navigate(""/auth"");       }     }      setLoading(true)     asyncInit()       .catch(() => {         ///TODO handle errors       })       .finally(() => {         setLoading(false) // remove loading from screen       });      return () => {       if (socket.current) {         socket.current.disconnect();         socket.current.on(""disconnect"", (id) => {           toast({             title: `User ${id} left the chat`,             duration: 2000,             status: ""info"",             position: ""bottom"",           });         });       }     };   }, []);   // Memoize the filtered list of online friends to avoid re-creating the reference   const filteredOnlineUsers = useMemo(() => {     return friends.filter(fr => localOnline.includes(fr.friend_id));   }, [friends, localOnline]);    useEffect(() => {     setOnlineUsers(filteredOnlineUsers.map(fr => fr.friend_id));        }, [filteredOnlineUsers, localOnline]);    // const online = useCallback(() => {   //   setIsRefresh(!isRefresh);   // }, [onlineUsers.length]);    // console.log(onlineUsers);    // online();   console.log(""Home Rendered"");   // console.log(""Friends in Home: "", friends);    if(loading){     return (       <div>loading...</div>     );   }    return (     <div className=""h-screen w-screen"">       <div className=""flex h-full w-full"">         <Suspense fallback={<Loader />}>           <SideBar />         </Suspense>         <div className="" h-full w-full bg-[#1F1F22]"">           <div className="" absolute  h-full overflow-hidden w-full"">             <Suspense fallback={<Loader />}>               <BG />             </Suspense>           </div>           <Outlet />         </div>       </div>     </div>   ); };  export default React.memo(Home); </code></pre>",1727597229.0,,true
"{'account_id': 10955059, 'reputation': 264, 'user_id': 8050147, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/UvCYM.jpg?s=256', 'display_name': 'ckifer', 'link': 'https://stackoverflow.com/users/8050147/ckifer'}",False,0,1727738555,1727738555,79041249,79034564,CC BY-SA 4.0,"<p>Recharts maintainer here, this is number interpolation. The distance between one time is different than the distance between another, hence why the distances are not even.</p> <p>Your axis is time which means it is a number. You can change your XAxis to <code>type=""category""</code> and it will be treated as a categorical domain. Your ticks will be evenly placed, but you will lose a few characteristics that make a number or time domain what they are.</p> <p>Your data will need to be sorted by time ascending in order for things to make sense and number interpolation will no longer work (i.e. I can't append 09:40 to my data and have it appear before tick 09:48)</p>",,,true
"{'account_id': 18503348, 'reputation': 125, 'user_id': 13480165, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GjisnUYJhBPVayB2-ZRTDdYrdEKE_ubQhc1EnX_=k-s256', 'display_name': 'thewebmasterp', 'link': 'https://stackoverflow.com/users/13480165/thewebmasterp'}",False,0,1727604743,1727604743,79036142,79034458,CC BY-SA 4.0,"<p>My Reply to Drew's answer,</p> <p>I think you're missing some JavaScript and event listeners fundamentals here.</p> <blockquote> <p>From what I understand and see of the code you've still N components calling the useBreakpoint hook which <strong>instantiates both a ""resize"" listener and a ""breakpointChange"" event listener</strong></p> </blockquote> <p>It doesn't actually instantiate both listeners for each call of the hook in a component. The <code>resize</code> event listener is <strong>instantiated and attached only once</strong>, contrary to your argument and this experiment proves it: <a href=""https://i.sstatic.net/JfxbXvY2.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/JfxbXvY2.png"" alt=""event listeners experiment"" /></a></p> <blockquote> <p>Move the handleResize handler into the useEffect hook callback body so it's not an external dependency.</p> </blockquote> <p>The point is that it has to be an external dependency for this to work, if we define it inside of the hook per your statement <strong>then a new instance will be created every time</strong>, just like the 2nd part of the example from the screenshot.</p> <blockquote> <p>Additionally, the useBreakpoint hook <strong>neglects to cleanup</strong> the ""resize"" listener.</p> </blockquote> <p>Considering the two statements I put above are right, this argument falls out of context. We now know that the <code>resize</code> event listener is a form of singleton, i.e it's shared among the whole application since it's responsible for firing the custom <code>breakpointChange</code> event.</p> <ul> <li><strong>Sidenote</strong>: A <code>breakpointChange</code> event listener is instantiated for each instance of the hook but the heavy breakpoint computation is left inside of the single <code>resize</code> event listener, so I think that's still better than having multiple duplicating <code>resize</code> listeners computing the same thing for each component on the screen that uses the hook (per the suggested refactor given in Drew's answer).</li> </ul> <p>To continue my statement before the sidenote, cleaning up the <code>breakpointChange</code> event listener inside of the <code>useEffect</code> is needed since it's instantiated for each instance of the hook, which however <strong>is not</strong> the case for the <code>resize</code> event listener, which is a singleton, a single instance that's re-used (shared) across the whole app to <strong>make a heavy computation once</strong> and <strong>distribute the result</strong> to all listeners attached to the <code>breakpointChange</code> event.</p>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,0,1727588196,1727586796,79035658,79034458,CC BY-SA 4.0,"<p>It's unclear <em>what</em> exactly you think you are optimizing here or how you get to <code>O(1)</code> constant time.</p> <p>From what I understand and see of the code you've still <em><strong>N</strong></em> components calling the <code>useBreakpoint</code> hook which instantiates both a <code>""resize""</code> listener <em><strong>and</strong></em> a <code>""breakpointChange""</code> event listener, so <em><strong>N</strong></em> <code>useBreakpoint</code> hook calls eventually trigger <em><strong>N</strong></em> <code>handleResize</code> and <code>handleBreakpointChange</code> calls. If anything this has created <em>more</em> work (<em>though by a constant amount, so <code>O(c * n)</code> or <code>c * O(n)</code> by your reckoning</em>) as compared to just doing the work in the <code>""resize""</code> event handler. Additionally, the <code>useBreakpoint</code> hook neglects to cleanup the <code>""resize""</code> listener.</p> <p><strong>Suggested Refactor</strong></p> <ul> <li>Remove the <code>""breakpointChange""</code> event dispatch and listener, all it does is map a <code>""resize""</code> event to a <code>""breakpointChange""</code> event.</li> <li>Properly maintain event listeners, including removing them when components unmount.</li> <li>Move the <code>handleResize</code> handler <em>into</em> the <code>useEffect</code> hook callback body so it's not an external dependency.</li> </ul> <pre class=""lang-js prettyprint-override""><code>import { useEffect, useState } from 'react'; import { BreakpointKey, getBreakpointKey } from '@/lib/breakpoints';  const useBreakpoint = () => {   const [breakpoint, setBreakpoint] = useState<BreakpointKey>('zr');    useEffect(() => {     const handleResize = () => {       const width = window.innerWidth;       const matchingBreakpoint = getBreakpointKey(width);       setBreakpoint(matchingBreakpoint);       // or setBreakpoint(getBreakpointKey(window.innerWidth));     };      window.addEventListener('resize', handleResize);      // Invoke once to set state for initial window width     handleResize();          return () => {       window.removeEventListener('resize', handleResize);     };   }, []);    return breakpoint; };  export default useBreakpoint; </code></pre>",1727588196.0,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,0,1727566192,1727565723,79035339,79034429,CC BY-SA 4.0,"<p>What makes you think the asynchronous code it not working? The code appears syntactically correct to me, I see no overt issues. If you are referring to the <code>console.log(success);</code> line after awaiting the dispatched action, this won't work as you are likely expecting because the submit handler call has a Javascript <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures"" rel=""nofollow noreferrer"">Closure</a> over the selected <code>success</code> from the time it is called. In other words, the callback can't possibly see any updated selected state values from outside the closure scope. If you really wanted to check the success value then access the current state value via <code>store.getState</code>.</p> <p>Basic example for demonstration, though you should avoid this generally.</p> <pre class=""lang-js prettyprint-override""><code>const store = useStore();  ...  const formik = useFormik({   initialValues,   validationSchema,   onSubmit: async (values) => {     await dispatch(login(values));     // get the current state value     console.log(store.getState().loginReducer.success);   }, }); </code></pre> <p><em><strong>But</strong></em> if all you really want to know, or verify, is that the login succeeds or fails from within the submit handler, the login logic could be improved to handle Promise rejections and errors better. See <a href=""https://redux-toolkit.js.org/api/createAsyncThunk#handling-thunk-results"" rel=""nofollow noreferrer"">Handling Thunk Results</a> and <a href=""https://redux-toolkit.js.org/api/createAsyncThunk#handling-thunk-errors"" rel=""nofollow noreferrer"">Handling Thunk Errors</a> for complete details.</p> <p>Update the <code>login</code> Thunk to catch and handle any fetching errors/issues, and return a rejection value (<em>typically the error or error message</em>).</p> <pre class=""lang-js prettyprint-override""><code>export const login = createAsyncThunk(   ""login/login"",   async (values, thunkApi) => {   try {     const { data } = await axios.post(       ""https://note-sigma-black.vercel.app/api/v1/users/signIn"",       values     );     return data;   } catch(error) {     return thunkApi.rejectWithValue(error);   } });  const loginSlice = createSlice({   name: ""login"",   initialState,   extraReducers: function (builder) {     builder.addCase(login.pending, (state) => {       state.loading = true;     });     builder.addCase(login.rejected, (state, action) => {       state.loading = false;       state.error = action.payload.message; // <-- error is now payload!     });     builder.addCase(login.fulfilled, (state, action) => {       state.loading = false;       state.token = action.payload.token;       state.success = true;       localStorage.setItem(""token"", action.payload.token);     });   }, }); </code></pre> <p>Update the submit handler to properly unwrap and handle the Thunk action result.</p> <pre class=""lang-js prettyprint-override""><code>const formik = useFormik({   initialValues,   validationSchema,   onSubmit: async (values) => {     try {       // Dispatch login action and await and unwrap the result       const data = await dispatch(login(values)).unwrap();       // Success, handle happy path and returned data     } catch(error) {       // Failure, handle sad path and error/rejection/etc     }   }, }); </code></pre> <p>If the <code>login</code> Thunk is successful, you'll continue in the <code>try</code> branch, otherwise if there are any thrown exceptions or the <code>login</code> Thunk rejects, the <code>catch</code> block is executed and you know the login was unsuccessful.</p>",1727566192.0,,true
"{'account_id': 28913750, 'reputation': 47, 'user_id': 22146200, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AAcHTtfJ9h3TG6NkTy05QcjkbTvgHK9nNJJYAXBQ7uToIdc7Yw=k-s256', 'display_name': 'Awesome Guy', 'link': 'https://stackoverflow.com/users/22146200/awesome-guy'}",False,-1,1727552551,1727552551,79035056,79034429,CC BY-SA 4.0,"<p>Here, your <code>console.log(success)</code> won't show the updated value immediately after the dispatch because React batches state updates for the next render. To track the updated state, you should use the <code>useEffect</code> hook with <code>success</code> in the dependency array. This ensures that <code>useEffect</code> runs after the component has re-rendered with the new state.</p> <p>While <code>dispatch</code> itself is synchronous, the state changes (and thus the component re-renders) happen asynchronously, meaning you can't make the code ""pause"" to reflect the updated state immediately after dispatch. However, <code>useEffect</code> ensures you can track the new <code>success</code> value after the render has occurred.</p>",,,true
"{'account_id': 27371279, 'reputation': 638, 'user_id': 20877284, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/fYDiC.jpg?s=256', 'display_name': 'Youth Dream', 'link': 'https://stackoverflow.com/users/20877284/youth-dream'}",False,0,1727533041,1727533041,79034402,79034385,CC BY-SA 4.0,"<p>If you received 429 (too many request) error status code, you can attempt to call the api again after some delay. I provide full code to handle this case.</p> <pre><code>const generateTags = async (text) => {   setLoading(true);   setIsOpen(true);    const options = {     method: ""POST"",     headers: {       ""Content-Type"": ""application/json"",       Authorization: `Bearer ${import.meta.env.VITE_OPENAI_API_KEY}`,     },     body: JSON.stringify({       model: ""gpt-3.5-turbo"",       messages: [         {           role: ""user"",           content: `Generate a list of relevant, SEO-friendly tags from this YouTube video title: ""${text}"". Make all letters lowercase and separate the tags with commas.`,         },       ],       temperature: 0.5,       max_tokens: 60,       frequency_penalty: 0.8,     }),   };    try {     const response = await fetch(import.meta.env.VITE_OPENAI_API_URL, options);      // Here, handle 429 status code to call the api after some delay     if (response.status === 429) {       const retryAfter = response.headers.get(""Retry-After"") || 1;       await new Promise((resolve) => setTimeout(resolve, retryAfter * 1000));       return generateTags(text); // Retry the request after waiting     }      if (!response.ok) {       throw new Error(`Error: ${response.statusText}`);     }      const json = await response.json();     if (json.choices && json.choices.length > 0) {       const data = json.choices[0].text.trim();       setTags(data);     } else {       throw new Error(""No tags generated."");     }   } catch (error) {     console.error(""Error generating tags:"", error);     setTags(""Failed to generate tags. Please try again."");   } finally {     setLoading(false);   } }; </code></pre>",,,true
"{'account_id': 21450116, 'reputation': 70, 'user_id': 15802748, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/lxAjE.jpg?s=256', 'display_name': '10x engineer', 'link': 'https://stackoverflow.com/users/15802748/10x-engineer'}",True,1,1728408869,1727533977,79034434,79034212,CC BY-SA 4.0,"<p>Use the <code>react-element-to-jsx-string</code> npm package and <code>true</code> Npm package and use like this:</p> <pre class=""lang-js prettyprint-override""><code> import React from ""react""; import Button from ""./Button.js""; import reactElementToJSXString from ""react-element-to-jsx-string"";  export default function App() {   var jsx = (     <div className=""App"">       {/*Hi*/}       {console.log(""what"")}       <h1 a={7}>test</h1>       <h2>h2</h2>       <Button />     </div>   );   return <pre>{ reactElementToJSXString(jsx, { showFunctions: true }) }</pre>; }  </code></pre> <p>which displays to the user:</p> <pre class=""lang-none prettyprint-override""><code><div className=""App"">   <h1 a={7}>     test   </h1>   <h2>     h2   </h2>   <Connect(Button) /> </div> </code></pre> <p>Actually you can just do <code>App.toString()</code> and i think it will work</p>",1728408869.0,,true
"{'account_id': 247108, 'reputation': 5273, 'user_id': 521624, 'user_type': 'registered', 'accept_rate': 71, 'profile_image': 'https://www.gravatar.com/avatar/579b240041b084d221aaf999e0de2929?s=256&d=identicon&r=PG', 'display_name': 'Guillaume Brunerie', 'link': 'https://stackoverflow.com/users/521624/guillaume-brunerie'}",False,2,1727639119,1727637786,79037208,79034212,CC BY-SA 4.0,"<p>In Vite you can import a file directly as a string by adding <code>?raw</code> to the import path, and then embed this string in your HTML:</p> <pre class=""lang-js prettyprint-override""><code>import { Counter } from ""./Counter""; import counterSrc from ""./Counter?raw"";  export const App = () => {   return (     <div>       <Counter/>       <pre>{counterSrc}</pre>     </div>   ); }; </code></pre> <p>Of course you can do any kind of processing you want on that string, for instance if you want to remove imports, etc.</p>",1727639119.0,,true
"{'account_id': 31300936, 'reputation': 11, 'user_id': 24113076, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/62e29945e3db0fe8d13c044d0aee0fcc?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Nix Champ', 'link': 'https://stackoverflow.com/users/24113076/nix-champ'}",False,1,1727528912,1727528912,79034269,79034212,CC BY-SA 4.0,"<p>No, it's not possible to get the JSX/TSX of a React component from the code itself. This is because JSX/TSX is a syntax extension for JavaScript and it's not a part of the JavaScript runtime. When your code is transpiled, the JSX/TSX syntax is transformed into JavaScript code that creates React elements. The original JSX/TSX code is not preserved in the transpiled output.</p>",,,true
"{'account_id': 3096314, 'reputation': 388, 'user_id': 2621411, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/XrhGf.png?s=256', 'display_name': 'inspiredMichael', 'link': 'https://stackoverflow.com/users/2621411/inspiredmichael'}",False,0,1727538534,1727538534,79034597,79034092,CC BY-SA 4.0,"<p>You should enable CORS in your React API and try it again. Additionally, you can add a proxy in your web app since it runs locally. Ensure the API is publicly available.</p>",,,true
"{'account_id': 14588149, 'reputation': 1175, 'user_id': 10536232, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-esWCOSge7t0/AAAAAAAAAAI/AAAAAAAAAAs/EcUKJynKuW8/photo.jpg?sz=256', 'display_name': 'Scott Z', 'link': 'https://stackoverflow.com/users/10536232/scott-z'}",False,0,1727526823,1727526823,79034193,79034058,CC BY-SA 4.0,"<p>Here are two ways to solve this.</p> <h3>#1</h3> <p>We make the child component imperatively navigate when setting state.  I don't like the idea of multiple children listening to state and navigating when state changes, so I would completely remove the <code>useEffect</code>  from the children.</p> <pre><code> // Child Component 'use client'; import { useRouter } from 'next/navigation'; import { useContext } from 'react'; import { MyContext } from '../context-provider';  export default function Child() {   let { setMyList } = useContext(MyContext);   const router = useRouter();    const handleUpdate = ()=>{     setMyList((prev)=> ([...prev, '2']))     router.push(""/another"")   }    return (     <div>       <button type='button' onClick={handleUpdate}>         Update state and Navigate       </button>     </div>   ); } </code></pre> <h3>#2</h3> <p>If you truly need to listen for state changes before navigating we can  make the parent more declarative.  We remove not only the <code>useEffect</code> but also the routing from the children and lift it all up to the parent.</p> <pre><code>// Context Provider  import { createContext, useEffect, useState } from 'react'; export let MyContext = createContext();  let initList = ['1']; // initial state  export default function MyProvider({ children }) {   const [myList, setMyList] = useState(initList);   const router = useRouter();    useEffect(()=>{     if(myList === initList) return;     router.push(""/another"")   },[myList, router, initList])    const context = { myList, setMyList };   return (     <MyContext.Provider value={context}>       {children}     </MyContext.Provider>   ); } </code></pre> <p>There are plenty of other ways to solve this as well.</p>",,,true
"{'account_id': 27805385, 'reputation': 502, 'user_id': 21228906, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AEdFTp7nQFe_-K5dW867LYgQlkpHzLn4ejGExlbEliWC=k-s256', 'display_name': 'Ravi Yadav', 'link': 'https://stackoverflow.com/users/21228906/ravi-yadav'}",True,0,1727523731,1727523731,79034097,79034054,CC BY-SA 4.0,"<p>You can use conditional rendering inside returned jsx using the ternary operator. Show the field when option variable value is ""yes"", null otherwise.</p> <pre><code>import React, { useState } from 'react';  function S() {   const options = [     { label: ""no"", value: ""no"" },     { label: ""yes"", value: ""yes"" },   ];    const [option, setOption] = useState();    const handleOptionChange = (e) => {     setOption(e.target.value);   };    return (     <div className=""App"">       <div className=""container text-center"">         <h3>Creator device</h3>         <form>           <div className=""row mb-3"">             <label className=""col-sm-2 col-form-label"" id=""finish"">               <h5>other device?</h5>             </label>             <div class=""col-sm-10"">               <select class=""form-select"" onChange={handleOptionChange}>                 {options.map((option) => (                   <option value={option.value}>{option.label}</option>                 ))}               </select>             </div>           </div>            {option === ""yes"" ? (             <div className=""row mb-3"">               <label className=""col-sm-2 col-form-label"" id=""show"">                 <h5> show other device</h5>               </label>               <div class=""col-sm-10"">                 <input type=""group"" className=""form-control"" id=""inputMB_sn"" />               </div>             </div>           ) : null}         </form>       </div>     </div>   ); } </code></pre>",,,true
"{'account_id': 22360145, 'reputation': 78, 'user_id': 16576795, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/6mAR1.jpg?s=256', 'display_name': 'mertk', 'link': 'https://stackoverflow.com/users/16576795/mertk'}",False,1,1727524981,1727524981,79034132,79033928,CC BY-SA 4.0,<p>In Next.js projects <code>/components</code> folder is outside Next project folder. Thats why it does not allow default export. You should only use default export for Pages.</p> <pre><code>export AgentsPage; </code></pre>,,,true
"{'account_id': 15000107, 'reputation': 557, 'user_id': 10828054, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/tEPnX.jpg?s=256', 'display_name': 'ink', 'link': 'https://stackoverflow.com/users/10828054/ink'}",False,0,1727708484,1727708484,79039950,79033583,CC BY-SA 4.0,"<p>The framework uses shadow DOM, which will automatically generate two layers of div container nodes. I found the two node IDs in the web inspector, and then manually added height: 100% in style.css. As follows:</p> <pre class=""lang-css prettyprint-override""><code>#plasmo-shadow-container {     height: 100%; }  #plasmo-inline {     height: 100%; } </code></pre> <p><img src=""https://cdn.discordapp.com/attachments/946290204904390690/1289776999052607588/image.png?ex=66fc082f&is=66fab6af&hm=21c522bfd95aee68bf4dfc473c00caa430dda5dc2a2262083d65e58dc8e21ec5&"" alt="""" /></p>",,,true
"{'account_id': 10955059, 'reputation': 264, 'user_id': 8050147, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/UvCYM.jpg?s=256', 'display_name': 'ckifer', 'link': 'https://stackoverflow.com/users/8050147/ckifer'}",False,0,1727739325,1727739325,79041269,79032861,CC BY-SA 4.0,"<p>It looks like <code>x</code> and <code>y</code> are not coming through and your label is being rendered in the top left because of your <code>x={-6}</code> <code>y={14}</code> on the <code>foreignObject</code>. Guard against not having <code>x</code> or <code>y</code> values sent and that should get rid of having phantom labels.</p> <hr /> <p>On to why your labels aren't rendering in the right place.</p> <p>Recharts tries to only show the labels that fit in the space provided. When there is less left in the SVG it will hide them. If they are rendering outside of the SVG you won't be able to see them anyways, so that is pre-calculated and hidden. There is also a chance that your set <code>width</code> is too large/static and that is causing the overlap to happen. You'll have to scale down your custom label until it fits.</p> <p>First things I would do would be trying to set <code>interval={0}</code> on your <code>XAxis</code> and increasing <code>margin</code> on the bottom.</p>",,,true
"{'account_id': 30415143, 'reputation': 1, 'user_id': 23308125, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocKgRE72Og_XaTn-400YoRKuG6KaPN9XkpfDLjtWcOmu=k-s256', 'display_name': 'Ali Aamir', 'link': 'https://stackoverflow.com/users/23308125/ali-aamir'}",False,0,1727479502,1727479502,79033146,79032772,CC BY-SA 4.0,"<p>return type is missing in BirthdayField, There are other issues with the snippet you provided,value is not defined anywhere and you need to pass a callback function instead of onChange from react</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function BirthdayField() {    return (     <select className='bd-form' name='year' onChange={()=>{}} value={year}>       <option value='0'>Year</option>       {dropdownYear()}     </select>   ); }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.2.0/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.2.0/umd/react-dom.production.min.js""></script></code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 7780237, 'reputation': 747, 'user_id': 5886869, 'user_type': 'registered', 'accept_rate': 45, 'profile_image': 'https://lh6.googleusercontent.com/-Inczo6hMb4o/AAAAAAAAAAI/AAAAAAAAAA0/cLwY4GFpa5A/photo.jpg?sz=256', 'display_name': 'Prasad Patel', 'link': 'https://stackoverflow.com/users/5886869/prasad-patel'}",True,0,1728025009,1727463227,79032602,79032492,CC BY-SA 4.0,"<p>Below fix worked for me</p> <pre><code>const handleTimeChange = (time) => {     let timeValue = default4PM     if(time) {         timeValue = dayjs(time).format('hh:mm A')     }     setMyTimePicker(timeValue) } const default4PM = dayjs().hour(16).minute(0).second(0).format('hh:mm A') <TimePicker label=""Time"" value={myStateVariableTime ? dayjs(myStateVariableTime, 'hh:mm A') : default4PM}    onChange={(newValue) => setMyTimePicker(newValue)}    slotProps={{                textField: {                   readOnly: true                },              }} /> </code></pre>",1728025009.0,,true
"{'account_id': 35988964, 'reputation': 1, 'user_id': 27509112, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/35787df2905a2560d3d96a9185b9e5f5?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Filip Konig', 'link': 'https://stackoverflow.com/users/27509112/filip-konig'}",True,0,1728568034,1728568034,79074715,79032119,CC BY-SA 4.0,"<p>I found out the solution. You have to expect T to be an array, not element of an array.</p> <pre><code>type TTranslationResult<T> = T extends (number | string)[]   ? string   : ReactNode | ReactNode[];  export default function translate<T extends ReactNode[] = string[]>(   key: TDictionaryKey,   ...params: T ): TTranslationResult<T> { {  ...  } </code></pre>",,,true
"{'account_id': 1091946, 'reputation': 11127, 'user_id': 1086398, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/3edfa49328efffd9d8e76a0487f1d703?s=256&d=identicon&r=PG', 'display_name': 'adsy', 'link': 'https://stackoverflow.com/users/1086398/adsy'}",True,0,1727465169,1727465169,79032676,79032099,CC BY-SA 4.0,"<p>The problem is that <code>NavbarDropdown</code> is not wrapped in <code>forwardRef</code>.</p> <p>The <a href=""https://www.framer.com/motion/animate-presence/#:%7E:text=Custom%20component%20note"" rel=""nofollow noreferrer"">docs state</a>:</p> <blockquote> <p>Custom component note: When using popLayout mode, any immediate child of AnimatePresence that's a custom component must be wrapped in React's forwardRef function, forwarding the provided ref to the DOM node you wish to pop out of the layout.</p> </blockquote> <p>You are using a custom component (<code>NavbarDropdown</code>) as the immediate child of <code>AnimatePresence</code> and you are also using <code>popLayout</code> mode:</p> <pre><code><AnimatePresence mode=""popLayout"">     {isNavbarActive && <NavbarDropdown />} </AnimatePresence> </code></pre> <p>So this constraint applies to you.</p> <p>To fix, wrap <code>NavbarDropdown</code> with <code>forwardRef</code> and apply that ref on the element you want to ""pop"". I have assumed here its the first element within <code>NavbarDropdown</code>.</p> <pre><code>const NavbarDropdown = forwardRef<HTMLDivElement, {}>((props, ref) => {   const dropdownVariants = {     initial: {       opacity: 0,       height: 0,     },     enter: {       opacity: 1,       height: ""14rem"",       transition: {         ease: [0.83, 0, 0.17, 1],         duration: 0.5,         staggerChildren: 0.1,         staggerDirection: 1,         delayChildren: 0.2,         // Stagger the li children after the dropdown opens       },     },     exit: {       height: 0,       transition: {         ease: [0.83, 0, 0.17, 1],         staggerChildren: 0.1, // Stagger the li children on exit as well         staggerDirection: -1,         delay: 0.3,         // Reverse the direction (exit from bottom to top)         // Delay before shrinking the dropdown after the li items       },     },   };    const liVariants = {     initial: {       opacity: 0,       x: -50,     },      enter: {       opacity: 1,       x: 0,       transition: {         ease: [0.22, 1, 0.36, 1],         duration: 0.5,       },     },      exit: {       opacity: 0,       x: -50,       transition: {         ease: [0.22, 1, 0.36, 1],       },     },   };    return (     <motion.div       ref={ref}       variants={dropdownVariants}       initial=""initial""       animate=""enter""       exit=""exit""       className=""absolute origin-top top-[4.6rem] w-full bg-white drop-shadow-lg""     >       <motion.ul className=""space-y-5 px-3"">         {navlins.map((navlin, index) => (           <motion.li             custom={index}             key={index}             variants={liVariants} // Apply variants to each li item             className=""text-gray-600 text-[1em] font-normal flex items-center gap-5""           >             {navlin}             {index === 0 || index === 1 ? (               <IoMdArrowDown size={24} color=""gray"" />             ) : (               <></>             )}           </motion.li>         ))}       </motion.ul>     </motion.div>   ); }); </code></pre>",,,true
"{'account_id': 35608447, 'reputation': 1, 'user_id': 27304483, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/28f687ab56f0ad977a1bc34ec7e58786?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Santhosh Bhoopal', 'link': 'https://stackoverflow.com/users/27304483/santhosh-bhoopal'}",False,0,1727448176,1727448176,79031828,79031810,CC BY-SA 4.0,<p>You can just put the images in a public folder at root and access the images using a path and you wouldn't need to use the remote pattern no?</p>,,,true
"{'account_id': 15576879, 'reputation': 308, 'user_id': 11237774, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-6bBnrOqFUGc/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdmrKT6xO8VED2rzZKYrZZzUW83YA/mo/photo.jpg?sz=256', 'display_name': 'Chris', 'link': 'https://stackoverflow.com/users/11237774/chris'}",False,0,1727466305,1727466305,79032726,79031774,CC BY-SA 4.0,"<p>I had to create a <em>test.environement</em> file to mock that functionality.</p> <p>My environment is configured for ECMAScript modules so in my jest config file, I added:</p> <pre><code>testEnvironment: './test.environment.mjs', </code></pre> <p>And then the <em>test.environment.mjs</em> file contains:</p> <pre><code>import { TestEnvironment } from 'jest-environment-jsdom';  export default class CustomEnvironment extends TestEnvironment {     async setup() {        await super.setup();        // Add globals that are on real browsers and Node 18+, but aren't in Jest's builtin environments.        this.global.Blob = Blob;        this.global.fetch = fetch;        this.global.File = File;        this.global.FormData = FormData;        this.global.Headers = Headers;        this.global.Request = Request;        this.global.Response = Response;        this.global.TextEncoder = TextEncoder;        this.global.TextDecoder = TextDecoder;     } } </code></pre> <p>If you are using commonJS then just change the file extension to <em>.js</em> and make the contents of the environment file something along the lines of:</p> <pre><code>const Environment = require(""jest-environment-jsdom"").default;  module.exports = class CustomTestEnvironment extends Environment {     async setup() {         await super.setup();         this.global.TextEncoder = TextEncoder;         this.global.TextDecoder = TextDecoder;         this.global.Response = Response;         this.global.Request = Request;          } }; </code></pre>",,,true
"{'account_id': 6763304, 'reputation': 153, 'user_id': 9538308, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/LsrMA.jpg?s=256', 'display_name': 'Ender Bonnet', 'link': 'https://stackoverflow.com/users/9538308/ender-bonnet'}",False,1,1727446043,1727446043,79031703,79031702,CC BY-SA 4.0,"<p>I'm working around it by adding these lines in my <code>vite.config.ts</code> file:</p> <pre><code>...   optimizeDeps: {     exclude: [""@node-rs/argon2-darwin-arm64"", ""@node-rs/bcrypt-darwin-arm64""],   }, ... </code></pre>",,,true
"{'account_id': 25616431, 'reputation': 34, 'user_id': 19388968, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/574f51b0121166315ce95402aace9be1?s=256&d=identicon&r=PG', 'display_name': 'ascender', 'link': 'https://stackoverflow.com/users/19388968/ascender'}",True,1,1727447836,1727447836,79031805,79031660,CC BY-SA 4.0,"<p>Try to call <code>router.refresh()</code> after setting cookies via a server action. Look at the docs <a href=""https://nextjs.org/docs/app/building-your-application/caching#routerrefresh"" rel=""nofollow noreferrer"">https://nextjs.org/docs/app/building-your-application/caching#routerrefresh</a></p> <p>In there it says that the refresh option of the useRouter hook can be used to manually refresh a route. This completely clears the Router Cache, and makes a new request to the server for the current route. refresh does not affect the Data or Full Route Cache.</p> <p>The rendered result will be reconciled on the client while preserving React state and browser state.</p>",,,true
"{'account_id': 22764972, 'reputation': 575, 'user_id': 16923160, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/QdPqFHnZ.jpg?s=256', 'display_name': 'vzsoares', 'link': 'https://stackoverflow.com/users/16923160/vzsoares'}",False,1,1727633157,1727621643,79036672,79031599,CC BY-SA 4.0,"<p>In order to successfully achieve this we must <a href=""https://github.com/jquense/yup?tab=readme-ov-file#customizing-errors"" rel=""nofollow noreferrer"">customize our error</a>. So remove the <code>.required</code> and do it the error yourself using <code>ctx</code>.</p> <pre class=""lang-ts prettyprint-override""><code>const validationSchema = Yup.object({   barcodes: Yup.array().of(     Yup.object().shape({       code: Yup.string()         //.required(""Barcode is required"") Remove         .test(         ""checkBarcodeExists"",         ""Barcode does not exist"",         async (value, ctx) => {           if (!value) // Solution!!             return ctx.createError({ message: ""Barcode is required"" });            // add delay           await new Promise((resolve) => setTimeout(resolve, 2000));            // fake it, that validations failed           return false;         }       ),     })   ), }); </code></pre> <p>Edit: Extending the solution as you commented. You can use <a href=""https://github.com/jquense/yup?tab=readme-ov-file#composition-and-reuse"" rel=""nofollow noreferrer"">Composition and Reuse</a> to reuse other validations you already have. Example:</p> <pre class=""lang-ts prettyprint-override""><code>const stringBoundsSchema = Yup.string().min(2).max(10).defined(); ... // inside .test             if (!stringBoundsSchema.isValid(value))               return ctx.createError({ message: ""Out of bounds"" });  </code></pre> <p>EditÂ²: If you want to keep the message from the other schema you have to access them like this:</p> <pre class=""lang-ts prettyprint-override""><code>          const stringBoundsSchemaResult = await stringBoundsSchema             .validate(value)             .then(() => false)             .catch((e) => e.errors.join("", ""));           if (stringBoundsSchemaResult)             return ctx.createError({ message: stringBoundsSchemaResult }); </code></pre> <blockquote> <p>if you want to have a of max one message pass a <code>option</code> param to validate like: <code>.validate(value, { abortEarly: true });</code></p> </blockquote>",1727633157.0,,true
"{'account_id': 35857390, 'reputation': 21, 'user_id': 27438352, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/065e59d58bcc8798bd07f05e1a24c132?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Vitalina Baryshpolets', 'link': 'https://stackoverflow.com/users/27438352/vitalina-baryshpolets'}",False,0,1727878569,1727878569,79047167,79031222,CC BY-SA 4.0,"<p>Here's how I solved a situation in my gatsby-config:</p> <pre><code>{             singularName: ""page"",             queryParams: {               populate: {                 sections: {                   populate: [                     ""list.image"",                     ""list.page"",                     ""list.thumbnail"",                     ""cta"",                     ""images"",                     ""image"",                   ],                 },               },             },           },`  </code></pre>",,,true
"{'account_id': 12952688, 'reputation': 529, 'user_id': 9364466, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/q9XRa.png?s=256', 'display_name': 'siva.picky', 'link': 'https://stackoverflow.com/users/9364466/siva-picky'}",False,0,1727786008,1727786008,79043169,79031222,CC BY-SA 4.0,"<p>This gatsby-source-strapi plugin only take 2 level not take multi level. so we need to mention in the gatsby-config.js gatsby-source-strapi plugin config like below.</p> <pre><code>        {         singularName: 'partner',         queryParams: {           populate: {             'list': {               populate: {                                    'image':{                   populate: ""*""                 },               }             }      } </code></pre> <p>I think this will help you.</p>",,,true
"{'account_id': 18881392, 'reputation': 21, 'user_id': 13773709, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/661d01033e3f7556ad5223444d47ba9c?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Sahil Gupta', 'link': 'https://stackoverflow.com/users/13773709/sahil-gupta'}",False,0,1727777833,1727777833,79042682,79030973,CC BY-SA 4.0,"<p>The error message you're encountering, a 400 Bad Request, suggests that there is an issue with the request body you are sending to the server. Specifically, it indicates that the server could not process the request due to invalid syntax, likely because the format or data in the request body doesn't match what the server expects.</p> <p>400 status code indicate user error Bad Request message indicate your request body is not matching with requirement.</p> <p>please debug username, password you are getting from request.body, is this same as you are entering in login form</p> <p>console.log(""Username:"", username); console.log(""Password:"", password);</p>",,,true
"{'account_id': 6686335, 'reputation': 191103, 'user_id': 5157454, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-QPadFFLbBGA/AAAAAAAAAAI/AAAAAAAADB8/FkNCMP_vkAc/photo.jpg?sz=256', 'display_name': 'Ori Drori', 'link': 'https://stackoverflow.com/users/5157454/ori-drori'}",True,2,1727523516,1727451975,79032094,79030958,CC BY-SA 4.0,"<p>Destructure the <code>RegExp</code> to the <code>source</code> and <code>flags</code> properties. Use them as the dependencies for the <code>useEffect</code>, and then rebuild the <code>RegExp</code>:</p> <pre><code>function useRegexValidate(value: string, regex: RegExp, errorMessage: string, deps: any[] = []): ValidationResult {   // destructure the regex to strings   const { source, flags } = regex;    const [result, setResult] = useState<ValidationResult>(ValidationResult.Valid);    useEffect(() => {     const currentRegex = new RegExp(source, flags); // rebuild the RegExp          if (!currentRegex.test(value)) {       setResult(new ValidationResult(false, errorMessage));     } else {       setResult(ValidationResult.Valid);     }   }, [value, source, flags, errorMessage, ...deps]) // use source and flags as dep    return result; } </code></pre> <p>However, as <a href=""https://stackoverflow.com/questions/79030958/react-hooks-and-comparing-object-references/79032094#comment139350022_79030958"">adsy suggest</a>, since the <code>result</code> is a computed value, you don't need to cause a re-render by using the <code>useState</code> and <code>useEffect</code> combo. It's better to just compute it, and if it's a costly computation, wrap it in <code>useMemo</code>:</p> <pre><code>function useRegexValidate(value: string, regex: RegExp, errorMessage: string, deps: any[] = []): ValidationResult {     return regex.test(value)     ? ValidationResult.Valid     : new ValidationResult(false, errorMessage); } </code></pre> <p>Or wrap with <code>useMemo()</code> if needed:</p> <pre><code>function useRegexValidate(value: string, regex: RegExp, errorMessage: string, deps: any[] = []): ValidationResult {   // destructure the regex to strings   const { source, flags } = regex;      return useMemo(() =>      new RegExp(source, flags).test(value)     ? ValidationResult.Valid     : new ValidationResult(false, errorMessage)   , [value, source, flags, errorMessage]); } </code></pre>",1727523516.0,,true
"{'account_id': 18282742, 'reputation': 3093, 'user_id': 13311273, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GhDN1-9fMTc1eWRay_inGJFCldR3IfJHW1I5ixIiQ=k-s256', 'display_name': 'Oki', 'link': 'https://stackoverflow.com/users/13311273/oki'}",False,1,1727487554,1727450177,79031983,79030958,CC BY-SA 4.0,"<blockquote> <p>because one would need to remember to call it in a specific way</p> </blockquote> <p>Well, of course. This is React, it is a responsibility of the developer to keep track of everything. That is why <code>useMemo</code>, <code>useCallback</code> and the dependency array exist</p> <p>You can use a library like <code>yup</code> to help you validate</p> <p>If you don't want to use library, for your problem, you might not need an effect</p> <pre><code>const regexValidate = (value, regex) =>   regex.test(value) </code></pre> <p>You don't need effect, you don't need state, you don't need custom hook, you don't even need an utility function. Just validate it in the body of the component <code>const error = regex.test(value) ? '' : errorMessage</code></p> <p>Validating it on each render is probably way more optimized than calling <code>useEffect</code> on each render.</p> <p>There is a compiler for react, that I think is not stable yet, but it might help you with the keeping the reference of the regex between the renders</p>",1727487554.0,,true
"{'account_id': 6859767, 'reputation': 6613, 'user_id': 5274205, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d3a281a1418dbceeda34cc93d3744554?s=256&d=identicon&r=PG', 'display_name': 'Chad S.', 'link': 'https://stackoverflow.com/users/5274205/chad-s'}",False,0,1727473252,1727473252,79032982,79030958,CC BY-SA 4.0,"<p>There is no reason to use state for this... This is a classic case of <a href=""https://react.dev/learn/you-might-not-need-an-effect#caching-expensive-calculations"" rel=""nofollow noreferrer"">deriving state</a>. The proper way to implement this is with a memo:</p> <pre class=""lang-js prettyprint-override""><code>export const useRegexValidate = (   value: string,   regex: string, ) => {   return useMemo(() => {     const regexObj = new RegExp(regex);     return regexObj.test(value);   }, [value, regex]); }; </code></pre> <p>Though even this memo is probably overkill and you can just recompute the validation on render.</p>",,,true
"{'account_id': 7234429, 'reputation': 1825, 'user_id': 10489887, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/oTVVFJLA.jpg?s=256', 'display_name': 'mrconcerned', 'link': 'https://stackoverflow.com/users/10489887/mrconcerned'}",True,-1,1727433093,1727433093,79030930,79030852,CC BY-SA 4.0,"<p>You need to check following on your <code>updateCompany</code> function:</p> <ol> <li>if <code>response.ok</code> is actually triggered</li> <li>if <code>updatedCompany</code> actually returns something,</li> <li>if <code>updatedCompanies</code> gives right result,</li> <li>else <code>setError</code> to right error from backend</li> </ol> <pre><code>async function updateCompany(e) {     e.preventDefault();      try {         const response = await fetch(`http://localhost/api/contacts/${contact.id}/companies/${company.company_id}`, {             method: 'PUT',             headers: {                 'Content-Type': 'application/json',             },             body: JSON.stringify({                 company_name: editedName,                 company_address: editedAddress,             }),         });          if (!response.ok) {             throw new Error(`Failed to update company: ${response.status} ${response.statusText}`);         }          const updatedCompany = await response.json();          if (!updatedCompany || !updatedCompany.company_id) {             throw new Error('Invalid data received from server');         }          // Update the company in the state         const updatedCompanies = companies.map((c) =>             c.company_id === updatedCompany.company_id ? updatedCompany : c         );         setCompanies(updatedCompanies);          setIsEditing(false);       } catch (error) {         console.error('Error updating company:', error);         alert(`An error occurred while updating the company: ${error.message}`);     } } </code></pre> <p>As a bonus, it is always good to use <code>try/catch</code>.</p>",,,true
"{'account_id': 35939592, 'reputation': 3, 'user_id': 27482567, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/29b72528c7c7cb957641559512a2cd88?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'David P', 'link': 'https://stackoverflow.com/users/27482567/david-p'}",True,0,1727444682,1727444682,79031626,79030840,CC BY-SA 4.0,"<p>I found the issue, I primarily needed to bring the return to a lower level in the code. And my issue trying to set tabContent was also from incorrectly referencing list.current instead of list.Current</p>",,,true
"{'account_id': 1815075, 'reputation': 9869, 'user_id': 1650337, 'user_type': 'registered', 'accept_rate': 88, 'profile_image': 'https://i.sstatic.net/xOwgU.png?s=256', 'display_name': 'DBS', 'link': 'https://stackoverflow.com/users/1650337/dbs'}",True,2,1727431979,1727431979,79030872,79030834,CC BY-SA 4.0,"<p>You're resetting your state immediately after updating it:</p> <pre><code>setEnteredValues(prevValues => ({   ...prevValues,   [identifier]: {     value: value,     ...prevValues[identifier] // This is overwriting the value change above   } })) </code></pre> <p>Reverse those two lines for:</p> <pre><code>setEnteredValues(prevValues => ({   ...prevValues,   [identifier]: {     ...prevValues[identifier],     value: value,   } })) </code></pre>",,,true
"{'account_id': 36013588, 'reputation': 1, 'user_id': 27520930, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/600c9c01889306f8c823f175b9cecdc1?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Karina Bavishi', 'link': 'https://stackoverflow.com/users/27520930/karina-bavishi'}",False,0,1727528377,1727528377,79034246,79030506,CC BY-SA 4.0,"<p>I encountered the same issue yesterday, but it resolved itself today without any changes. It might have been a temporary problem with the Razorpay CDN. If the issue persists, try clearing the browser cache or check if there are any updates on the Razorpay side.</p>",,,true
"{'account_id': 19572919, 'reputation': 19, 'user_id': 14323653, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d356d0afbb31b25a3a0e139598dd9c1a?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'VMS', 'link': 'https://stackoverflow.com/users/14323653/vms'}",False,-1,1727435004,1727435004,79031067,79030506,CC BY-SA 4.0,"<p>From your index.html remove</p> <pre><code><script src=""https://checkout.razorpay.com/v1/razorpay.js""></script> </code></pre> <p>and replace it with</p> <pre><code><script type=""text/javascript"" src=""https://checkout.razorpay.com/v1/razorpay.js""></script> </code></pre>",,,true
"{'account_id': 16276366, 'reputation': 85, 'user_id': 11753442, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e83ed6fba8e382344e7be003fb55ee08?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Ethylion', 'link': 'https://stackoverflow.com/users/11753442/ethylion'}",False,0,1727428473,1727428473,79030666,79030351,CC BY-SA 4.0,"<p>Back-tick (`) instead of Single quote (') Copy the whole code here</p> <pre><code>useEffect(() => {     const fetchUsers = () => {       if (searchTerm.trim() === '') {         setSuggestions([]);         return;       }       fetch(`https://dummyjson.com/users/search?q=${searchTerm}`)         .then((res) => {           res.json();         })         .then((data) => setSuggestions(data))         .catch((err) => {           console.log('error', err);         });     };     fetchUsers();   }, [searchTerm]); </code></pre> <p>In JavaScript, backticks (`) are used to create template literals</p> <p>reference: <a href=""https://www.dhiwise.com/post/unlock-the-power-of-js-backtick-template-literals-for-react"" rel=""nofollow noreferrer"">https://www.dhiwise.com/post/unlock-the-power-of-js-backtick-template-literals-for-react</a></p>",,,true
"{'account_id': 5078059, 'reputation': 557, 'user_id': 4074931, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/XyMdZ.jpg?s=256', 'display_name': 'Munir Khakhi', 'link': 'https://stackoverflow.com/users/4074931/munir-khakhi'}",False,1,1727424377,1727424377,79030433,79030351,CC BY-SA 4.0,"<p>Problem is you are using <code>'</code> instead of ` So, your code should be</p> <pre><code>fetch(`https://dummyjson.com/users/search?q=${searchTerm}`)         .then((res) => {           res.json();         })         .then((data) => setSuggestions(data))         .catch((err) => {           console.log('error', err);         }); </code></pre> <p>Ref: <a href=""https://stackoverflow.com/questions/47067319/back-tick-vs-single-quote-in-js"">Back-tick vs single quote in js</a></p>",,,true
"{'account_id': 19750108, 'reputation': 166, 'user_id': 14461636, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/fc3b95bc8481e68b4079df3e423311ca?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Forge', 'link': 'https://stackoverflow.com/users/14461636/forge'}",True,1,1727681646,1727681646,79038347,79030230,CC BY-SA 4.0,"<p>please refer to <a href=""https://inertiajs.com/file-uploads#multipart-limitations"" rel=""nofollow noreferrer"">inertiajs doc</a> in the <strong>Multipart limitations</strong> it shows that you have to use the post method, and then add this<code>_method: 'put'</code> to your FormData. also refer to <a href=""https://stackoverflow.com/questions/77211977/cannot-upload-images-on-update-method-laravel-vue-inertia"">this question</a></p>",,,true
"{'account_id': 29850650, 'reputation': 61, 'user_id': 22876606, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocJ5cBkYaPjNqlb9C-RaWANs2ZfpQZL0Y6bJFDrJiOFG=k-s256', 'display_name': 'James', 'link': 'https://stackoverflow.com/users/22876606/james'}",True,3,1727420812,1727420812,79030212,79029827,CC BY-SA 4.0,"<p>You simply need to change the positioning of your Bottombar from <code>sticky</code> to <code>fixed</code>.</p> <p>The reason for this is that <strong>sticky positioning</strong> is used in <em>scrollable</em> elements where you want to make an element ""stick"" at a position rather than be scrolled out of view. As you have it now, when there isn't a lot of content, main isn't tall enough to be scrolled and thus doesn't ""stick"". When you set the Card to <code>min-h-screen</code>, main stretches beyond the screen height and thus your Bottombar could now stick to the position set (bottom:0) and appear to be working. <strong>Fixed positioning</strong> however will position your element relative to the viewport so it is always consistently at the bottom.</p> <p>Doing this, you also don't need to set the Card element in the Home component to <code>min-h-screen</code> anymore. This was causing the scroll bar because your Home component being 100vh plus the Topbar (or any other element) made main greater than the viewport. If you want, you can set the container of Topbar and Outlet to <code>h-screen</code> so it is always the height of the viewport, and its contents won't make it overflow. If you want to make the Topbar stay in view even when the content is greater than the viewport, than consider making it <code>fixed</code> too.</p>",,,true
"{'account_id': 17117975, 'reputation': 95, 'user_id': 12387010, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/747d51330ce3cb23a869f6580a8cad4f?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Rakesh Rebbavarapu', 'link': 'https://stackoverflow.com/users/12387010/rakesh-rebbavarapu'}",False,2,1727412346,1727412346,79029847,79029827,CC BY-SA 4.0,<p>If you want to hide scrollbars for the entire beside try the below code or else attach the css properties to that specific container or class:</p> <pre><code>html {     overflow: -moz-scrollbars-none;      scrollbar-width: none; }  body {     overflow: auto; }   body::-webkit-scrollbar {     display: none; } </code></pre>,,,true
"{'account_id': 15660603, 'reputation': 803, 'user_id': 11299656, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/d2KhM.jpg?s=256', 'display_name': 'marcelofreires', 'link': 'https://stackoverflow.com/users/11299656/marcelofreires'}",False,0,1728344732,1728344732,79063920,79029575,CC BY-SA 4.0,"<p>You can add styles to <code>Card</code> and <code>Image</code> to add a minimal height. Maybe it helps you with your issue. You can test with code below or see it on <a href=""https://codesandbox.io/p/devbox/peaceful-aj-l6lhzx"" rel=""nofollow noreferrer"">CodeSandbox</a>.</p> <pre class=""lang-html prettyprint-override""><code><Card className=""w-full"">   <CardBody>     <Image       className=""min-h-[300px]""       alt=""test1""       src=""https://play.tailwindcss.com/img/beams.jpg""     />   </CardBody> </Card> </code></pre>",,,true
"{'account_id': 19975580, 'reputation': 319, 'user_id': 14639990, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/353009de129dbc0c21f3fcb29ba3dd6b?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'MarcosTacos', 'link': 'https://stackoverflow.com/users/14639990/marcostacos'}",False,1,1727968865,1727968865,79051186,79028922,CC BY-SA 4.0,<p>I ended up solving the issue I had with the leaflet-polylineDecorator not being found even after installing.</p> <p>You have to run :</p> <p><code>pnpm install --save-dev @types/leaflet-polylinedecorator</code></p> <p>I then created a react component in which I added a useEffect hook to add the decorator to the map and then added it into my map component.</p>,,,true
"{'account_id': 18575, 'reputation': 9698, 'user_id': 42659, 'user_type': 'registered', 'accept_rate': 95, 'profile_image': 'https://www.gravatar.com/avatar/387fa5005e15bca282d440aefcc0adac?s=256&d=identicon&r=PG', 'display_name': 'Thomas', 'link': 'https://stackoverflow.com/users/42659/thomas'}",True,2,1727441702,1727440770,79031395,79028922,CC BY-SA 4.0,"<p>You can relatively easy adding decoration with <a href=""http://bbecquet.github.io/Leaflet.PolylineDecorator"" rel=""nofollow noreferrer""><code>leaflet.polylineDecorator</code></a>.</p> <p>You'll need to create a decorator for each feature that is <code>oneway = 'yes'</code>. I recommend to add the decorators to a separate <code>L.FeatureGroup</code> (instead to the map directly) so you can easily remove, show or hide them depending on the zoom level.</p> <p>Here is an example (using vanilla JavaScript and a test GeoJSON with polylines and a property <code>oneway</code>; it will require some adaptation to your dataset and for Next.js):</p> <pre class=""lang-html prettyprint-override""><code><!DOCTYPE html> <html lang=""en"">  <head>      <meta charset=""UTF-8"">     <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">     <title>StackOverflow Question 79028922 - Trail Directions</title>      <link rel=""stylesheet"" href=""leaflet.css"" />     <script src=""leaflet.js""></script>      <script src=""leaflet.polylineDecorator.js""></script>      <style>         body {             margin: 0;         }          #map {             height: 100vh;         }     </style>  </head>  <body>      <div id=""map""></div>      <script>          const coordinate = [46.948056, 7.4475];          const map = L.map('map').setView(coordinate, 15);          L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {             maxZoom: 22,             // add link to attribution, omitted in this code example             // due to width limit, i.e., avoid horizontal scrolling             attribution: '&copy; OpenStreetMap',         }).addTo(map);          fetch('trails.geojson')             .then(response => response.json())             .then(trails => {                  const trailLayer = L.geoJSON(trails, {                     style: (feature) => {                         const isOneWay = feature.properties['oneway'] == 'yes';                         return {                             color: isOneWay ? '#a14242' : '#160042',                         };                     },                  }).addTo(map);                  // create decorators                 const decorators = trailLayer.getLayers()                     .filter(layer => layer.feature.properties['oneway'] == 'yes')                     .map(layer => {                          // swap lat/lon (needed as GeoJSON uses a different order)                         const coordinates = layer.feature.geometry.coordinates                             .map(c => [c[1], c[0]]);                          // create the decorator for the trail                         return L.polylineDecorator(L.polyline(coordinates), {                             patterns: [{                                  offset: '5%',                                  repeat: '50px',                                  symbol: L.Symbol.arrowHead({                                      pixelSize: 10,                                      polygon: false,                                      pathOptions: {                                          stroke: true,                                          color: '#a14242'                                      }                                  })                              }]                         });                      });                  const featureGroup = L.featureGroup(decorators, {}).addTo(map);                  map.on('zoom', event => {                     featureGroup.clearLayers();                     if (map.getZoom() >= 15) {                         decorators.forEach(decorator => {                             featureGroup.addLayer(decorator);                         });                     }                 });              });      </script>  </body>  </html> </code></pre> <p>The file <code>trails.geojson</code> can be found <a href=""https://github.com/thozub/leaflet.polylineDecorator.example/blob/main/trails.geojson"" rel=""nofollow noreferrer"">here</a>.</p> <p>I also uploaded the code to a GitHub repository <a href=""https://github.com/thozub/leaflet.polylineDecorator.example"" rel=""nofollow noreferrer"">here</a> and a demo can be found <a href=""https://thozub.github.io/leaflet.polylineDecorator.example"" rel=""nofollow noreferrer"">here</a>.</p> <hr /> <p>I think using a library such as <a href=""http://bbecquet.github.io/Leaflet.PolylineDecorator"" rel=""nofollow noreferrer""><code>leaflet.polylineDecorator</code></a> or <a href=""https://github.com/slutske22/leaflet-arrowheads"" rel=""nofollow noreferrer""><code>leaflet-arrowheads</code></a> is probably the most lightweight solution as you would need to manipulate the SVG paths manually otherwise.</p> <hr /> <p><strong>Addendum:</strong> In <code>leaflet.polylineDecorator</code>'s <a href=""https://github.com/bbecquet/Leaflet.PolylineDecorator?tab=readme-ov-file#performance-notealternatives"" rel=""nofollow noreferrer""><code>README.md</code></a> there is a section recommending two light-weight alternatives for simpler cases. <a href=""https://github.com/makinacorpus/Leaflet.TextPath"" rel=""nofollow noreferrer""><code>Leaflet.TextPath</code></a> could be worth to be investigated.</p>",1727441702.0,,true
"{'account_id': 15576879, 'reputation': 308, 'user_id': 11237774, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-6bBnrOqFUGc/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdmrKT6xO8VED2rzZKYrZZzUW83YA/mo/photo.jpg?sz=256', 'display_name': 'Chris', 'link': 'https://stackoverflow.com/users/11237774/chris'}",True,0,1727382299,1727382299,79029011,79028901,CC BY-SA 4.0,"<p>If your hook is subscribing with useContext to the WordList values, it will re-render every time the word list is updated. From there, any components that subscribe to that hook will also re-render, causing the whole child tree to re-render.</p> <p>One way to optimize that functionality is to use two Context providers. One to store the actual values in state, and one to store the dispatch/setter functions including editWordlist. Since the editWordlist reference should not change, you can call this function without subscribing to the values.</p> <p>See: <a href=""https://kentcdodds.com/blog/how-to-optimize-your-context-value"" rel=""nofollow noreferrer"">https://kentcdodds.com/blog/how-to-optimize-your-context-value</a> for a more detailed explanation of this pattern.</p> <p>Lastly, if you are using React 19, they have introduced the <em>use</em> function which can load a context value without following the rules of hooks.</p> <p>See: <a href=""https://react.dev/reference/react/use"" rel=""nofollow noreferrer"">https://react.dev/reference/react/use</a></p>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",True,0,1727387018,1727387018,79029233,79028736,CC BY-SA 4.0,"<p><code>handleSignUp</code> has a stale closure over the <code>error</code> value returned by the <code>useAuthStore</code> hook.</p> <p>I would suggest updating the <code>signup</code> handler to throw errors out for callers to catch and handle. If no errors/exceptions are thrown then assume success, otherwise, catch and handle them appropriately.</p> <p>Example:</p> <pre class=""lang-js prettyprint-override""><code>signup: async (email, password, name) => {   set({ isLoading: true, error: null });   try {     const options = {       credentials: ""include"",       method: ""POST"",       headers: { ""Content-Type"": ""application/json"" },       body: JSON.stringify({ email, password, name }),     };      const response = await fetch(`${API_URI}/signup`, options);     const data = await response.json();      set({ user: data.user, isAuthenticated: true, isLoading: false });      // Return data to caller     return data;   } catch (error) {     set({       error: error.message || ""Error signing up"",       isLoading: false,     });      // Re-throw error for caller     throw error;   } }, </code></pre> <pre class=""lang-js prettyprint-override""><code>const { signup, error, isLoading } = useAuthStore(); const navigate = useNavigate();  const handleSignUp = async (e) => {   e.preventDefault();   try {     await signup(email, password, name);     // const data = await signup(email, password, name);      // Success, navigate to home     navigate(""/"");   } catch (error) {     // Failure, handle error     console.log(error);   } }; </code></pre>",,,true
"{'account_id': 20069570, 'reputation': 27, 'user_id': 14714626, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gg8m1X0qvxg18wjcTATjcGJr2ftSl8iSQmbFvzE=k-s256', 'display_name': 'Aldrin Torion', 'link': 'https://stackoverflow.com/users/14714626/aldrin-torion'}",False,0,1727385140,1727384546,79029121,79028736,CC BY-SA 4.0,"<p>I got it Guys, thanks for the help. I added a return value for the signup. The function itself returns 1 and for the catch block return 0 here is the logic:</p> <pre><code>//store the return value to reference the redirection logic  const methodFetch = await signup(email, password, name);       if (methodFetch === 1) {         navigate(""/verify-email"");       }   // authStore.jsx Files  signup: async (email, password, name) => { set({ isLoading: true, error: null }); try {    //....logic } catch (error) {   set({     //....logic   });    return 0; // return 0 if error }  return 1; //success return 1 </code></pre> <p>},</p> <p>I don't know if this is the right way to do it. but it works now! haha</p>",1727385140.0,,true
"{'account_id': 5965079, 'reputation': 4553, 'user_id': 4689036, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jzUG2.jpg?s=256', 'display_name': 'GMKHussain', 'link': 'https://stackoverflow.com/users/4689036/gmkhussain'}",False,-1,1727379302,1727379302,79028874,79028736,CC BY-SA 4.0,"<p>Cross check data type of <code>Error variable</code></p> <ol> <li>String error: ""Text""</li> </ol> <pre class=""lang-js prettyprint-override""><code>if (!error) {   // do something } </code></pre> <ol start=""2""> <li>Object error: { message: ""Text"" }</li> </ol> <pre class=""lang-js prettyprint-override""><code>if (Object.keys(error).length === 0) {   // do something } </code></pre> <ol start=""3""> <li>Array ( Error: [] or [{status: ""Text""}])</li> </ol> <pre class=""lang-js prettyprint-override""><code>if (Object.keys(error).length === 0) {   // do something } </code></pre>",,,true
"{'account_id': 24309853, 'reputation': 55, 'user_id': 18252052, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/45ff780d7ca5c9cb995fdb74890cf042?s=256&d=identicon&r=PG', 'display_name': 'Kefest1', 'link': 'https://stackoverflow.com/users/18252052/kefest1'}",False,1,1727376695,1727376695,79028747,79028653,CC BY-SA 4.0,"<p>Basically removing of line:</p> <p><code>    ""zlib"": ""^1.0.5""</code></p> <p>From ""dependecies"" in package.json solved a problem</p>",,,true
"{'account_id': 35044326, 'reputation': 52, 'user_id': 26945580, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/390c15c9ffcc4bb814db250c811944f4?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Davey Sway', 'link': 'https://stackoverflow.com/users/26945580/davey-sway'}",False,2,1727375032,1727375032,79028677,79028653,CC BY-SA 4.0,"<p>You're going to have to break this down to figure out what's not working.  There are a lot of things I can suggest, but the question is awfully broad the way it's phrased and there could be several things wrong.</p> <p>Have you tried <code>rm -rf node_modules package-lock.json</code> and then <code>npm install</code> again?</p> <p>If that doesn't work my next two questions are:</p> <ol> <li><p>Did you write this code or did you download/generate it from somewhere else?</p> </li> <li><p>Has it ever worked or did it just suddenly stop working?</p> </li> </ol>",,,true
"{'account_id': 43788, 'reputation': 195458, 'user_id': 128165, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/cdef5bd2099545a776ee86fb8049bdc6?s=256&d=identicon&r=PG', 'display_name': 'Gabriele Petrioli', 'link': 'https://stackoverflow.com/users/128165/gabriele-petrioli'}",True,2,1727372156,1727372156,79028539,79028460,CC BY-SA 4.0,"<p>The problem is that you are using a normal regular expression (<em>a <code>RegExp</code> object</em>) which gets converted to a string to be passed to the <a href=""https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#pattern"" rel=""nofollow noreferrer""><code>pattern</code></a> attribute.</p> <blockquote> <p><em><strong><code>pattern</code></strong></em>.<br /> ...<br /> No forward slashes should be specified around the pattern text.<br /> ...</p> </blockquote> <p>The <code>toString()</code> method of the RegExp will create something like <code>/.../flags</code> but the <code>pattern</code> attribute expects the ""inside"" part of the regular expression, not the <code>/</code> parts.</p> <p>So you can use the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/source"" rel=""nofollow noreferrer""><code>.source</code></a> property that extracts just that.</p> <p>So,</p> <pre><code>const ADDRESS_FORM_FIELDS = [     ...,     {         name: 'postcode',         required: true,         label: 'Postcode',         type: 'text',         pattern: REGEXES.postcode.source     } ]; </code></pre>",,,true
"{'account_id': 15576879, 'reputation': 308, 'user_id': 11237774, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-6bBnrOqFUGc/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdmrKT6xO8VED2rzZKYrZZzUW83YA/mo/photo.jpg?sz=256', 'display_name': 'Chris', 'link': 'https://stackoverflow.com/users/11237774/chris'}",True,1,1727471507,1727471507,79032914,79028337,CC BY-SA 4.0,"<p>After spending way too long on this, I finally found a workable solution.</p> <p>The <em>HTMLFormElement:requestSubmit()</em> method allows you to specify a submit button that overrides the parent form's submission behavior.</p> <p>So to make this form open in a new window, you just need to call the <em>requestSubmit</em> method with a reference to a button that specifies your desired final submission behavior. That button must be of type submit and also be a child of the form you are submitting. The button can be hidden however.</p> <p>The one catch I ran into is that <em>requestSubmit</em> did not work inside of the form's action/submission handler. I'm guessing this is because the form is already in a pending/transition state? To work around that, I put the submission request in a useEffect.</p> <p>Here is the example above updated to open the results in a new tab.</p> <pre><code>const [loadReport, setLoadReport] = useState(false);  function handleFormSubmission(previousState, formData) {     newFieldValues = Object.fromEntries(formData);     const fieldsAreValid = validateFields(newFieldValues, fieldConfig);      if (fieldsAreValid) {         // Need to post newFieldValues to ""my/results/page"" in a new tab here         setLoadReport(true);     }      return newFieldValues;  // Update form state for react. }   const [state, formAction, isSubmitting] = useActionState(handleFormSubmission, initialValues);  useEffect(() => {     if (loadReport) {         // This button submission overrides the default form submission behavior.         formEl.current.requestSubmit(reportLoaderButton.current);         setLoadReport(false);     } }, [loadReport, formEl, reportLoaderButton]);  ...  return  (    <form action={formAction} ref={formEl}>      {children}      <button         ref={reportLoaderButton}         type=""submit""         formMethod=""POST""         formAction={`my/results/page`}         formTarget=""_blank""         style={{ display: 'none' }}         label=""finalFormSubmission""        />    </form> ); </code></pre> <p>See docs for further details.</p> <p><em>requestSubmit</em>: <a href=""https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/requestSubmit"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/requestSubmit</a></p> <p><em>useActionState</em>: <a href=""https://react.dev/reference/react/useActionState"" rel=""nofollow noreferrer"">https://react.dev/reference/react/useActionState</a></p>",,,true
"{'account_id': 21309, 'reputation': 166982, 'user_id': 51685, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/vVhK5.jpg?s=256', 'display_name': 'AKX', 'link': 'https://stackoverflow.com/users/51685/akx'}",False,0,1727367674,1727367674,79028254,79028109,CC BY-SA 4.0,"<p>You're not waiting for the <code>get()</code> to finish, so <code>arrayJson</code> will be <code>[""""]</code>; trying to access it past the zeroth item leads to you looking at a whole bunch of <code>undefined</code>.</p> <p>Here's a cleaned up version:</p> <ul> <li><code>arrayJson</code> starts out as <code>null</code>, so we know it's not loaded yet</li> <li><code>get()</code> is now an async function so you don't have a pyramid of <code>.then()</code>s</li> <li>the data processing happens in <code>render()</code>, so we can, well, eventually render it out</li> <li>in <code>render()</code>, if the array <em>is</em> <code>null</code>, we do nothing</li> <li><code>truncatedHeaders</code> is computed in a more functional way (I'm making some assumptions about your data format here).</li> </ul> <pre><code>import React, { Component } from ""react""; import ""./index.css"";  export default class ListArticle extends Component {   constructor(props) {     super(props);     this.state = {arrayJson: null};   }    async get() {     const resp = await fetch(""http://localhost:8080/getHeaders"");     const data = await resp.json();     this.setState({arrayJson: data.headerArray});   }    componentDidMount() {     void this.get();   }    render() {     if(!this.state.arrayJson) return null; // not loaded yet     let truncatedHeaders = this.state.arrayJson.slice(0, 4).map(header => {       if (header.length > 120) {         return header.substring(0, 120) + ""..."";       }       return header;     });     return <div id=""container"">{JSON.stringify(truncatedHeaders)}</div>;   } } </code></pre>",,,true
"{'account_id': 16965669, 'reputation': 121, 'user_id': 12271607, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/BaWZr.png?s=256', 'display_name': 'Neibesh', 'link': 'https://stackoverflow.com/users/12271607/neibesh'}",False,0,1727367271,1727366876,79028203,79028109,CC BY-SA 4.0,"<p>So componentDidMount is only called once when the component is mounted, and likely before your fetch has resolved to update the state. Because of this you are only running your logic once with the state being arrayJson: [""""]. You will be getting your undefinedâs from the concatenated value of header[j] where i is equal to 0 making header the value of ââ. This is because the index of header[0â¦120] donât exist in the string ââ.</p> <p>After this you will get an exception as i goes higher to 1 as arrayJson: [""""] only has one element (arrayJson[0]) making header equal undefined. header[0] will give you an exception as the header is undefined.</p> <p>The reason why you can see it in the render function is because render will re-run each time the state or parent has changedâ¦</p> <p>I would suggest having a look into class lifecycle functions for react <a href=""https://react.dev/reference/react/Component"" rel=""nofollow noreferrer"">here</a>, especially <a href=""https://react.dev/reference/react/Component"" rel=""nofollow noreferrer"">componentDidUpdate</a>. Or better yet move the logic into the then section of the fetch before placing it into state. You can also eliminate the nested loop using String.slice and String.length :)</p>",1727367271.0,,true
"{'account_id': 309404, 'reputation': 5805, 'user_id': 621827, 'user_type': 'registered', 'accept_rate': 94, 'profile_image': 'https://i.sstatic.net/rNwpq.jpg?s=256', 'display_name': 'Stephen Gilboy', 'link': 'https://stackoverflow.com/users/621827/stephen-gilboy'}",False,0,1727367246,1727366712,79028192,79028091,CC BY-SA 4.0,"<p>You can use the <a href=""https://react.dev/reference/react/useMemo"" rel=""nofollow noreferrer"">useMemo</a> hook</p> <pre><code>const studyTip = React.useMemo(() =>      index >= 0 ? currentCategory.studyTips[index] : '', [index] ); ... <div className=""study-tip-content"">{studyTip}</div> </code></pre> <p>Or you can use the <a href=""https://react.dev/reference/react/useState"" rel=""nofollow noreferrer"">useState</a> hook</p> <pre><code>const [studyTip, setStudyTip] = React.useState(     currentCategory.studyTips.length ?     currentCategory.studyTips[0] : '' );  const handleStudyTipClick = (index) => {     setCurrentStudyTipIndex(index);     setStudyTip(currentCategory.studyTips[index]); };  ... <div className=""study-tip-content"">{studyTip}</div> </code></pre>",1727367246.0,,true
"{'account_id': 8440557, 'reputation': 1596, 'user_id': 6333230, 'user_type': 'registered', 'accept_rate': 20, 'profile_image': 'https://i.sstatic.net/UgcSk.jpg?s=256', 'display_name': 'NARGIS PARWEEN', 'link': 'https://stackoverflow.com/users/6333230/nargis-parween'}",True,1,1727418342,1727418342,79030074,79027909,CC BY-SA 4.0,"<p>Here is the error in the code provided by you. Backend code <br> <code>app.use(cors({ origin: ""http://localhost:3000"", credentials: true }));</code></p> <ul> <li>You have <code>Credential: true</code> instead of <code>credentials: true</code>. CORS options are case-sensitive.</li> </ul> <p>Frontend code <br> <code>headers: { ""Content-Type"": ""application/json"" }</code></p> <ul> <li>It should be <code>""application/json""</code> instead of <code>""aplication/json""</code>:</li> </ul> <p>Port should be correct <br> <code>const response = await fetch(</code>http://localhost:3001/api/auth/signup<code>, options);</code></p>",,,true
"{'account_id': 1091946, 'reputation': 11127, 'user_id': 1086398, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/3edfa49328efffd9d8e76a0487f1d703?s=256&d=identicon&r=PG', 'display_name': 'adsy', 'link': 'https://stackoverflow.com/users/1086398/adsy'}",False,3,1727461940,1727363836,79028000,79027712,CC BY-SA 4.0,"<p>The <code>clip-path</code> CSS property can do what you want. However, arriving at a path that matches your shape and is responsive has some steps.</p> <p>First, we can create the path we will use using an SVG editor. For example I have created an <a href=""https://yqnn.github.io/svg-path-editor/#P=m429_0c-46_97-392_39-430_129l430_0V0"" rel=""nofollow noreferrer"">approximate curve using this tool</a>. This gives me the SVG path:</p> <pre><code>m429 0c-46 97-392 39-430 129l430 0V0 </code></pre> <p>Unfortunately, using this like <code>clip-path: path(""m429 0c-46 97-392 39-430 129l430 0V0"");</code> won't yield what you want since it won't be responsive. The path needs to be treated as relative to the container for that to happen and by default, this will not do that.</p> <p>One approach is to insert a dummy SVG into the page containing a <code><clipPath clipPathUnits=""objectBoundingBox""></code> and a child <code><path></code> with those points above, and then reference this using <code>clip-path: url(#your-clippath-id)</code>. This is detailed in <a href=""https://stackoverflow.com/questions/72873824/svg-clippath-using-absolute-points-instead-of-percentages"">this answer</a>.</p> <p>However, this is a little cumbersome as you need to have additional SVG elements if only to reference them from the CSS. Another approach that avoids this is to convert the path to a polygon (which uses percentages) using some separate tool. I used <a href=""https://stackoverflow.com/questions/78172810/algorithm-to-convert-svg-path-to-css-clip-path-polygon"">this answer</a> to successfully derive a polygon, which can be used with <code>clip-path</code> directly. This gave me:</p> <pre><code>clip-path: polygon(99.77% 0.00%, 98.58% 6.65%, 97.06% 12.50%, 95.29% 17.54%, 93.36% 21.86%, 91.32% 25.56%, 89.20% 28.75%, 87.03% 31.52%, 84.82% 33.95%, 82.58% 36.08%, 80.33% 37.97%, 78.06% 39.66%, 75.78% 41.17%, 73.49% 42.53%, 71.19% 43.77%, 68.89% 44.90%, 66.59% 45.93%, 64.28% 46.89%, 61.97% 47.79%, 59.66% 48.63%, 57.34% 49.42%, 55.03% 50.18%, 52.72% 50.91%, 50.40% 51.63%, 48.08% 52.34%, 45.77% 53.04%, 43.45% 53.76%, 41.14% 54.49%, 38.82% 55.24%, 36.51% 56.03%, 34.20% 56.87%, 31.89% 57.76%, 29.58% 58.72%, 27.27% 59.76%, 24.97% 60.90%, 22.68% 62.17%, 20.39% 63.57%, 18.12% 65.14%, 15.85% 66.92%, 13.61% 68.95%, 11.39% 71.28%, 9.21% 73.98%, 7.09% 77.15%, 5.06% 80.91%, 3.16% 85.41%, 1.50% 90.80%, 0.18% 97.16%, 1.15% 100.00%, 3.47% 100.00%, 5.80% 100.00%, 8.13% 100.00%, 10.45% 100.00%, 12.78% 100.00%, 15.10% 100.00%, 17.43% 100.00%, 19.75% 100.00%, 22.08% 100.00%, 24.40% 100.00%, 26.73% 100.00%, 29.06% 100.00%, 31.38% 100.00%, 33.71% 100.00%, 36.03% 100.00%, 38.36% 100.00%, 40.68% 100.00%, 43.01% 100.00%, 45.33% 100.00%, 47.66% 100.00%, 49.99% 100.00%, 52.31% 100.00%, 54.64% 100.00%, 56.96% 100.00%, 59.29% 100.00%, 61.61% 100.00%, 63.94% 100.00%, 66.26% 100.00%, 68.59% 100.00%, 70.92% 100.00%, 73.24% 100.00%, 75.57% 100.00%, 77.89% 100.00%, 80.22% 100.00%, 82.54% 100.00%, 84.87% 100.00%, 87.20% 100.00%, 89.52% 100.00%, 91.85% 100.00%, 94.17% 100.00%, 96.50% 100.00%, 98.82% 100.00%, 99.77% 95.40%, 99.77% 87.64%, 99.77% 79.89%, 99.77% 72.14%, 99.77% 64.39%, 99.77% 56.64%, 99.77% 48.88%, 99.77% 41.13%, 99.77% 33.38%, 99.77% 25.63%, 99.77% 17.88%, 99.77% 10.12%);  </code></pre> <p><strong>Edit:</strong> <em>I needed to clean this up a bit and remove some useless points as I think this generative code is imperfect and could be improved. This gives me:</em></p> <pre><code>clip-path: polygon(100% 0%, 98.58% 6.65%, 97.06% 12.5%, 95.29% 17.54%, 93.36% 21.86%, 91.32% 25.56%, 89.2% 28.75%, 87.03% 31.52%, 84.82% 33.95%, 82.58% 36.08%, 80.33% 37.97%, 78.06% 39.66%, 75.78% 41.17%, 73.49% 42.53%, 71.19% 43.77%, 68.89% 44.9%, 66.59% 45.93%, 64.28% 46.89%, 61.97% 47.79%, 59.66% 48.63%, 57.34% 49.42%, 55.03% 50.18%, 52.72% 50.91%, 50.4% 51.63%, 48.08% 52.34%, 45.77% 53.04%, 43.45% 53.76%, 41.14% 54.49%, 38.82% 55.24%, 36.51% 56.03%, 34.2% 56.87%, 31.89% 57.76%, 29.58% 58.72%, 27.27% 59.76%, 24.97% 60.9%, 22.68% 62.17%, 20.39% 63.57%, 18.12% 65.14%, 15.85% 66.92%, 13.61% 68.95%, 11.39% 71.28%, 9.21% 73.98%, 7.09% 77.15%, 5.06% 80.91%, 3.16% 85.41%, 1.5% 90.8%, 0.18% 97.16%, 0% 100%, 100% 100%); </code></pre> <p>This is big, but the less points there are, the more inaccurate the shape. The number of points is inversely proportional to the <code>steps</code> variable in the above answer.</p> <p>You can then use this directly with a single <code><Box></code> component. The curve will scale with the width/height of that box.</p> <p>For the one at the top of the page, you can use the same setup but with <code>transform: scale(-1);</code> applied to reflect it so its the right way up.</p> <p>Here is a visual demo of the result:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-css lang-css prettyprint-override""><code>body, html {   margin: 0;   padding: 0; }  .clipped {   margin:20px 0;   width: 100vw;   height: 200px;   background-color: purple;   clip-path: polygon(100% 0%, 98.58% 6.65%, 97.06% 12.5%, 95.29% 17.54%, 93.36% 21.86%, 91.32% 25.56%, 89.2% 28.75%, 87.03% 31.52%, 84.82% 33.95%, 82.58% 36.08%, 80.33% 37.97%, 78.06% 39.66%, 75.78% 41.17%, 73.49% 42.53%, 71.19% 43.77%, 68.89% 44.9%, 66.59% 45.93%, 64.28% 46.89%, 61.97% 47.79%, 59.66% 48.63%, 57.34% 49.42%, 55.03% 50.18%, 52.72% 50.91%, 50.4% 51.63%, 48.08% 52.34%, 45.77% 53.04%, 43.45% 53.76%, 41.14% 54.49%, 38.82% 55.24%, 36.51% 56.03%, 34.2% 56.87%, 31.89% 57.76%, 29.58% 58.72%, 27.27% 59.76%, 24.97% 60.9%, 22.68% 62.17%, 20.39% 63.57%, 18.12% 65.14%, 15.85% 66.92%, 13.61% 68.95%, 11.39% 71.28%, 9.21% 73.98%, 7.09% 77.15%, 5.06% 80.91%, 3.16% 85.41%, 1.5% 90.8%, 0.18% 97.16%, 0% 100%, 100% 100%); }  .inverted {    transform: scale(-1); }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><strong>Top:</strong>  <div class=""clipped inverted""></div>  <strong>Bottom:</strong> <div class=""clipped""></div></code></pre>  </div>  </div>  </p>",1727461940.0,,true
"{'account_id': 28708088, 'reputation': 950, 'user_id': 21984065, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/155a03d67918d5e99a83d3db285de4ee?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'haolt', 'link': 'https://stackoverflow.com/users/21984065/haolt'}",True,1,1727366081,1727366081,79028154,79027712,CC BY-SA 4.0,"<p>adsy's answer already show you the steps to use <code>clip-path</code>, so here's my attempt to recreate the <code>path</code>. (Click the ""Full page"" button and resize your windows to test responsiveness)</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-css lang-css prettyprint-override""><code>:root {   --bg: #3B3486; }  * {   margin: 0;   padding: 0;   box-sizing: border-box; }  .svg {   position: absolute;   top: 0;   left: 0;   width: 0;   height: 0; }  body::before, body::after {   content: '';   position: absolute;   top: 0;   left: 0;   width: 100%;   height: 33.33%;   background-color: var(--bg);   clip-path: url(#wavy-clip-path);   z-index: -1; }  body::after {   top: unset;   bottom: 0;   scale: -1; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><svg class=""svg"">   <clipPath id=""wavy-clip-path"" clipPathUnits=""objectBoundingBox"">     <path d=""M0,0 l1,0 c0,0.25 -0.15,0.33 -0.5,0.5 -0.33,0.15 -0.5,0.25 -0.5,0.5 z""></path>   </clipPath> </svg></code></pre>  </div>  </div>  </p> <p>Alternatively, if you want pure CSS without SVG, you can try <code>border-radius</code> (the curve won't be exactly like your example though)</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-css lang-css prettyprint-override""><code>:root {   --bg: #3B3486; }  * {   margin: 0;   padding: 0;   box-sizing: border-box; }  body {   width: 100vw;   height: 100vh;   display: grid;   grid-template-rows: 33.33% 33.33% 33.33%; }  header, footer, main {   position: relative; }  header::before, footer::before, main::before, header::after, footer::after, main::after {   content: '';   position: absolute;   top: 0;   left: 0;   width: 100%;   height: 50%;   background-color: var(--bg);   z-index: -1; }  header::before {   border-bottom-right-radius: 50% 100%; }  header::after {   top: unset;   bottom: 0; }  footer::before {   border-top-left-radius: 50% 100%;   top: unset;   bottom: 0; }  footer::after {   z-index: -2; }  main::before {   border-top-left-radius: 50% 100%;   top: unset;   bottom: 100%;   background-color: #fff; }  main::after {   border-bottom-right-radius: 50% 100%;   top: 100%;   background-color: #fff; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><header></header> <main></main> <footer></footer></code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 7332350, 'reputation': 75, 'user_id': 5584815, 'user_type': 'registered', 'accept_rate': 25, 'profile_image': 'https://lh5.googleusercontent.com/-I59QluRliUY/AAAAAAAAAAI/AAAAAAAAAG8/I7c7gO-JQHs/photo.jpg?sz=256', 'display_name': 'Nils', 'link': 'https://stackoverflow.com/users/5584815/nils'}",False,0,1727365338,1727365338,79028107,79027538,CC BY-SA 4.0,"<p>Yes, it is possible to use shadcn/ui for a chrome extension, as long as you're using react and tailwind. Simply add the dependency.</p> <p>There is a repository that already gives you a simple hello world extension using react which you can base your extension off of. <a href=""https://github.com/Harshita-mindfire/react-chrome-extension"" rel=""nofollow noreferrer"">https://github.com/Harshita-mindfire/react-chrome-extension</a> (disclaimer: i do not know this repository, i found it after a quick google search)</p>",,,true
"{'account_id': 22710529, 'reputation': 2520, 'user_id': 16876542, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/3DVnN.jpg?s=256', 'display_name': 'Lakshay Rohilla', 'link': 'https://stackoverflow.com/users/16876542/lakshay-rohilla'}",True,2,1727794276,1727354711,79027369,79027368,CC BY-SA 4.0,"<p>If you check the link provided for the official docs.<br> Its version is <code>6.1.1</code>.</p> <p>So I tried to update versions of both the used deps in the project using following command:<br> <code>npm install @mui/material@latest @mui/icons-material@latest</code>.</p> <p><a href=""https://i.sstatic.net/M6fUqWwp.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/M6fUqWwp.png"" alt=""enter image description here"" /></a></p> <p>Doing this fixed the error. <br><br> <strong>Conclusion:</strong> Keep a check on the versions of <code>mui/material</code> & <code>mui/icons-material</code> deps. They should match the docs version that you are referring.</p>",1727794276.0,,true
"{'account_id': 23394804, 'reputation': 11, 'user_id': 17458996, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GjAmh8nX5OWTZcKzsZ-keJd8jmfUPmSdDkYVN6Crw=k-s256', 'display_name': 'Serhat Ko&#231;han', 'link': 'https://stackoverflow.com/users/17458996/serhat-ko%c3%a7han'}",False,1,1727354666,1727354666,79027364,79027173,CC BY-SA 4.0,"<p>When working with APIs to manipulate data, we should always avoid using setTimeout independently of the response. Instead, we can trigger a loading state on buttons before making the API request. Once the response comes back, we can easily update the buttonâs content based on that response. This makes the UI more predictable and responsive.</p> <p>For a more predictable and cleaner codebase, we should ditch class components and switch to functional components. With Hooks, we have full control, and the code becomes much more readable and maintainable. :)</p>",,,true
"{'account_id': 316828, 'reputation': 134336, 'user_id': 633183, 'user_type': 'registered', 'accept_rate': 66, 'profile_image': 'https://i.sstatic.net/Uc83p.png?s=256', 'display_name': 'Mulan', 'link': 'https://stackoverflow.com/users/633183/mulan'}",True,2,1727455106,1727362839,79027937,79027171,CC BY-SA 4.0,"<p>@Iorweth333 is technically correct, but there are <strong>serious pitfalls</strong> to watch out for -</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function App() {   const [state, setState] = React.useState(<Counter />)      return <div>     {state} click the counter â     <hr />     <button onClick={() => setState(<Counter />)} children=""A"" />     <button onClick={() => setState(<Counter init={10} />)} children=""B"" />     <button onClick={() => setState(<Counter init={100} />)} children=""C"" />     change the counter â   </div> }  function Counter(props) {   const [state, setState] = React.useState(props.init || 0)   return <button onClick={() => setState(_ => _ + 1)} children={state} /> }  ReactDOM.createRoot(document.querySelector(""#app"")).render(<App />)</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script crossorigin src=""https://unpkg.com/react@18/umd/react.development.js""></script> <script crossorigin src=""https://unpkg.com/react-dom@18/umd/react-dom.development.js""></script> <div id=""app""></div></code></pre>  </div>  </div>  </p> <p>The program runs, but changing from one component state to another does not work as we might expect. React detects that state in App changed, but when <code>{state}</code> is rendered, React doesn't know that is a <em>new</em> Counter component, as distinct from any other. So the same counter renders and the state stays the same.</p> <p>If you re-<code>key</code> the element containing the component stored in state, you can prompt a fresh Counter to be initialized. This is obviously a <strong>hack</strong> and <a href=""https://react.dev/learn/rendering-lists#why-does-react-need-keys"" rel=""nofollow noreferrer"">should be avoided</a>. This demo is only here to give better insight on how React ""sees"" things -</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function App() {   const [state, setState] = React.useState(<Counter />)      return <div key={Math.random() /* hack â */ }>     {state} click the counter â     <hr />     <button onClick={() => setState(<Counter />)} children=""A"" />     <button onClick={() => setState(<Counter init={10} />)} children=""B"" />     <button onClick={() => setState(<Counter init={100} />)} children=""C"" />     change the counter â   </div> }  function Counter(props) {   const [state, setState] = React.useState(props.init || 0)   return <button onClick={() => setState(_ => _ + 1)} children={state} /> }  ReactDOM.createRoot(document.querySelector(""#app"")).render(<App />)</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script crossorigin src=""https://unpkg.com/react@18/umd/react.development.js""></script> <script crossorigin src=""https://unpkg.com/react-dom@18/umd/react-dom.development.js""></script> <div id=""app""></div></code></pre>  </div>  </div>  </p> <p>Now that we can see with React Vision, we can understand why adding a unique <code>key</code> to each Counter component would also ""fix"" the problem -</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function App() {   const [state, setState] = React.useState(<Counter key={0} />)      return <div>     {state} click the counter â     <hr />     <button onClick={() => setState(<Counter key={0} />)} children=""A"" />     <button onClick={() => setState(<Counter key={1} init={10} />)} children=""B"" />     <button onClick={() => setState(<Counter key={2} init={100} />)} children=""C"" />     change the counter â   </div> }  function Counter(props) {   const [state, setState] = React.useState(props.init || 0)   return <button onClick={() => setState(_ => _ + 1)} children={state} /> }  ReactDOM.createRoot(document.querySelector(""#app"")).render(<App />)</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script crossorigin src=""https://unpkg.com/react@18/umd/react.development.js""></script> <script crossorigin src=""https://unpkg.com/react-dom@18/umd/react-dom.development.js""></script> <div id=""app""></div></code></pre>  </div>  </div>  </p> <p>While I haven't seen this explicitly called out as an anti-pattern in the React docs, as seen above, it has potential to hide some bad bugs in your program. For this reason, I think you should avoid storing components as state.</p> <hr /> <p>You asked how to make dynamic content <strong>another way</strong>, we will see that here. In React, we think about <a href=""https://react.dev/learn/state-as-a-snapshot"" rel=""nofollow noreferrer"">state as a snapshot</a>, and our render is made up of props and state, conditional or derived. In this next series of code, we expand our knowledge incrementally, one demo at a time -</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function App() {   const [tab, setTab] = React.useState(0) // â state   return <div>     <nav>       <button         children=""About""         disabled={tab == 0} // â derived props         onClick={() => setTab(0)}       />       <button         children=""Contact""         disabled={tab == 1}         onClick={() => setTab(1)}       />     </nav>     { tab == 0 ? <About />     : tab == 1 ? <Contact /> // â  conditional render     : null     }   </div> }  function About() {   return <p>About us</p> }  function Contact() {   return <p>Contact us</p> }  ReactDOM.createRoot(document.querySelector(""#app"")).render(<App />)</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script crossorigin src=""https://unpkg.com/react@18/umd/react.development.js""></script> <script crossorigin src=""https://unpkg.com/react-dom@18/umd/react-dom.development.js""></script> <div id=""app""></div></code></pre>  </div>  </div>  </p> <p>Above we see how a single number stored in <code>tab</code> can dynamically render content. But what if you want to supply the tabs dynamically? Here we learn how to <a href=""https://react.dev/learn/rendering-lists"" rel=""nofollow noreferrer"">render lists</a> -</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function App(props) {   const [tab, setTab] = React.useState(0)   const TabFn = props.tabs[tab] // â get tab constructor   console.assert(TabFn, ""tab out of bounds"") // â invariant   return <div>     <nav>       {props.tabs.map((TabFn, index) =>         <button           key={TabFn.name}           children={TabFn.name}           disabled={tab == index}           onClick={() => setTab(index)}         />       )}     </nav>     <TabFn />   </div> }  function Home() { return <p>Home</p> } function About() { return <p>About us</p> } function Contact() { return <p>Contact us</p> }  ReactDOM.createRoot(document.querySelector(""#app"")).render(   <App tabs={[Home, Contact, About]} /> // â dynamic content )</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script crossorigin src=""https://unpkg.com/react@18/umd/react.development.js""></script> <script crossorigin src=""https://unpkg.com/react-dom@18/umd/react-dom.development.js""></script> <div id=""app""></div></code></pre>  </div>  </div>  </p> <p>You might be wondering how to get data to our dynamic components. You can <a href=""https://react.dev/learn/passing-data-deeply-with-context"" rel=""nofollow noreferrer"">pass data deeply with a context</a>. Here we begin adding a ""dark mode"" to our application. To keep the demo concise, only the <code>nav</code> and <code>Home</code> elements are responding so far -</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const defaultContext = { theme: ""light"" } // â some data  const Context = React.createContext(defaultContext) // â create context  function App(props) {   const [theme, setTheme] = React.useState(defaultContext.theme)   const [tab, setTab] = React.useState(0)   const TabFn = props.tabs[tab]   console.assert(TabFn, ""tab out of bounds"")   return <Context.Provider value={{theme}}>     <nav className={theme}>       {props.tabs.map((TabFn, index) =>         <button key={TabFn.name} children={TabFn.name} disabled={tab == index} onClick={() => setTab(index)} />       )}       <button         onClick={() => setTheme(t => t == ""light"" ? ""dark"" : ""light"")}         children={`theme: ${theme}`}       />               </nav>     <TabFn />   </Context.Provider> }  function Home() {   const { theme } = React.useContext(Context) // â access data   return <p className={theme}>Home</p> }  function About() { return <p>About us</p> } function Contact() { return <p>Contact us</p> }  ReactDOM.createRoot(document.querySelector(""#app"")).render(   <App tabs={[Home, Contact, About]} /> )</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.dark {   background-color: mediumblue;   color: khaki; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script crossorigin src=""https://unpkg.com/react@18/umd/react.development.js""></script> <script crossorigin src=""https://unpkg.com/react-dom@18/umd/react-dom.development.js""></script> <div id=""app""></div></code></pre>  </div>  </div>  </p> <p><strong>Related:</strong> <a href=""https://react.dev/learn/passing-props-to-a-component#passing-jsx-as-children"" rel=""nofollow noreferrer"">passing JSX as children</a> to a component is normal. Note JSX can be passed in <em>any</em> prop, not limited to <code>children</code> -</p> <pre><code><UserProfile   avatar={<Avatar src={user.avatar} />}   name={user.name}   email={user.email} /> </code></pre>",1727455106.0,,true
"{'account_id': 16610898, 'reputation': 512, 'user_id': 12003949, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/E4jEM.jpg?s=256', 'display_name': 'Iorweth333', 'link': 'https://stackoverflow.com/users/12003949/iorweth333'}",False,-1,1727358531,1727358531,79027650,79027171,CC BY-SA 4.0,"<p>An important distinction needs to be made here: a <em>component</em> is a function of props, state and context which returns an <em>element</em>. What you are storing there in that context is an <em>element</em>. An <em>element</em> is an object of shape specified by React (you can try to <code>console.log</code> it to see it for yourself).</p> <p>Since you can store both functions and objects in state and context, you can totally store <em>components</em> and <em>elements</em> there too. Also, you can pass them as props.</p> <p>Given a state:</p> <pre class=""lang-js prettyprint-override""><code>const [sidebarContent, setSidebarContent] = useState<null | React.ReactNode>(     null,   ); </code></pre> <p>And a component</p> <pre><code>function MyComponent(props) {   console.log('MyComponent props', props)   return (     <div>MyComponent</div>   ); } </code></pre> <p>Storing a component in state:</p> <pre class=""lang-js prettyprint-override""><code>setSidebarContent(MyComponent);  //usage: <Sidebar>   <MyComponent prop1={someProp1} prop2={someProp2}/> </Sidebar> </code></pre> <p>Storing an element in state (as you did):</p> <pre class=""lang-js prettyprint-override""><code>//somewhere in a handler or in an effect setSidebarContent(<MyComponent prop1={someProp1} prop2={someProp2}/>);   //usage: <Sidebar>   {sidebarContent} </Sidebar> </code></pre> <p>Passing as props:</p> <pre><code><Sidebar   contentAsComponent={MyComponent}   contentAsElement={<MyComponent prop1={someProp1} prop2={someProp2}/>} /> </code></pre> <p><strong>The major difference is about where you set the props.</strong></p>",,,true
"{'account_id': 22802643, 'reputation': 43, 'user_id': 16955088, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/65SxVQKB.jpg?s=256', 'display_name': 'Jack Phat', 'link': 'https://stackoverflow.com/users/16955088/jack-phat'}",False,1,1727411241,1727411241,79029820,79027106,CC BY-SA 4.0,"<p>If you want to do it your way, you can define it so tailwindcss can realize it.</p> <p>for example <code>const example = ['text-sky-700','text-green-300']</code> ,...</p> <p>But I suggest you should write <a href=""https://tailwindcss.com/docs/content-configuration#dynamic-class-names"" rel=""nofollow noreferrer"">the full className</a></p>",,,true
"{'account_id': 17925722, 'reputation': 1297, 'user_id': 13024426, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/w9E72PY8.jpg?s=256', 'display_name': 'Beast80K', 'link': 'https://stackoverflow.com/users/13024426/beast80k'}",True,3,1727351992,1727351992,79027187,79027106,CC BY-SA 4.0,"<p><strong>Problem :</strong></p> <blockquote> <p><em>Tried to populate CSS into React Links dynamically. Expected the CSS to render on the page, but it did not.</em></p> </blockquote> <p><strong>Cause :</strong></p> <blockquote> <p><strong>Use full <code>classNames</code> instead of joining them as string</strong>,</p> </blockquote> <blockquote> <ul> <li><em>Tailwind extracts class names is that it will only find classes that exist as complete unbroken strings in your source files.</em> If you use string interpolation or concatenate partial class names together, Tailwind will not find them and therefore will not generate the corresponding CSS. [<a href=""https://tailwindcss.com/docs/content-configuration#dynamic-class-names"" rel=""nofollow noreferrer"">1</a>]</li> </ul> </blockquote> <p><strong>Solution :</strong></p> <p>Update <code>navItems</code> :</p> <pre><code>const navItems = [   {     name: ""home"",     color: ""text-sky-700"",     link: ""/""   },   {     name: ""bio"",     color: ""text-green-500"",     link: ""/bio""   },   {     name: ""blog"",     color: ""text-yellow-300"",     link: ""/blog""   }, ] </code></pre> <p>And inside map function, update <code>cl</code> :</p> <pre><code>const cl = `transition-all ${navItem.color} flex align-middle relative py-1 px-2 m-1` </code></pre> <hr/> <p><strong>Please Read :</strong></p> <ul> <li><strong>Dynamic class names</strong> : <a href=""https://tailwindcss.com/docs/content-configuration#dynamic-class-names"" rel=""nofollow noreferrer"">https://tailwindcss.com/docs/content-configuration#dynamic-class-names</a></li> </ul>",,,true
"{'account_id': 35406291, 'reputation': 586, 'user_id': 27184656, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/cWqspvCg.png?s=256', 'display_name': 'The Teabag Coder', 'link': 'https://stackoverflow.com/users/27184656/the-teabag-coder'}",False,1,1727351832,1727351832,79027174,79027106,CC BY-SA 4.0,"<p>From your description I assume you use tailwind, then dynamically created classnames won't work</p> <p>Read more <a href=""https://tailwindcss.com/docs/content-configuration#dynamic-class-names"" rel=""nofollow noreferrer"">here</a></p>",,,true
"{'account_id': 22978237, 'reputation': 661, 'user_id': 17105581, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/gCuWL.jpg?s=256', 'display_name': 'ferrouskid', 'link': 'https://stackoverflow.com/users/17105581/ferrouskid'}",True,2,1727347998,1727347515,79026878,79026731,CC BY-SA 4.0,"<p>I'm not 100% sure what you're trying to achieve. I tried implementing something along those lines - I context wrapping values of tabs which are changed when clicked:</p> <p><a href=""https://codesandbox.io/p/sandbox/priceless-banach-mjwxx4"" rel=""nofollow noreferrer"">https://codesandbox.io/p/sandbox/priceless-banach-mjwxx4</a></p> <pre><code>//app.js import Sidebar from ""./Sidebar""; import ""./styles.css""; import { TabContextProvider } from ""./TabContext"";  export default function App() {   return (     <TabContextProvider>       <Sidebar />     </TabContextProvider>   ); } </code></pre> <pre><code>//tabcontext.js import { createContext, useContext, useState } from ""react"";  const TabContext = createContext();  export const TabContextProvider = ({ children }) => {   const [tabArray, setTabArray] = useState([     { TabText: ""Home"", Selected: true },   ]);    const changeContent = (text) => {     setTabArray((prev) =>       prev.map((v) => (v.Selected ? { ...v, TabText: text } : { ...v }))     );   };    return (     <TabContext.Provider value={{ tabArray, setTabArray, changeContent }}>       {children}     </TabContext.Provider>   ); };  export const useTabContext = () => {   return useContext(TabContext); }; </code></pre> <pre><code>import { useTabContext } from ""./TabContext"";  export default function Sidebar() {   const { changeContent, tabArray } = useTabContext();    return (     <div>       {tabArray.map((tab) => (         <button onClick={() => changeContent(""All Commodit"")}>           {tab.TabText}         </button>       ))}     </div>   ); } </code></pre> <p>This approach is slightly different.</p> <p>Firstly, I'd take out the state and put it directly in the context <code>TabContext.js</code> - no point in declaring it in <code>App.js</code> - everytime the value will change when you interact with the context - the entire app will rerender (because all children components rerender when you update state of a component). I always export functions like <code>TabContextProvider</code> and <code>useTabContext</code> - it makes it nicer to use.</p> <p>Secondly, you can put <code>changeContent</code> function directly in the context. Seems like a nice place for it to live imo. You can simplify the logic inside the <code>setState</code> by using a ternary operator instead of <code>if else</code>.</p> <p>Finally, in the <code>Sidebar.js</code> you can just grab the <code>changeContent</code> function directly from the context and use it there. Clicking the button changes the state to the value of the text provided. I also noticed you weren't using the value from context - you hardcoded the value in:</p> <pre><code><button onClick={() => ChangeContent(""All Commodity"")}> All Commodity </button>  </code></pre> <p>I changed that to use the value directly from the context, although I'm not entirely sure what you were aiming for:</p> <pre><code>{tabArray.map((tab) => (     <button onClick={() => changeContent(""All Commodit"")}>         {tab.TabText}     </button> ))} </code></pre> <p>Hope this helps :)</p> <p>EDIT: I think I might've misunderstood your quesiton - you can only consume context in a component I believe - if you want to do something with it in a separate function, just pass the setters to it:</p> <pre><code>function changeText(text,tabArray,setTabArray) {   //perform operations } </code></pre> <pre><code>//some component  export default function SomeComponent() {   const {tabArray,setTabArray} = useTabContext();    return (     <button onClick={() => changeText(""newValue"",tabArray,setTabArray)}>click</button>   ); } </code></pre>",1727347998.0,,true
"{'account_id': 15576879, 'reputation': 308, 'user_id': 11237774, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-6bBnrOqFUGc/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdmrKT6xO8VED2rzZKYrZZzUW83YA/mo/photo.jpg?sz=256', 'display_name': 'Chris', 'link': 'https://stackoverflow.com/users/11237774/chris'}",True,0,1727380992,1727370444,79028438,79026547,CC BY-SA 4.0,"<p>While hooks are used for separating logic into a function, they are specifically used for separating stateful logic into a separate function. If you function does not control any state or call any other hooks, it does not need to be a hook.</p> <p>Within a custom hook, you can see either built-in hooks or custom hooks being called. Neither is specifically required.</p> <p>Before hooks, any state aware code had to exist within a Component. Hooks allows you to reorganize stateful logic into a separate function outside of the component.</p> <p>Since useCheckEven(num), useCheckIsAboveHundred(num), and useCheckPrime(num) above do not track any state objects, they do not need to be a hook. It would be easier to call them as straight JS functions.</p> <p>If one of your functions calls useState or any other hook, then it would be required to use a hook and name the function in the format of use[HookName].</p> <p>Regarding the useEffect call inside of a hook. It is usually best practice to have a useEffect watch the hook parameters so you can automatically update the internal hook state if the hook is called with a new value.</p>",1727380992.0,,true
"{'account_id': 1335728, 'reputation': 146, 'user_id': 1278537, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e2ad1b4d542a47391cdbbc4d84d46775?s=256&d=identicon&r=PG', 'display_name': 'bbrks', 'link': 'https://stackoverflow.com/users/1278537/bbrks'}",False,1,1727386598,1727386598,79029221,79026501,CC BY-SA 4.0,<p>PouchDB does not support scopes and collections.</p>,,,true
"{'account_id': 7797424, 'reputation': 2698, 'user_id': 5898042, 'user_type': 'registered', 'accept_rate': 50, 'profile_image': 'https://i.sstatic.net/J2Qdb.jpg?s=256', 'display_name': 'Bharat Gupta', 'link': 'https://stackoverflow.com/users/5898042/bharat-gupta'}",False,0,1727413812,1727413812,79029899,79026422,CC BY-SA 4.0,"<p>The checked state is not an internal state of the <code>Checkbox</code> component but rather controlled as a prop from the parent component. When you toggle the <code>checked</code> prop using Storybook UI, the part of passing the right prop value is taken care of.</p> <p>In most cases this behaviour is fine since you only want to showcase how the checkbox looks in the Default state and you show the Checked state separately.</p> <p>If it is really required to allow the user to interact with it then you would need to provide a parent component which would help with controlling the <code>checked</code> prop. The <code>Template</code> function can be used for this purpose.</p> <p>You can update the <code>Template</code> function to:</p> <pre><code>const Template: StoryFn<typeof Checkbox> = (args) => {     const [ checked, setChecked ] = useState(args.checked);      // handle toggle from storybook UI     useEffect(() => {         setChecked(args.checked);     }, [args.checked])      // handles toggle via user interaction     const handleChange = () => {         setChecked(checked => !checked);     };      return <Checkbox {...args} checked={checked} onChange={handleChange} /> }; </code></pre>",,,true
"{'account_id': 22802643, 'reputation': 43, 'user_id': 16955088, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/65SxVQKB.jpg?s=256', 'display_name': 'Jack Phat', 'link': 'https://stackoverflow.com/users/16955088/jack-phat'}",False,0,1728630360,1728630360,79077114,79026238,CC BY-SA 4.0,"<p>Hi you can use <code>watch</code> in <code>react-hook-form</code> to check the value of the radio button</p> <pre class=""lang-js prettyprint-override""><code>const { register, handleSubmit, watch } = useForm(); const selectedGender = watch('gender', ''); <FormControl component=""fieldset"" required>      <FormLabel>Gender</FormLabel>           <RadioGroup {...register('gender', { required: true })}                 value={selectedGender}>         <FormControlLabel value=""Male"" control={<Radio />} label=""Male"" />         <FormControlLabel value=""Female"" control={<Radio />} label=""Female"" />           </RadioGroup> </FormControl>  </code></pre>",,,true
"{'account_id': 24067318, 'reputation': 20026, 'user_id': 18043665, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/31XZp.jpg?s=256', 'display_name': 'Sridevi', 'link': 'https://stackoverflow.com/users/18043665/sridevi'}",False,1,1727341923,1727341923,79026438,79026043,CC BY-SA 4.0,"<p>To attach pdf document to Azure DevOps work item, I used below sample code with <code>application/octet-stream</code> as Content type:</p> <pre class=""lang-js prettyprint-override""><code>const axios = require('axios'); const fs = require('fs');  const addPdfAttachmentToWorkItem = async (   workItemId,   pat,   organizationUrl,   projectId,   filePath,   fileName ) => {   try {     const pdfBuffer = fs.readFileSync(filePath);      const encodedPat = Buffer.from(`:${pat}`).toString('base64');     const uploadUrl = `${organizationUrl}/${projectId}/_apis/wit/attachments?api-version=6.0&fileName=${fileName}&uploadType=simple`;      const attachRes = await axios({       method: 'POST',       url: uploadUrl,       data: pdfBuffer,       headers: {         Authorization: `Basic ${encodedPat}`,         'Content-Type': 'application/octet-stream',        },     });      const attachmentUrl = attachRes.data.url;      const workItemUrl = `${organizationUrl}/${projectId}/_apis/wit/workitems/${workItemId}?api-version=6.0`;      const workItemData = [       {         op: 'add',         path: '/relations/-',         value: {           rel: 'AttachedFile',           url: attachmentUrl,           attributes: {             comment: `Attached PDF document to work item ${workItemId}`,           },         },       },     ];      const response = await axios.patch(workItemUrl, workItemData, {       headers: {         Authorization: `Basic ${encodedPat}`,         'Content-Type': 'application/json-patch+json',       },     });      console.log('Attachment added successfully:', response.data);     return response.data;   } catch (error) {     console.error('Error attaching file to work item:', error.response?.data || error.message);     throw error;   } };  (async () => {   const workItemId = 1;   const pat = 'pat_token_here';   const organizationUrl = 'https://dev.azure.com/orgname';   const projectId = 'projname';   const filePath = 'C:\\Users\\xxxxxx\\AI900Cert.pdf';    const fileName = 'AI900Cert.pdf';     await addPdfAttachmentToWorkItem(workItemId, pat, organizationUrl, projectId, filePath, fileName); })(); </code></pre> <p><strong>Response:</strong></p> <p><a href=""https://i.sstatic.net/8qfddrTK.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/8qfddrTK.png"" alt=""enter image description here"" /></a></p> <p>To <strong>confirm</strong> that, I checked the same in Azure DevOps Portal where pdf added successfully as attachment like his:</p> <p><a href=""https://i.sstatic.net/4hoEO6SL.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/4hoEO6SL.png"" alt=""enter image description here"" /></a></p>",,"[{'tags': ['azure-ad-verifiable-credentials', 'azure-static-website-hosting', 'azure-cosmosdb-mongoapi', 'azure.data.tables', 'azure-pipelines-release-pipeline', 'azure-update-management-center', 'azureclicredential', 'azure-xplat-cli', 'azure-sdk-for-java', 'azure-table-storage', 'azure-management', 'azure-container-registry', 'azure-application-roles', 'azure-clouddrive', 'azure-ad-graph-api', 'azure-linux', 'azure-mysql-database', 'azure-ai-translator', 'azure-policy', 'azure-application-proxy', 'azure-iot-sdk', 'azure-migrate', 'azure-git-deployment', 'azure-webjobs-triggered', 'azure-data-catalog', 'azure-monitor', 'azure-web-pubsub', 'azure-postgresql', 'sql-azure-alerts', 'azure-cosmosdb-cassandra-api', 'azure-spatial-anchors', 'azure-powershell', 'azure-web-app-for-containers', 'azure-app-configuration', 'azure-bot-service', 'azure-service-fabric-mesh', 'azure-compliance-policy', 'azure-elastic-scale', 'azure-application-insights-profiler', 'azure-managed-grafana', 'microsoft-entra-internet-access', 'azure-webjobssdk', 'azure-app-service-plans', 'azure-auto-ml', 'azure-elasticpool', 'azure-bastion', 'azure-regions', 'azure-file-copy', 'azure-container-instances', 'azure-stack', 'azure-appservice', 'azure-marketplace', 'azure-cosmosdb-tables', 'azure-ml-component', 'azure-sql-reporting', 'microsoft-entra-private-access', 'kql', 'azure-servicebus-subscriptions', 'azure-sdk-ruby', 'azure-iot-suite', 'azure-devtest-labs', 'azure-oms', 'azure-autoscaling-block', 'sql-server-azure', 'azure-blueprints', 'azure-cosmosdb-gremlinapi', 'azure-log-analytics-workspace', 'azure-sql', 'azure-adf', 'azure-in-role-cache', 'azure-rm', 'azure-app-service-envrmnt', 'azure-function-http', 'azure-dns', 'azure-custom-providers', 'azure-identity', 'azure-spring-boot', 'azure-sql-database', 'azure-blockchain-workbench', 'azure-object-anchors', 'azure-data-sync', 'azure-cognitive-services', 'microsoft-custom-vision', 'azure-form-recognizer', 'azure-servicebus-queues', 'azure-private-link', 'azure-billing', 'azure-resource-group', 'azure-java-tools', 'azure-front-door', 'azure-data-factory', 'adal.js', 'azure-notificationhub', 'azure-metrics-advisor', 'azure-alerts', 'azure-workflow-automation', 'azure-resource-manager', 'azure-ad-domain-services', 'azure-managed-database', 'azure-sdk', 'azure-public-ip', 'azure-cognitive-search', 'azure-search-.net-sdk', 'fhir-server-for-azure', 'azure-configuration', 'azure-api-management', 'azure-iot-edge', 'azure-affinity-group', 'azure-pack', 'azure-sql-edge', 'azure-machine-learning-service', 'azure-container-service', 'azure-qna-maker', 'azure-sentinel', 'azure-blockchain-service', 'azure-functions', 'azure-mcd', 'azure-data-explorer', 'azure-nsg', 'azure-sdk-php', 'azure-synapse', 'azure-managed-disk', 'azure-acs', 'azure-service-fabric', 'azure-media-player', 'azure-data-studio', 'azure-rbac', 'azure-active-directory', 'azure-queues', 'azure-adal-deprecation', 'azure-cost-calculation', 'azure-database-postgresql', 'azure-sql-server', 'azure-managed-app', 'azure-blob-storage', 'azure-hub', 'azure-video-indexer', 'azure-storage-queues', 'azure-api-apps', 'azure-rest-api', 'azure-sdk-python', 'azure-synapse-link', 'azure-scheduler', 'azure-analytics', 'azure-feature-manager', 'azure-service-runtime', 'azure-image-builder', 'azure-virtual-machine', 'azure-stream-analytics', 'azure-private-dns-zone', 'azure-debugger', 'azure-authentication', 'azure-private-dns', 'azure-data-lake-gen2', 'azure-application-insights', 'azure-ad-b2c-custom-policy', 'azure-webhooks', 'azure-management-groups', 'azure-signalr', 'azure-vm', 'azure-service-principal', 'azure-load-testing', 'azure-cosmosdb', 'defaultazurecredential', 'azure-service-plan', 'azure-application-gateway', 'azureml-python-sdk', 'azure-static-web-app-routing', 'azure-blob-trigger', 'azure-text-translation', 'kitchen-azurerm', 'microsoft-entra-external-id', 'azure-service-hooks', 'azure-batch-account', 'azure-site-recovery', 'azure-databricks', 'azure-application-registration', 'azure-ase', 'azure-webjobs-continuous', 'azure-android-sdk', 'azure-ad-v2', 'azure-caching', 'azureshell', 'azure-ai', 'spring-cloud-azure', 'azure-anomaly-detector', 'azure-sphere', 'azure-python-sdk', 'azure-hybrid-connections', 'azure-maps', 'azure-sdk-js', 'azure-deployment-slots', 'azure-quantum', 'sitecore-azure', 'azure-availability-set', 'azure-custom-domain', 'azure-defender', 'azure-ad-b2c', 'azure-functions-core-tools', 'microsoft-entra-id', 'azure-servicebusrelay', 'azure-storage-explorer', 'azure-static-website-routing', 'azure-database-mysql', 'azure-dashboard', 'azure-web-app-service', 'azure-tablequery', 'azure-iot-central', 'azure-disk', 'sql-azure-federations', 'azure-function-queue', 'azure-mapping-data-flow', 'azure-worker-roles', 'azure-dsvm', 'azure-spring-cloud', 'azure-sdk-.net', 'azure-elastic-sharding', 'azure-ad-msal', 'azureservicebus', 'azure-analysis-services', 'azure-ilb', 'django-pyodbc-azure', 'azure-data-share', 'azure-application-settings', 'azure-dev-spaces', 'azure-webjobs', 'azure-container-apps', 'azure-integration-account', 'azure-packaging', 'azure-iot-hub-device-management', 'azure-triggers', 'azure-waf', 'azure-ad-role', 'azure-functions-docker', 'azure-monitoring', 'azure-eventgrid', 'azure-deployment', 'azure-store', 'azure-gov', 'azure-storage-files', 'azure-connect', 'azure-timeseries-insights', 'azure-eventhub', 'azure-cosmosdb-mongovcore', 'azure-iot-hub', 'azure-lab-services', 'azure-java-sdk', 'azure-load-balancer', 'azure-durable-functions', 'azure-app-registration', 'azure-cosmosdb-changefeed', 'azure-automation', 'azure-purview', 'azure-vm-templates', 'azure-log-analytics', 'azure-cloud-services', 'azure-subscription', 'azure-sas', 'azure-functions-runtime', 'terraform-provider-azure', 'azure-zulu', 'azuremlsdk', 'azure-rtos', 'azure-industrial-iot', 'azure-traffic-manager', 'azure-storage', 'azure-diagnostics', 'azure-function-app', 'azure-function-async', 'azure-ml-pipelines', 'azure-role-environment', 'azure-speech', 'adal', 'azure-ddos', 'azure-cdn', 'azure-security', 'azure-files', 'rebus-azureservicebus', 'azure-appfabric', 'azure-batch', 'azure-information-protection', 'azure-data-lake', 'azure-rm-template', 'azure-databoxfamily', 'azure-cli2', 'azure-aks', 'azure-secrets', 'azure-webapps', 'azure-language-understanding', 'azure-servicebus-topics', 'azure-emulator', 'azure-remote-rendering', 'azure-keyvault', 'azure-http-trigger', 'azurerm-app-service', 'azure-static-web-app', 'azure-cloud-shell', 'azure-backup-vault', 'spark-bash-azure-databricks', 'azure-communication-services', 'azure-cosmosdb-emulator', 'azurekinect', 'azure-node-sdk', 'azure-sdk-go', 'azure-billing-api', 'azure-web-roles', 'azure-iot-dps', 'azure-resource-graph', 'azure-media-services', 'azure-runbook', 'azure-virtual-network', 'azureadgraph-deprecation', 'azure-sql-managed-instance', 'azure-arc', 'azure-sdk-for-go', 'azure-function-app-proxy', 'azure-calculator', 'azure-promptflow', 'azure-functions-proxies', 'azure-app-api', 'azure-ad-b2b', 'azure-vpn', 'azure-redis-cache', 'azure-management-api', 'azure-security-center', 'azure-china', 'azure-bicep', 'azure-notebooks', 'azure-managed-identity', 'azure-performancecounters', 'azure-sdk-for-ruby', 'passport-azure-ad', 'azure-fluent-api', 'azure-logic-apps', 'azure-storage-emulator', 'azure-oauth', 'azure-ad-powershell-v2', 'azure-iot-hub-device-update', 'azureportal', 'pulumi-azure', 'azure-acr', 'azure-vm-scale-set', 'azure-agent', 'azure-relay', 'azure-advisor', 'azure-logic-app-standard', 'azure-storage-account', 'azure-management-portal', 'azure-mobile-engagement', 'azure', 'azure-anomaly-detection', 'azure-monitor-workbooks', 'azure-free-services', 'azure-cli', 'azure-web-app-firewall', 'azure-compute-emulator', 'azure-mobile-services', 'azure-availability-zones', 'azure-digital-twins', 'azure-hdinsight', 'azure-cosmosdb-sqlapi'], 'external_links': [{'type': 'support', 'link': 'https://stackoverflow.com/contact?topic=15'}], 'description': 'A collective for developers to engage, share, and learn about Microsoft Azureâs open-source frameworks, languages, and platform. This collective is organized and managed by the Stack Overflow community.', 'link': '/collectives/azure', 'name': 'Microsoft Azure', 'slug': 'azure'}]",true
"{'account_id': 24526682, 'reputation': 71, 'user_id': 18439052, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/890c03f4e7c28615e674cf47ab67270e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'NoobMaster69', 'link': 'https://stackoverflow.com/users/18439052/noobmaster69'}",False,0,1727335681,1727335681,79025993,79025992,CC BY-SA 4.0,"<p>library used are keycloak-js and zustand</p> <p>The AuthProvider component acts as a gatekeeper for the app, using Keycloak to manage user authentication. When the component mounts, it sets up a Keycloak instance based on your configuration and checks if the user is logged in.</p> <p>If the user is authenticated, their profile information is loaded, and the app is updated to reflect their logged-in status. However, if theyâre not authenticated and try to access protected routes (like /contact), theyâll be redirected to the Keycloak login page. While this is happening, a loading spinner is displayed to let users know the authentication process is in progress.</p> <p>Overall, this component ensures that only authenticated users can access certain parts of the app</p> <pre><code> import Loading from ""@/error-pages/Loading""; import Keycloak from ""keycloak-js""; import { useKeycloakStore } from ""@/hooks/useKeycloak""; import { keycloakConfig } from ""@/utils/keycloakConfig""; import { usePathname } from ""next/navigation""; import React, { ReactNode, useLayoutEffect, useState } from ""react"";  export default function AuthProvider({ children }: { children: ReactNode }) {   const path = usePathname();   const [loading, setIsloading] = useState(false);   const { initializeKeycloak, setAuthenticated, setProfile } =     useKeycloakStore();    useLayoutEffect(() => {     const protectedRoutes = [""/contact""];     const keycloakInstance = new Keycloak(keycloakConfig);     initializeKeycloak(keycloakInstance);          // INITIALIZE KEYCLOAK     keycloakInstance       .init({         onLoad: ""check-sso"",         scope: ""offline_access"",       })       .then((auth) => {         if (auth) {           keycloakInstance?.loadUserProfile().then((item: any) => {             setProfile(item);           });           setAuthenticated(true);         } else {           // If User is not authenticated           if (!keycloakInstance?.authenticated) {             setIsloading(true);             console.log(""â Not Authenticated"");             // If User is not authenticated and page is protected             if (protectedRoutes.includes(path)) {               console.log(""â Unauthorize need to login"");               // send user to login page               keycloakInstance?.login(); // this keeps my page refreshing or redirect               setIsloading(false);             }           }         }       });   }, [setAuthenticated, path, initializeKeycloak, setProfile]);    if (loading) return <Loading />;   return <>{children}</>; }   </code></pre> <p>KEYCLOAK CONFIG</p> <pre><code> export const keycloakConfig = {   url: process.env.NEXT_PUBLIC_KEYCLOAK_URL,   realm: process.env.NEXT_PUBLIC_KEYCLOAK_REALM,   clientId: process.env.NEXT_PUBLIC_KEYCLOAK_CLIENT_ID, };   </code></pre>",,,true
"{'account_id': 29055127, 'reputation': 302, 'user_id': 22257042, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/3PdH0.png?s=256', 'display_name': 'Asi Salo', 'link': 'https://stackoverflow.com/users/22257042/asi-salo'}",True,1,1727335221,1727335221,79025971,79025893,CC BY-SA 4.0,"<p>Conditional type OmitName to ensure that when omitting name. TypeScript preserves the mutually exclusive logic between education and profession without breaking their type constraints:</p> <pre><code>type Props = {   name: string;   age: number; } & (   | {       education?: string;       profession?: never;     }   | {       education?: never;       profession?: string;     } );   type OmitName<T> = T extends { name: any } ? Omit<T, 'name'> : T;  export function X(props: Props) {   return null; }  export function Y(props: OmitName<Props>) {   return <X name=""John"" {...props} />; } </code></pre>",,,true
"{'account_id': 7234429, 'reputation': 1825, 'user_id': 10489887, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/oTVVFJLA.jpg?s=256', 'display_name': 'mrconcerned', 'link': 'https://stackoverflow.com/users/10489887/mrconcerned'}",False,1,1727334882,1727334882,79025951,79025893,CC BY-SA 4.0,"<p>You need to handle the union logic manually after omitting the <code>name</code> prop. So, you can try to extract the conditional types into union and combine the results back to it.</p> <pre><code>type OmitNameFromProps = (   | Omit<{ name: string; age: number } & { education?: string; profession?: never }, 'name'>   | Omit<{ name: string; age: number } & { education?: never; profession?: string }, 'name'> ); </code></pre> <p>So, you can use it as:</p> <pre><code>export function Y(props: OmitNameFromProps) {   return <X name=""John"" {...(props as Props)} />; } </code></pre>",,,true
"{'account_id': 13984567, 'reputation': 21, 'user_id': 10099991, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/65eGIDpB.jpg?s=256', 'display_name': 'Simar Rajput', 'link': 'https://stackoverflow.com/users/10099991/simar-rajput'}",False,1,1727782060,1727782060,79042935,79025624,CC BY-SA 4.0,"<p>The error you're encountering indicates that there's an issue with loading a module, which is preventing the registration of your main application component with AppRegistry. Here are some steps to troubleshoot and resolve this:</p> <ul> <li><p>Make sure your main application component is correctly exported. For example import App from './App'; // Adjust path as necessary</p> <p>AppRegistry.registerComponent('YourAppName', () => App);</p> </li> <li><p>Clear Cache:</p> <p>npx react-native start --reset-cache</p> </li> <li><p>Check Hermes Configuration:</p> <p>In your android/app/build.gradle, check for the following:</p> <p>project.ext.react = [ enableHermes: true  // If set to false, switch to true ]</p> </li> <li><p>Rebuild the App:</p> <p>npx react-native run-android   # for Android</p> <p>npx react-native run-ios       # for iOS</p> </li> <li><p>Look for Dependency Issues:</p> <p>npm install or yarn install</p> </li> </ul> <p>If you've gone through these steps and still have issues, feel free to provide more details about your setup or any specific error messages, and I can help you troubleshoot further!</p>",,,true
"{'account_id': 24108663, 'reputation': 4194, 'user_id': 18079514, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Ggp3z2xpppuRehj9gKrIWBerwb0xky0zPmEpZGMDg=k-s256', 'display_name': 'Ahmed Abdelbaset', 'link': 'https://stackoverflow.com/users/18079514/ahmed-abdelbaset'}",True,3,1727336927,1727324911,79025504,79025471,CC BY-SA 4.0,"<blockquote> <p>Do you think using <code>useEffect</code> like this to react to user input is bad practice?</p> </blockquote> <p>Yes.</p> <ol> <li>You don't need the <code>useEffect</code> at all.</li> </ol> <pre class=""lang-js prettyprint-override""><code>const maxHeight = collapsed ? ""0px"" : contentRef.current ? `${contentRef.current}px` : null; </code></pre> <p>Per to <a href=""https://react.dev/learn/you-might-not-need-an-effect#updating-state-based-on-props-or-state"" rel=""nofollow noreferrer"">the docs</a>:</p> <blockquote> <p>When something can be calculated from the existing props or state, donât put it in state. Instead, calculate it during rendering. This makes your code faster (you avoid the extra âcascadingâ updates), simpler (you remove some code), and less error-prone (you avoid bugs caused by different state variables getting out of sync with each other).</p> </blockquote> <ol start=""2""> <li>It will cause a layout shift.</li> </ol> <p><code>useEffect</code> is executed after the component completes rendering. This will introduce layout shift in your example, the component will render with the previous value of <code>maxHeight</code> then it will rerender again with the new value. (<code>useLayoutEffect</code> solves this).</p> <ol start=""3""> <li>Unnecessary re-render.</li> </ol>",1727336927.0,,true
"{'account_id': 13170666, 'reputation': 88037, 'user_id': 9513184, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/176386ce0b94057e55352484e69707f9?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Unmitigated', 'link': 'https://stackoverflow.com/users/9513184/unmitigated'}",False,1,1727324413,1727324413,79025492,79025471,CC BY-SA 4.0,"<p><code>useEffect</code> can be applied here, but React provides a more efficient mechanism for reacting to changes in a prop: calling <code>set</code> functions during rendering. When you set state while the component is rendering, React will skip rendering the children and immediately rerender the component after the function returns.</p> <p>This could be implemented like so:</p> <pre><code>function Collapse({ collapsed /*, other props... */ }) {     // other hooks...     const [prevCollapsed, setPrevCollapsed] = useState();     if (collapsed !== prevCollapsed) {         setPrevCollapsed(collapsed);         if (collapsed)             setMaxHeight('0px');         else if (contentRef.current)             setMaxHeight(`${contentRef.current.scrollHeight}px`);     }     return ""content to render...""; } </code></pre>",,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",False,0,1727339763,1727339763,79026278,79025111,CC BY-SA 4.0,"<p>The following code works:</p> <pre><code>import { useState, useEffect } from 'react';  export default function App() {   const [someState, setSomeState] = useState('');    history.pushState({ page: 1 }, 'title 1', '?page=1');   history.back();    useEffect(() => {     const handlePopState = () => {       console.log('event');       setSomeState('test value');     };      window.addEventListener('popstate', handlePopState);      return () => {       window.removeEventListener('popstate', handlePopState);     };   }, []);   return <>the new state is {someState}</>; } </code></pre>",,,true
"{'account_id': 426109, 'reputation': 314680, 'user_id': 807126, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/xpNqK.jpg?s=256', 'display_name': 'Doug Stevenson', 'link': 'https://stackoverflow.com/users/807126/doug-stevenson'}",True,1,1727308139,1727308139,79025088,79025067,CC BY-SA 4.0,"<p>You've already identified the line of code that causes the behavior:</p> <pre><code>setCurrentUser(null); // This might be causing the null payload </code></pre> <p>When a page first loads, <a href=""https://firebase.google.com/docs/reference/js/v8/firebase.auth.Auth#onauthstatechanged"" rel=""nofollow noreferrer""><code>onAuthStateChanged</code></a> calls your function with a null user object, which means your code is going call <code>setCurrentUser(null)</code>.  Even if the user previously signed in, that user is not known immediately on a newly page load.  It takes some time until Firebase is able to validate their auth token, and auth state observer gets a real user object to work with.  Your app should probably show some sort of loading indicator until the user object is available.</p> <p>I suggest adding some logging so you can observe how this works more easily for yourself.</p> <p>See also:</p> <ul> <li><a href=""https://stackoverflow.com/questions/65487703/firebase-authentication-logged-in-user-is-null"">Firebase Authentication - Logged In User Is Null</a></li> <li><a href=""https://stackoverflow.com/questions/50683852/sometimes-firebase-auth-onauthstatechanged-returns-user-of-null-when-i-refresh"">Sometimes firebase.auth().onAuthStateChanged returns user of null when I refresh the page</a></li> </ul>",,"[{'tags': ['google-cloud-vision', 'google-cloud-run', 'firebase-in-app-messaging', 'google-cloud-instance-template', 'google-cloud-translate', 'cordova-plugin-firebasex', 'google-cloud-spanner', 'google-cloud-data-transfer', 'google-cloud-storage-r', 'firebase-security', 'firebase-realtime-database', 'google-cloud-sdk', 'google-cloud-launcher', 'firebase-admin', 'google-kubernetes-engine', 'recaptcha-enterprise', 'google-anthos', 'google-cloud-webrisk', 'google-app-engine-php', 'google-cloud-memorystore', 'jib', 'firebase-analytics', 'google-cloud-datastore', 'firebasesimplelogin', 'apigee', 'firebase-hosting', 'google-cloud-healthcare', 'google-cloud-transcoder', 'firebase-app-distribution', 'google-cloud-kms', 'google-cloud-test-lab', 'google-cloud-code', 'firebase-test-lab', 'firebase-ab-testing', 'google-cloud-debugger', 'google-cloud-stackdriver', 'google-app-engine', 'google-cloud-url-maps', 'google-cloud-endpoints-v2', 'google-cloud-ml', 'google-compute-engine', 'google-cloud-storage', 'react-redux-firebase', 'google-cloud-api-gateway', 'firebase-dynamic-links', 'firebase-predictions', 'react-native-firebase', 'redux-saga-firebase', 'google-cloud-dataprep', 'google-cloud-automl', 'google-migrate-for-compute-engine', 'google-cloud-logging', 'firebase-invites', 'cloud-document-ai', 'google-cloud-python', 'google-cloud-node', 'google-cloud-tools', 'firebase-extensions', 'google-app-engine-golang', 'rest-firebase', 'google-cloud-armor', 'firebase-polymer', 'nativescript-firebase', 'google-app-engine-deploy', 'firebase-cloud-messaging', 'dialogflow-cx', 'google-cloud-spanner-emulator', 'google-cloud-search', 'looker', 'firebase-crash-reporting', 'google-cloud-build', 'google-cloud-identity-aware-proxy', 'google-cloud-instances', 'google-cloud-repository', 'dialogflow-es', 'vertex-ai-search', 'google-cloud-tasks', 'google-analytics-firebase', 'google-cloud-datalab', 'firebase-storage', 'google-cloud-iot', 'google-cloud-source-repos', 'firebase-assistant', 'google-cloud-messaging', 'google-cloud-pubsublite', 'google-cloud-firestore', 'google-cloud-networking', 'google-container-optimized-os', 'google-cloud-iam', 'google-cloud-save', 'google-cloud-nl', 'google-translate', 'firebase-mlkit', 'firebase-admob', 'google-cloud-internal-load-balancer', 'firebase-notifications', 'google-cloud-cpp', 'google-cloud-filestore', 'firebase-app-check', 'google-cloud-print-privet', 'google-cloud-intellij', 'google-cloud-router', 'google-cloud-profiler', 'google-cloud-identity', 'google-app-engine-python', 'google-cloud-ai', 'google-cloud-bigtable', 'google-cloud-billing', 'gcloud', 'google-cloud-metrics', 'firebase-database', 'firebase', 'google-cloud-dataflow', 'firebase-tools', 'google-cloud-console', 'google-cloud-vertex-ai', 'firebase-cli', 'google-cloud-print', 'google-app-engine-go', 'google-cloud-talent-solution', 'google-cloud-dataproc-metastore', 'google-cloud-speech', 'google-cloud-visualstudio', 'google-container-os', 'google-container-builder', 'google-cloud-monitoring', 'google-cloud-error-reporting', 'google-cloud-ai-platform-pipelines', 'stackdriver', 'google-cloud-asset-inventory', 'google-cloud-robotics', 'google-cloud-ml-engine', 'google-cloud-dns', 'google-cloud-pubsub', 'google-bigquery', 'google-app-engine-launch', 'google-cloud-workstations', 'firebase-performance', 'google-cloud-ops-agent', 'firebase-job-dispatcher', 'google-cloud-platform', 'google-cloud-vpn', 'google-cloud-resource-manager', 'google-cloud-deploy', 'firebaseui', 'google-cloud-shell', 'google-cloud-dataproc', 'firebase-machine-learning', 'firebase-util', 'firebase-app-indexing', 'google-dataflow', 'google-cloud-scheduler', 'google-cloud-sql', 'apigee-baas', 'firebase-queue', 'google-cloud-data-fusion', 'google-cloud-network-load-balancer', 'bigtable', 'google-prediction', 'firebase-remote-config', 'looker-studio', 'google-cloud-proxy', 'google-cloud-composer', 'google-container-registry', 'google-cloud-automl-nl', 'firebase-authentication', 'google-cloud-php-client', 'google-cloud-endpoints', 'google-cloud-powershell', 'google-cloud-http-load-balancer', 'google-cloud-interconnect', 'google-cloud-language', 'google-fusion-tables', 'google-cloud-recommendation', 'google-cloud-tpu', 'google-cloud-shell-editor', 'google-cloud-cdn', 'google-cloud-load-balancer', 'google-cloud-dlp', 'google-app-engine-patch', 'google-cloud-marketplace', 'maven-jib', 'google-cloud-trace', 'google-cloud-functions', 'google-cloud-registry', 'dialogflow-es-fulfillment', 'firebase-console'], 'external_links': [{'type': 'support', 'link': 'https://stackoverflow.com/contact?topic=15'}], 'description': 'A collective for developers who utilize Google Cloudâs infrastructure and platform capabilities. This collective is organized and managed by the Stack Overflow community.', 'link': '/collectives/google-cloud', 'name': 'Google Cloud', 'slug': 'google-cloud'}]",true
"{'account_id': 7426710, 'reputation': 49809, 'user_id': 5648954, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2noo3.jpg?s=256', 'display_name': 'Nick Parsons', 'link': 'https://stackoverflow.com/users/5648954/nick-parsons'}",False,3,1727310817,1727310252,79025133,79024961,CC BY-SA 4.0,"<p><a href=""https://react.dev/reference/react-dom/components/common#returns"" rel=""nofollow noreferrer"">Ref cleanups</a> are only available in canary builds of React, so currently not available in stable versions, if you want to play around with it, you need to use a canary build for the time being, or test for <code>null</code> like Drew suggests in his answer:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function App() {   const [x, setX] = React.useState(2);     return (       <React.Fragment>         <p ref={(node) => {           console.log('start', node);           return () => {             console.log('finish', node);           };         }}>{x}</p>         <button onClick={() => setX(x + 1)}>hello</button>       </React.Fragment>   ); }   const root = ReactDOM.createRoot(document.body);  root.render(<App />);</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.3.0-canary-c3048aab4-20240326/umd/react.development.min.js"" integrity=""sha512-N3bJHd0IQK3T+qeOxAxW+CC1/dYPREk4z6UvuqDrbk1DcK173oFL2RjSDwS1F5nLMaPwI3v4yWXCtuf2rYw3/g=="" crossorigin=""anonymous"" referrerpolicy=""no-referrer""></script>  <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.3.0-canary-c3048aab4-20240326/umd/react-dom.development.min.js"" integrity=""sha512-36i1/IQRwia35jjTQr9i7Hsb/CaU8B5I0CL6/JMnOO7XExnCKXhsNR14c15DhSswOvN7KpH6qYAoCiJVvn3QBw=="" crossorigin=""anonymous"" referrerpolicy=""no-referrer""></script></code></pre>  </div>  </div>  </p>",1727310817.0,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,2,1727305095,1727304455,79024993,79024961,CC BY-SA 4.0,"<p>React refs don't have a cleanup function in the same way the <code>useEffect</code> hook callback returns a cleanup function. React refs that are set with the <a href=""https://legacy.reactjs.org/docs/refs-and-the-dom.html#callback-refs"" rel=""nofollow noreferrer"">callback syntax</a> are simply just called again and passed <code>null</code>.</p> <p>Example:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function App() {   const [x, setX] = React.useState(2);    return (     <div className=""App"">       <span         ref={(node) => {           if (node) {             console.log(""start"", node);           } else {             console.log(""finish"", node);           }         }}       >         {x}       </span>{"" ""}       <button onClick={() => setX((x) => x + 1)}>+</button>     </div>   ); }  const rootElement = document.getElementById(""root""); const root = ReactDOM.createRoot(rootElement);  root.render(<App />);</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.2.0/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.2.0/umd/react-dom.production.min.js""></script> <div id=""root"" /></code></pre>  </div>  </div>  </p> <p>In the ref callback, check when the ref is null and handle any ""cleanup"" duties.</p> <p>Note: It's more conventional/standard to use a <code>useEffect</code> hook to run any cleanup logic.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function App() {   const [x, setX] = React.useState(2);    React.useEffect(() => {     console.log(""start"");     return () => {       console.log(""finish"");     };   }, [x]);    return (     <div className=""App"">       <span>         {x}       </span>{"" ""}       <button onClick={() => setX((x) => x + 1)}>+</button>     </div>   ); }  const rootElement = document.getElementById(""root""); const root = ReactDOM.createRoot(rootElement);  root.render(<App />);</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.2.0/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.2.0/umd/react-dom.production.min.js""></script> <div id=""root"" /></code></pre>  </div>  </div>  </p>",1727305095.0,,true
"{'account_id': 10182352, 'reputation': 87, 'user_id': 7518631, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/eeb9b1f265abe447b7307dd2bf2a498d?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Sasank M', 'link': 'https://stackoverflow.com/users/7518631/sasank-m'}",True,0,1727344768,1727338283,79026182,79024947,CC BY-SA 4.0,"<p>I was able to get this working.</p> <p>Answers:</p> <ol> <li>I have updated the <code>chat/[conversationId]/layout.tsx</code> to check the pathname if history or files are not in the path name hiding the children. Code:</li> </ol> <pre><code>'use client'  import { usePathname } from 'next/navigation'  export default function ChatLayout({   children,   chatbot }: Readonly<{   children: React.ReactNode   chatbot: React.ReactNode }>) {   const pathname = usePathname()    const showDrawer = pathname.includes('history') || pathname.includes('files')   return (     <div className=""flex h-full flex-row"">       {showDrawer && <div>{children}</div>}       <div className=""flex-1"">{chatbot}</div>     </div>   ) } </code></pre> <ol start=""2""> <li>This can be done by having the same routes under /chat as well as /chat/[conversationId]. But I am skipping this, I do conditional rendering with <code>/chat/new</code> and <code>/chat/id</code></li> <li>I am using browser native API <code>window.history.pushState</code> to do shallow routing. NextJS <a href=""https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#using-the-native-history-api"" rel=""nofollow noreferrer"">doc reference</a></li> </ol>",1727344768.0,,true
"{'account_id': 35880509, 'reputation': 61, 'user_id': 27450604, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/oTqfVxTA.jpg?s=256', 'display_name': '27450604', 'link': 'https://stackoverflow.com/users/27450604/27450604'}",True,1,1727298439,1727298439,79024762,79024693,CC BY-SA 4.0,"<p>Remove <code>credentials: ""include""</code>. That triggers an <code>OPTIONS</code> call, which dummyjson doesn't include as an approved method in their <code>access-control-allow-methods</code> header (allowed methods: <code>GET</code>,<code>HEAD</code>,<code>PUT</code>,<code>PATCH</code>,<code>POST</code>,<code>DELETE</code>). Unless there is a reason you need to pass cookies along, there's no need to use <code>credentials</code> in your request.</p> <p>This works for me:</p> <pre><code>const getArticles = async () => {   const data = await fetch(""https://dummyjson.com/auth/login"", {     method: ""POST"",     headers: { ""Content-Type"": ""application/json"",'Access-Control-Allow-Origin': 'http://localhost:3000', 'Access-Control-Allow-Credentials': 'true' },     body: JSON.stringify({       username: ""emilys"",       password: ""emilyspass"",       expiresInMins: 30, // optional, defaults to 60     })   }); }; </code></pre> <p>...and I received the following response:</p> <pre><code>{   ""accessToken"": ""eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJlbWlseXMiLCJlbWFpbCI6ImVtaWx5LmpvaG5zb25AeC5kdW1teWpzb24uY29tIiwiZmlyc3ROYW1lIjoiRW1pbHkiLCJsYXN0TmFtZSI6IkpvaG5zb24iLCJnZW5kZXIiOiJmZW1hbGUiLCJpbWFnZSI6Imh0dHBzOi8vZHVtbXlqc29uLmNvbS9pY29uL2VtaWx5cy8xMjgiLCJpYXQiOjE3MjcyOTc4MTAsImV4cCI6MTcyNzI5OTYxMH0.FdD1MZ1AppmkC05XiYhu1hT6AK_6WC4f0rc62q31-aA"",   ""refreshToken"": ""eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJlbWlseXMiLCJlbWFpbCI6ImVtaWx5LmpvaG5zb25AeC5kdW1teWpzb24uY29tIiwiZmlyc3ROYW1lIjoiRW1pbHkiLCJsYXN0TmFtZSI6IkpvaG5zb24iLCJnZW5kZXIiOiJmZW1hbGUiLCJpbWFnZSI6Imh0dHBzOi8vZHVtbXlqc29uLmNvbS9pY29uL2VtaWx5cy8xMjgiLCJpYXQiOjE3MjcyOTc4MTAsImV4cCI6MTcyOTg4OTgxMH0.lfjT0OIWFsL5M_xFlZlBQcISVfr90GxJXytXbfLo5s0"",   ""id"": 1,   ""username"": ""emilys"",   ""email"": ""emily.johnson@x.dummyjson.com"",   ""firstName"": ""Emily"",   ""lastName"": ""Johnson"",   ""gender"": ""female"",   ""image"": ""https://dummyjson.com/icon/emilys/128"" } </code></pre> <p>I hope this helps.</p>",,,true
"{'account_id': 35919534, 'reputation': 1, 'user_id': 27471944, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/fd9cc8d13f5f6a81756eb759f430b07a?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Thewebguy', 'link': 'https://stackoverflow.com/users/27471944/thewebguy'}",False,0,1727293223,1727293223,79024534,79024478,CC BY-SA 4.0,"<p>Try using Img instead of GatsbyImage</p> <p>It should look like this:</p> <pre><code>              <Img src={recipeImage} alt={recipe.title} className=""w-full h-64 object-cover mb-4"" /> </code></pre>",,,true
"{'account_id': 33338055, 'reputation': 21, 'user_id': 25812900, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/633798e7a19925bc57c62aa3dcd94d2e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Bing Bang', 'link': 'https://stackoverflow.com/users/25812900/bing-bang'}",True,0,1727330980,1727330980,79025738,79024159,CC BY-SA 4.0,"<p>I managed to fix it by using <code>useCallback</code></p> <p>So instead of</p> <pre><code><Element     ref={elementRef}    style={{ height: isSelected ? `${elementRef.current.scrollHeight}px` : '0px' }}  /> </code></pre> <p>I have achieved it by using the <code>useCallback</code> hook which is called after each rendering pass:</p> <pre><code>const detailRef = useCallback((element) => {   if (!element) {     return;   }    element.style.height = isExpanded ? `${element.scrollHeight}px` : '0px'; }, [isExpanded]);  // ...  return ( <Element ref={detailRef} /> );  </code></pre>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,0,1727286068,1727286068,79024177,79024159,CC BY-SA 4.0,<p>If the ref is not set yet on the very initial render then you can likely use the Optional Chaining operator and a fallback value.</p> <p>Example:</p> <pre><code><Element     ref={elementRef}    style={{      height: isSelected        ? `${elementRef.current?.scrollHeight ?? 0}px`        : '0px'    }}  /> </code></pre>,,,true
"{'account_id': 35896627, 'reputation': 1, 'user_id': 27459399, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/21c61064c2101d16c37bdca984c40ce6?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'CMGT_', 'link': 'https://stackoverflow.com/users/27459399/cmgt'}",False,0,1727285733,1727285733,79024156,79024107,CC BY-SA 4.0,"<p>Here you are in a <strong>useEffect</strong> hook, not a <strong>useState</strong> hook. That's why setItem is triggered every page refreshing at first, and it will be triggered again if [inputArr] is changed.</p>",,,true
"{'account_id': 35406291, 'reputation': 586, 'user_id': 27184656, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/cWqspvCg.png?s=256', 'display_name': 'The Teabag Coder', 'link': 'https://stackoverflow.com/users/27184656/the-teabag-coder'}",True,0,1727281073,1727281073,79023893,79023808,CC BY-SA 4.0,"<blockquote> <p>initialState: The value you want the state to be initially. It can be a value of any type, but there is a special behavior for functions. <strong>This argument is ignored after the initial render</strong>. - <a href=""https://react.dev/reference/react/useState#parameters"" rel=""nofollow noreferrer"">link</a></p> </blockquote> <p>You need to have an effect that watch props changes to update <code>checked</code> and <code>state</code></p> <pre><code>React.useEffect(() => {     props.CheckBoxState !== undefined &&       setChecked({ ...checked, CheckBoxState: props.CheckBoxState });     setState({ ...state, Name: props.Name, Description: props.Description }); }, [props]); </code></pre> <p>Working sample: <a href=""https://stackblitz.com/edit/vitejs-vite-ckzpwe?file=src%2FApp.tsx&terminal=dev"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/vitejs-vite-ckzpwe?file=src%2FApp.tsx&terminal=dev</a></p>",,,true
"{'account_id': 16237236, 'reputation': 1, 'user_id': 11724450, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-nHMa9NJIylU/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rc29akHi_lC7hTM1FUlJ0dVR7ABRw/photo.jpg?sz=256', 'display_name': 'Piotr GomoÅa', 'link': 'https://stackoverflow.com/users/11724450/piotr-gomo%c5%82a'}",False,0,1727341835,1727341835,79026433,79023403,CC BY-SA 4.0,"<p>What version of react-native-image-picker are you trying to install?</p> <p>My guess is that you are trying to run either an old React Native project or an old version of the library, or both (because of the 'compile' replacement warning).</p> <p>In that case I think you might have problems with downloading those build tools on Android because of jcenter repository being deprecated and down since 2022.</p> <p>If you do not want to update the project and libraries (which I recommend, because you might get stuck on similar problems on the way after fixing this one), try to add this to your root gradle file in android directory (not in app/gradle) inside of subprojects clause:</p> <pre><code>subprojects {     if (project.name.contains('react-native-image-picker') ||          project.name.contains('react-native-vector-icons')) {         buildscript {             repositories {                 mavenCentral()             }         }     } } </code></pre>",,,true
"{'account_id': 6734594, 'reputation': 38717, 'user_id': 5189811, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/FzPWr.png?s=256', 'display_name': 'Oluwafemi Sule', 'link': 'https://stackoverflow.com/users/5189811/oluwafemi-sule'}",True,1,1727271713,1727271334,79023194,79022825,CC BY-SA 4.0,"<p>The clear button on the search box is styled by the user-agent and can be overriden by using the <code>::-webkit-search-cancel-button</code> pseudoselector.</p> <pre class=""lang-css prettyprint-override""><code>  input[type='search']::-webkit-inner-spin-button,   input[type=""search""]::-webkit-outer-spin-button,   input[type='search']::-webkit-search-cancel-button {     -webkit-appearance: none;     margin: 0;   } </code></pre>",1727271713.0,,true
"{'account_id': 4259863, 'reputation': 465, 'user_id': 5483604, 'user_type': 'registered', 'accept_rate': 75, 'profile_image': 'https://www.gravatar.com/avatar/e5db68feb485c8943bb8f885abf95257?s=256&d=identicon&r=PG', 'display_name': 'Valeriy Donika', 'link': 'https://stackoverflow.com/users/5483604/valeriy-donika'}",False,1,1727267254,1727267254,79022903,79022796,CC BY-SA 4.0,"<p>The error was very simple my Custom component was declared inside of the component, so after I moved the code to a separate file/component it works.</p>",,,true
"{'account_id': 25681176, 'reputation': 1113, 'user_id': 19443941, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/eobRr.png?s=256', 'display_name': 'os4m37', 'link': 'https://stackoverflow.com/users/19443941/os4m37'}",True,1,1727270085,1727267977,79022944,79022786,CC BY-SA 4.0,"<p>When you create a paymentRequest instance[1], you can provide a list of wallets to disable[2].</p> <pre><code>  const [paymentRequest, setPaymentRequest] = useState(null);    useEffect(() => {     if (stripe) {       const pr = stripe.paymentRequest({         country: 'US',         currency: 'usd',         total: {           label: 'Demo total',           amount: 1099,         },         requestPayerName: true,         requestPayerEmail: true,         disableWallets: ['applePay'] # add this line       });     }   }, [stripe]); </code></pre> <p>If you want to disable the Request Button, unfortunately, you can't. As a workaround you can use your own button[3] and disbale/enable it as any other button in your webpage.</p> <p>[1] <a href=""https://docs.stripe.com/stripe-js/elements/payment-request-button?client=react#create-payment-request-instance"" rel=""nofollow noreferrer"">https://docs.stripe.com/stripe-js/elements/payment-request-button?client=react#create-payment-request-instance</a></p> <p>[2] <a href=""https://docs.stripe.com/js/payment_request/create#stripe_payment_request-options-disableWallets"" rel=""nofollow noreferrer"">https://docs.stripe.com/js/payment_request/create#stripe_payment_request-options-disableWallets</a></p> <p>[3] <a href=""https://docs.stripe.com/stripe-js/elements/payment-request-button?client=react#use-own-button"" rel=""nofollow noreferrer"">https://docs.stripe.com/stripe-js/elements/payment-request-button?client=react#use-own-button</a></p>",1727270085.0,,true
"{'account_id': 129540, 'reputation': 217665, 'user_id': 328193, 'user_type': 'registered', 'accept_rate': 91, 'profile_image': 'https://i.sstatic.net/FnwU5.jpg?s=256', 'display_name': 'David', 'link': 'https://stackoverflow.com/users/328193/david'}",True,2,1727265716,1727265716,79022770,79022739,CC BY-SA 4.0,"<p>Because of this:</p> <pre><code>const Dropdown1 = ({ selectedItems = [] }) => { </code></pre> <p>The <code>selectedItems</code> value isn't state-driven, nor is it a prop received by the component:</p> <pre><code><Dropdown1 /> </code></pre> <p>The empty array is a default value for the function parameter.  And every time that function executes, it creates an empty array to satisfy that default parameter.  Each such array is a new instance, so it triggers the <code>useEffect</code> dependency.</p> <p>Instead, supply an instance as a prop:</p> <pre><code><Dropdown1 selectedItems={[]} /> </code></pre> <p>In this case the value isn't being created by the function, but is being supplied to the function.  Since the parent component doesn't re-render, it's the same array reference and doesn't trigger the <code>useEffect</code> dependency.</p>",,,true
"{'account_id': 7070594, 'reputation': 13, 'user_id': 5412319, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/8923036a7e94d8682ccad78761ac0664?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'babak golbaharan', 'link': 'https://stackoverflow.com/users/5412319/babak-golbaharan'}",False,0,1727296238,1727296238,79024664,79022668,CC BY-SA 4.0,"<p>and this is a shorest answer</p> <pre><code>if(     (!subdomain && !/^\/((fa|en|ar)\/)?(panel|login)\/?$/.test(pathName)) ||     ( subdomain && !['hol','archi','vet'].includes(subdomain) )   ){         ['fa','en','ar'].includes(pathName.replace(/^\/|\/$/g, ''))?           window.location.replace('http://hol.localhost:3000'+pathName):           window.location.replace('http://hol.localhost:3000/en/');   }   else if( !/^\/(fa|en|ar)(\/.*)?/.test(pathName) ){     return <Navigate to={`/en${pathName}`}/>   }   else{     return(       <Routes>         <Route path=""login"" element={<Navigate replace to=""/en/login"" />} />         <Route path=""panel"" element={<Navigate replace to=""/en/panel"" />} />         <Route path=""/:lang"">           <Route path=""login"" element={<Panel />} />           <Route path=""panel"" element={<Panel />} />           <Route path=""""  element={subdomain=='hol'? <HoldingPage /><BlogPages />} />           <Route path=""*"" element={subdomain=='hol'? <HoldingPage />: <BlogPages />} />         </Route>       </Routes>     )   } </code></pre>",,,true
"{'account_id': 7070594, 'reputation': 13, 'user_id': 5412319, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/8923036a7e94d8682ccad78761ac0664?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'babak golbaharan', 'link': 'https://stackoverflow.com/users/5412319/babak-golbaharan'}",False,0,1727274123,1727274123,79023406,79022668,CC BY-SA 4.0,"<p>I found the solution, but still the challenge to find better answers.</p> <pre><code>var     url = window.location.href,     pathName = useLocation().pathname;    if( url.match(/http:\/\/localhost:3000\/((fa|en|ar)\/)?((panel)|(login))/) ){     return(       <Routes>         <Route path=""login"" element={<Navigate replace to=""/en/login"" />} />         <Route path=""panel"" element={<Navigate replace to=""/en/panel"" />} />         <Route path=""/:lang"">           <Route path=""login"" element={<Panel />} />           <Route path=""panel"" element={<Panel />} />         </Route>       </Routes>     )   }   else if( url.match(/http:\/\/localhost:3000\/((fa|en|ar)\/?)?/) ){     ['fa','en','ar'].includes(pathName.replace(/^\/|\/$/g, ''))?       window.location.replace('http://hol.localhost:3000'+pathName):       window.location.replace('http://hol.localhost:3000/en/');   }   else if(    url.match(/http:\/\/(archi|vet)\.localhost:3000\/((fa|en|ar)\/?)?/) ){     if( !pathName.match(/\/(fa|en|ar)\//) )       return <Navigate to=""/en/"" />     else       return(         <Routes>           <Route path=""*"" element={<BlogPages />} />         </Routes>       )   }   else{     if( !url.match(/http:\/\/hol\./) )       window.location.replace('http://hol.localhost:3000'+pathName);     else if( !pathName.match(/\/(fa|en|ar)\//) )       return <Navigate to=""/en/"" />     else       return(         <Routes>           <Route path=""*"" element={<HoldingPage />} />         </Routes>       )   } </code></pre>",,,true
"{'account_id': 22764972, 'reputation': 575, 'user_id': 16923160, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/QdPqFHnZ.jpg?s=256', 'display_name': 'vzsoares', 'link': 'https://stackoverflow.com/users/16923160/vzsoares'}",True,3,1727444830,1727300714,79024869,79022507,CC BY-SA 4.0,"<p>Just made it work using some propper regex:</p> <pre><code>""no-restricted-imports"": [""error"", {     ""patterns"": [{       ""regex"": ""@material-ui\/material$"",       ""message"": ""No root mui import"" }] </code></pre> <blockquote> <p><code>@material-ui\/material$</code> escape the forward slash and mark end of string using dollar sign <code>$</code></p> </blockquote> <p><a href=""https://eslint-online-playground.netlify.app/#eNp9kctOwzAQRX9lZLFsE8GybFDFJ7Cru3DjSeriR/CjBFX9d8Z2GigLIsWyPTNn7lxfWPBdi5Mwo8bmFNiGtS28HVWAcHRJS4heDQN6EBbQe+e5VWZ0PsIFtm6CK/TeGeDsxYiIXgm9Tqq97Tl75vYP8IAgtHafKBcUgZ7+5bTbFKOzhGMrhkErG5vO2V4NVfPMOYWFUpPaUygScCpxib1IOsKOW6DkGREaj50zBq1EucqhS14AfNIYNrcTwEdyMV/sOKtWsBW1ki4dNHK2L6X548y6tcdA1nUR5bqqIyX3pTOXs1FEGtPWhKUbZx4HnPLlvSucL748EOcn32AIYiApuSLlLbgeavdHGL06UxkYJ/NcYF28PUTDWaVc99zmv+wLOa97cpB8H0X3Tkxy3FnyvAjlLH6Nc8cKnhWRL3h+xTGbajuFZbhl4t/Pk0s1CQtxGYZMKvH7YJFD+tj1G9WL57Y="" rel=""nofollow noreferrer"">playground</a></p> <p>Edit: if you also want to block when it might have a slash in the end like: <code>import { Box } from ""@material-ui/material/""</code> then use this expression <code>@material-ui\/material\/{0,1}$</code></p>",1727444830.0,,true
"{'account_id': 7473627, 'reputation': 4569, 'user_id': 6656062, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/f81d5001b30b4874a2cd840ca9b32f72?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'cjl750', 'link': 'https://stackoverflow.com/users/6656062/cjl750'}",False,1,1727373717,1727373717,79028614,79022507,CC BY-SA 4.0,"<p>As an alternative to the approach shown by @vzsoares, you can use the <code>paths</code> option of the <code>no-restricted-imports</code> rule with a simple string value. That will do what you want by default.</p> <pre class=""lang-json prettyprint-override""><code>{   ""rules"": {     ""no-restricted-imports"": [       ""error"",       {         ""paths"": [           {             ""name"": ""@material-ui/material"",             ""message"": ""Your error message"",           }         ]       }     ]   } } </code></pre>",,,true
"{'account_id': 6346086, 'reputation': 365, 'user_id': 4926599, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/1166e7c22c53f6a5cbc901653b270f79?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Gaze', 'link': 'https://stackoverflow.com/users/4926599/gaze'}",True,0,1727266695,1727266695,79022851,79022257,CC BY-SA 4.0,"<p>It is currently not possible to infer the detected source language for documents with the public API DeepL provides, as it just allows you to download the document. See also the <a href=""https://developers.deepl.com/docs/api-reference/document#step-3-download-the-translated-document"" rel=""nofollow noreferrer"">documentation</a>.</p>",,,true
"{'account_id': 34188299, 'reputation': 11, 'user_id': 26433258, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d8a77e097601734975ce822973866006?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'SANJAYS', 'link': 'https://stackoverflow.com/users/26433258/sanjays'}",False,0,1727258711,1727258711,79022282,79022172,CC BY-SA 4.0,"<p>To exclude all locales from the date-fns package using ContextReplacementPlugin, the configuration you've shared looks correct. Here's how it works:</p> <p>ContextReplacementPlugin: This plugin is used to replace the context for dynamic imports, ensuring that Webpack skips including unnecessary locale files. Here's a complete example based on your configuration:</p> <pre><code>import webpack from ""webpack""; import path from ""path""; import { supportedLocales } from ""./config.js""; // assuming this config  file exists  export default {   resolve: {   alias: {   // Create an alias for date-fns-locale directory   ""date-fns-locale"": path.dirname(require.resolve(""date-    fns/package.json"")),   }, }, plugins: [ new webpack.ContextReplacementPlugin(   /date-fns[/\\]locale/,   /$^/,),   ], }; </code></pre> <p>ContextReplacementPlugin:</p> <p>The first argument /date-fns[/\]locale/ tells Webpack to look for the locale directory within date-fns. The second argument /^$/ (which matches nothing) ensures that Webpack doesn't include any files from the locale directory, effectively excluding all locales.</p> <p><a href=""https://github.com/date-fns/date-fns/blob/main/docs/webpack.md"" rel=""nofollow noreferrer"">date-fnf refrence</a></p>",,,true
"{'account_id': 8893562, 'reputation': 14, 'user_id': 6639364, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/0beHJuuC.jpg?s=256', 'display_name': 'Zahir HANICHE', 'link': 'https://stackoverflow.com/users/6639364/zahir-haniche'}",True,0,1727255973,1727255973,79022060,79022016,CC BY-SA 4.0,"<p>It sounds like youâre dealing with a state persistence issue in your React application. Here are a few suggestions to help you maintain the current state after a refresh, preventing redirects to the root path (â/â) for both protected and non-protected routes:</p> <p><strong>1. Persisting User State in Local Storage</strong> Ensure that your user state (token and userType) is correctly persisted in local storage and rehydrated on app load.</p> <p>In your useContext.js, you are already storing the token in local storage. Make sure you also store the userType.</p> <p><strong>2. Check User State on Route Change</strong> Ensure that your ProtectedRoute component correctly checks the user state before rendering the protected component.</p> <ol start=""3""> <li>Rehydrate State on App Load Make sure your app rehydrates the state from local storage when it loads. You can do this in your CombinedProvider.</li> </ol> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-html lang-html prettyprint-override""><code>import React, { createContext, useState, useEffect, useContext, useCallback } from 'react'; import { useNavigate } from 'react-router-dom'; import { toast } from 'react-toastify';   export const CombinedContext = createContext();  export const CombinedProvider = ({ children }) => {   const [token, setToken] = useState(localStorage.getItem('token'));   const [userType, setUserType] = useState(localStorage.getItem('userType'));    const navigate = useNavigate();    const fetchData = useCallback(async () => {     // Fetch user data to get userType   }, []);    useEffect(() => {     if (token) {       fetchData();       localStorage.setItem('userType', userType);     }   }, [token, userType, fetchData]);    useEffect(() => {     const storedToken = localStorage.getItem('token');     const storedUserType = localStorage.getItem('userType');     if (storedToken) {       setToken(storedToken);     }     if (storedUserType) {       setUserType(storedUserType);     }   }, []);    const logout = () => {     localStorage.removeItem('token');     localStorage.removeItem('userType');     setToken(null);     setUserType(null);     navigate('/');   };    return (     <CombinedContext.Provider value={{ token, userType, logout }}>       {children}     </CombinedContext.Provider>   ); };  export const useCombinedContext = () => useContext(CombinedContext);</code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 13468738, 'reputation': 7423, 'user_id': 9718056, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ee99b210db5777e5e0a69aaa025cd461?s=256&d=identicon&r=PG', 'display_name': 'Arkellys', 'link': 'https://stackoverflow.com/users/9718056/arkellys'}",False,0,1727353878,1727353878,79027303,79021958,CC BY-SA 4.0,"<p>In production, you should use your built HTML file instead of <code>localhost</code>:</p> <pre class=""lang-js prettyprint-override""><code>app.isPackaged   ? mainWindow.loadFile(path.join(__dirname, ""index.html"")) // Prod   : mainWindow.loadURL(""http://localhost:3000""); // Dev </code></pre>",,,true
"{'account_id': 35406291, 'reputation': 586, 'user_id': 27184656, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/cWqspvCg.png?s=256', 'display_name': 'The Teabag Coder', 'link': 'https://stackoverflow.com/users/27184656/the-teabag-coder'}",False,1,1727260021,1727255251,79021992,79021948,CC BY-SA 4.0,"<blockquote> <p><a href=""https://tanstack.com/table/v8/docs/api/features/sorting#gettogglesortinghandler"" rel=""nofollow noreferrer"">getToggleSortingHandler</a> returns a function that can be used to toggle this column's sorting state</p> </blockquote> <p>In other words, <code>getToggleSortingHandler</code> is <strong>not</strong> the sort function, it creates sort function.</p> <p>The first case doesn't work because you pass in a function that is not yet invoke the sort function</p> <p>Working version:</p> <pre class=""lang-js prettyprint-override""><code>onClick={() => {   const sortFn = header.column.getToggleSortingHandler(); //only create sort function   sortFn();//invoke the sorting   //or header.column.getToggleSortingHandler()(); }} </code></pre> <p>The second case it works because when you invoke it once, the sort function is created and passed to <code>onClick</code></p>",1727260021.0,,true
"{'account_id': 32167570, 'reputation': 9, 'user_id': 26675077, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/363c878c4800cf0deb4112734d621db2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Peachy', 'link': 'https://stackoverflow.com/users/26675077/peachy'}",False,0,1727254257,1727254257,79021912,79021839,CC BY-SA 4.0,"<p>Embarrassing oversight: my variables were all lowercased in supabase. I had created the database with casing</p> <pre><code>CREATE TABLE Facilities (   facilityID INT GENERATED ALWAYS AS IDENTITY,   facilityType TEXT,   facilityLocation TEXT,   facilityName VARCHAR(100),   facilityAddress TEXT,   PRIMARY KEY(facilityID) ); </code></pre> <p>but for some reason the table editor shows the headers with them all lowercased...</p>",,,true
"{'account_id': 33593006, 'reputation': 131, 'user_id': 26007375, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/cab800d8c84c79c925d573f87445f567?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Carsten Codes', 'link': 'https://stackoverflow.com/users/26007375/carsten-codes'}",True,1,1727248508,1727248508,79021546,79021495,CC BY-SA 4.0,"<p><code>fireEvent.input()</code> doesn't respect the <code>disabled</code> attribute of the <code>input</code> element by default in the test environment.</p> <p>But you could replace <code>fireEvent</code> with <code>userEvent</code> from <code>@testing-library/user-event</code>, which respects the <code>disabled</code> attribute:</p> <pre><code>import { describe, expect, it } from 'vitest'; import { render, screen } from '@testing-library/react'; import userEvent from '@testing-library/user-event';  describe('App button Problem', () => {     it('types in the input correctly', async () => {         render(<input type={'text'} disabled={false} />);         const input: HTMLInputElement = screen.getByRole('textbox');         await userEvent.type(input, 'test');     expect(input.value).toBe('test'); // this is ok });  it('does not type in the input if disabled', async () => {     render(<input type={'text'} disabled={true} />);     const input: HTMLInputElement = screen.getByRole('textbox');      // Try to type in the input (userEvent respects disabled attribute)     await userEvent.type(input, 'test');      // The input value should remain unchanged     expect(input.value).toBe('');    }); }); </code></pre>",,,true
"{'account_id': 21455843, 'reputation': 34, 'user_id': 15807478, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/zKoBXL5n.png?s=256', 'display_name': 'HellBri8nger', 'link': 'https://stackoverflow.com/users/15807478/hellbri8nger'}",False,0,1727247083,1727247083,79021457,79021251,CC BY-SA 4.0,"<p>You can instead use <code>firebase.firestore.TimeStamp.now().toDate()</code> to get a similar result.</p> <p><a href=""https://firebase.google.com/docs/reference/js/v8/firebase.firestore.Timestamp"" rel=""nofollow noreferrer"">https://firebase.google.com/docs/reference/js/v8/firebase.firestore.Timestamp</a></p> <p>end result will look like this <code>2024-09-25T06:50:47.426Z</code></p>",,,true
"{'account_id': 34480556, 'reputation': 149, 'user_id': 26592787, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5b4ddd206a5a44f0dae0fb2dcea85d67?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'jupremator', 'link': 'https://stackoverflow.com/users/26592787/jupremator'}",False,1,1727250964,1727250964,79021697,79020984,CC BY-SA 4.0,"<p>With useQuery you have an initialData !</p> <pre><code>const { data: todos } = useQuery({         queryFn: () => getTodos(),         queryKey: todoKeys.lists(),         initialData: []     }) </code></pre> <p>With this your data will not be undefined !</p> <p>In your example the error is here because your are calling a hook after a condition, in your case the if(!data)</p>",,,true
"{'account_id': 24418, 'reputation': 186068, 'user_id': 62076, 'user_type': 'registered', 'accept_rate': 84, 'profile_image': 'https://www.gravatar.com/avatar/62c90b6f399e6b95554b2da31ca8619a?s=256&d=identicon&r=PG', 'display_name': 'Alex Wayne', 'link': 'https://stackoverflow.com/users/62076/alex-wayne'}",True,0,1727241981,1727241981,79021233,79020984,CC BY-SA 4.0,"<p>The useQuery hook won't do this for you, but it's trivial to make a custom hook that you can use instead.</p> <pre><code>function useOrgs() {   const { data } = useQuery({     queryKey: [""orgs""],     queryFn: fetchOrgs,   });    return data?.items || []; } </code></pre> <p>Now when you execute <code>useOrgs()</code> it always returns an array.</p> <p>This is probably also a good idea because it ties the query <em>function</em> to the query <em>key</em>, which can be easy to mess up in react query. And this gives you a place where you add custom logic around the query.</p> <p><a href=""https://www.typescriptlang.org/play/?ts=5.5.4#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgIilQ3wG4BYAKFEljgG84BXAZyQEUmkoBPOAXzjZcBIuhgBaAI5deZKlQAmSNABsURIUwB2GYBG1CkMNAAsA8lADmLABQBKAFxwACjhDA2AHkbAYSEBZnRm0UECRnFhgoYG0rAQBtAF0BAD4KSipMHT0DZjZLGwcGKjg4NAMohjhFFBgUATgAXnyOWR5belKyuBluHgBpJB5nBPxoG3wkgBpusr7eADFtZ0xjM0KWWcoy-nsM7qIYJihDWvqAfgA6PwCWOAAfB7hkjP4FSmzdGH1DAFkeABhXBgYpdHblSrwCb3FqsJCbBwHCFHE6GWxzOBeJiqVKYsr0GFXEAoUG2Cb2ZqpOAYiE9HpeVTAVKE6xXULhfheAD0TLxdJ69ns7wFPJx-LK+yoIqAA"" rel=""nofollow noreferrer"">See playground</a></p>",,,true
"{'account_id': 10848950, 'reputation': 154, 'user_id': 8244141, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-T8WNxM4yU8o/AAAAAAAAAAI/AAAAAAAACYQ/VIfxo-tScjM/photo.jpg?sz=256', 'display_name': 'Divik Shrivastava', 'link': 'https://stackoverflow.com/users/8244141/divik-shrivastava'}",False,-1,1727229118,1727229118,79020885,79020859,CC BY-SA 4.0,<p>The issue is coming up because the initialOffsetX and initialOffsetY are included twice in the findMostCenteredBubble function. They are already accounted in translateX and translateY. Just remove initialOffsetX and initialOffsetY when calculating the bubbleCenterX and bubbleCenterY.</p>,,,true
"{'account_id': 26873984, 'reputation': 1, 'user_id': 20455515, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/KsP0f.jpg?s=256', 'display_name': 'Shehan Lakshitha', 'link': 'https://stackoverflow.com/users/20455515/shehan-lakshitha'}",False,0,1727240755,1727240755,79021192,79020804,CC BY-SA 4.0,"<p>The issue could be the <code>selectedDate</code> is not formatted properly before passing. Pass the <code>selectedDate</code> in <code>YYYY-MM-DD</code> format as follows</p>  <pre class=""lang-js prettyprint-override""><code>const selectedDate = date.toISOString().split(""T"")[0]; router.push(`/search/${item}?selectedDate=${selectedDate}`); </code></pre>  <p>You can also adjust the code how it gets the date</p> <pre><code>const [date, setDate] = useState(() => {   return selectedDate ? new Date(selectedDate) : new Date(); }); </code></pre>",,,true
"{'account_id': 35518659, 'reputation': 17, 'user_id': 27254454, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/XWhDSHsc.jpg?s=256', 'display_name': 'donny', 'link': 'https://stackoverflow.com/users/27254454/donny'}",False,0,1727239409,1727239091,79021131,79020782,CC BY-SA 4.0,"<p>When the first useEffect connects for the first time, setInputArr is updated.</p> <p>Let's refer to the following useEffectf to change inputArr to the dependent array. Because of this, useEffect is executed twice because inputArr is updated with setInputArr.</p> <h1>Letâs explain in more depth!</h1> <ul> <li><p>The rendering of useEffect varies depending on how the dependencies are arranged.</p> </li> <li><p>If the array is empty, once the page is rendered, it will not be rendered again.</p> </li> <li><p>However, as shown above, if there is a value in the dependency array, it is rendered when the value is updated.</p> </li> </ul>",1727239409.0,,true
"{'account_id': 9473502, 'reputation': 361, 'user_id': 7043623, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-TZnQeHbM17Q/AAAAAAAAAAI/AAAAAAAAABQ/ogKt5c2Te2Q/photo.jpg?sz=256', 'display_name': 'Alexandre Pelagaggi', 'link': 'https://stackoverflow.com/users/7043623/alexandre-pelagaggi'}",True,2,1727213237,1727213237,79020409,79020323,CC BY-SA 4.0,"<p>you can filter the ones in use such as:</p> <pre><code>import React from 'react';  const allowedValues = [8, 10, 12, 13, 14, 15]; const stats = [   'strength',   'dexterity',   'constitution',   'intelligence',   'wisdom',   'charisma', ]; const notInUse = array => values =>   array.filter(v => !values.map(String).includes(String(v)));  export function App(props) {   const [inUse, setInUse] = React.useState(Array(stats.length).fill(''));    const handleChange = (index, value) => {     const newInUse = [...inUse];     newInUse[index] = value ? Number(value) : '';     setInUse(newInUse);   };    return (     <div className='App'>       <h1>Hello Nerd.</h1>       {stats.map((stat, index) => (         <div key={stat}>           <label tyle={{ padding: '16px' }}>             {stat}: {inUse[index]} {'  '}           </label>           <select             value={inUse[index]}             onChange={e => handleChange(index, e.target.value)}           >             <option value=''>Select a value</option>             {notInUse(allowedValues)(inUse).map(value => (               <option key={value} value={value}>                 {value}               </option>             ))}           </select>         </div>       ))}     </div>   ); }  // Log to console console.log('Hello console'); </code></pre> <p>And it should adjust:</p> <h3>i.E</h3> <p><a href=""https://i.sstatic.net/pBqZ9Wxf.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/pBqZ9Wxf.png"" alt=""example"" /></a></p>",,,true
"{'account_id': 255434, 'reputation': 22009, 'user_id': 535480, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jBU8R.jpg?s=256', 'display_name': 'James', 'link': 'https://stackoverflow.com/users/535480/james'}",False,0,1727223056,1727223056,79020732,79020017,CC BY-SA 4.0,"<p>You could try to store the species bonuses in an object with key: speciesName, value: bonusesArray</p> <pre><code>const bonuses = {   Orc: [1,0,0,0,0,-2],   Elf: [0,1,0,0,0,0],   // etc }; </code></pre> <p>Each time the user selects a species, you are going to:</p> <ul> <li>check if a species was previously assigned.  If so, remove the bonus for the old species</li> <li>get the new species, and apply the bonus</li> </ul> <p>For this you will need a state variable like ""currentSelectedSpecies"" to store the currently selected species.</p> <p>I modified handleSpeciesChange to do that.  I tried to only call setState once, so I got rid of the separate function.</p> <p>Warning.  Iâve not used setState before and none of this code is tested.</p> <pre><code>const handleSpeciesChange = (e) => {   const {value} = e.target;   const lastValue = state.currentSelectedSpecies;    if (lastValue === value) return;    // get current playerAttributes from state   const attrs = [""0"",""1"",""2"",""3"",""4"",""5""].map(v => state[`playerAttribute${v}`]);    // only remove the last species bonuses if one was picked   if (lastValue) {     lastBonuses = bonuses[lastValue];     lastBonuses.forEach((b, i) => attrs[i] -= b);   }      newBonuses = bonuses[value];   newBonuses.forEach((b, i) => attrs[i] += b);    setState(prevState => ({     ...prevState,     playerAttribute0: attrs[0],     playerAttribute1: attrs[1],     playerAttribute2: attrs[2],     playerAttribute3: attrs[3],     playerAttribute4: attrs[4],     playerAttribute5: attrs[5],     currentSelectedSpecies: value   })); }; </code></pre>",,,true
"{'account_id': 3297308, 'reputation': 6417, 'user_id': 2774284, 'user_type': 'registered', 'accept_rate': 33, 'profile_image': 'https://www.gravatar.com/avatar/ee193662a7f91675e31fc1bf58ff1ebc?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Jake Haller-Roby', 'link': 'https://stackoverflow.com/users/2774284/jake-haller-roby'}",False,0,1727220427,1727220427,79020673,79020017,CC BY-SA 4.0,"<p>I'm going to answer from a RPG perspective, as much as from a tech perspective.</p> <p>Species selection impacts more than just base stats.  You're going to want a record of which specie the character belongs to long-term, for things like racial abilities, or for some wild situations like <a href=""https://www.dndbeyond.com/spells/2228-reincarnate"" rel=""nofollow noreferrer"">Reincarnate</a>.</p> <p>Instead of directly updating the character's stats, add the selected specie as a data field that you store itself.  Then use something similar your <code>speciesBonus</code> to determine the correct value to <em>display</em> for each stat, without actually updating it on the state.</p> <p>As a side effect, doing this will solve your tech issue.</p> <p>For completeness, though, your issue stems from the fact that your <code>speciesBonus</code> function only applies the new species bonus.  If you wanted to update it with this same structure, you would need to change <code>speciesBonus</code> signature to accept both a <code>current</code> and <code>previous</code> species, so you could ""undo"" the previous selection's benefits.</p>",,,true
"{'account_id': 26196571, 'reputation': 65, 'user_id': 19877614, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/47fnc.jpg?s=256', 'display_name': 'Saidur Rahman', 'link': 'https://stackoverflow.com/users/19877614/saidur-rahman'}",False,0,1727249473,1727249473,79021606,79019941,CC BY-SA 4.0,"<p>In your <code>Button</code> Component receive which page to navigate. If you want to navigate to same web app different page use navigate.</p> <pre><code>import { Container } from ""./styles""; import { useNavigate } from 'react-router-dom';  export function Button({ icon, title,linkToNavigate}){     const navigate = useNavigate();      return (         <Container type=""button"" onClick = ()=>{navigate(linkToNavigate)}>             <span>{title}</span>             <img src={icon} />         </Container>     ) } </code></pre> <p>And if you want to navigate to external webapp/website then:</p> <pre><code>import { Container } from ""./styles"";  export function Button({ icon, title,linkToNavigate}){      return (         <Container type=""button"" onClick = ()=>{window.location.href=linkToNavigate}>             <span>{title}</span>             <img src={icon} />         </Container>     ) } </code></pre>",,,true
"{'account_id': 9514279, 'reputation': 828, 'user_id': 7172290, 'user_type': 'registered', 'accept_rate': 0, 'profile_image': 'https://i.sstatic.net/F0kEhtTV.webp?s=256', 'display_name': 'docker compose', 'link': 'https://stackoverflow.com/users/7172290/docker-compose'}",False,0,1727245848,1727245848,79021399,79019941,CC BY-SA 4.0,"<p>Are you using Next.js? If so, I recommend using their <a href=""https://nextjs.org/docs/pages/api-reference/components/link"" rel=""nofollow noreferrer"">Link</a> component.</p> <p>You can simply wrap your <code><Button></code> component inside a <code><Link></code> and pass the href prop down to it like this:</p> <pre><code>import Link from ""next/link""; import { Container } from ""./styles"";  export function Button({ icon, title, href }) {   return (     <Link href={href}>       <Container type=""button"">         <span>{title}</span>         <img src={icon} />       </Container>     </Link>   ); }  </code></pre>",,,true
"{'account_id': 20945104, 'reputation': 2719, 'user_id': 15388164, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/75d88494cbc8f9edc2020019a8c5d945?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'rschristian', 'link': 'https://stackoverflow.com/users/15388164/rschristian'}",False,-1,1727201101,1727201101,79019843,79019825,CC BY-SA 4.0,"<p>This is fundamentally how Tailwind works, you cannot dynamically form strings. They all need to be known ahead of time at build. You need to always form complete class names, and toggle between them.</p> <pre class=""lang-js prettyprint-override""><code>// DON'T <div class=""text-{{ error ? 'red' : 'green' }}-600""></div>  // DO <div class=""{{ error ? 'text-red-600' : 'text-green-600' }}""></div> </code></pre> <p>How you handle this depends a bit on what <code>type2</code> is; if it's a union, you can easily do something like the above.</p> <p>See <a href=""https://tailwindcss.com/docs/content-configuration#dynamic-class-names"" rel=""nofollow noreferrer"">Tailwind's docs</a>.</p>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,1,1727240302,1727206158,79020091,79019609,CC BY-SA 4.0,"<p>Generally speaking you should store only primitives and plain objects in a Redux store. This is what the <a href=""https://redux-toolkit.js.org/api/serializabilityMiddleware"" rel=""nofollow noreferrer"">Serializability Middleware</a> helps ensure, that whatever you are storing is JSON serializable/de-serializable. You <em>can however</em> disable this middleware check and store more complex objects/classes/etc in the store, as you have done. I suspect this <code>client</code> object just doesn't lend itself to being persisted through the Redux store cleanly.</p> <p>I propose an alternative of storing the <em><strong>data</strong></em> that would be used to construct/reconstruct a Paho MQTT client, e.g. the <code>host</code>, <code>port</code>, <code>path</code>, <code>clientId</code>, etc, that is used to create a new client. You can then select these primitives back out from the store and re-create the client as necessary.</p> <p>Save the <code>Client</code> arguments to the store:</p> <pre class=""lang-js prettyprint-override""><code>addConnectedMQTTClient: (state, action) => {   state.connected_mqtt_clients.push(action.payload.clientArgs); }, </code></pre> <pre class=""lang-js prettyprint-override""><code>dispatch(addConnectedMQTTClient({   clientArgs: [host, port, path, clientId], })); </code></pre> <p>Select the <code>Client</code> arguments from the store and re-create a client:</p> <ul> <li><p>Select the arguments and construct in React component:</p> <pre class=""lang-js prettyprint-override""><code>const { clientArgs } = useSelector(state => state.connected_mqtt_clients[0].client);  const client = React.useMemo(() => {   return new Paho.Client(...clientArgs); }, [clientArgs]); </code></pre> </li> <li><p>Create a memoized selector function that constructs the client:</p> <pre class=""lang-js prettyprint-override""><code>import { createSelector } from '@reduxjs/toolkit';  export const selectClient = createSelector(   [state => state.connected_mqtt_clients[0].client],   client => {     return new Paho.Client(...client.clientArgs);   } ); </code></pre> <pre class=""lang-js prettyprint-override""><code>const client = useSelector(selectClient); </code></pre> </li> </ul> <p>The solutions are not limited to just the above, I'm sure there are other methods to accomplish this.</p> <p>Another alternative would be to use a React Context Provider to instantiate and provide a single client to the app.</p> <p>Basic Example:</p> <pre><code>import { createContext, useContext } from 'react';  const client = new Paho.Client(....);  const PahoClientContext = createContext();  export const usePahoClient = () => useContext(PahoClientContext);  export const PahoClientProvider = ({ children }) => {   return (     <PahoClientContext.Provider value={client}>       {children}     </PahoClientContext>   ); }; </code></pre> <pre><code><PahoClientProvider>   <App /> </PahoClientProvider> </code></pre> <p>Then anywhere in the <code>App</code> sub-ReactTree that needs to access the client uses the <code>usePahoClient</code> hook:</p> <pre class=""lang-js prettyprint-override""><code>const client = usePahoClient(); </code></pre>",1727240302.0,,true
"{'account_id': 19843492, 'reputation': 625, 'user_id': 14535636, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-5VeafhDxXMk/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuckf79ZHjEfXzhPMzM0eiDS55zVOyw/s96-c/photo.jpg?sz=256', 'display_name': 'Hamed Jimoh', 'link': 'https://stackoverflow.com/users/14535636/hamed-jimoh'}",False,2,1727199082,1727199082,79019735,79019467,CC BY-SA 4.0,"<p>You can achieve this by combining the <code>usePathname</code>, <code>useRouter</code> and the <code>useSearchParams</code> hooks.</p> <pre><code>""use client""  import { usePathname, useSearchParams, useRouter } from ""next/navigation"";  const SomeComponent = () => {    const pathname = usePathname();    const { push } = useRouter();    const searchParams = useSearchParams();     const onClickHandler = () => {       const params = new URLSearchParams(searchParams);        if (queryParam) {          params.set(""queryParam"", encodeURIComponent(""some value""));       } else {          params.delete(""queryParam"");       }        push(`${pathname}?${params.toString()}`); //You can use the replace method if you want to replace the history     }     return (       <button onClick={onClickHandler}>Go to URL</button>    ) }   </code></pre>",,,true
"{'account_id': 13900612, 'reputation': 408, 'user_id': 10036303, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/82102e8025d0ce69067e601e6842d0fa?s=256&d=identicon&r=PG', 'display_name': 'Krist&#243;f G&#246;nczÅ', 'link': 'https://stackoverflow.com/users/10036303/krist%c3%b3f-g%c3%b6ncz%c5%91'}",False,-2,1727193871,1727193871,79019468,79019467,CC BY-SA 4.0,"<ol> <li>You can only do this on a component rendered on client side, so you need to include <code>'use client'</code> on the top of your component.</li> <li>Use the <code>useRouter</code> hook from <code>next/navigation</code>.</li> <li>Instantiate a new <code>URLSearchParams</code>.</li> <li>Set all URL parameters to the new <code>URLSearchParams</code>.</li> <li>Use the router.push function to navigate to the new page, including the given parameters.</li> </ol> <p>For example:</p> <pre><code>'use client'   import { useRouter } from 'next/navigation'   export default function Page() {   const router = useRouter()     return (     <button       onClick={() => {         const params = new URLSearchParams();         params.set(""queryParam"", ""value"");          router.push(`/path?${params}`);       }}     />   ) } </code></pre> <p>Sources:</p> <ul> <li><a href=""https://nextjs.org/docs/app/api-reference/functions/use-router"" rel=""nofollow noreferrer"">Next.js useRouter</a></li> <li><a href=""https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams"" rel=""nofollow noreferrer"">MDN Web Docs URLSearchParams</a></li> </ul>",,,true
"{'account_id': 18946747, 'reputation': 78, 'user_id': 13825460, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/v8qc6YDo.jpg?s=256', 'display_name': 'hadiabr', 'link': 'https://stackoverflow.com/users/13825460/hadiabr'}",False,1,1727223563,1727223563,79020749,79019426,CC BY-SA 4.0,"<h2>Add <code>margin-bottom</code> to <code>#scrollContainer</code></h2> <p>Try adding <code>margin-bottom:75px;</code> to <code>#scrollContainer</code> in CSS. The <em>finalElement</em> is visible responsibly.</p> <p>Here's the <a href=""https://jsfiddle.net/t9demyq3/"" rel=""nofollow noreferrer"">jsFiddle</a>.</p>",,,true
"{'account_id': 482477, 'reputation': 964, 'user_id': 896907, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c045139ddecaa6bed27c00bd16fc917f?s=256&d=identicon&r=PG', 'display_name': 'josef', 'link': 'https://stackoverflow.com/users/896907/josef'}",True,0,1727212287,1727212287,79020372,79019188,CC BY-SA 4.0,<p>I think you just need to edit your interface so the toggle function is not required</p> <pre><code>interface FormProps {   toggleCreateForm?: () => boolean } </code></pre>,,,true
"{'account_id': 7990317, 'reputation': 924, 'user_id': 6028371, 'user_type': 'registered', 'accept_rate': 91, 'profile_image': 'https://i.sstatic.net/k5Pz2.png?s=256', 'display_name': 'Sommereder', 'link': 'https://stackoverflow.com/users/6028371/sommereder'}",False,0,1727335760,1727335760,79026000,79018995,CC BY-SA 4.0,"<p>Ok, seems like an actual bug: <a href=""https://github.com/storybookjs/storybook/issues/17336"" rel=""nofollow noreferrer"">https://github.com/storybookjs/storybook/issues/17336</a></p> <p>But when it's ok to set them globally, use in your Storybook config:</p> <pre><code>define: {   process: {     env: {       SHOW_ERRORS: 1,     },   }, }, </code></pre>",,,true
"{'account_id': 4890128, 'reputation': 28417, 'user_id': 3963067, 'user_type': 'registered', 'accept_rate': 89, 'profile_image': 'https://www.gravatar.com/avatar/9717976cda8a758727ed0ca5451429bc?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Giorgi Moniava', 'link': 'https://stackoverflow.com/users/3963067/giorgi-moniava'}",False,1,1727190134,1727188473,79019112,79018864,CC BY-SA 4.0,"<p>There is similar use case described on the <a href=""https://nextjs.org/docs/app/building-your-application/rendering/composition-patterns#supported-pattern-passing-server-components-to-client-components-as-props"" rel=""nofollow noreferrer"">docs</a>. Here:</p> <pre><code>'use client'   import { useState } from 'react'   export default function ClientComponent({   children, }: {   children: React.ReactNode }) {   const [count, setCount] = useState(0)     return (     <>       <button onClick={() => setCount(count + 1)}>{count}</button>       {children}     </>   ) } </code></pre> <p>The docs say:</p> <blockquote> <p><code><ClientComponent></code> doesn't know that children will eventually be filled in by the result of a Server Component. The only responsibility <code><ClientComponent></code> has is to decide where children will eventually be placed.</p> </blockquote> <p>And then:</p> <pre><code>// This pattern works: // You can pass a Server Component as a child or prop of a // Client Component. import ClientComponent from './client-component' import ServerComponent from './server-component'   // Pages in Next.js are Server Components by default export default function Page() {   return (     <ClientComponent>       <ServerComponent />     </ClientComponent>   ) } </code></pre> <p>Although in your case inside your client component you might want to use some props other than <code>children</code> like <code>serverCompElementA</code> and <code>serverCompElementB</code>, to easily access the components (you could still use <code>children</code> prop if you want to and then probably it should be possible to access individual children using <a href=""https://react.dev/reference/react/Children"" rel=""nofollow noreferrer"">Children API</a> but AFAIK docs don't encourage to use this API):</p> <pre><code>// This pattern works: // You can pass a Server Component as a child or prop of a // Client Component. import ClientComponent from './client-component' import ServerComponentA from './server-componentA' import ServerComponentB from './server-componentB'  // Pages in Next.js are Server Components by default export default function Page() {   return (     <ClientComponent serverCompElementA={<ServerComponentA />} serverCompElementB={<ServerComponentB />}/>     ) } </code></pre> <p>This is also specifically allowed based on the docs:</p> <blockquote> <p>You're not limited to the children prop. You can use any prop to pass JSX.</p> </blockquote> <p>Finally, although docs don't have such example specifically and I haven't tested, you should be able to render <code>serverCompElementA</code> and <code>serverCompElementB</code> conditionally within your client component, as you want.</p>",1727190134.0,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",True,1,1727191194,1727191194,79019308,79018860,CC BY-SA 4.0,"<p>You should have only a single source of truth for what page you are on. Here you are using the URL search params, and a local <code>currentPage</code> state, <em><strong>and</strong></em> then sessionStorage on top of that. I think you also have too many side-effects and overloaded functions/handlers/callbacks.</p> <p>I suspect you don't need the <code>currentPage</code> state, you can read and update the <code>p</code> URLSearchParameter and synchronize to/from sessionStorage.</p> <p><strong>Suggested Changes:</strong></p> <ul> <li>Only update the <code>p</code> search parameter from sessionStorage if <code>p</code> is not set and there is a stored session value.</li> <li><code>prevPage</code>/<code>nextPage</code> only update the URL search params</li> <li>Too many effects, use a single effect to read the current page and <ul> <li>Fetch data</li> <li>Fetch page counts/etc</li> <li>Persist current page to sessionStorage</li> </ul> </li> </ul> <p><strong>Example:</strong></p> <pre class=""lang-js prettyprint-override""><code>const [searchParams, setSearchParams] = useSearchParams();  const [pagesCount, setPagesCount] = useState(0); const [itemsCount, setItemsCount] = useState(0); const [productData, UpdateProductData] = useState([]);  // Read current page from search params, fallback to storage const currentPage = Number(searchParams.get(""p"")) ?? getCurrentPage();  // Fetch data for the current page useEffect(() => {   getData(currentPage);   calcPagesCount();   saveCurrentPage(currentPage); }, [currentPage]);  function prevPage() {   setSearchParams(searchParams => {     const p = Number(searchParams.get(""p"")) || 1;     searchParams.set(""p"", Math.max(1, p - 1));     return searchParams;   }); }  function nextPage() {   setSearchParams(searchParams => {     const p = Number(searchParams.get(""p"")) || 1;     searchParams.set(""p"", Math.min(p + 1, pagesCount));     return searchParams;   }); }  function saveCurrentPage(currentPage: number) {   sessionStorage.setItem(""current page"", String(currentPage)); }  function getCurrentPage(): number {   return Number(sessionStorage.getItem(""current page"") || 1); }  async function getData(currentPage: number) {   const api_url = `https://******&per_page=9&page=${currentPage}`;   const req = await fetch(api_url);   const products = await req.json();   UpdateProductData(products); } </code></pre>",,,true
"{'account_id': 23188140, 'reputation': 27, 'user_id': 17284889, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJxriqZB6TqB_uL8El1APHeM_0fyJCjILyChFHp0=k-s256', 'display_name': 'Boocher', 'link': 'https://stackoverflow.com/users/17284889/boocher'}",False,0,1727183741,1727183741,79018777,79018741,CC BY-SA 4.0,"<p>Typescript is smart enough to infer whether something is a React component so typing a component as <code>React.FC</code> shouldn't be needed.</p> <p>As for passing the props type, you can refactor your component to be this and it should be happy:</p> <pre><code>interface EventProps {   events: any[];   pastEvents: any[]; }  const EventsPage = ({ events, pastEvents }: EventProps) => {   return (     <div className=""max-w-7xl mx-auto bg-background text-foreground shadow-md rounded-lg p-6"">       <EventsContainer events={events} pastEvents={pastEvents} />     </div>   ); }; </code></pre>",,,true
"{'account_id': 35863360, 'reputation': 1, 'user_id': 27441878, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/M634oUop.png?s=256', 'display_name': 'Ermuun', 'link': 'https://stackoverflow.com/users/27441878/ermuun'}",False,0,1727250170,1727250170,79021649,79018731,CC BY-SA 4.0,"<p>Thank you for all the suggestions! I managed to resolve the issue earlier today without needing to use the http-equiv Content Security Policy meta tag.</p> <p>The solution was to download the actual particles-min.js file and store it in the same directory as my index.html, so I didn't have to rely on the external link from cdn.jsdelivr.net.</p> <p>As for the second error, I moved my inline script into an external particles-config.js file, and called it from there. Everything worked perfectly on the production server!</p> <pre><code><!DOCTYPE html> <html lang=""en"">     <head>         <script src=""particles.min.js""></script>     </head>     <body>         <noscript>You need to enable JavaScript to run this app.</noscript>         <div id=""particles-js""></div>         <div id=""root""></div>         <script src=""particles-config.js""></script>     </body> </html> </code></pre>",,,true
"{'account_id': 6686335, 'reputation': 191103, 'user_id': 5157454, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-QPadFFLbBGA/AAAAAAAAAAI/AAAAAAAADB8/FkNCMP_vkAc/photo.jpg?sz=256', 'display_name': 'Ori Drori', 'link': 'https://stackoverflow.com/users/5157454/ori-drori'}",True,6,1727182909,1727182573,79018716,79018691,CC BY-SA 4.0,"<p>You can store the ref with <code>useState</code>, using the set state function as a <a href=""https://react.dev/reference/react-dom/components/common#ref-callback"" rel=""noreferrer"">callback function ref</a>, instead of an object ref.</p> <p>Since the set state would be called when the ref is available, the state would change, and the <code>useEffect</code> would be triggered:</p> <pre><code>const [cameraRef, setCameraRef] = useState<CameraControls>(null)  const resetCamera = () => {   if (!cameraRef) return        cameraRef.setLookAt(...cameraInitialPosition, ...cameraInitialTarget, true) }  useEffect(resetCamera, [cameraRef])  return (<Canvas shadows>   <CameraControls ref={setCameraRef} />   ... ) </code></pre> <p>If you only use the ref to invoke <code>setLookAt</code> once, and you don't need to store the ref, just call <code>resetCamera</code> directly from the <code>ref</code> prop of <code>CameraControls</code>:</p> <pre><code>const resetCamera = (cameraRef: CameraControls) => {   if (!cameraRef) return    cameraRef.setLookAt(...cameraInitialPosition, ...cameraInitialTarget, true) }  return (<Canvas shadows>   <CameraControls ref={resetCamera} />   ... ) </code></pre>",1727182909.0,,true
"{'account_id': 6977446, 'reputation': 7815, 'user_id': 5351721, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/f451551f8236ae3a8082769a21bf259f?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Sean', 'link': 'https://stackoverflow.com/users/5351721/sean'}",True,0,1727360176,1727360176,79027757,79018501,CC BY-SA 4.0,"<p><a href=""https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements"" rel=""nofollow noreferrer"">Headings</a> are for giving the current document an outline, not for informing users of their current location within a website's directory structure (or a SPA's routes).</p> <p>If you want to provide users context of where they are within the structure of your website or SPA, use <a href=""https://www.w3.org/WAI/ARIA/apg/patterns/breadcrumb/examples/breadcrumb/"" rel=""nofollow noreferrer"">breadcrumbs</a> instead.</p> <p>Using a modified example from the repo you linked to in the comments, here's the markup of what an ""add new player"" page should look like:</p> <pre class=""lang-html prettyprint-override""><code><header>   <nav aria-label=""Main"">[...]</nav> </header> <nav aria-label=""Breadcrumbs"">   <ol>     <li><a href=""/"">home</a></li>     <li><a href=""/players"">players</a></li>     <li><a href=""/players/new"" aria-current=""page"">add new player</a></li>   </ol> </nav> <main>   <h1>Add new player</h1>   <form>[...]</form> </main> </code></pre> <p>""Home"" and ""Players"" should not be headings on the ""Add New Player"" page. There's not a ""Home"" section of content on this page, or a ""Players"" section of content on this page, so they shouldn't be headings.</p>",,,true
"{'account_id': 22802643, 'reputation': 43, 'user_id': 16955088, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/65SxVQKB.jpg?s=256', 'display_name': 'Jack Phat', 'link': 'https://stackoverflow.com/users/16955088/jack-phat'}",False,0,1728573262,1728573262,79075102,79018449,CC BY-SA 4.0,"<p>Add a fixed width or a min-width to the content to ensure it exceeds the container's width.</p> <blockquote> <p>You can use a class like <code>w-24</code> (width of 6rem, or 96px) to ensure a fixed width for the content.</p> </blockquote> <blockquote> <p>Alternatively, you can use a class like <code>min-w-[200px]</code> to ensure the content is at least 200px wide, triggering the horizontal scroll if itâs larger than the parent container.</p> </blockquote>",,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",False,1,1727326225,1727325923,79025529,79018432,CC BY-SA 4.0,"<p><em><strong>virtual DOM is updated prior to a DOM update</strong></em></p> <p><em>The below briefing is based on this : <a href=""https://react.dev/learn/render-and-commit"" rel=""nofollow noreferrer"">Render and Commit</a></em></p> <p>A rendering process in React dictates a DOM update, therefore a rendering process must be carried out prior to a DOM update. A rendering process in React is also termed as virtual DOM update. Therefore <em>virtual DOM is updated prior to a DOM update</em>.</p> <p>A virtual DOM update has the following <strong>two distinct stages</strong>:</p> <p>a) Triggering a render</p> <p>b) Rendering a component</p> <p><strong>Triggering or requesting a render:</strong></p> <p>A render must be triggered when an app will start, this is the initial render. Technically, this initial render is triggered by directly rendering the root component by the render method in the root object created by createRoot function invocation. The below code in index.js does the same. Please do note that a render is just being triggered over here, the actual render process is a separate one which will be followed subsequent to this request. The details of a render process will be explained in the following sections.</p> <p><strong>index.js</strong></p> <pre><code>import Image from './Image.js'; import { createRoot } from 'react-dom/client';  const root = createRoot(document.getElementById('root')) root.render(<Image />); </code></pre> <p>All subsequent render or rerender triggers or requests through state changes in a component. The following code puts a ârequest for rerenderâ on invoking the event handler handleClick.</p> <pre><code>const [someState, setSomeState] = useState(ââ)  function handleClick() {     setSomeState(âXâ); } </code></pre> <p><strong>Rendering a component:</strong></p> <p>Rendering in React terms is just about calling components. For an initial render, React will directly call the root component. The rerenders are triggered by state changes. React will call the respective components for which the states have been changed. This rendering process as such is recursive in nature. As each render or call will return some jsx, which may include nested components. The render process will continue to proceed until all the nested components are rendered or called. This recursive render or call will result-in the complete set of jsx to be applied on the DOM in response to the original request for this render - may it be the initial render or a rerender due to a state change. These jsx statements collectively form the Virtual DOM. Once transpiled, these jsx statements will be translated into the respective React elements which essentially describe how the respective DOM element should be updated. Therefore the Virtual DOM consists of the descriptions about the DOM elements that would need to be updated.</p> <p><strong>Commit - the final phase</strong></p> <p>Commit is the final phase at which React will update DOM using the Virtual DOM which resulted in rendering. For a commit followed by an initial render, React will use appendChild() DOM API to update all the DOM nodes. For a commit subsequent to a rerender, React will apply the minimal necessary operations to make the DOM matches with the latest virtual DOM. During render, these minimal necessary operations will be calculated.</p>",1727326225.0,,true
"{'account_id': 27371279, 'reputation': 638, 'user_id': 20877284, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/fYDiC.jpg?s=256', 'display_name': 'Youth Dream', 'link': 'https://stackoverflow.com/users/20877284/youth-dream'}",False,2,1727179751,1727179751,79018542,79018432,CC BY-SA 4.0,"<p>Well, I think if you say virtual DOM created first and then created real DOM based on the virtual DOM, it's wrong. It's because when a react app runs for the first time, there's already an existing real DOM. This usually includes an empty HTML structure, like a root  element. So when the react app starts, react generates a virtual DOM tree and stored the result in memory and then, react compares the current virtual DOM with previous one (If it's first time, the previous virtual DOM is empty). And react updated the real DOM after React's reconciliation process.</p> <p>So we need to say like this:</p> <ol> <li>When a React app is rendered first time, it has already empty real DOM like <code><div id=""root""></div></code> and it creates a virtual DOM tree by calling <code>React.createElement()</code>.</li> <li>Once the virtual DOM is created, React uses a process called reconciliation.</li> <li>After the process, react updates the real DOM by inserting, updating and removing elements.</li> </ol> <p>To get more detailed information, I prefer you see react official documentation <a href=""https://react.dev/"" rel=""nofollow noreferrer"">here</a></p>",,,true
"{'account_id': 21891293, 'reputation': 134, 'user_id': 16178238, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gh0p3_q_3EJ79WCmoyO3Wv7mg1uvRfPGdI7Doa3ng=k-s256', 'display_name': 'razer', 'link': 'https://stackoverflow.com/users/16178238/razer'}",False,0,1727432273,1727432273,79030892,79018213,CC BY-SA 4.0,"<p>I resolved this issue using a service worker and PWA setup. This allows the app to display a custom offline message, even when the browser is refreshed without an internet connection. Here's how it works:</p> <p>Service Worker & PWA:</p> <p>The service worker caches essential files and a custom offline page, so it can serve this content when the user is offline. Note that service workers only function in production build environments, so this may not work during local development.</p> <p>Error Handling:</p> <p>Implement an error boundary to catch JavaScript errors and display a fallback UI. Ensure all critical resources and the custom offline page are cached. Otherwise, if the requested page isn't cached, the default ""no internet"" page will still appear.</p> <p>Result: With this setup, the app displays a custom offline message instead of the browser's default offline page, similar to how YouTube handles offline scenarios.</p>",,,true
"{'account_id': 23750177, 'reputation': 1, 'user_id': 17767045, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJwWAnGlLPT5FHeNIG7CGJq78DMRlTohPFPSMQut=k-s256', 'display_name': 'lrabbit', 'link': 'https://stackoverflow.com/users/17767045/lrabbit'}",False,-2,1727179572,1727179480,79018529,79018213,CC BY-SA 4.0,"<p><a href=""https://i.sstatic.net/H3NkVq0O.png"" rel=""nofollow noreferrer"">enter image description here</a></p> <p><a href=""https://i.sstatic.net/H3NkVq0O.png"" rel=""nofollow noreferrer"">[1]: https://i.sstatic.net/AJPlEDe8.png</a> I tried to load <a href=""https://www.youtube.com/"" rel=""nofollow noreferrer"">https://www.youtube.com/</a> in an offline state, and saw that it was a static resource returned via service worker, which means that offline caching was done, I guess, to give the user a better experience, which should belong to the pwa level. Your website is able to display customized information during normal use with the network turned off, because the required resources have already been downloaded and the logic is executing normally. If you try to refresh your website with the network closed, and request resources without offline caching and disconnected from the network, it's impossible to request any content, let alone execute your judgment logic!</p>",1727179572.0,,true
"{'account_id': 22978237, 'reputation': 661, 'user_id': 17105581, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/gCuWL.jpg?s=256', 'display_name': 'ferrouskid', 'link': 'https://stackoverflow.com/users/17105581/ferrouskid'}",False,0,1727189972,1727189972,79019220,79018187,CC BY-SA 4.0,"<p>What you can do is use <code>router.push</code> as <a href=""https://stackoverflow.com/users/10106311/ragul-cs"">Ragul CS</a> suggested - but I'd add checks and redirects.</p> <p>If the user is on the login page, we can automatically redirect them to the home page if they're logged in and vice versa, something like this in <code>src/middleware.ts</code>:</p> <pre><code>export async function middleware(request: NextRequest, _: NextResponse) {   if(request.nextUrl.pathname === 'login') {     // if user is signed in - redirect to /home   }     if(request.nextUrl.pathname === 'home') {     //if user is not signed in - redirect to /login   } } </code></pre> <p>This way you don't have to change the way the back button works.</p>",,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",False,0,1727846694,1727778379,79042713,79017963,CC BY-SA 4.0,"<p>As built-in hooks, custom hooks are also part of a componentâs body. It takes part in rendering a component. Therefore it is <em><strong>illegal</strong></em> to invoke a built-in or a custom hook in the handler of the useEffect hook. <em>As we know, the handler of this hook runs only after rendering the component</em>.</p> <p>One of the most elementary custom hooks which wraps a network fetch may be written in the pattern as âfeed the url and get the data outâ. The following custom hook works on that basis.</p> <pre><code>// note: error handling has not been included here for brevity function useData(url) {    const [data, setData] = useState(null);      useEffect(() => {      if (url) {        let ignore = false;        fetch(url)          .then((response) => response.json())          .then((json) => {            if (!ignore) {              setData(json);            }          });        return () => {          ignore = true;        };      }    }, [url]);   return data; } </code></pre> <p>When the above custom hook is used to retrieve a set of related data, we can chain the hooks as the below code does. It means the output of one hook is fed to another and so on. The custom hook useSomeCustomData below chains the three elementary data hooks and get the final data. The <em><strong>most important</strong></em> aspect in the below code is the âreactive valueâ url used in the âdependency arrayâ of the three hooks, whenever the url will change with respect to the query strings, then the chain of hooks will automatically restart to execute.</p> <p><strong>App.js</strong> updated on 2-Oct-24 11am IST</p> <pre><code>import { useEffect, useState } from 'react';  export default function App() {   const [query, setQuery] = useState(Math.random());   const someCustomData = useSomeCustomData(query);   return (     <>       {someCustomData ? someCustomData : 'Loading..'}       <br />       <button         onClick={() => {                   setQuery(null); // to reset the display           setTimeout(() => setQuery((query) => Math.random()), 0); // made async to avoid batching         }}       >         Fetch again       </button>     </>   ); }  const useSomeCustomData = (query) => {   const firstData = useData(     query ? `/api/firstdata?queryfield=${query}` : null   );   const secondData = useData(     firstData ? `/api/seconddata?queryfield=${firstData}` : null   );   const thirdData = useData(     secondData ? `/api/thirddata?queryfield=${secondData}` : null   );    return thirdData; };  function useData(url) {   const [data, setData] = useState(null);    useEffect(() => {     if (url) {       const timer = setTimeout(         () => setData(url.substring(url.indexOf('=') + 1)),         2000       );       return () => {         clearTimeout(timer);       };     } else {       setData(null);     }   }, [url]);   return data; } </code></pre> <p><strong>Test run</strong></p> <p><strong>On initial load</strong></p> <p><a href=""https://i.sstatic.net/mLvXWohD.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/mLvXWohD.png"" alt=""Browser display - On initial load of the app"" /></a></p> <p><strong>After the mocked async calls</strong></p> <p><a href=""https://i.sstatic.net/2hZU7sM6.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/2hZU7sM6.png"" alt=""Browser display - after the mocked async calls"" /></a></p> <p><strong>On clicking Fetch again button</strong></p> <p><a href=""https://i.sstatic.net/MBOxjdXp.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/MBOxjdXp.png"" alt=""Browser display - On clicking Fetch again button"" /></a></p> <p><strong>After the mocked async calls</strong></p> <p><a href=""https://i.sstatic.net/oTvBxUA4.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/oTvBxUA4.png"" alt=""Browser display - after the mocked async calls"" /></a></p>",1727846694.0,,true
"{'account_id': 7519811, 'reputation': 1025, 'user_id': 5712125, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/BXRuU.jpg?s=256', 'display_name': 'Akshay Kumar', 'link': 'https://stackoverflow.com/users/5712125/akshay-kumar'}",False,0,1727780918,1727780918,79042861,79017963,CC BY-SA 4.0,"<p>This is not a hooks problem, its a design pattern issue.</p> <p>If you have a bunch of changed queries which need to fetch some data, wrap those in an async function and use that <code>queryFn</code> in a useEffect.</p> <p>Chaining of queries is just a <code>.then</code> chain on first fetch.</p> <p>You can have multiple states wired up to your <code>queryFn</code> and have setState calls in each step.</p> <p>Instead of using your hook multiple times, move the query chain inside that hook, and use it once.</p>",,,true
"{'account_id': 11467508, 'reputation': 27624, 'user_id': 8405310, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/oTdtMh9A.jpg?s=256', 'display_name': 'TkDodo', 'link': 'https://stackoverflow.com/users/8405310/tkdodo'}",False,1,1728064230,1728064230,79055352,79017443,CC BY-SA 4.0,"<p>enabled-as-a-function is a relatively new feature, and itâs not optimised like functions for data transformation (e.g. <code>select</code>). Thereâs very likely no need to optimise a function that checks if some input to the queryFn is valid.</p> <p>Really, this is very likely a tiny fraction of the complete javascript execution that happens in your code overall. People usually overestimate how much they can âsaveâ here. If this is an âexpensiveâ operation, like 500ms, you have a problem anyways because if the user changes filters, you need to re-run it - thatâs bad. Donât minimize the re-computations, fix that the execution itself is slow, then you can execute as often as you want and it doesnât matter anymore.</p> <p>That said, if you really need to optimize this - use a caching function. <a href=""https://www.npmjs.com/package/memoize-one"" rel=""nofollow noreferrer"">memoize-one</a> is a popular choice (11 million downloads per week) which remembers the last invocation:</p> <pre><code>const memoizedFiltersValid = memoize(isFiltersValid) </code></pre> <p>then, use this function in enabled:</p> <pre><code>enabled: () => memoizedFiltersValid(filters) </code></pre>",,,true
"{'account_id': 35858232, 'reputation': 1, 'user_id': 27438865, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/6f30ea83a3d8fb5de7598383c6e4e524?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'haiquan0121', 'link': 'https://stackoverflow.com/users/27438865/haiquan0121'}",False,0,1727177711,1727177711,79018418,79017443,CC BY-SA 4.0,"<p>There are 2 simple ways you can do in react-query:</p> <ol> <li><p>Use the useQuery hook, this hook provides 1 parameter (optional) enabled, queryFn is only executed when the condition in enabled is satisfied</p> <pre><code>const useGetProgress = (data: any) => { const {     data: progress,     isFetching: isProgressFetching,     isLoading: isProgressLoading,     refetch: refetchProgress,     error: progressError } = useQuery<any, any>({     queryKey: ['useGetProgress', data],     queryFn: () => {         return api(API_URLS.STUDENT.GET_PROGRESS(data));     },     enabled: !!data?.path?.student_token }); return {     progress: progress?.data?.progresses || [],     isProgressFetching,     isProgressLoading,     refetchProgress,     progressError }; </code></pre> <p>};</p> </li> <li><p>You can use the useMutation hook, this way you will control where you call the api and what condition is satisfied (unlike useQuery which will be automatically called again when the queryKey parameter changes)</p> <pre><code>const useInsertDormitory = () => { const { mutateAsync: insertDormitory, isPending: isPendingInsertHealthInsurance } = useMutation<     unknown,     DataError,     any >({     mutationFn: (data: any) => {         return api(API_URLS.DORMITORY.INSERT_DORMITORY(data));     }, }); return {     insertDormitory,     isPendingInsertHealthInsurance }; </code></pre> <p>};</p> </li> </ol> <p>Which one you use will depend on the case but most GET methods will use useQuery.</p>",,,true
"{'account_id': 34480556, 'reputation': 149, 'user_id': 26592787, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5b4ddd206a5a44f0dae0fb2dcea85d67?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'jupremator', 'link': 'https://stackoverflow.com/users/26592787/jupremator'}",False,1,1727170378,1727170378,79017922,79017443,CC BY-SA 4.0,"<p>it is ok to recalculate the isFiltersValid on every rerender. And when and only when the computation became expansive you can memoize. It is a bad practice to pre-optimize your code as it can became slower and hard to maintain ! so you can just put it in the useQuery</p> <pre><code>const { data: response } = useQuery({      queryFn: yourQuery,      queryKey: yourKey,      enabled: isFiltersValid(filters) }) </code></pre>",,,true
"{'account_id': 30004971, 'reputation': 86, 'user_id': 22994109, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/sHgxI.jpg?s=256', 'display_name': 'beni biantuadi', 'link': 'https://stackoverflow.com/users/22994109/beni-biantuadi'}",False,0,1727163473,1727163473,79017493,79017443,CC BY-SA 4.0,"<p>You can handle this by creating a custom hook to manage the filter validation. This way, the isFiltersValid function will only be called when the filters change, and it won't be triggered on every re-render. Here's an example:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-html lang-html prettyprint-override""><code>import { useState, useEffect, useCallback } from 'react'; import { useQuery } from 'react-query';  // Custom hook to validate filters const useFilterValidation = (filters, isFiltersValid) => {   const [areFiltersValid, setAreFiltersValid] = useState(false);    const validateFilters = useCallback(() => {     setAreFiltersValid(isFiltersValid(filters));   }, [filters, isFiltersValid]);    useEffect(() => {     validateFilters();   }, [filters, validateFilters]);    return areFiltersValid; };  const MyComponent = ({ filters }) => {   const areFiltersValid = useFilterValidation(filters, isFiltersValid);    const { data, error } = useQuery('fetchData', queryFn, {     enabled: areFiltersValid,   });    return (     <div>       <button onClick={() => console.log('Re-render')}>Re-render</button>       {/* Render your data or error */}     </div>   ); };</code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 34143351, 'reputation': 125, 'user_id': 26409082, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/ZN2pblmS.png?s=256', 'display_name': 'McMaco', 'link': 'https://stackoverflow.com/users/26409082/mcmaco'}",False,1,1727275611,1727275611,79023529,79017167,CC BY-SA 4.0,"<p>Under Logging and history in Dialogflow public documentations, stated in <a href=""https://cloud.google.com/dialogflow/cx/docs/concept/export-bq"" rel=""nofollow noreferrer"">Interaction logging export to BigQuery</a>, we can export <a href=""https://cloud.google.com/dialogflow/cx/docs/concept/agent#settings-general"" rel=""nofollow noreferrer"">interaction logging</a> to <a href=""https://cloud.google.com/bigquery/docs"" rel=""nofollow noreferrer"">BigQuery</a>. Once configured, all live interaction logging is written to your BigQuery table. This provides you with advanced analysis tools that can help you debug and improve your agent and to discover patterns in conversation data. It has a maximum of 500 turns that can be exported for each conversation.</p> <p>To configure interaction logging export:</p> <ol> <li><p>Ensure that <a href=""https://cloud.google.com/dialogflow/cx/docs/concept/agent#settings-general"" rel=""nofollow noreferrer"">interaction logging</a> is enabled.</p> </li> <li><p>Follow the BigQuery <a href=""https://cloud.google.com/bigquery/docs/datasets#create-dataset"" rel=""nofollow noreferrer"">dataset creation guide</a> to create a dataset. Note the dataset name, as you will need this in the next step.</p> </li> <li><p>Follow the BigQuery <a href=""https://cloud.google.com/bigquery/docs/tables"" rel=""nofollow noreferrer"">table creation guide</a> to create a table with a SQL schema definition. Use the following SQL statement for creation:</p> <pre><code>CREATE TABLE <your_dataset_name>.dialogflow_bigquery_export_data(   project_id STRING,   agent_id STRING,   conversation_name STRING,   turn_position INTEGER,   request_time TIMESTAMP,   language_code STRING,   request JSON,   response JSON,   partial_responses JSON,   derived_data JSON,   conversation_signals JSON,   bot_answer_feedback JSON ); </code></pre> </li> <li><p>Configure your <a href=""https://cloud.google.com/dialogflow/cx/docs/concept/agent#settings-general"" rel=""nofollow noreferrer"">agent settings</a> to enable BigQuery export, and to provide the dataset and table names created above.</p> </li> </ol>",,,true
"{'account_id': 1481394, 'reputation': 11, 'user_id': 1390692, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/7fadb862546d65322756c39acc53e470?s=256&d=identicon&r=PG', 'display_name': 'jay ralph', 'link': 'https://stackoverflow.com/users/1390692/jay-ralph'}",False,0,1727389223,1727389223,79029304,79017061,CC BY-SA 4.0,"<p>The reason why you got a bad request it's because of using <strong>[mode: 'no-cors']</strong> as it severely limits what you can do with the response.</p> <p><strong>Best Approach:</strong> The backend proxy is the best solution as it avoids CORS issues and keeps your API keys secure.</p> <p>Kindly find docs regarding CORS <a href=""https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"" rel=""nofollow noreferrer"">here</a>.</p>",,,true
"{'account_id': 18532274, 'reputation': 21, 'user_id': 13502755, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/bb3363d2b9bb8b251713e5ff18a10173?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Frank', 'link': 'https://stackoverflow.com/users/13502755/frank'}",False,0,1727159129,1727159129,79017228,79016975,CC BY-SA 4.0,"<p>Your code doesn't seem to have any problems, but you can troubleshoot it in the following steps:</p> <ol> <li>Set data directly using mock data, if there is no problem, check your custom request</li> </ol> <pre><code>let mockData = [{...},{...}]; useEffect(() => {   setTableData(mocKData) }, []) </code></pre> <ol start=""2""> <li>Upgrade Node version, reinstall <code>react-data-table-component</code></li> </ol>",,,true
"{'account_id': 33593006, 'reputation': 131, 'user_id': 26007375, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/cab800d8c84c79c925d573f87445f567?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Carsten Codes', 'link': 'https://stackoverflow.com/users/26007375/carsten-codes'}",False,0,1727152689,1727152689,79016974,79016943,CC BY-SA 4.0,"<p>The loss of data maybe due to the fact, that the <code>state</code> is being reset on refresh. On <code>mount</code> your <code>useEffect</code> then runs and sets your <code>localStorage</code> values to the now empty state.</p> <p>Maybe you can try chaning your state logic:</p> <pre><code>const [taskEdits, setTaskEdits] = useState(() => {     return JSON.parse(localStorage.getItem(""taskEdits"")) || {}; }); </code></pre>",,,true
"{'account_id': 36194130, 'reputation': 29, 'user_id': 27614016, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/HMgEdJOy.jpg?s=256', 'display_name': 'khusbu patel', 'link': 'https://stackoverflow.com/users/27614016/khusbu-patel'}",False,0,1728042755,1728042755,79054130,79016921,CC BY-SA 4.0,<pre><code> .MuiSelect-icon {    color: #121212 !important;    // just add quotations like below it works for me    '&:hover': {      color: '#0645c5';    }  } </code></pre>,,,true
"{'account_id': 26464633, 'reputation': 25, 'user_id': 20106026, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/a6710110196af0fcb32dcbdbae7d39cb?s=256&d=identicon&r=PG', 'display_name': 'ACCE', 'link': 'https://stackoverflow.com/users/20106026/acce'}",True,1,1727190844,1727190844,79019286,79016764,CC BY-SA 4.0,"<p>Found the problem. For some reason, reactstrap was installed on my computer, but wasn't being included in my node_modules folder. I just needed to add it to my package.json file</p>",,,true
"{'account_id': 18532274, 'reputation': 21, 'user_id': 13502755, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/bb3363d2b9bb8b251713e5ff18a10173?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Frank', 'link': 'https://stackoverflow.com/users/13502755/frank'}",False,1,1727170895,1727170895,79017969,79016764,CC BY-SA 4.0,"<p>I didn't reproduce the problem you said in this demo: <a href=""https://codesandbox.io/p/sandbox/priceless-lichterman-qf9kmv?workspaceId=d11ba1d9-96f1-4a2a-840d-bef0ba43fe6f"" rel=""nofollow noreferrer"">Codesandbox Demo</a></p> <p>I just commented some of the code;So you need check the <code>ContextBody</code> or upgrade Node version to try</p>",,,true
"{'account_id': 18159614, 'reputation': 135, 'user_id': 13211175, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/ZtrrI.jpg?s=256', 'display_name': 'Tosin Ola', 'link': 'https://stackoverflow.com/users/13211175/tosin-ola'}",False,2,1727164399,1727164399,79017547,79016461,CC BY-SA 4.0,"<p>The issue you're encountering is likely due to both stacks (RootStack and AuthStack) being mounted simultaneously in your current setup.</p> <p>instead of rendering both stack conditionally In the root stack, conditionally render the correct stack in the stack navigator itself based on the isLogin state.</p> <p>eg.</p> <pre><code>import { router, Slot, Stack, Tabs } from ""expo-router""; import { StatusBar } from ""expo-status-bar""; import { useContext, useEffect, useState } from ""react""; import { AuthContext, AuthContextProvider } from ""../context/AuthContext""; import { ActivityIndicator, View } from ""react-native""; import AsyncStorage from ""@react-native-async-storage/async-storage"";  function Root() {   const { setIsLogin, setToken, setIsTryingLogin, isTryingLogin, isLogin } =     useContext(AuthContext);   const [isLoading, setIsLoading] = useState(true);    useEffect(() => {     const checkAuth = async () => {       const token = await AsyncStorage.getItem(""token"");       if (token) {         console.log(""token found, user logged in"");         setIsLogin(true);         setToken(token);       } else {         setIsLogin(false);       }       // Set trying login to false after we check for token       setIsTryingLogin(false);     };      checkAuth();   }, []); // This runs only once on component mount    useEffect(() => {     if (!isTryingLogin) {       setIsLoading(false);     }   }, [isTryingLogin]);    if (isLoading) {     console.log(""Loading..."");     return (       <View className=""flex-1 justify-center items-center"">         <ActivityIndicator className=""p-2 m-2"" animating size=""large"" />       </View>     );   }    return (     <Stack       screenOptions={{         headerShown: false, // Hides header for all screens by default       }}     >       {isLogin ? (         <>           {/* Root Stack for authenticated users */}           <Stack.Screen             name=""(root)/index""             component={RootStack}             options={{ title: ""Welcome"" }}           />         </>       ) : (         <>           {/* Auth Stack for unauthenticated users */}           <Stack.Screen             name=""(auth)/index""             component={AuthStack}             options={{ title: ""Login Page"" }}           />           <Stack.Screen             name=""(auth)/signup""             component={AuthStack}             options={{ title: ""Sign Up Page"" }}           />         </>       )}     </Stack>   ); }  function RootStack() {   return (     <Stack>       <Stack.Screen name=""(root)/index"" options={{ title: ""Welcome"" }} />     </Stack>   ); }  function AuthStack() {   return (     <Stack       screenOptions={{         headerStyle: { backgroundColor: ""#6779ef"" },         headerTintColor: ""white"",         contentStyle: { backgroundColor: ""#6779ef"" },         headerShown: false,       }}     >       <Stack.Screen name=""(auth)/index"" options={{ title: ""Login Page"" }} />       <Stack.Screen name=""(auth)/signup"" options={{ title: ""Sign Up Page"" }} />     </Stack>   ); }  export default function Layout() {   return (     <AuthContextProvider>       <StatusBar style=""light"" />       <Root />     </AuthContextProvider>   ); } </code></pre>",,,true
"{'account_id': 40375, 'reputation': 950, 'user_id': 116994, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/fee3d5827e0f62c527a8931c9d770ff8?s=256&d=identicon&r=PG', 'display_name': 'Simon', 'link': 'https://stackoverflow.com/users/116994/simon'}",True,0,1727143429,1727143429,79016770,79016419,CC BY-SA 4.0,"<p>Adopting Howler.js in your React application offers numerous advantages that directly address the challenges youâre facing with your current implementation:</p> <ol> <li>Performance Improvements: Efficient handling of large audio files through streaming reduces load times and memory usage.</li> <li>Simpler and More Reliable Code: A straightforward API minimizes complexity, making your application more maintainable and less prone to bugs.</li> <li>Better User Experience: Faster playback initiation and responsive controls enhance the overall user experience.</li> <li>Robust Resource Management: Proper cleanup and error handling ensure your application remains stable and performant over time.</li> <li>Cross-Browser Consistency: Howler.js abstracts away browser inconsistencies, providing a uniform experience across different environments.</li> </ol> <p>By leveraging Howler.js, you can create a scalable, efficient, and user-friendly audio playback feature in your React application, resolving the erratic loading behaviors and enhancing overall performance.</p> <p>Try this code:</p> <p>If you later decide to incorporate advanced features like waveform visualization, you can integrate specialized libraries (e.g., WaveSurfer.js) alongside Howler.js, maintaining a modular and efficient architecture.</p> <pre><code>import React, { useState, useRef, useEffect } from 'react'; import axios from 'axios'; import { Howl } from 'howler';  const PlayFileWithHowler = () => {     const [linkName, setLinkName] = useState('');     const [isLoading, setIsLoading] = useState(false);     const [howl, setHowl] = useState(null);     const [isPlaying, setIsPlaying] = useState(false);      const handleSubmit = async (event) => {         event.preventDefault();         setIsLoading(true);          const formData = new FormData();         formData.append('link_name', linkName);          try {             const response = await axios.post('http://localhost:8000/submitform/', formData, {                 headers: {                     'Content-Type': 'multipart/form-data',                 },                 responseType: 'blob', // Ensure the response is a blob             });              const audioBlob = new Blob([response.data], { type: 'audio/mpeg' });             const audioUrl = URL.createObjectURL(audioBlob);              const newHowl = new Howl({                 src: [audioUrl],                 html5: true, // Use HTML5 Audio to enable streaming large files                 onend: () => setIsPlaying(false),                 onplay: () => setIsPlaying(true),                 onpause: () => setIsPlaying(false),                 onstop: () => setIsPlaying(false),                 onloaderror: (id, error) => console.error('Load error:', error),                 onplayerror: (id, error) => console.error('Play error:', error),             });              setHowl(newHowl);         } catch (error) {             console.error('Error submitting the form', error);             // Optionally, set an error state here to display to the user         } finally {             setIsLoading(false);         }     };      const handlePlayPause = () => {         if (howl) {             howl.playing() ? howl.pause() : howl.play();         }     };      const handleStop = () => {         if (howl) {             howl.stop();         }     };      // Cleanup Howl on unmount     useEffect(() => {         return () => {             if (howl) {                 howl.unload();             }         };     }, [howl]);      return (         <form onSubmit={handleSubmit} className=""bg-gradient-to-r from-emerald-100 to-lime-200 flex flex-col lg:flex-row lg:space-x-8 p-6 font-sans py-12 px-6"">             {/* Link Name Input Field */}             <div className=""mb-6 flex-1"">                 <label className=""font-semibold mb-2 block"">Document Link</label>                 <input                     type=""text""                     value={linkName}                     onChange={(e) => setLinkName(e.target.value)}                     className=""border rounded w-full py-2 px-3""                     placeholder=""Link to Document""                     required                 />             </div>             <div className=""flex items-end"">                 <button                     type=""submit""                     className=""bg-black text-white py-3 px-8 rounded w-full""                     disabled={isLoading}                 >                     {isLoading ? 'Loading...' : 'Create Podcast'}                 </button>             </div>              {/* Show the audio controls if Howl is initialized */}             {howl && (                 <div className=""mt-4 w-full"">                     <div className=""flex gap-4"">                         <button                             type=""button""                             onClick={handlePlayPause}                             className=""bg-green-500 text-white py-2 px-4 rounded""                         >                             {isPlaying ? 'Pause' : 'Play'}                         </button>                         <button                             type=""button""                             onClick={handleStop}                             className=""bg-red-500 text-white py-2 px-4 rounded""                         >                             Stop                         </button>                     </div>                 </div>             )}         </form>     ); };  export default PlayFileWithHowler; </code></pre>",,,true
"{'account_id': 11745514, 'reputation': 1, 'user_id': 8596401, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-xFJAoLyKspE/AAAAAAAAAAI/AAAAAAAAAAo/bLI5rWr_mww/photo.jpg?sz=256', 'display_name': 'Max Sun', 'link': 'https://stackoverflow.com/users/8596401/max-sun'}",False,0,1727128397,1727128176,79016401,79016300,CC BY-SA 4.0,"<p>OK I figured out! Chatgpt is correct lol</p> <p>This answer gave me the inspiration. The reason that it doesn't work is that create-react-app doesn't know how to process .mdx file so we need to modify the webpack config rules. <a href=""https://stackoverflow.com/a/66495392/8596401"">https://stackoverflow.com/a/66495392/8596401</a></p> <p>In order to modify webpack.config.js, rather than running 'npm run eject' which is not advised, we need to use another npm package.</p> <p>To install react-app-rewired:</p> <pre><code>npm install react-app-rewired --save-dev </code></pre> <p>Then create a config-overrides.js file <strong>at the root directory (not /src)</strong> and add this content.</p> <pre><code>module.exports = function override(config, env) {   console.log('override!');   let loaders = config.module.rules[1].oneOf;   loaders.splice(loaders.length - 1, 0, {       test: /\.mdx$/,       use: ['babel-loader', '@mdx-js/loader']   })   return config; } </code></pre> <p>The reason why this code is like this is from this tutorial: <a href=""https://egghead.io/lessons/react-customize-create-react-app-cra-without-ejecting-using-react-app-rewired"" rel=""nofollow noreferrer"">https://egghead.io/lessons/react-customize-create-react-app-cra-without-ejecting-using-react-app-rewired</a></p>",1727128397.0,,true
"{'account_id': 69897, 'reputation': 79671, 'user_id': 203130, 'user_type': 'registered', 'accept_rate': 89, 'profile_image': 'https://i.sstatic.net/1RE8c.jpg?s=256', 'display_name': 'coreyward', 'link': 'https://stackoverflow.com/users/203130/coreyward'}",True,2,1727134412,1727134412,79016545,79016259,CC BY-SA 4.0,"<p>You have created a ""controlled component"" by setting the <code>value</code> programatically. This prevents the value from being changed by the browser. You either need to add an <code>onChange</code> prop with a handler that updates the value being set on the <code>value</code> prop, or you need to remove the <code>value</code> prop.</p> <p>See <a href=""https://react.dev/reference/react-dom/components/input#my-text-input-doesnt-update-when-i-type-into-it"" rel=""nofollow noreferrer"">""My text input doesn't update when I type into it""</a> in the React docs for <code>input</code>.</p>",,,true
"{'account_id': 26071899, 'reputation': 537, 'user_id': 19771417, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/236047cd9f582ee7daf24472c287ba73?s=256&d=identicon&r=PG', 'display_name': 'Sakar', 'link': 'https://stackoverflow.com/users/19771417/sakar'}",False,0,1728286542,1728286542,79061022,79015993,CC BY-SA 4.0,"<p>You are using the app directory which does not need <code>serialize</code> and should be imported from <code>next-mdx-remote/rsc</code> take a look at the section titled <strong>""React Server Components (RSC) & Next.js app Directory Support""</strong> in their <a href=""https://www.npmjs.com/package/next-mdx-remote"" rel=""nofollow noreferrer"">documentation</a></p>",,,true
"{'account_id': 13898583, 'reputation': 308, 'user_id': 10136627, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e38954e50d2046767774a769990c3b60?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'matt', 'link': 'https://stackoverflow.com/users/10136627/matt'}",False,0,1727116608,1727116133,79015884,79015761,CC BY-SA 4.0,"<pre><code>type Items = Record<string, string[]>;  export default function App() {   const [items, setItems] = useState<Items>({     A: [""1"", ""2"", ""3""],     B: [""4"", ""5"", ""6""],     C: [""7""],   });   const [containers, setContainers] = useState(Object.keys(items));    return <div>     {containers.map((containerId) => (         items[containerId].map((itemId) => (           <p>{itemId}</p>         ))       ))}   </div>; } </code></pre> <p>Needed to remove the curly brackets around the <code>items[containerId].map((itemId)</code></p>",1727116608.0,,true
"{'account_id': 81630, 'reputation': 9257, 'user_id': 230055, 'user_type': 'registered', 'accept_rate': 67, 'profile_image': 'https://i.sstatic.net/Hk0Ac.jpg?s=256', 'display_name': 'Shawn', 'link': 'https://stackoverflow.com/users/230055/shawn'}",True,0,1727119417,1727118256,79015972,79015560,CC BY-SA 4.0,"<p>The link you posted shows the correct OIDC solution.  What that link calls the ""customer user pool"" is really what you are calling your partner app. It is the OIDC identity provider.  The login will not use your app, but will use the login page of the partner's website.  The fact that the partner's website is implemented using Cognito is immaterial.  The partner could be Facebook, Google, or some other OIDC provider.  In any of these cases, your app initiates the login with the partner using OIDC, and once logged in the OIDC provider (partner) will send info back to you that you can use to establish the user, which is what is shown in step 12 of the diagram on the page you referenced--image copied here:</p> <p><a href=""https://i.sstatic.net/m5axIiDs.webp"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/m5axIiDs.webp"" alt=""Auth flow between 2 Cognito pools, as shown on https://community.aws/content/2bUvwgyFoeJdjGYgpnRkejYAgYC/how-to-add-cognito-as-oidc-identity-provider-in-cognito?lang=en"" /></a></p> <p>If the users have already logged in on the partner's website, then when your app initiates the step #2 request in that diagram (that is, you redirect their browser to the ""authorize"" endpoint to kick off the authentication process with the OIDC provider), the partner website will recognize them and won't force them to type their credentials in again.  It will use the credentials they already established and will issue tokens back to your Cognito which your Cognito can and will use to identify and establish the users.  They will show up in your Cognito with a Confirmation Status of ""External provider.""</p> <p>The key point is that Cognito is an OIDC <em>provider</em>.  So you can integrate it just like you can with any OIDC provider.</p> <ol> <li>The partner will need to give you a client ID/secret to use when you set up your federated identity provider in Cognito.  So yes, they will need to set up a client for your app.</li> <li>You will need to set up a federated identity provider in your pool.  You will use the info provided above along with other details like the issuer URL and potentially other endpoints to do this.</li> <li>You can give the partner website a URL to your web app that will initiate the ""authorize"" flow (i.e. will redirect the browser to the authorize endpoint).</li> <li>Your app code may need to be updated with a page that the partner web app can target which will initiate the login process (i.e. redirect to the ""authorize"" endpoint).</li> </ol>",1727119417.0,,true
"{'account_id': 10823808, 'reputation': 1042, 'user_id': 7960375, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/10158611359425333/picture?type=large', 'display_name': 'Cat Perry', 'link': 'https://stackoverflow.com/users/7960375/cat-perry'}",False,-1,1727120155,1727120155,79016050,79015393,CC BY-SA 4.0,"<p>I've encountered similar errors before, so here are my thoughts:</p> <p>That's good that you have the <code>ResizeObserver</code> mocked <em>and</em> it's in your <code>setupFiles</code> (that's often forgotten to add it there). But you can try the following:</p> <ol> <li>I'd update the regex to something like this: <code>node_modules\/(?!(${moduleNames.join('|')})\/)</code> and then pass in module names. Note how this regex escapes the first fwd/slash, whereas yours doesnt yet.</li> </ol> <pre><code>const modulesToMap = (modules) => `node_modules\/(?!(${modules.join('|')})\/)`;  const modules = ['cheerio','jest-runtime','enzyme','@wojtekmaj']; </code></pre> <p>So your <code>transformIgnorePatterns</code> would be:</p> <pre><code>module.exports = { ...   transformIgnorePatterns: [modulesToMap(modules)], } </code></pre> <ol start=""2""> <li>Try adding a <code>window</code> definition to your mock file as well? ð¤ I have something similar mocked for Jest, but for <code>IntersectionObserver</code>. But as you can see below, my file contains both <code>window</code> and <code>global</code> definitions. It doenst matter the exact syntax (e.g., using a class, like I've done versus, not), but try defining both <code>window</code> and <code>global</code> and see if Jest is happier with that</li> </ol> <p>// src/<strong>mocks</strong>/intersectionObserverMock.js</p> <pre><code>// Mock IntersectionObserver class IntersectionObserver {   observe = jest.fn();   disconnect = jest.fn();   unobserve = jest.fn(); }  Object.defineProperty(window, 'IntersectionObserver', {   writable: true,   configurable: true,   value: IntersectionObserver, });  Object.defineProperty(global, 'IntersectionObserver', {   writable: true,   configurable: true,   value: IntersectionObserver, }); </code></pre> <ol start=""3""> <li>Lastly, in your <code>jest.config.js</code> (make sure that's a lowercase ""J"" btw), perhaps try tweaking the import syntax for you mock file? So rather than <code>./setup.js</code> my <code>setupFiles</code> in in <code>jest.config.js</code> looks like this:</li> </ol> <pre><code>setupFiles: ['<rootDir>/src/test/mocks/localStorage.mock.js', '<rootDir>/src/__mocks__/intersectionObserverMock.js'], </code></pre>",,,true
"{'account_id': 17059865, 'reputation': 461, 'user_id': 12343556, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/1867e77db4f2ec65efcca72ebb828992?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Matti Sig', 'link': 'https://stackoverflow.com/users/12343556/matti-sig'}",False,0,1727793180,1727793180,79043602,79015347,CC BY-SA 4.0,"<p>The correct approach would be to use the same <code>useGetEmployeeQuery(null)</code> hook. Since that is your source of truth, there is no need to keep double state.</p> <p>Assuming you are using the useQuery hook to reach the isEmployee  data in every other place (the useQuery hook initiates a request and subscribes to the state).</p> <p>The data is cached by default so long as there are mounted ""subscribers"" to the query. Then it will refetch every 5 minutes, but caching can be configured for every endpoint.</p> <p>The way I would do this is by creating a custom hook for getting the value of <code>isEmployee</code></p> <pre class=""lang-js prettyprint-override""><code>const useIsEmployee = () => {     const {data} = useGetEmployee(null);     return data.isEmployee(); } </code></pre> <p>Then you use this hook in every other component that depends on <code>isEmployee</code>, and since there is already state for the argument <code>null</code> the data will already be in cached for the endpoint.</p> <p><a href=""https://redux-toolkit.js.org/rtk-query/api/created-api/hooks#usequery"" rel=""nofollow noreferrer"">https://redux-toolkit.js.org/rtk-query/api/created-api/hooks#usequery</a> read the description part here, that will help you understand the concepts of rtk-query better. There is also <code>useQueryResults</code>, but I default to <code>useQuery</code> since that will fetch the data if it's not already there.</p> <p>Hope this helps</p>",,,true
"{'account_id': 26939123, 'reputation': 82, 'user_id': 20510260, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/HcSG9qOy.png?s=256', 'display_name': 'Mahii', 'link': 'https://stackoverflow.com/users/20510260/mahii'}",False,0,1727156696,1727156696,79017108,79015270,CC BY-SA 4.0,<p>Just add this line into the flatlist and adjust padding according to you</p> <pre><code>contentContainerStyle={{  paddingBottom: 100 }} </code></pre>,,,true
"{'account_id': 25534002, 'reputation': 26, 'user_id': 19321450, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b9b43ddec2622a3757290a1fe9094eba?s=256&d=identicon&r=PG', 'display_name': 'Jacob1507', 'link': 'https://stackoverflow.com/users/19321450/jacob1507'}",True,1,1727131909,1727131334,79016472,79015270,CC BY-SA 4.0,"<ul> <li><p><code>data.length > 0 &&</code> - there is no need for this check. Your FlatList will be empty if there is no data - just adds complexity.</p> </li> <li><p>You can delete <code><></></code> tags for your renderItem functions. This does nothing - just adds complexity.</p> </li> <li><p>It is better to use <code><FlatList /></code> rather than <code><FlatList></FlatList></code>. This is just good practise, less code and actually you do not pass child components to this tag.</p> </li> <li><p>This problem occurs because FlatList is being pushed off by styles in input component, button components and <code>screenContainer: { padding: 10, rowGap: 20 }</code> off the screen. FlatLists are dynamic so you have to be careful with adding too much at the beginning of creating / adding new styles</p> </li> <li><p>I changed <code>{ padding: 10, rowGap: 20 }</code> to <code>{ padding: 10, rowGap: 20, flex:1  }</code> this makes sure that your whole screen is properly adjusted to child components.</p> </li> <li><p><code>{notes.length > 0 && <Button title='Cancel' onPress={() => handleCancel()} />}</code> this might result in pushing your FlatList again off the screen and just handle / prevent upload for empty values.</p> </li> </ul> <p>Working version might look like: <a href=""https://snack.expo.dev/@kuba.baginski/hazardous-indigo-kiwi"" rel=""nofollow noreferrer"">Expo snack</a></p> <p>I changed your structure a little bit. It is better to think about  how your tags are structured rather than plastering your code with more styles, logic and praying it will work.</p>",1727131909.0,,true
"{'account_id': 14562186, 'reputation': 465, 'user_id': 10517968, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3ff49299859fba8768b7087fe0ad8368?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Tim van Dam', 'link': 'https://stackoverflow.com/users/10517968/tim-van-dam'}",False,0,1727107150,1727105905,79015328,79015270,CC BY-SA 4.0,"<p>Try adding <code>flexGrow: 1</code> to your messageListContainer, like this: <code>messageListContainer: { flexGrow: 1 }</code> This should allow your FlatList to grow.</p> <p><strong>EDIT:</strong> Did some testing and, these new settings should work:</p> <pre><code>const styles = StyleSheet.create({     screenContainer: { padding: 10, rowGap: 20, flex: 1 },     messageListContainer: { flexGrow: 1 },     input: { maxHeight: 100, backgroundColor: ""lightgrey"" },     listingContainer: { flexDirection: ""row"", justifyContent: ""space-between"", alignItems: ""center"" },     message: { color: ""black"" },     seperator: { backgroundColor: ""lightgrey"", height: 1 },     actionContainer: { flexDirection: ""row"", gap: 5 },     messageList: { paddingVertical: 10, flexShrink: 1, width: ""100%"" },  }); </code></pre> <p>Add <code>flexDirection: ""row""</code> to your actionContainer and remove <code>display: flex</code> from your listingContainer - that, plus what I said earlier about flexGrow 1.</p> <p>If you add more items to your list, you'll see that you'll be able to scroll now within your FlatList.</p>",1727107150.0,,true
"{'account_id': 11467508, 'reputation': 27624, 'user_id': 8405310, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/oTdtMh9A.jpg?s=256', 'display_name': 'TkDodo', 'link': 'https://stackoverflow.com/users/8405310/tkdodo'}",True,1,1728671065,1728671065,79079358,79015064,CC BY-SA 4.0,"<p>This is definitely due to the <code>refetchOnWindowFocus: true</code> default of react-query, which will refetch stale queries when a refetch occurs. Note that queries are always stale per default because <code>staleTime</code> defaults to zero.</p> <p>The best approach is usually to customize <code>staleTime</code> to your liking per resource.</p> <p>Also note that in React Query v5, weâve switched to not listening to the <code>focus</code> event directly, but only the <code>visibilitychange</code> event, where clicking in the devtools and back to the page does not trigger a refetch.</p>",,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",False,1,1727259280,1727258800,79022292,79014931,CC BY-SA 4.0,"<p><strong>Optimised implementation:</strong></p> <p>For a naive implementation, please see the another answer.</p> <p>Note : <em>Please take advantage of the comments enclosed in the code.</em></p> <p>Output:</p> <p><a href=""https://i.sstatic.net/Yj2nuzWx.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/Yj2nuzWx.png"" alt=""Browser display"" /></a></p> <p><strong>App.js</strong></p> <pre><code>import { useContext } from 'react'; import { RunningSectionSumContext } from './context';  export default function App() {   return (     <>       <SummedValue>         <Data value={10} />         <Data value={5} />         <SummedValue>           <Data value={20} />           <Data value={30} />         </SummedValue>         <SummedValue>           <Data value={20} />         </SummedValue>         <SummedValue />       </SummedValue>       <SummedValue />     </>   ); }  function SummedValue({ children }) {   // Destructuring nested objects.   let sectionSum;    // case 1: the children prop will be an array   // when the component has more than one nested component   if (Array.isArray(children)) {     sectionSum = children       .filter(({ props: { value } }) => value)       .map(({ props: { value } }) => value)       .reduce((a, b) => a + b, 0);   } else if (children) {     // case 2: the children prop will be an object     // when the component has only one nested component     // this is the case of the below jsx     // <SummedValue>     //   <Data value={20} />     // </SummedValue>      sectionSum = children.props.value;   } else {     sectionSum = 0;     // case 3 : The children is neither an array nor an object,     // it means there is no nested element. This would occur     // during the recursive calls of the component.     // Or it can happen for the below jsx as well.     // <SummedValue /> // no children  enclosed.   }    const runningSectionSum = useContext(RunningSectionSumContext) + sectionSum;   return (     <div       style={{         border: '2px dotted white',         margin: 10,         padding: 10,         width: '50%',       }}     >       <strong>Running section sum is : {runningSectionSum}</strong>       <RunningSectionSumContext.Provider value={runningSectionSum}>         {children}       </RunningSectionSumContext.Provider>       <br />     </div>   ); }  function Data({ value }) {   return (     <>       <br />       <em>data value : {value}</em>     </>   ); } </code></pre>",1727259280.0,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",True,1,1727253382,1727252964,79021828,79014931,CC BY-SA 4.0,"<p>As we know <a href=""https://react.dev/learn/passing-data-deeply-with-context#context-passes-through-intermediate-components"" rel=""nofollow noreferrer"">Context passes through intermediate components</a> while <a href=""https://react.dev/learn/passing-data-deeply-with-context#using-and-providing-context-from-the-same-component"" rel=""nofollow noreferrer"">Using and providing context from the same component</a>. The sample code below follows the same principle, please see the output below prior to proceeding with the code.</p> <p><em>Note : This is a naive code, please see the another answer, the code in it is handling the known edge cases as well.</em></p> <p><a href=""https://i.sstatic.net/Wxl1qK0w.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/Wxl1qK0w.png"" alt=""Browser display of the output"" /></a></p> <p><em>Please take advantage of the comments enclosed in the code.</em></p> <p><strong>App.js</strong></p> <pre><code>import { useContext } from 'react'; import { RunningSectionSumContext } from './context';  export default function App() {   return (     <>       <SummedValue>         <Data value={10} />         <Data value={5} />         <SummedValue>           <Data value={20} />           <Data value={30} />         </SummedValue>       </SummedValue>     </>   ); }  function SummedValue({ children }) {   // Destructuring nested objects.   const sectionSum = children     // filter the children with value, the Data components only     .filter(({ props: { value } }) => value)      .map(({ props: { value } }) => value)     .reduce((a, b) => a + b, 0); // find the section sum    // the statement using the context.   const runningSectionSum = useContext(RunningSectionSumContext) + sectionSum;   return (     <div       style={{         border: '2px dotted white',         margin: 10,         padding: 10,         width: '50%',       }}     >       <strong>Running section sum is : {runningSectionSum}</strong>       <!-- the statement providing the new value to the context -->       <RunningSectionSumContext.Provider value={runningSectionSum}>         <!-- while evaluating the children below, the same component          will be invoked recursively if the child component is          is a nested SummedValue component. -->         {children}       </RunningSectionSumContext.Provider>       <br />     </div>   ); }  function Data({ value }) {   return (     <>       <br />       <em>data value : {value}</em>     </>   ); } </code></pre>",1727253382.0,,true
"{'account_id': 14564876, 'reputation': 356, 'user_id': 10519924, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/300fa7649c69f117d3d73f1364157c18?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'phantom', 'link': 'https://stackoverflow.com/users/10519924/phantom'}",False,1,1727101747,1727101747,79015057,79014931,CC BY-SA 4.0,"<ul> <li><p>You need to recursively compute the sum from both <code>Data</code> & <code>SummedValue</code> components.</p> </li> <li><p>The <code>Data</code> component holds value in its state via props.</p> </li> <li><p>The <code>SummedValue</code> component needs to iterate over its children & compute the sum of <code>Data</code> components directly & recursively handles the nested <code>SummedValue</code> components.</p> </li> <li><p><code>SummedValueContext</code> is created to pass the summed value up the tree.</p> </li> <li><p><code>useContext(SummedValueContext)</code> is used to get the parent's summed value updater function.</p> </li> <li><p>The <code>SummedValueContext.Provider</code> is used to provide the local summed value updater function to its children.</p> </li> <li><p>Here is the impelement code for above functionality:</p> </li> </ul> <pre><code>import React, { createContext, useContext, useState, useEffect } from 'react';  const SummedValueContext = createContext();  function Data({ value }) {   return <div>{value}</div>; }  function SummedValue({ children }) {   const parentSummedValue = useContext(SummedValueContext);   const [computedValue, setComputedValue] = useState(0);    useEffect(() => {     let sum = 0;      const sumValues = (children) => {       children.forEach(child => {         if (child.props.value !== undefined) {           sum += child.props.value;         } else if (child.type === SummedValue) {           sum += child.props.children.reduce((acc, child) => {             if (child.props.value !== undefined) {               return acc + child.props.value;             } else if (child.type === SummedValue) {               return acc + sumValues(child.props.children);             }             return acc;           }, 0);         }       });     };      sumValues(children);     setComputedValue(sum);      if (parentSummedValue) {       parentSummedValue(sum);     }   }, [children, parentSummedValue]);    return (     <SummedValueContext.Provider value={setComputedValue}>       <div>         <span>SUMMED NUMBER IS: {computedValue}</span>         {children}       </div>     </SummedValueContext.Provider>   ); }  function App() {   return (     <SummedValue>       <Data value={3} />       <Data value={5} />       <SummedValue>         <Data value={4} />         <Data value={1} />       </SummedValue>     </SummedValue>   ); }  export default App; </code></pre>",,,true
"{'account_id': 4687875, 'reputation': 83797, 'user_id': 3794812, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/91da5cf982069e22d3bd0b514dfb45e2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Nicholas Tower', 'link': 'https://stackoverflow.com/users/3794812/nicholas-tower'}",True,2,1727102708,1727100841,79015002,79014907,CC BY-SA 4.0,"<p>If there is any performance difference, it will be trivial. The only difference is whether you assign the function to an intermediate variable or not. A single assignment is very very fast. Plus, after you transpile your code, minify it, and then the browser does its own optimizations, there's a chance this assignment won't even exist at all.</p> <p>I <em>strongly</em> recommend that you do not try to optimize at this level. Write your code for readability, and save the performance improvements for larger scale things.</p> <blockquote> <p>I know I can use useCallback or other memoizing techniques</p> </blockquote> <p>I know these weren't the question, but i suspect you may misunderstand what they do. If you wrap the function in a <code>useCallback</code>, you would make the example you showed very slightly <em>slower</em>, not faster:</p> <pre><code>const handleClick = useCallback(() => {   setCount(count + 1); }, []) </code></pre> <p>With this code, you will still create a function every time you render, so you're already tied in terms of work done. That function, instead of being immediately assigned to <code>handleClick</code>, gets passed into <code>useCallback</code>, which will iterate through the dependency array doing comparisons. A function call plus a loop of comparisons is very fast, but it's slower than doing absolutely nothing.</p> <p>There is a performance benefit from <code>useCallback</code>, but it's not present in your example. The benefit comes when you pass your function to another piece of code. If you pass a different function each time, then that other code may need to repeat some work. For example, a component thinks its props have changed, so it must rerender; or a <code>useEffect</code> thinks its dependency array has changed, so it must rerun. <code>useCallback</code> lets you pass the same function each time, potentially skipping some work.</p>",1727102708.0,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",True,0,1727144972,1727144972,79016796,79014834,CC BY-SA 4.0,"<p>The <code>PrivateRoute</code> component only checks the stored cookie once when the component mounts. I suspect you meant for this check to happen after <em>any</em> navigation action, i.e. when the app URL path changes. For this you can use the <code>useLocation</code> hook and add the <code>location</code> or <code>location.pathname</code> as dependency.</p> <p>Example:</p> <pre><code>import { useEffect } from 'react'; import { Outlet, useLocation, useNavigate } from 'react-router-dom'; import Cookies from 'universal-cookie'; import { toast } from 'sonner';  const PrivateRoute = () => {   const { pathname } = useLocation();   const navigate = useNavigate();    useEffect(() => {     const cookie = new Cookies(null, { path: '/' });      if (!cookie.get('token')) {       toast.error('You are not authorized to access this page');       navigate('/login', { replace: true });     }   }, [pathname, navigate]);    return <Outlet />; }; </code></pre>",,,true
"{'account_id': 8916935, 'reputation': 14756, 'user_id': 6655160, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/hsfH0.jpg?s=256', 'display_name': 'hgb123', 'link': 'https://stackoverflow.com/users/6655160/hgb123'}",False,1,1727094947,1727094947,79014633,79014519,CC BY-SA 4.0,"<p>You can keep your custom style, and update <code>justify-content</code> to <code>flex-start</code></p> <pre><code>style={{ right: 84, top: 24, justifyContent: 'flex-start' }} </code></pre> <p>Demo: <a href=""https://stackblitz.com/edit/react-hug9m3?file=demo.tsx"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/react-hug9m3?file=demo.tsx</a></p>",,,true
"{'account_id': 21146760, 'reputation': 76, 'user_id': 15547910, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/0dc3846cff8a4523d3a3c201aae8fe4e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'IdrisSelimi', 'link': 'https://stackoverflow.com/users/15547910/idrisselimi'}",False,0,1727094011,1727094011,79014576,79014519,CC BY-SA 4.0,<p>Inside of your <code>style</code> you can try adding:</p> <p><code>insetInlineEnd: 24</code> <code>insetBlockStart: 24</code></p> <p>also you could change your position to <code>fixed</code>. Don't forget to remove your current styling.</p>,,,true
"{'account_id': 24589621, 'reputation': 374, 'user_id': 18493710, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/i81lL.jpg?s=256', 'display_name': 'okaeiz', 'link': 'https://stackoverflow.com/users/18493710/okaeiz'}",False,0,1727096916,1727096916,79014739,79014486,CC BY-SA 4.0,"<p>Are you sure you're actually importing both libraries?</p> <pre class=""lang-js prettyprint-override""><code>import { library } from '@fortawesome/fontawesome-svg-core'; import { fas } from '@fortawesome/pro-solid-svg-icons'; import { far } from '@fortawesome/pro-regular-svg-icons';  library.add(fas, far); </code></pre> <p>Moreover, it's unlikely for FormIO not to need extra configuration because I think it's looking for free icons by default. So you may check the console logs for possible errors. Share them.</p>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",True,2,1727108254,1727104893,79015259,79014407,CC BY-SA 4.0,"<p>Refactor the logic such that only one <code>useOutsideClick</code> hook is necessary. Since the header content, i.e. the children, appear to be same for both mobile and desk view, you can refactor to replace the wrapping <code>div</code> elements with a single <code>div</code> that conditionally applies the correct CSS <code>className</code> prop, <em>and any other layout/UI differences between mobile and desk views</em>.</p> <p>Example Implementation:</p> <pre><code>const HeaderSearch = ({ screenWidth }) => {   const ref = useOutsideClick(test);   ...    function checkInput(event) {     if (event.keyCode !== 13) {       setSearch(event.target.value);     }   }    if (location.pathname !== ""/"") {     return (       <div         ref={ref}         id=""search-header""         className={[           ""search-header"",           screenWidth == ""mobile"" ? ""mob"" : ""desk""         ].join("" "")}       >         <FontAwesomeIcon           className=""search-icon""           id=""search-icon""           icon={faSearch}           onClick={() => toggleSearchInput()}         />         <input           id=""search-input""           className={[""search-input"", searchActive && ""active""]             .filter(Boolean)             .join("" "")           }           type=""text""           value={search}           onKeyDown={(e) => checkInput(e)}           onChange={(e) => setSearch(e.target.value)}           // ref={searchInputRef}           // onClick={() => searchReqClientSide()}           placeholder=""Search...""         />         <button></button>       </div>     );   } else {     return null;   } }; </code></pre>",1727108254.0,,true
"{'account_id': 112084, 'reputation': 176262, 'user_id': 295783, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://www.gravatar.com/avatar/da548667c834109a7059b51060e53dff?s=256&d=identicon&r=PG', 'display_name': 'mplungjan', 'link': 'https://stackoverflow.com/users/295783/mplungjan'}",False,0,1727086662,1727086662,79014184,79014166,CC BY-SA 4.0,<p>Try adding a stopPropagation on the change event</p> <pre><code>onChange={(event) => {   event.stopPropagation();    handleStatusChange(event); }} </code></pre>,,,true
"{'account_id': 4034671, 'reputation': 768, 'user_id': 3319578, 'user_type': 'registered', 'accept_rate': 86, 'profile_image': 'https://i.sstatic.net/cPGcd.jpg?s=256', 'display_name': 'Mariano Schmands', 'link': 'https://stackoverflow.com/users/3319578/mariano-schmands'}",False,0,1727083985,1727083985,79014020,79014013,CC BY-SA 4.0,"<p>Swiper v11.x may not fully support React 18, leading to compatibility issues. Downgrading to Swiper v8 (which is widely compatible with React 18) might solve the issue.</p>",,,true
"{'account_id': 10231989, 'reputation': 10591, 'user_id': 7552340, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Pnjcy.jpg?s=256', 'display_name': 'Damzaky', 'link': 'https://stackoverflow.com/users/7552340/damzaky'}",False,0,1727743181,1727742802,79041341,79013568,CC BY-SA 4.0,"<p>It's hard to know since you aren't sharing the website/example, but assuming it's just a simple mouse hover event, you can just simulate these 3 events:</p> <ul> <li>pointerenter</li> <li>pointerover</li> <li>mouseover</li> </ul> <p>Basically like so:</p> <pre><code>const el = document.getElementById('container'); // the element you want to trigger the event on  el.dispatchEvent(new Event('pointerover', { bubbles: true })) el.dispatchEvent(new Event('pointerenter', { bubbles: true })) el.dispatchEvent(new Event('mouseover', { bubbles: true })) </code></pre> <p>The above code are tested on React 15 & 18. Try above code on the console of these React examples (select the element first so that the query will happen inside the iframe):</p> <ul> <li>React 18: <a href=""https://codepen.io/damzaky/pen/qBeOeXY"" rel=""nofollow noreferrer"">https://codepen.io/damzaky/pen/qBeOeXY</a></li> <li>React 15: <a href=""https://codepen.io/damzaky/pen/PoMPMJr"" rel=""nofollow noreferrer"">https://codepen.io/damzaky/pen/PoMPMJr</a></li> </ul>",1727743181.0,,true
"{'account_id': 25465072, 'reputation': 897, 'user_id': 19264249, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2AAN0xM6.jpg?s=256', 'display_name': 'sahilatahar', 'link': 'https://stackoverflow.com/users/19264249/sahilatahar'}",False,1,1727353525,1727353525,79027281,79013568,CC BY-SA 4.0,"<p>If you <strong>do not have access</strong> to the site's source code, here are best options to trigger hover or similar events:</p> <h3>1. <strong>Simulate Mouse Event (Vanilla JavaScript)</strong></h3> <p>This method can trigger DOM events, even on React sites:</p> <pre class=""lang-js prettyprint-override""><code>const element = document.querySelector('your-element-selector'); const mouseOverEvent = new MouseEvent('mouseover', { bubbles: true }); element.dispatchEvent(mouseOverEvent); </code></pre> <p>This simulates the actual <code>mouseover</code> event, which is often what triggers hover states.</p> <h3>2. <strong>Trigger React's Internal Event Handler</strong></h3> <p>Although you can't directly interact with Reactâs internal state, you can attempt to trigger its event handlers:</p> <pre class=""lang-js prettyprint-override""><code>const element = document.querySelector('your-element-selector'); Object.keys(element).forEach(key => {   if (key.startsWith('__reactEventHandlers')) {     element[key].onMouseOver(); // Simulate React onMouseOver event   } }); </code></pre> <p>This manually invokes Reactâs event handlers if they are available on the element.</p> <h3>3. <strong>Simulate CSS Hover with Forced Class</strong></h3> <p>If you're only trying to mimic the hover effect visually (without triggering an event):</p> <pre class=""lang-js prettyprint-override""><code>element.classList.add('your-hover-class'); </code></pre> <p>This adds the class that normally gets added on hover, forcing the visual change.</p> <h3>4. <strong>Use DevTools to Force Hover</strong></h3> <p>If your goal is purely visual (for testing), you can open Chrome DevTools, right-click the element, select <strong>""Force state""</strong>, and check <code>:hover</code>. This will apply the hover state.</p>",,,true
"{'account_id': 31842489, 'reputation': 33, 'user_id': 24655765, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/pBwvtqHf.png?s=256', 'display_name': 'Abdelkader Boukhalfoun', 'link': 'https://stackoverflow.com/users/24655765/abdelkader-boukhalfoun'}",False,1,1727341624,1727341624,79026416,79013568,CC BY-SA 4.0,"<p>you can simulate a native mouseenter event since React's synthetic event system still listens for these:</p> <pre><code>const element = document.querySelector('your-selector-here'); const hoverEvent = new MouseEvent('mouseenter', {   bubbles: true,   cancelable: true,   view: window });  element.dispatchEvent(hoverEvent); </code></pre> <p>React handles native events like <code>mouseenter</code> alongside its synthetic events. By dispatching this event, you should trigger any hover-related changes on the site. Use the browserâs dev tools to find the exact element and modify the selector as needed.</p>",,,true
"{'account_id': 36147313, 'reputation': 1, 'user_id': 27588990, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/8a6eeea4d591b3a302864968347ed32f?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Bhargav Parekh', 'link': 'https://stackoverflow.com/users/27588990/bhargav-parekh'}",False,0,1727930760,1727930760,79049156,79013398,CC BY-SA 4.0,"<p>You need to configure CORS in your .NET Core 8.0 Web API to allow requests from your React app's domain.</p> <p>In Program.cs (or Startup.cs if you're using that):</p> <pre><code>var builder = WebApplication.CreateBuilder(args);  // Add services to the container. builder.Services.AddControllers();  // Configure CORS builder.Services.AddCors(options => {     options.AddPolicy(""AllowReactApp"",         policy =>         {             policy.WithOrigins(""http://localhost:3000"") // URL of your React app                   .AllowAnyHeader()                   .AllowAnyMethod()                   .AllowCredentials(); // Only needed if sending cookies or other credentials         }); });  var app = builder.Build();  // Use CORS app.UseCors(""AllowReactApp"");  app.UseAuthorization();  app.MapControllers();  app.Run(); </code></pre>",,,true
"{'account_id': 12575482, 'reputation': 149, 'user_id': 9148037, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/dbbef3a6b3302e39f316b8b775a4fe4d?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Darshan Unadkat', 'link': 'https://stackoverflow.com/users/9148037/darshan-unadkat'}",False,0,1727098828,1727098828,79014865,79013398,CC BY-SA 4.0,"<p>You need to allow your portal url in Program.CS file by adding CORS policy.</p> <pre><code>builder.Services.AddCors(options => { options.AddPolicy(""AllowSpecificOrigin"",             builder =>             {                 builder.WithOrigins(""http://localhost:4200"", ""http://localhost:3000"", ""https:yourreactpublishedurl"")                        .AllowAnyHeader()                        .AllowAnyMethod()                        .AllowCredentials();             });     });  app.UseCors(""AllowSpecificOrigin""); </code></pre>",,,true
"{'account_id': 22222772, 'reputation': 316, 'user_id': 16460145, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/GAos0.jpg?s=256', 'display_name': 'n_dev', 'link': 'https://stackoverflow.com/users/16460145/n-dev'}",False,0,1727078150,1727078150,79013679,79013398,CC BY-SA 4.0,"<p>need to configure cors policy for you  urls  in program.cs</p> <pre><code>builder.Services.AddCors(options => {     options.AddPolicy(name: ""allowedregions"",                       policy  =>                       {                           policy.WithOrigins(""http://example.com"",                                               ""http://www.test.com"");                       }); }); </code></pre> <p>also configure middle ware</p> <pre><code>app.UseCors(""allowedregions""); </code></pre> <p>more  you can find  <a href=""https://learn.microsoft.com/en-us/aspnet/core/security/cors?view=aspnetcore-8.0"" rel=""nofollow noreferrer"">here</a></p>",,,true
"{'account_id': 27963168, 'reputation': 557, 'user_id': 21354514, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/TplE583J.jpg?s=256', 'display_name': 'L&#227; Ngá»c Háº£i', 'link': 'https://stackoverflow.com/users/21354514/l%c3%a3-ng%e1%bb%8dc-h%e1%ba%a3i'}",False,0,1727072897,1727072897,79013392,79013163,CC BY-SA 4.0,"<p><code>tokenString</code> is undefined when you call <code>JSON.parse(tokenString)</code>, because there is nothing in local storage to use <code>localStorage.getItem()</code>. Check <code>tokenString</code> and see if it has value before trying to parse it.</p> <pre><code>const tokenString = localStorage.getItem('accessToken'); if(!tokenString) return null const userToken = JSON.parse(tokenString); </code></pre>",,,true
"{'account_id': 22293658, 'reputation': 52, 'user_id': 16520049, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/8756d000ceeff10234189cae17601da4?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'trinity', 'link': 'https://stackoverflow.com/users/16520049/trinity'}",True,0,1727066378,1727066378,79013170,79012969,CC BY-SA 4.0,"<p>To track the previous profile image in your React component, use a state variable to store the initial image URL when the component mounts. This way, you can reference it later when you need to delete the old image.</p> <p>Here's the updated code:</p> <pre><code>import { useContext, useEffect, useState } from ""react""; import AuthContext from ""../../context/Auth-context/AuthContext""; import { useForm } from ""react-hook-form""; import useFilePreview from ""../Helpers/useFilePreview""; import { post } from ""../Helpers/post""; import { uploadImageToFirebase } from ""../Helpers/uploadImageToFirebase"";  function Profile() {   const { user } = useContext(AuthContext);   const [previousImage, setPreviousImage] = useState(user?.image);    const form = useForm({     defaultValues: { ... , image: user?.image }   });   const { register, handleSubmit, watch, formState: { dirtyFields } } = form;   const image = watch(""image"");   const [imagePreview] = useFilePreview(image);    useEffect(() => {     setPreviousImage(user?.image);   }, [user]);    const editProfile = async (data) => {     let url;      if (dirtyFields.image) {       url = await uploadImageToFirebase(data.image[0]);       if (previousImage) {         // Call your function to delete the previous image from Firebase         await deleteImageFromFirebase(previousImage);       }     }      data.image = url || previousImage;     await post(`http://localhost:8000/api/edit-profile/${data.id}`, ""PUT"", { ...data });   };    return (     <form onSubmit={handleSubmit(editProfile)}>       <img src={imagePreview} alt=""Profile Preview"" />       <label>Change profile picture</label>       <input {...register(""image"")} type=""file"" accept=""image/*"" />       <button>Save changes</button>     </form>   ); }  export default Profile; </code></pre>",,,true
"{'account_id': 13892015, 'reputation': 1, 'user_id': 10029745, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/uaPcj.jpg?s=256', 'display_name': 'Luiz Costa', 'link': 'https://stackoverflow.com/users/10029745/luiz-costa'}",False,0,1727101903,1727101903,79015081,79012702,CC BY-SA 4.0,<p>Took me too long to solve it and the answer was unexpectedly simple... I was importing a remnant <code>constants.jsx</code> file with a wrong route tree for when I was setting up <code>react-router-dom</code> in my entry-point file. I since moved that logic to what you see in App.jsx. The error was not even visible in the question in the first place and I'm sorry for asking without looking hard enough.</p> <p>Always check your entry-point file even if it's auto generated for you!</p>,,,true
"{'account_id': 18879539, 'reputation': 1, 'user_id': 13772248, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/222c223b0e012ff1dda2648aa575c412?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Sid Patel', 'link': 'https://stackoverflow.com/users/13772248/sid-patel'}",False,0,1727177164,1727043632,79012700,79012661,CC BY-SA 4.0,"<p>It seems like keeping track of the number of refreshes would be helpful here. The window's <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage"" rel=""nofollow noreferrer"">localStorage</a> property allows you to access a Storage object and the stored data is saved across browser sessions.</p> <pre><code>  if (isRefreshed) {     localStorage.setItem(       'refreshCount', Number(localStorage.getItem(""refreshCount"") || 0) + 1     );   }    return { wasPageRefreshed: Number(localStorage.getItem(""refreshCount"")) === 1 }; </code></pre> <p>Alternatively, you can store a boolean value in the localStorage that determines if the first refresh already happened.</p>",1727177164.0,,true
"{'account_id': 1262633, 'reputation': 23651, 'user_id': 1220550, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/G1osH.jpg?s=256', 'display_name': 'Peter B', 'link': 'https://stackoverflow.com/users/1220550/peter-b'}",False,1,1727045741,1727045741,79012745,79012661,CC BY-SA 4.0,"<p>Could it be that all you need is a variable that is initialized when the application is loaded, and which is changed to another value as soon as its value is used?</p> <p>Like this:</p> <pre class=""lang-typescript prettyprint-override""><code>let justRefreshed: boolean = true;  export function hasJustBeenRefreshed(): boolean {   const result: boolean = justRefreshed;   justRefreshed = false;   return result; } </code></pre> <p>Putting this in something like <code>RefreshHelper.ts</code> and importing the function where needed, might just do all you need it to do.</p>",,,true
"{'account_id': 4017884, 'reputation': 17, 'user_id': 3309300, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/f52733ad704e62640f11a97503e4b6a2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'user3309300', 'link': 'https://stackoverflow.com/users/3309300/user3309300'}",False,0,1727060689,1727060689,79013031,79012077,CC BY-SA 4.0,"<pre><code>  const addItem = useCallback((item: any) => { setSelectedItems((items) => {   const exist = items.findIndex(     (existingItem) => existingItem.name === item.name   );   if (exist === -1) {     return items.concat(item);   }   return items; }); </code></pre> <p>}, []); // try to put selectedItems : not working anymore</p>",,,true
"{'account_id': 4017884, 'reputation': 17, 'user_id': 3309300, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/f52733ad704e62640f11a97503e4b6a2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'user3309300', 'link': 'https://stackoverflow.com/users/3309300/user3309300'}",False,0,1727024905,1727024803,79012162,79012077,CC BY-SA 4.0,"<p>You should change as below:</p> <p>setSelectedItems((items) => [...items, item]);</p> <p>setState should always be a new object instead of mutating the original one.</p>",1727024905.0,,true
"{'account_id': 32721194, 'reputation': 1, 'user_id': 25433226, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/7795a3dd7948e90a13b1249a53b1ed46?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Yohann', 'link': 'https://stackoverflow.com/users/25433226/yohann'}",False,0,1727131013,1727022611,79012102,79011810,CC BY-SA 4.0,"<p>Have you tried scroll-smooth with Tailwind and are you using the latest version? Try this code:</p> <pre><code><div className=""flex space-x-4 px-4 py-8 overflow-x-auto snap-x snap-mandatory scrollbar-hide scroll-smooth""> </code></pre>",1727131013.0,,true
"{'account_id': 35406291, 'reputation': 586, 'user_id': 27184656, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/cWqspvCg.png?s=256', 'display_name': 'The Teabag Coder', 'link': 'https://stackoverflow.com/users/27184656/the-teabag-coder'}",True,2,1727032398,1727032398,79012400,79011810,CC BY-SA 4.0,"<p>Combining <code>overflow-x-auto</code> with <code>snap</code> on the same carousel container seems to break the scroll animation in Chrome.</p> <p>One way to fix this is by moving <code>overflow-x-auto</code> to the parent div.</p> <pre><code>    <div className=""w-full h-screen flex items-center justify-center bg-gray-100"">       <div className=""w-full max-w-3xl overflow-x-auto"">         <div className=""flex space-x-4 px-4 py-8 snap-x snap-mandatory scrollbar-hide"">           {items.map((item, index) => (             //rest of code.... </code></pre> <p>Playground: <a href=""https://stackblitz.com/edit/stackblitz-starters-vw5ksu?file=app%2Fpage.tsx"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/stackblitz-starters-vw5ksu?file=app%2Fpage.tsx</a></p>",,,true
"{'account_id': 24589621, 'reputation': 374, 'user_id': 18493710, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/i81lL.jpg?s=256', 'display_name': 'okaeiz', 'link': 'https://stackoverflow.com/users/18493710/okaeiz'}",False,1,1727014383,1727014383,79011820,79011801,CC BY-SA 4.0,"<p>I'd share the code rather than console warnings. But here's what I presume. You need to pass <code>onChange</code>.</p> <pre class=""lang-js prettyprint-override""><code>import React, { useState } from 'react';  function App() {   const [text, setText] = useState(''); // here's your state    const handleChange = (event) => {     setText(event.target.value); // you update the state as the user types   };    const updateText = () => {     setText('Updated Text'); // here you set a new value when a button is clicked   };    return (     <div>       <textarea         value={text} // Controlled component         onChange={handleChange} // you update state on change       />       <button onClick={updateText}>Update Text</button>     </div>   ); }  export default App;  </code></pre> <p>If you provide a value prop without <code>onChange</code>, the <code>textarea</code> becomes read-only, which is why you couldnât edit the content.</p>",,,true
"{'account_id': 10481688, 'reputation': 11, 'user_id': 7726514, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-QgIedeB5Hrw/AAAAAAAAAAI/AAAAAAAAAC4/oiKtH_qzHxw/photo.jpg?sz=256', 'display_name': 'Dennissnov', 'link': 'https://stackoverflow.com/users/7726514/dennissnov'}",False,0,1727163907,1727163907,79017510,79011694,CC BY-SA 4.0,"<p>you can use useGSAP, and scope the ref</p> <pre><code>const refContent = useRef(null); useGSAP(     () => {       if (!refContent.current) return;                gsap.set('.dots', {             visibility: 'hidden',             opacity: 0,         });          gsap.to('.dots', {             visibility: 'visible',             stagger: 0.1,             opacity: 1,         });     },     {         scope: refContent,         dependencies: [videos],     } ); return (     <div className=""content"" ref={refContent}>         {videos.map((_, i) => (             <span className=""dots"" key={i}>                 <span className=""progress"" />             </span>         ))}     </div> ); </code></pre>",,,true
"{'account_id': 7234429, 'reputation': 1825, 'user_id': 10489887, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/oTVVFJLA.jpg?s=256', 'display_name': 'mrconcerned', 'link': 'https://stackoverflow.com/users/10489887/mrconcerned'}",True,0,1727010864,1727010864,79011699,79011694,CC BY-SA 4.0,"<p>Might be because it does not find the <code>.dots</code> even videos are loaded. You may try to check if <code>.dots</code> are actually in DOM.</p> <pre><code>  useEffect(() => {     if (videos.length > 0) {       const dots = document.querySelectorAll('.dots');       if (dots.length > 0) {         setupTimelines();        }     }   }, [videos]); </code></pre>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",True,3,1727026044,1727026044,79012189,79011537,CC BY-SA 4.0,"<p><a href=""https://reactrouter.com/en/main/utils/create-routes-from-elements"" rel=""nofollow noreferrer""><code>createRoutesFromElements</code></a> (<em>and <a href=""https://reactrouter.com/en/main/utils/create-routes-from-children"" rel=""nofollow noreferrer""><code>createRoutesFromChildren</code></a></em>) is only a convenience utility function where you can pass JSX and it converts it to the <code>RouteObject[]</code> type used in the router configuration.</p> <blockquote> <p><code>createRoutesFromElements</code> is a helper that creates route objects from <code><Route></code> elements. It's useful if you prefer to create your routes as JSX instead of objects.</p> </blockquote> <p>To create a router you need to use one of the <code>createXRouter</code> functions. See <a href=""https://reactrouter.com/en/main/routers/picking-a-router"" rel=""nofollow noreferrer"">Picking a Router</a> for details.</p> <p>It appears you simply used the wrong function to create your router.</p> <p>Example creating a <code>BrowserRouter</code>:</p> <pre><code>import {   createBrowserRouter,   RouterProvider, } from ""react-router-dom"";  const router = createBrowserRouter(   {     path: ""/"",     element: <App />,     errorElement: <ErrorPage />,     children: [     {       path: ""/tasks"",       element: <MyTasksView />     },      {       path: ""/reviewtasks"",       element: <ReviewTasks />     },      {       path: ""/myapplications"",       element: <MyApplications />     },      {       path: ""/peerreviews"",       element: <PeerReviews />     },      {       path: ""/reviewapplications"",       element: <ReviewApplication />     }]   } )  createRoot(document.getElementById('root')).render(   <StrictMode>     <RouterProvider router={router} />   </StrictMode>, ); </code></pre> <p>For completion how the <code>createRoutesFromElements</code> is used see the following:</p> <pre><code>import {   createBrowserRouter,   createRoutesFromElements,   Route,   RouterProvider, } from ""react-router-dom"";  const router = createBrowserRouter(   createRoutesFromElements(     <Route path=""/"" element={<App />} errorElement={<ErrorPage />}>       <Route path=""tasks"" element={<MyTasksView />} />       <Route path=""reviewtasks"" element={<ReviewTasks />} />       <Route path=""myapplications"" element={<MyApplications />} />       <Route path=""peerreviews"" element={<PeerReviews />} />       <Route path=""reviewapplications"" element={<ReviewApplication />} />     </Route>   ), )  createRoot(document.getElementById('root')).render(   <StrictMode>     <RouterProvider router={router} />   </StrictMode>, ); </code></pre>",,,true
"{'account_id': 22875148, 'reputation': 26, 'user_id': 17017600, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/f51889f265fc2b780002aacdfd22914c?s=256&d=identicon&r=PG', 'display_name': 'Mohamed Sbaa', 'link': 'https://stackoverflow.com/users/17017600/mohamed-sbaa'}",True,1,1727004393,1727004393,79011523,79011387,CC BY-SA 4.0,"<p>first thing to do is to setup a page component in react and pass to it the user id like this :</p> <p><code><Route path=""/profile/:userid"" element={<UserProfile />} /></code></p> <p>second thing is in <code><UserProfile /></code> you need to grab that userId using useParams hook and send it with the request to flask :</p> <p>`import React, { useEffect, useState } from 'react'; import { useParams } from 'react-router-dom'; import axios from 'axios';</p> <pre><code>function UserProfile() {   const { userid } = useParams(); // Extract the 'userid' parameter from the URL   const [userData, setUserData] = useState(null);    useEffect(() => {     // Function to fetch user data from the backend API     const fetchUserData = async () => {       try {         const response = await axios.get(`/api/user/${userid}`); // Send GET request to Flask API         setUserData(response.data); // Store the response data in the state       } catch (error) {         console.error(""Error fetching user data:"", error);       }     };      fetchUserData();   }, [userid]); // This effect runs every time the 'userid' changes    if (!userData) {     return <div>Loading...</div>;   }    return (     <div>       <h1>User Profile</h1>       <p>Name: {userData.name}</p>       <p>Email: {userData.email}</p>       {/* Render other user info */}     </div>   ); }  export default UserProfile;` </code></pre> <p>third, this is you should setup the endpoint to accept the userId (with auth):</p> <pre><code>`from flask import Flask, jsonify  app = Flask(__name__)  # Example user data (in reality, you would fetch from a database) users = {     1: {""name"": ""John Doe"", ""email"": ""john@example.com""},     2: {""name"": ""Jane Smith"", ""email"": ""jane@example.com""}, }  @app.route('/api/user/<int:userid>', methods=['GET']) def get_user(userid):     user = users.get(userid)     if user:         return jsonify(user)     else:         return jsonify({""error"": ""User not found""}), 404  if __name__ == '__main__':     app.run(debug=True)` </code></pre> <p>that's if I get what you want</p>",,,true
"{'account_id': 22688355, 'reputation': 134, 'user_id': 16857618, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/10228225145398160/picture?type=large', 'display_name': 'Tim R. Jensen', 'link': 'https://stackoverflow.com/users/16857618/tim-r-jensen'}",False,1,1727000949,1727000949,79011419,79011387,CC BY-SA 4.0,"<p>Yes, you should make request from the frontend. The idea is that the client makes a request and the server serves.</p> <p>There are some choices available. You could make your own HTTP request. The API is there, so it's possible. But you'll probably want to use axios or some derivative of the fetch API. It's been awhile since I've been doing frontend, so I'm not in a position to suggest the best solution. In the old days, I found the package I needed and ran it against npm trends to assert my decision or find alternatives.</p>",,,true
"{'account_id': 23196850, 'reputation': 2155, 'user_id': 18169297, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/a9ed63a72f788e1c634e2d8db5219bd6?s=256&d=identicon&r=PG', 'display_name': 'Iterokun', 'link': 'https://stackoverflow.com/users/18169297/iterokun'}",False,0,1727086865,1727086865,79014200,79011196,CC BY-SA 4.0,"<p>When you trigger a build using this API Jenkins doesn't immediately start the build - instead it queues the request and tells the queue item URL. <a href=""https://stackoverflow.com/questions/45472604/get-jenkins-job-build-id-from-queue-id"">This post</a> might be helpful.</p>",,,true
"{'account_id': 35801021, 'reputation': 1, 'user_id': 27408306, 'user_type': 'unregistered', 'profile_image': 'https://www.gravatar.com/avatar/a87b8b7a455bbd61ead15ad6823a93bb?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Webdevp', 'link': 'https://stackoverflow.com/users/27408306/webdevp'}",False,0,1726993818,1726993818,79011214,79011166,CC BY-SA 4.0,<p>Try using an async function to wait for the data before performing the fn operation</p>,,,true
"{'account_id': 24589621, 'reputation': 374, 'user_id': 18493710, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/i81lL.jpg?s=256', 'display_name': 'okaeiz', 'link': 'https://stackoverflow.com/users/18493710/okaeiz'}",True,0,1726997249,1726997249,79011295,79011130,CC BY-SA 4.0,"<p>I got what the issue was.</p> <pre class=""lang-js prettyprint-override""><code>const rootReducer = combineReducers({ //I had to use this combiner   user: userReducer,   taskForm: taskFormReducer, });  const persistConfig = {   key: ""root"",   storage,   whitelist: [""user"", ""taskForm""], //here I have added the reducers };  const persistedReducer = persistReducer(persistConfig, rootReducer);  export const store = configureStore({   reducer: persistedReducer //I should have passed the combined persisted reducer   middleware: (getDefaultMiddleware) =>     getDefaultMiddleware({       serializableCheck: false,     }), });  export const persistor = persistStore(store); </code></pre>",,,true
"{'account_id': 35518659, 'reputation': 17, 'user_id': 27254454, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/XWhDSHsc.jpg?s=256', 'display_name': 'donny', 'link': 'https://stackoverflow.com/users/27254454/donny'}",False,0,1727056576,1727056576,79012941,79010871,CC BY-SA 4.0,"<p>Adding the Babel preset module:metro-react-native-babel-preset is essential for your React Native project. It allows Babel to transform your code correctly for the React Native environment, enabling support for JSX and modern JavaScript features.</p> <p>Hereâs how your Babel configuration should look:</p> <pre><code>module.exports = {     presets: ['module:metro-react-native-babel-preset'],     plugins: ['nativewind/babel'], }; </code></pre>",,,true
"{'account_id': 115610, 'reputation': 3284, 'user_id': 303484, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/oXVDm.jpg?s=256', 'display_name': 'Tony McCreath', 'link': 'https://stackoverflow.com/users/303484/tony-mccreath'}",False,0,1727037407,1727037407,79012569,79010772,CC BY-SA 4.0,"<p>Check the Rich Results Test More info section. You will see that you are blocking Googlebot from accessing a lot of JavaScript resources. I suspect that includes the one with your structured data code.</p> <p>Review your robots.txt file to make sure it does not disallow resources Google needs to add the structured data, and any other visible content.</p>",,,true
"{'account_id': 35797734, 'reputation': 1, 'user_id': 27406508, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5d0ea40159f67dbed541b80e95b2c088?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'chaitanya sase', 'link': 'https://stackoverflow.com/users/27406508/chaitanya-sase'}",False,0,1727341270,1726975371,79010822,79010687,CC BY-SA 4.0,"<p>To see the url with <code>/about</code> on web, have to use Route.</p> <p>Instead of element with function name, can use component with component name.</p> <pre><code><Route path=""/about"" element={<About/>} /> <Route path=""/about"" component={About} /> </code></pre>",1727341270.0,,true
"{'account_id': 35796503, 'reputation': 1, 'user_id': 27405943, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/032ca35fe631dbcf042c46420ee9a5a1?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Jakob Bister', 'link': 'https://stackoverflow.com/users/27405943/jakob-bister'}",False,0,1727301158,1727301158,79024895,79010687,CC BY-SA 4.0,"<p>Made a new gatsby build but kept everything the same. This site works as intended and doesn't 404. As of now, I don't know why the issue occurred but am able to keep progressing.</p>",,,true
"{'account_id': 22688355, 'reputation': 134, 'user_id': 16857618, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/10228225145398160/picture?type=large', 'display_name': 'Tim R. Jensen', 'link': 'https://stackoverflow.com/users/16857618/tim-r-jensen'}",False,0,1726971225,1726971225,79010755,79010687,CC BY-SA 4.0,"<p>I do not know that framework, but with a quick glance it looks opinionated. If you don't follow their dogma, things probably aren't going to work. Per example, I noticed that the framework serves anything in the <code>pages</code> folder. From your 404 response, it seems that it goes up a level to find <code>about.js</code>. Can you confirm that <code>about.js</code> is located in the <code>pages</code> folder?</p>",,,true
"{'account_id': 30187962, 'reputation': 86, 'user_id': 23134876, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/9TS3t.jpg?s=256', 'display_name': 'pamquale', 'link': 'https://stackoverflow.com/users/23134876/pamquale'}",False,1,1727011082,1727011082,79011707,79010339,CC BY-SA 4.0,"<p><strong>What helped me:</strong></p> <p>I managed to solve the issue by switching to <strong>WebStorm</strong>. The <strong>Next.js debug configuration</strong> works well there, and breakpoints are successfully hit.</p> <p>However, Iâm still looking for a solution to get this working in <strong>VS Code</strong>. Hereâs what Iâve tried so far that <strong>didnât work</strong>:</p> <ol> <li>Followed the steps in <a href=""https://stackoverflow.com/questions/77251927/breakpoint-not-getting-hit-in-vscode-8-3-0-with-next-js-debugger-config"">this article</a> for debugging Next.js in VS Code.</li> <li>Tried creating a <strong>web app</strong> configuration in <code>launch.json</code> instead of the Node.js configuration, but the breakpoints still donât get hit.</li> </ol> <p>The question remains open for how to get breakpoints working correctly in <strong>VS Code</strong> for Next.js. Any insights would be appreciated!</p>",,,true
"{'account_id': 35617609, 'reputation': 9, 'user_id': 27309149, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/aa18540b69e1bc3867ac7a77ed3d47f6?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Vishal Pallikonda', 'link': 'https://stackoverflow.com/users/27309149/vishal-pallikonda'}",True,0,1726976841,1726976841,79010844,79010291,CC BY-SA 4.0,"<p>So I found out that I was rendering this AddToCart component in two different places mistakenly. One in the App.js file with the intention to make it render on all pages. The other on the product page which is actually holding the context of the current page route. Removed the former duplicate from the App.js which leaves us with the actual button and it is now working as expected.<a href=""https://i.sstatic.net/nudNVonP.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/nudNVonP.png"" alt=""enter image description here"" /></a></p>",,,true
"{'account_id': 35406291, 'reputation': 586, 'user_id': 27184656, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/cWqspvCg.png?s=256', 'display_name': 'The Teabag Coder', 'link': 'https://stackoverflow.com/users/27184656/the-teabag-coder'}",False,0,1726972387,1726971940,79010762,79010252,CC BY-SA 4.0,"<blockquote> <p>isLoading becomes true when there is an ongoing request and data is not loaded yet. <a href=""https://swr.vercel.app/docs/advanced/understanding#combining-with-isloading-and-isvalidating-for-better-ux"" rel=""nofollow noreferrer"">link</a></p> </blockquote> <p>In other words, <code>isLoading</code> is used only when there is no data in cache (for each specific key)</p> <p>One way to make SWR use <code>isLoading</code> again is to clear the cache without triggering a revalidation (i.e., without calling the API to set new data). In the next render, since no cache is available, SWR will follow its <a href=""https://swr.vercel.app/docs/advanced/understanding#state-machine"" rel=""nofollow noreferrer"">pattern</a> and use <code>isLoading</code>.</p> <pre><code><input     type=""checkbox""     onChange={(e) => {       setFilter((prev) => ({ ...prev, showCompleted: e.target.checked }));       mutate(undefined, { revalidate: false });     }}     checked={filter.showCompleted} /> </code></pre> <p>Wokring sample: <a href=""https://stackblitz.com/edit/vitejs-vite-jcd7j7?file=src%2FApp.jsx"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/vitejs-vite-jcd7j7?file=src%2FApp.jsx</a></p>",1726972387.0,,true
"{'account_id': 35371107, 'reputation': 103, 'user_id': 27165024, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/le5aXa9F.jpg?s=256', 'display_name': 'Jason T Szabo', 'link': 'https://stackoverflow.com/users/27165024/jason-t-szabo'}",False,0,1727061948,1727061212,79013042,79009772,CC BY-SA 4.0,"<p>Your code example does not contain any mistakes. When you use Clerk ""control components"" like <code><SignedOut></code> and <code><SignedIn></code> those components must be rendered client-side and must wait for the component logic to check the session data in the cookie attached to the request before either can render. Other parts of the page may be rendered server-side, thus they are visible much sooner. If you want the entire page to render at the same time you could use a Clerk hook like <code>useAuth</code>, which always returns an <code>isLoaded</code> property you can use to wait until it is <code>true</code> to render the entire page, but then your entire page will have a delay in rendering, which can make your app seem sluggish and is not good for SEO. The common solution to your issue is to instead render a loading indicator/spinner in place of the control components until <code>isLoaded</code> is <code>true</code>.</p> <p><a href=""https://clerk.com/docs/references/react/use-auth#how-to-use-the-use-auth-hook"" rel=""nofollow noreferrer"">https://clerk.com/docs/references/react/use-auth#how-to-use-the-use-auth-hook</a></p>",1727061948.0,,true
"{'account_id': 21458191, 'reputation': 1, 'user_id': 15809452, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/CbUhPOsr.jpg?s=256', 'display_name': 'Rohit', 'link': 'https://stackoverflow.com/users/15809452/rohit'}",False,0,1726937823,1726937823,79010068,79009772,CC BY-SA 4.0,"<p>You can use the functions provided by clerk instead of using their components.</p> <pre><code>import { LogoIcon } from ""@/components/icons/SidebarIcons""; </code></pre> <p>import Signup from ""@/components/auth/Signup"";</p> <p>// import { useSignUp } from ""@clerk/nextjs""; hook from cleark which gives use the signup function // const { isLoaded, signUp, setActive } = useSignUp();</p> <p>export default function SignUpPage() { return (             ); }</p>",,,true
"{'account_id': 22226004, 'reputation': 16196, 'user_id': 16462950, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gjy1a31kVAiCn_hJAWq34vNkEHuXwBWbuL00Eakf4g=k-s256', 'display_name': 'Heiko Thei&#223;en', 'link': 'https://stackoverflow.com/users/16462950/heiko-thei%c3%9fen'}",False,1,1726942192,1726942192,79010199,79009675,CC BY-SA 4.0,"<p>Refresh token handling is part of the overall authentication procedure in the backend, outlined in the following flow chart (press ""Run code snippet"" to see the chart).</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script type=""module"" src=""https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.esm.min.mjs""></script> <pre class=""mermaid""> flowchart TD     A[Receive request with cookies accessToken and refreshToken] --> B{Validate accessToken}     B -->|valid| C[Process request]     B -->|invalid| D{Validate refresh token}     subgraph refreshToken.js     D -->|valid| E[Issue new accessToken]     D -->|invalid| F[Error 'log in again']     end     E --> C </pre></code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 29810913, 'reputation': 1, 'user_id': 22846360, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocJwBGJTNPymMinSAnPRSoWtFCRIy3exXkF2vNOHamQe=k-s256', 'display_name': 'angualr dev', 'link': 'https://stackoverflow.com/users/22846360/angualr-dev'}",False,-1,1726926069,1726926069,79009694,79009531,CC BY-SA 4.0,<blockquote> <p>server { listen 80 default_server; listen [::]:80 default_server; server_name ahammed.online; root var/www/html; index index.html; location / { try_files $uri $uri/ /index.html; } }</p> </blockquote>,,,true
"{'account_id': 26225745, 'reputation': 1, 'user_id': 19902472, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RmjHh.jpg?s=256', 'display_name': 'Dexter', 'link': 'https://stackoverflow.com/users/19902472/dexter'}",False,0,1728929188,1728929188,79087258,79009524,CC BY-SA 4.0,<p>I fixed that problem by setting to html tag <code>position: fixed;</code> Like:</p> <pre><code>html {   position: fixed;   height: auto !important; } </code></pre>,,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",False,1,1727067571,1727067232,79013200,79009475,CC BY-SA 4.0,"<p><strong>The content type of formData is multipart/form-data. This is the point to be kept while coding for it.</strong></p> <p>Please see below a sample code <em>(app and server)</em> which does the following actions.</p> <p><em>Please start reading this by seeing the output screens enclosed under the section ""Test run"".</em></p> <pre><code>// a) The React app provides a form.  // b) The app takes two sample inputs.  // c) It uses formData object to pass values to the server.   // d) The server receives the same.  // e) It sends back the values in its response  // f) The client app receives the same and prints it in the console. </code></pre> <p><strong>The important points to note here are the following:</strong></p> <p>a) Each input element in the form must have name attribute, otherwise the FormData constructor will fail to create an object. You can read on it from <a href=""https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest_API/Using_FormData_Objects"" rel=""nofollow noreferrer"">here</a>.</p> <p>b) When the FormData is transferred to server, the content-type will be automatically set by the browser to <em>multipart/form-data</em>. Therefore it does not need to be specified in the fetch request. This has been demoed in the sample code by printing the same at the server console. Please see and confirm the respective output shown in the Test run section below.</p> <p>c) Since the content type is <em>multipart/form-data</em>, the server needs to parse the incoming data using the middleware destined for it. Multer is the middleware demoed in this sample code. Please note that none of the built-in middleware in Express can handle this content type.</p> <p>d) The call <em>upload.any()</em> is responsible to create a req.body object which will include all the text fields in the incoming data. For more about Multer, please see <a href=""https://www.npmjs.com/package/multer"" rel=""nofollow noreferrer"">here</a></p> <p><strong>App.js (React)</strong></p> <pre><code>export default function App() {    function handleSubmit(e) {     e.preventDefault();     const formData = new FormData(e.target);      fetch('http://localhost:4000/newdata', {       method: 'POST',       body: formData,     })       .then((response) => {         if (!response.ok) {           throw new Error(`Response status ${response.status}`);         } else {           return response.text();         }       })       .then((data) => console.log(data))       .catch((error) => console.log(error));   }    return (     <form onSubmit={handleSubmit} name=""formdata"" id=""formdata"">       <label>Input 1</label>       <input type=""text"" name=""input1"" id=""input1""></input>       <br />       <label>Input 2</label>       <input type=""text"" name=""input2"" id=""imput2""></input>       <br />       <button type=""submit"">Submit data</button>     </form>   ); } </code></pre> <p><strong>server.js (Express)</strong></p> <pre><code>const express = require('express'); const cors = require('cors'); const upload = require('multer')();  const app = express(); app.use(cors());  app.post('/newdata', upload.any(), (req, res) => {   console.log(req.get('content-type'));   const { input1, input2 } = req.body;   res.send(`data received : ${input1} , ${input2}`); });  app.listen(4000, () => console.log('l@4000')); </code></pre> <p><strong>Test run</strong></p> <p><strong>React App:</strong></p> <p><a href=""https://i.sstatic.net/J3gn1e2C.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/J3gn1e2C.png"" alt=""React app"" /></a></p> <p><strong>Express API received the data, and responded to the client, the client printed it in the console</strong></p> <p><a href=""https://i.sstatic.net/UmzXg5uE.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/UmzXg5uE.png"" alt=""Express API receives the data"" /></a></p> <p><strong>The content type set by the Browser which printed at the server console</strong></p> <p><a href=""https://i.sstatic.net/5FlYUlHO.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/5FlYUlHO.png"" alt=""enter image description here"" /></a></p>",1727067571.0,,true
"{'account_id': 26837925, 'reputation': 19, 'user_id': 20424912, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/6fbc7c423fbd43c7273d318bfeaca26f?s=256&d=identicon&r=PG', 'display_name': 'Adarsh T', 'link': 'https://stackoverflow.com/users/20424912/adarsh-t'}",False,1,1726925717,1726923640,79009618,79009475,CC BY-SA 4.0,"<p>Add the body parser middleware or use express.json middleware before the route</p> <pre><code>const express = require(""express""); const knex = require(""knex""); const cors = require(""cors""); const bodyParser = require(""body-parser"");  const app = express(); const port = 3001;  app.use(bodyParser.json())  app.post(""/api/newMember"", (req, resp) => {   const { id, firstname, lastname } = req.body;    console.log(req.body);    const newMember = {     id: id,     firstname: firstname,     lastname: lastname,   };    db(""members"")     .insert(newMember)     .then((res) => {       resp.send(res);     })     .catch((err) => {       console.log(err);       return;     }); });  app.listen(port, () => {   console.log(""Server listening on port: "" + port); }); </code></pre>",1726925717.0,,true
"{'account_id': 12869869, 'reputation': 1702, 'user_id': 9308731, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d8b4b7b6de3ba2e1a3750f3cb9ed0fa5?s=256&d=identicon&r=PG', 'display_name': 'CrackerKSR', 'link': 'https://stackoverflow.com/users/9308731/crackerksr'}",False,0,1726911019,1726911019,79009227,79009226,CC BY-SA 4.0,"<p>DataGrid component has two props for this:</p> <p><code>rowSelectionModel</code>: This prop defines the currently selected row IDs. Pass your selectedRows state variable to it.</p> <p><code>onRowSelectionModelChange</code>: This callback function is triggered whenever the selection changes. Use it to update your selectedRows state based on your custom logic:</p> <p>So you just have to add ids of rows to rowSelectionModel which will automaticaly select the rows if you have selection check boxes then it will be checked automatically. and Similarly remove ids of rows which should be deselected.</p> <p>No rows selection means the state</p> <h4>Working example of basic logics to select/deselect rows:</h4> <pre><code>import React, { useState, useEffect } from 'react'; import { DataGrid } from '@mui/x-data-grid'; // version ^7.15.0 import { Button, Box } from '@mui/material';  function DataGridDemo() {   const [rows, setRows] = useState([]);   const [selectedRows, setSelectedRows] = useState([]);    useEffect(() => {     const fetchedData = [       { id: 1, name: 'John Doe' },       { id: 2, name: 'Jane Smith' },       { id: 3, name: 'Alice Johnson' },       { id: 4, name: 'Bob Brown' }     ];     setRows(fetchedData);   }, []);    const clearRowSelection = () => setSelectedRows([]);    const selectEvenRows = () => {     const evenRows = rows.filter(({id}) => (id) % 2 === 0).map(row => row.id);     setSelectedRows(evenRows);   };    const deselectEvenRows = () => {     const remainingRows = selectedRows.filter((id) => id % 2 !== 0);     console.log({remainingRows})     setSelectedRows(remainingRows);   };    return (     <Box>       {selectedRows+""""}       <DataGrid         rows={rows}         columns={[{ field: 'id' }, { field: 'name' }]}         checkboxSelection         rowSelectionModel={selectedRows}         onRowSelectionModelChange={(newSelection) => setSelectedRows(newSelection)}       />       <Button onClick={clearRowSelection}>Clear Selections</Button>       <Button onClick={selectEvenRows}>Select Even Rows</Button>       <Button onClick={deselectEvenRows}>Deselect Even Rows</Button>     </Box>   ); }  export default DataGridDemo; </code></pre> <p>You can use with your custom logics like:</p> <pre><code>  useEffect(() => {     if (someCondition) {       setSelectedRows([rowId1, rowId2]); // Select specific rows     } else {       setSelectedRows([]);      }   }, [someCondition]);  </code></pre>",,,true
"{'account_id': 25177319, 'reputation': 1445, 'user_id': 19019306, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GiNFsfh_5K89J61uHvety2W8Q7Y2oqYUaWoSALJ=k-s256', 'display_name': 'Ethan', 'link': 'https://stackoverflow.com/users/19019306/ethan'}",False,0,1727311874,1727311874,79025164,79008849,CC BY-SA 4.0,"<p><a href=""https://playwright.dev/docs/emulation"" rel=""nofollow noreferrer"">According to the playwright docs</a> you need to emulate the device you want to use. Playwright has a built in helper for this in <code>@playwright/test</code>. You can add the following to your config for every device you want to test</p> <h2><code>playwright.config.ts</code></h2> <pre><code>import { defineConfig, devices } from '@playwright/test'; // import devices  export default defineConfig({   projects: [     {       name: 'chromium',       use: {         ...devices['Desktop Chrome'],       },     },     {       name: 'Mobile Safari',       use: {         ...devices['iPhone 13'],       },     },   ], }); </code></pre> <p>Alternatively, you can directly set the viewport in your tests:</p> <pre><code>import { test, expect } from '@playwright/test';  test.use({   viewport: { width: 1600, height: 1200 }, });  test('my test', async ({ page }) => {   // ... }); </code></pre>",,,true
"{'account_id': 18925446, 'reputation': 21, 'user_id': 13808680, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/584f237d652cac7ba6b607666c264d08?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Enthusiastic Amateur', 'link': 'https://stackoverflow.com/users/13808680/enthusiastic-amateur'}",False,0,1726907460,1726907460,79009096,79008796,CC BY-SA 4.0,"<p>If you want to display an image from base64 data, then you need to have the following information in your src information before the actual data:</p> <p><code>src=""data:image/jpeg;charset=utf-8;base64,{your-data-here}</code></p> <p>On a side note, why have you duplicated the multiple images src in a UseState hook and as a normal array?</p>",,,true
"{'account_id': 7426710, 'reputation': 49809, 'user_id': 5648954, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2noo3.jpg?s=256', 'display_name': 'Nick Parsons', 'link': 'https://stackoverflow.com/users/5648954/nick-parsons'}",True,0,1726890335,1726890335,79008727,79008693,CC BY-SA 4.0,"<p>In React, you should use state to define how your UI renders, not DOM methods (<code>getElementsByClassName()</code>, <code>.classList.add()</code>, etc.). The idea is, if you want to change your UI, you can change your state, which then rerenders your UI accordingly. To achieve what you're trying to do, you should first start with defining your buttons as objects in an array which you can then <code>.map()</code> over in your JSX. When you click on a button, you can use the object's id to mark the currently ""active"" button (stored in state), which you can use to determine if your <code>clicked</code> class gets applied to the mapped button:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const { useState } = React; const times = [   {id: 0, time: ""9:30 am""},   {id: 1, time: ""9:00 am""},   {id: 2, time: ""8:30 am""},   {id: 3, time: ""8:00 am""} ];  const App = () => {   const [activeButton, setActiveButton] = useState(-1); // -1 to indicate that there are no active buttons      const handleClick = (id) => {     setActiveButton(currId => currId === id ? -1 : id);   }      return <React.Fragment>     {       times.map(({id, time}) =>          <button            key={id}           className={""time-button"" + (id === activeButton ? "" clicked"" : """")}           onClick={() => handleClick(id)}         >{time}</button>)     }   </React.Fragment>; }  ReactDOM.createRoot(document.body).render(<App />);</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.clicked {   background-color: orange; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.2.0/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.2.0/umd/react-dom.production.min.js""></script></code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 461423, 'reputation': 29040, 'user_id': 863110, 'user_type': 'registered', 'accept_rate': 75, 'profile_image': 'https://www.gravatar.com/avatar/3d721f4c46282afc254f3ea0cd05df30?s=256&d=identicon&r=PG', 'display_name': 'Mosh Feu', 'link': 'https://stackoverflow.com/users/863110/mosh-feu'}",True,1,1727075241,1727075241,79013506,79008398,CC BY-SA 4.0,"<p>Add <a href=""https://mui.com/material-ui/api/outlined-input/#outlined-input-prop-notched"" rel=""nofollow noreferrer""><code>notched</code></a> to the <code><Select /></code> component</p> <pre><code><FormControl fullWidth sx={{ mt: 2 }}>   <InputLabel shrink={true} id=""yesno-label"">     {label}   </InputLabel>   <Select     notched     fullWidth     labelId=""yesno-label""     id={name}     name={name}     label={label}     value={value}     onChange={handleChange}   >     <MenuItem value=""""></MenuItem>     <MenuItem value=""true"">Yes</MenuItem>     <MenuItem value=""false"">No</MenuItem>   </Select> </FormControl> </code></pre> <p><a href=""https://stackblitz.com/edit/react-e5srhk?file=Demo.tsx"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/react-e5srhk?file=Demo.tsx</a></p> <p><a href=""https://github.com/mui/material-ui/issues/21394#issuecomment-1750711056"" rel=""nofollow noreferrer"">Source</a></p>",,,true
"{'account_id': 13984567, 'reputation': 21, 'user_id': 10099991, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/65eGIDpB.jpg?s=256', 'display_name': 'Simar Rajput', 'link': 'https://stackoverflow.com/users/10099991/simar-rajput'}",False,0,1727872619,1727872619,79046782,79008346,CC BY-SA 4.0,"<p>You can add regex here:</p> <pre><code>const handleInputChange = (text) => {     // Use a regular expression to match the valid format (2 decimal places)     const regex = /^\d*\.?\d{0,2}$/;      // Check if the input matches the regex     if (regex.test(text)) {         setDisplayValue(text);     } }; </code></pre> <p>// Your TextInput component</p> <pre><code><TextInput     value={displayValue}     onChangeText={handleInputChange}     style={styles.input}     keyboardType=""decimal-pad""     selection={{         start: displayValue.length,         end: displayValue.length,     }} /> </code></pre> <p>The handleInputChange function checks if the new input matches the regex. If it does, it updates the state with the new value. If it doesnât, it simply ignores it, effectively preventing any invalid input.</p> <p>I hope this will work.</p>",,,true
"{'account_id': 4687875, 'reputation': 83797, 'user_id': 3794812, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/91da5cf982069e22d3bd0b514dfb45e2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Nicholas Tower', 'link': 'https://stackoverflow.com/users/3794812/nicholas-tower'}",False,1,1726871672,1726871267,79008408,79008225,CC BY-SA 4.0,"<blockquote> <p>The handleContactClick function is expected to be deleted from memory when the UserDetail component function ends</p> </blockquote> <p>It will be garbage collected once nothing is referring to it any more. But you've passed it into a <code><UserProfileCard></code>, which has presumably passed it into the <code>onClick</code> of some dom element like a <code><button></code>, which has then made a subscription for the click event, which has saved a reference to your function so it knows what to call when the click happens.</p> <p>In all likelyhood, this will continue to be the case until <code>UserDetail</code> renders again or unmounts. At that point, the event listener unsubscribes.  Assuming nothing else is still keeping a reference to the function, it can now get cleaned up.</p>",1726871672.0,,true
"{'account_id': 35406291, 'reputation': 586, 'user_id': 27184656, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/cWqspvCg.png?s=256', 'display_name': 'The Teabag Coder', 'link': 'https://stackoverflow.com/users/27184656/the-teabag-coder'}",True,1,1726881744,1726875412,79008511,79008089,CC BY-SA 4.0,"<h5>1. the <code>keyDown</code> event handler is depends on states like <code>desks</code> and <code>currentDesk</code>, but you only register it at component mount which means those dependencies mentioned won't get renewed inside the function scope.</h5> <p>move the event registration in another <code>useEffect</code> with those dependencies</p> <pre><code>useEffect(() => {     window.addEventListener(""keydown"", keyDown);     return () => {       window.removeEventListener(""keydown"", keyDown);     }; }, [currentDesk, desks, editMode]); </code></pre> <h5>2. Similar issues by using a <code>state</code> to store components can cause stale closure <a href=""https://stackoverflow.com/questions/62912502/can-i-put-react-component-inside-state"">link1</a> <a href=""https://javascript.plainenglish.io/stale-closures-in-react-afb0dda37f0b"" rel=""nofollow noreferrer"">link2</a></h5> <p>don't use this state</p> <pre><code>const [deskComponents, setDeskComponents] = useState(null); </code></pre> <p>Use this function directly</p> <pre><code><React.Fragment>{buildDesks()}</React.Fragment> </code></pre> <h5>3. <a href=""https://react.dev/reference/react/useState#avoiding-recreating-the-initial-state"" rel=""nofollow noreferrer"">Avoiding recreating the initial state</a>. In your case its <code>size</code> in <code>desks.js</code></h5> <p>Switch to <code>useMemo</code></p> <pre><code>const size = useMemo(() => {     //logic here }, [desk]); </code></pre> <p>The math and dragdrop function have issues as well but for the scope of this question I won't touch them.</p> <p>Working codesandbox: <a href=""https://codesandbox.io/p/sandbox/cranky-driscoll-4wpxc6?file=%2Fsrc%2FDesks.js%3A41%2C33"" rel=""nofollow noreferrer"">https://codesandbox.io/p/sandbox/cranky-driscoll-4wpxc6?file=%2Fsrc%2FDesks.js%3A41%2C33</a></p>",1726881744.0,,true
"{'account_id': 30959935, 'reputation': 26, 'user_id': 23775487, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/166a499cbb3fae65dd078f8cb026dab2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Youssef Halim', 'link': 'https://stackoverflow.com/users/23775487/youssef-halim'}",True,1,1726966966,1726860126,79008032,79007922,CC BY-SA 4.0,"<p>The problem is the the <code>height</code> property you specify is set to the content height and there's an additional 4px for the input (padding, border).</p> <p>You can fix that using one of the following solutions.</p> <h3>Solution 1</h3> <p>Just specify <code>box-sizing</code> mode in your CSS to specify that the height should be set to the whole element.</p> <pre><code>* {   box-sizing: border-box; } </code></pre> <h3>Solution 2 (not preferred, though)</h3> <p>By using <code>calc()</code> in CSS, you can specify the height to be:</p> <pre><code>input {    calc(8vh - 4px); } </code></pre>",1726966966.0,,true
"{'account_id': 27371279, 'reputation': 638, 'user_id': 20877284, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/fYDiC.jpg?s=256', 'display_name': 'Youth Dream', 'link': 'https://stackoverflow.com/users/20877284/youth-dream'}",False,1,1726858776,1726858776,79007980,79007922,CC BY-SA 4.0,"<p>The issue related to the <strong>iPhone 12 Mini's</strong> scaller screen size and potentially how it handles the <strong>vh</strong> unit. You know, <strong>vh</strong> unit refers to the viewport height and on mobile devices, the viewport height can behave a little differently due t the address bar of browser and safe area insets. To solve the issue, I think you can use <strong>px</strong> instead of <strong>vh</strong>.</p> <p>I provide updated code.</p> <pre><code>input {   background-color: var(--sub-alt-color);   border: 1px solid var(--sub-color);   color: var(--text-color);   border-radius: 5px;   padding-left: 20px;   width: 65.5%;   max-width: 65.5%;   min-height: 60px; // Changed vh to px   height: 60px; // Changed vh to px   font-size: 18px;   outline: none;   transition: border-color 0.3s ease; }  .timer {   width: 14.5%;   display: flex;   user-select: none;   height: 60px; // Changed vh to px   min-height: 60px; // Changed vh to px   flex-shrink: 0;   align-items: center;   justify-content: center;   background-color: var(--sub-alt-color);   border-radius: 5px; } .reset {   width: 14.5%;   display: flex;   height: 60px; // Changed vh to px   align-items: center;   min-height: 60px; // Changed vh to px   flex-shrink: 0;   justify-content: center;   background-color: var(--sub-alt-color);   border-radius: 5px;   cursor: pointer; } </code></pre> <p>Hope it helps you.</p>",,,true
"{'account_id': 30959935, 'reputation': 26, 'user_id': 23775487, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/166a499cbb3fae65dd078f8cb026dab2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Youssef Halim', 'link': 'https://stackoverflow.com/users/23775487/youssef-halim'}",False,0,1726966626,1726857885,79007940,79007792,CC BY-SA 4.0,"<p>To manage pagination values in <code>@tanstack/react-table</code>, you have to be using setters and getters.</p> <p>Start with an <code>InitialState</code> object with preferred values, then use getters and setters for managing it through the code.</p> <p>So your code will be like this for the pagination</p> <pre><code>const { getState, setPageSize } = table;  // Destructure pageIndex and pageSize from the table's state const { pageIndex, pageSize } = getState();  // Handler function to update the page size const pageSizeHandler = (n: number) => {   setPageSize(n); }; </code></pre>",1726966626.0,,true
"{'account_id': 9045791, 'reputation': 2896, 'user_id': 6738168, 'user_type': 'registered', 'accept_rate': 57, 'profile_image': 'https://www.gravatar.com/avatar/ea94392a799573fa6e6c3293c7da4521?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'David Henry', 'link': 'https://stackoverflow.com/users/6738168/david-henry'}",True,0,1726894102,1726894102,79008783,79007792,CC BY-SA 4.0,"<p>I had to add manualPagination for this to work.</p> <pre><code>const table = useReactTable({   data,   columns,   getCoreRowModel: getCoreRowModel(),   onRowSelectionChange: setRowSelection,   pageCount: Math.ceil(count / pagination.pageSize),   onPaginationChange: setPagination,   getPaginationRowModel: getPaginationRowModel(),   manualPagination: true, // added   state: {     rowSelection,     pagination,   }, }); </code></pre>",,,true
"{'account_id': 9713609, 'reputation': 289, 'user_id': 7204691, 'user_type': 'registered', 'accept_rate': 40, 'profile_image': 'https://lh4.googleusercontent.com/-O44plazlBEk/AAAAAAAAAAI/AAAAAAAAA-g/QoDYxoqqIz0/photo.jpg?sz=256', 'display_name': 'Mathieu Rousseau', 'link': 'https://stackoverflow.com/users/7204691/mathieu-rousseau'}",False,0,1726862332,1726862332,79008119,79007619,CC BY-SA 4.0,"<p>Apparently this is because of the <code>root</code> option in the <code>vite.config.ts</code>. This is not necessary anyway, so I removed it and it works now.</p>",,,true
"{'account_id': 35406291, 'reputation': 586, 'user_id': 27184656, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/cWqspvCg.png?s=256', 'display_name': 'The Teabag Coder', 'link': 'https://stackoverflow.com/users/27184656/the-teabag-coder'}",True,1,1726884665,1726884665,79008652,79007392,CC BY-SA 4.0,"<p>One way to solve this is to use <code>useContext</code> <a href=""https://react.dev/reference/react/useContext"" rel=""nofollow noreferrer"">link</a></p> <p>Create a <code>provider</code> in <code>BoardContainer</code></p> <pre><code>export const SendPromptContext = createContext<Function>(() => {});  const [selectedPrompt, setSelectedPrompt] = useState('initial prompt'); const sendPrompt = (prompt: string) => {   setSelectedPrompt(prompt); };  <SendPromptContext.Provider value={sendPrompt}>   <div>{selectedPrompt}</div>   {children} </SendPromptContext.Provider> </code></pre> <p>Subscribe to the <code>context</code> and get <code>sendPrompt</code> in your <code>client side</code> components like this:</p> <pre><code>const sendPrompt = useContext(SendPromptContext); </code></pre> <p>Working sample: <a href=""https://stackblitz.com/edit/stackblitz-starters-yqbyrm?file=app%2Flayout.tsx"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/stackblitz-starters-yqbyrm?file=app%2Flayout.tsx</a></p>",,,true
"{'account_id': 27123380, 'reputation': 1, 'user_id': 20666807, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu07ROmYD_t2-7G9afSRgiTKBFOYP_C4QMBLYVXK4Q=k-s256', 'display_name': 'Ayomide Emmanuel Akintan', 'link': 'https://stackoverflow.com/users/20666807/ayomide-emmanuel-akintan'}",False,0,1726848627,1726848627,79007506,79007392,CC BY-SA 4.0,<p>You'll use a callback function... <code><ChatBlock prompt={selectedPrompt} setSelectedPrompt={setSelectedPrompt} /></code> Then for the prop in chat block component itself... <code>setSelectedPrompt: React.Dispatch<React.SetStateAction<string>>;</code> Then for the place you're using it in your chat block code... <code>onClick={() => setSelectedPrompt('prompt1')}</code></p>,,,true
"{'account_id': 12182030, 'reputation': 541, 'user_id': 8893188, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-_9-qTLP518o/AAAAAAAAAAI/AAAAAAAAAB8/Hj6HSzvs6ns/photo.jpg?sz=256', 'display_name': 'Anum', 'link': 'https://stackoverflow.com/users/8893188/anum'}",True,1,1726931418,1726931418,79009856,79007262,CC BY-SA 4.0,"<p>Yes, there is a practical difference between these two approaches:</p> <h3>1. <strong><code>useTranslation()</code> from <code>react-i18next</code>:</strong></h3> <pre class=""lang-js prettyprint-override""><code>import { useTranslation } from 'react-i18next';  const { t } = useTranslation(); </code></pre> <ul> <li><strong>React Context</strong>: This hook is designed for React components. It ensures that the <code>t</code> function is bound to the current React context, which means it takes care of context-specific language settings, like the current language or namespace that may change during the lifecycle of your application.</li> <li><strong>Automatic updates</strong>: If the language is changed using <code>i18next.changeLanguage()</code>, the component will automatically re-render with the new translations.</li> <li><strong>Namespaces</strong>: If your project uses different namespaces for translation (e.g., <code>'common'</code>, <code>'footer'</code>), the hook provides flexibility in switching between them at the component level.</li> <li><strong>SSR Support</strong>: This method is optimal for server-side rendering (SSR) and can ensure that translations are loaded on both server and client-side correctly.</li> </ul> <h3>2. <strong>Direct import from <code>i18next</code>:</strong></h3> <pre class=""lang-js prettyprint-override""><code>import { t } from 'i18next'; </code></pre> <ul> <li><strong>No React Integration</strong>: This approach directly uses the <code>i18next</code> instance. It doesn't have any connection to the React context, so it won't re-render components when the language changes.</li> <li><strong>Static translation</strong>: The <code>t</code> function is static and wonât trigger re-renders if the language changes. It's useful when you need translations outside of a React component or in non-React code.</li> <li><strong>Namespaces and Context</strong>: Since it doesn't integrate with Reactâs context, you may need to manually handle things like setting or switching namespaces and ensuring translations are updated.</li> </ul> <h3>In summary:</h3> <ul> <li>Use <code>useTranslation()</code> in React components for dynamic translations that update when language changes.</li> <li>Use the direct <code>t</code> import when you're outside of React components or when you don't need the component to re-render on language change.</li> </ul>",,,true
"{'account_id': 25534002, 'reputation': 26, 'user_id': 19321450, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b9b43ddec2622a3757290a1fe9094eba?s=256&d=identicon&r=PG', 'display_name': 'Jacob1507', 'link': 'https://stackoverflow.com/users/19321450/jacob1507'}",False,0,1726922660,1726922093,79009573,79007228,CC BY-SA 4.0,"<p>I use <code>react-native-dotenv</code> with mix of <code>EXPO_PUBLIC_*</code> built-in env management and it works very well for me.</p> <p>Firstly. I wonder what kind of data you want to store. If some configuration of app.config.js is in .env file your build might not start or it might start with incorrect values without any warning. (Some configurations cannot be added dynamically.)</p> <p>To successfully run EAS builds you have to add .easignore file and copy the contents from .gitignore <strong>expect line responsible for ignoring .env file</strong>. Normally, if you don't have this file, EAS ignores all your files \ directories so your .env file will be ignored on build startup. .easignore have higher priority over .gitignore so your env variables will not be ignored.</p> <blockquote> <p>Because your EAS Build job runs on a remote server, these .env files might not be available. For instance, .env files are excluded from your uploaded project if they are listed in .gitignore or not committed to your local version control system</p> </blockquote> <p>Everything you have to know is in (Remember to check article references.):</p> <ul> <li><a href=""https://expo.dev/blog/what-are-environment-variables"" rel=""nofollow noreferrer"">Expo Dev - article about enviroment variables</a></li> </ul> <p>I also found this helpful:</p> <ul> <li><a href=""https://grantisom.com/2023/02/01/expo-app-config.html"" rel=""nofollow noreferrer"">Expo App Config</a></li> </ul> <p><strong>Important</strong></p> <ol> <li>Everything stored in env variables is still visible in plain text on client side.</li> <li><strong>EAS Secrets</strong> can be misleading, they don't come with additional security.</li> </ol> <blockquote> <p>EAS Secrets do not provide any additional security for values that you end up embedding in your application itself, such as an AWS access key or other private keys.</p> </blockquote> <p>So in summary. For me, the best approach is to use mix of <code>EXPO_PUBLiC_*</code> and <code>react-native-dotenv</code>.</p> <p>EDIT:</p> <blockquote> <p>To fix this you have to remove this package and also something called babel-plugin-transform-inline-environment-variables and delete your package-lock.json and use the command npm start --clear</p> </blockquote> <p>Can you tell me how it ruins your build and what steps you follow to configure <code>react-native-dotenv</code>?</p>",1726922660.0,,true
"{'account_id': 35406291, 'reputation': 586, 'user_id': 27184656, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/cWqspvCg.png?s=256', 'display_name': 'The Teabag Coder', 'link': 'https://stackoverflow.com/users/27184656/the-teabag-coder'}",False,0,1726860994,1726860994,79008065,79007191,CC BY-SA 4.0,"<p>Half the button doesn't show because your container doesn't have any space left</p> <p>One way to fix this is to set the width of <code>.home-container</code> to 80% with 10% padding on each left and right.</p> <pre class=""lang-css prettyprint-override""><code>.home-container {   display: flex;   flex-direction: column;   flex: 1 1;   overflow-y: auto;   max-width: calc(100% - 20%);   padding: 0 10%; } </code></pre> <p><a href=""https://i.sstatic.net/9QOUgE6K.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/9QOUgE6K.png"" alt=""result"" /></a></p> <p>Working sample: <a href=""https://stackblitz.com/edit/vitejs-vite-dmzcxb?file=src%2FApp.tsx,src%2Findex.css,src%2Fmain.tsx&terminal=dev"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/vitejs-vite-dmzcxb?file=src%2FApp.tsx,src%2Findex.css,src%2Fmain.tsx&terminal=dev</a></p>",,,true
"{'account_id': 29240736, 'reputation': 1, 'user_id': 22402320, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/a04d3b2d2348c02a6b18f5020eba1b32?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Nithish', 'link': 'https://stackoverflow.com/users/22402320/nithish'}",False,0,1729262835,1729262835,79102578,79007150,CC BY-SA 4.0,"<ul> <li>make sure the parent of the flatlist have some space</li> <li>you can test that by hardcoding some values for the flastlist like ```jsx <FlatList style={{ minHeight:400 }} /></li> </ul> <pre class=""lang-none prettyprint-override""><code></code></pre>",,,true
"{'account_id': 21864219, 'reputation': 28, 'user_id': 20985407, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e18435b260acfb5b904f9b2ca0b67c94?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Nils', 'link': 'https://stackoverflow.com/users/20985407/nils'}",True,1,1727076321,1727076321,79013571,79007103,CC BY-SA 4.0,<p>I had the same issue. Adding an index route to the children of the parent fixed it. So I think you need to add an index route to the children of the Mi route.</p>,,,true
"{'account_id': 17426732, 'reputation': 31, 'user_id': 12631511, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AAuE7mCNivF6CGhQF0i5PvbEXASCeAaX-xO2JXWobekwHg=k-s256', 'display_name': 'mohammadreza hayati', 'link': 'https://stackoverflow.com/users/12631511/mohammadreza-hayati'}",False,0,1727681390,1727681390,79038330,79007102,CC BY-SA 4.0,"<p>Potential Cause: Route Conflict The intercepting route <code>@modal/(.)snippets/[id]</code> may be causing a conflict with <code>/snippets/new</code> because both are defined under the <code>/snippets</code> route. Since Next.js is designed to match routes as they are navigated, it's possible that the router is interpreting <code>/snippets/new</code> in a way that prioritizes the modal route.</p> <p>Solution 1: Use a <code>layout.tsx</code> to Separate Routes If you are handling modals and pages within the same section, you can further separate these using a layout that handles the different experiences. This way, modals and static routes like <code>/new</code> can be treated separately.</p> <pre><code> app/   âââ snippets/       âââ layout.tsx        # Layout for handling /snippets routes       âââ new/       â   âââ page.tsx      # Route for creating a new snippet       âââ [id]/       â   âââ page.tsx      # Dynamic route for individual snippet (full page view)   âââ @modal/       âââ (.)snippets/           âââ [id]/               âââ page.tsx  # Modal for viewing/editing a snippet </code></pre> <p>and this is the example code:</p> <pre><code>// app/snippets/layout.tsx import { usePathname } from 'next/navigation'; // Next.js hook to get current pathname import { ReactNode } from 'react';  export default function SnippetsLayout({ children }: { children: ReactNode }) {   const pathname = usePathname(); // Get the current pathname    // Check if the pathname includes ""@modal"" which indicates a modal route   const isModalRoute = pathname.includes('/@modal');    return (     <>       {isModalRoute ? (         // If the URL is for the modal route, render the modal layout         <Modal>           {children}         </Modal>       ) : (         // Otherwise, render the regular layout         <main>{children}</main>       )}     </>   ); }  // Example Modal Component const Modal = ({ children }: { children: ReactNode }) => {   return (     <div className=""modal-overlay"">       <div className=""modal-content"">         {children}       </div>     </div>   ); }; </code></pre> <p><code>snippets/layout.tsx</code>: Handles the main layout for <code>/snippets</code> and its children. <code>@modal/(.)snippets/[id]/page.tsx</code>: Will only activate when the modal route is explicitly used, such as <code>/@modal/(.)snippets/1</code>, avoiding interference with the static <code>/snippets/new</code> page.</p> <p>Solution 2: Make Modals Optional (Controlled at Route Level)</p> <p>Make sure that the modal route only activates when it is explicitly invoked, when a modal needs to be opened <code>(/@modal/(.)snippets/1).</code> This avoids accidental modal rendering on <code>/snippets/new</code>.</p> <p>In your app, you can conditionally show the modal based on the actual route, making sure that <code>/new</code> doesnât trigger modal logic. You could control this by checking the pathname and rendering the modal only when necessary.</p> <pre><code>// snippets/layout.tsx export default function SnippetsLayout({ children }: { children: React.ReactNode }) {   const router = useRouter();   const isModalRoute = router.pathname.includes('/@modal'); // Check for modal route    return (     <>       {isModalRoute ? (         // Render modal when the modal route is active         <Modal>           {children}         </Modal>       ) : (         // Otherwise, render the normal page content         <main>{children}</main>       )}     </>   ); } </code></pre>",,,true
"{'account_id': 20676644, 'reputation': 55, 'user_id': 15181085, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-UmDtX1kdrGA/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucn8UqLHXv-GmBuJVb4nWrmo1WV9CA/s96-c/photo.jpg?sz=256', 'display_name': 'Chandru Logan', 'link': 'https://stackoverflow.com/users/15181085/chandru-logan'}",True,0,1727415186,1727415186,79029948,79006910,CC BY-SA 4.0,<p>Here it is a simple issue. I have imported the JSON file and directly used it with the initialState.</p> <p>Root cause -> mockStore doesn't accept the JSON file as data</p> <p>Solution -> I have defined the data in the JS file and exported it then it is working fine</p>,,,true
"{'account_id': 26355838, 'reputation': 1, 'user_id': 20012827, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5d284f0bbd367df57c958bbb55617751?s=256&d=identicon&r=PG', 'display_name': 'ikintsu', 'link': 'https://stackoverflow.com/users/20012827/ikintsu'}",False,0,1726837778,1726837778,79006895,79006817,CC BY-SA 4.0,"<p>It looks like your session content doesn't have the ""admin"" role, hence why you are getting returned 403.</p>",,,true
"{'account_id': 21625506, 'reputation': 131, 'user_id': 15949910, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Q79MK.jpg?s=256', 'display_name': 'Ahmed Ali', 'link': 'https://stackoverflow.com/users/15949910/ahmed-ali'}",False,0,1726836796,1726836796,79006828,79006784,CC BY-SA 4.0,"<p>Have you tried <code>useLayOutEffect</code>. You should give it a try because <code>useLayOutEffect</code> runs even before the initial render. You can check <code>useLayOutEffect</code>'s <a href=""https://react.dev/reference/react/useLayoutEffect"" rel=""nofollow noreferrer"">complete documentation from react official docs</a></p>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,0,1727406165,1727406165,79029696,79006672,CC BY-SA 4.0,"<blockquote> <p>Previously, I used <code>useState</code> to manage the <code>nickname</code>, and I displayed the character count in real-time by writing <code>nickname.length</code> inside an HTML tag. But now, I'm wondering how I can achieve the same thing when using <code>useActionsState</code>.</p> </blockquote> <p>You can't, this simply isn't possible because the action isn't called until the form is submitted.</p> <p>If you want to live track the nickname input's value's length you'll still need <em>something</em> running in the client keeping track of the input's value and triggering component re-renders as it changes, e.g. a local React state like you used previously.</p> <pre><code>async function submit(previousState, formData) {   const nickname = await formData.get(""nickname"");    ...    return {     ...previousState,     nickname,   }; }  const initData = { nickname: """" };  function App() {   const [state, formAction] = useActionState(submit, initData);    const [nickname, setNickname] = useState("""");    return (     <form action={formAction}>       <input         name=""nickname""         defaultValue={state.nickname}         onChange={(e) => setNickname(e.target.value)}       />       <div>{nickname.length}</div>     </form>   ); } </code></pre>",,,true
"{'account_id': 5338023, 'reputation': 16863, 'user_id': 4256274, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/GxjcB.jpg?s=256', 'display_name': 'Daniel Macak', 'link': 'https://stackoverflow.com/users/4256274/daniel-macak'}",True,3,1728460945,1728460945,79069187,79006592,CC BY-SA 4.0,"<h2>tl;dr</h2> <p>Use <code>closeAfterTransition={false}</code> <a href=""https://mui.com/material-ui/api/modal/"" rel=""nofollow noreferrer"">https://mui.com/material-ui/api/modal/</a></p> <hr /> <p>I found very useful <a href=""https://github.com/mui/material-ui/issues/43106#issuecomment-2314809028"" rel=""nofollow noreferrer"">thread</a> on this exact topic. Here's a short explanation of what's happening:</p> <ol> <li>When you open a dialog via a button, the button's ancestor gets <code>aria-hidden</code>, presumably so that screen readers (SR) can't interact with it while the dialog is open.</li> <li>When you close the dialog, the <code>aria-hidden</code> is removed so that SRs can interact with the button again.</li> <li>Also, when closing, the focus is moved back on the opener button.</li> </ol> <p>Now comes the important part. You get <code>Blocked aria-hidden on a <div></code> only when 3 happens before 2. In this case, as the error message explains, we are trying to place focus somewhere where SRs don't have access, which is a No No and browser correctly warns about that.</p> <p>This ordering is dependent on the <code>closeAfterTransition</code> prop on the MUI Dialog. When <code>false</code> and user triggers dialog close, <code>aria-hidden</code> is removed (2) and then focus is placed on the opener button (3). Meaning there is no issue. You can see it in action <a href=""https://stackblitz.com/edit/react-ueyau1-1ub2o1?file=Demo.tsx"" rel=""nofollow noreferrer"">here</a>. However, when it's <code>true</code> (the default), the order is the other way around and you get the warning.</p> <hr /> <p>To your questions:</p> <ol> <li>Why is this warning occurring only on the first render? - Not sure. Probably it's the browser choosing not to spam you with the same error all the time.</li> <li>How can I resolve this accessibility issue while maintaining the functionality of my dialog? - try <code>closeAfterTransition={false}</code></li> <li>Are there any best practices for handling focus management with MUI dialogs that I should be aware of? - Not in this case. It's MUI's responsibility to make such a simple case - closing a dialog - accessible.</li> </ol>",,,true
"{'account_id': 7234429, 'reputation': 1825, 'user_id': 10489887, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/oTVVFJLA.jpg?s=256', 'display_name': 'mrconcerned', 'link': 'https://stackoverflow.com/users/10489887/mrconcerned'}",True,1,1727181106,1727181106,79018621,79006542,CC BY-SA 4.0,"<p>According to devs, it seems to be wrapper's behaviour, so I had to change the logic a bit.</p> <p>In ThreeJS there is a <code>renderer.forceContextLoss</code> which actually prevents to have too many contents (for more information check <a href=""https://github.com/mrdoob/three.js/issues/27100"" rel=""nofollow noreferrer"">here</a>) and in <code>p5</code> we can use <code>.remove()</code> function.</p> <p>Additionally, as in our case <code>sketchDimensions</code> and other states change and with the wrapper it redraws and adds to GPU, we had to change the logic to use  functions for specific parts.</p> <p>Like:</p> <pre><code>export const changeActiveSidebar = (activeSidebar) => {     initVariables.activeSidebar = activeSidebar; } </code></pre> <p>with this method it does not recreate the canvas (might sound weird, but it indeed works).</p>",,,true
"{'account_id': 22710529, 'reputation': 2520, 'user_id': 16876542, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/3DVnN.jpg?s=256', 'display_name': 'Lakshay Rohilla', 'link': 'https://stackoverflow.com/users/16876542/lakshay-rohilla'}",True,0,1728063513,1728035246,79053691,79006491,CC BY-SA 4.0,"<p>The MUI version I was using is <code>6.1.1</code>.<br> I raised an issue regarding it on MUI github <a href=""https://github.com/mui/material-ui/issues/43882"" rel=""nofollow noreferrer"">here</a><br> Also provided an sample project to showcase the error, refer this <a href=""https://github.com/LakshayRohilla/mui-app-bar-issue-43882"" rel=""nofollow noreferrer"">repo</a><br> <br> Later in the MUI github issue that I raised,  they answered that I'm using tsx code in the jsx file.<br> Though in the <code>6.1.1</code> version, I already tried to change the <code>tsx</code> code to the <code>jsx</code> code but it didn't work.<br><br> Now, I just updated the version from <code>6.1.1</code> to <code>6.1.2</code> & it working fine. <br><br> <strong>Working solution :</strong> <a href=""https://github.com/LakshayRohilla/mui-app-bar-issue-43882"" rel=""nofollow noreferrer"">github repo</a> <br><br> <strong>Conclusion :</strong> As per the MUI official's ""I`m using tsx code in the jsx file"", this was causing the error. Though, for me updating the version worked.</p>",1728063513.0,,true
"{'account_id': 16040095, 'reputation': 1, 'user_id': 11576709, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d7921365cee12306732b76e2ec6a5ebb?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'yeraki', 'link': 'https://stackoverflow.com/users/11576709/yeraki'}",False,0,1726904296,1726904296,79009010,79006448,CC BY-SA 4.0,"<p>in this post i get the answer:</p> <p><a href=""https://es.stackoverflow.com/questions/611225/error-cors-entre-mi-api-y-frontend-como-solucionarlo"">https://es.stackoverflow.com/questions/611225/error-cors-entre-mi-api-y-frontend-como-solucionarlo</a></p> <p>Basically this code works:</p> <pre><code>server {     listen 80;     server_name api.savoury.es;     return 301 https://$server_name$request_uri; }  server {     listen 443 ssl;     server_name api.savoury.es;      ssl_certificate /etc/letsencrypt/live/api.savoury.es/fullchain.pem;     ssl_certificate_key /etc/letsencrypt/live/api.savoury.es/privkey.pem;      # CORS configuration     add_header 'Access-Control-Allow-Origin' '*' always;     add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;     add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, token' always;     add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range' always;      # Opcional: Manejo de preflight para solicitudes OPTIONS     location / {         if ($request_method = OPTIONS) {             add_header 'Access-Control-Allow-Origin' '*';             add_header 'Access-Control-Allow-Methods' 'POST, GET, DELETE, PUT, PATCH, OPTIONS';             add_header 'Access-Control-Allow-Headers' 'token, Content-Type, Authorization';             add_header 'Access-Control-Max-Age' 1728000;             add_header 'Content-Length' 0;             add_header 'Content-Type' 'text/plain; charset=UTF-8';             return 204;         }          proxy_pass http://localhost:3000;         proxy_set_header Host $host;         proxy_set_header X-Real-IP $remote_addr;         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;         proxy_set_header X-Forwarded-Proto $scheme;     } } </code></pre>",,,true
"{'account_id': 1792267, 'reputation': 71, 'user_id': 1632389, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/vU7Uw.jpg?s=256', 'display_name': 'Joonas Lehtisyrj&#228;', 'link': 'https://stackoverflow.com/users/1632389/joonas-lehtisyrj%c3%a4'}",False,0,1729018769,1729018769,79091398,79005894,CC BY-SA 4.0,"<p>Your module has three JavaScript/JSX syntax errors.</p> <ol> <li>You are trying to return a malformed JS object from the React component here:</li> </ol> <pre><code>return {data.dataYaml.Carresources.map(node => ...)} </code></pre> <ol start=""2""> <li>The LD-JSON script tag would be correctly defined in a HTML document but it's not valid JSX as the curly braces around the JSON object are parsed as JSX markers for interpreted content here:</li> </ol> <pre><code><script type=""application/ld+json"">   {""@context"":""https://schema.org"",""@type"":""Car"",""name"":{node.title}} </script> </code></pre> <ol start=""3""> <li>The <code>name</code> field of the LD-JSON object contains an invalid nested object:</li> </ol> <pre><code>{""name"": {node.title}} </code></pre> <p>Here's a return statement where these syntax errors have been fixed:</p> <pre class=""lang-js prettyprint-override""><code>  return (     data.dataYaml.Carresources.map(node => (       <script type=""application/ld+json"">         {JSON.stringify({           ""@context"": ""https://schema.org"",           ""@type"": ""Car"",           ""name"": node.title         })}       </script>     ))   ) </code></pre>",,,true
"{'account_id': 35717594, 'reputation': 1, 'user_id': 27362525, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5cb4163b4d564c1d903ca46544dcd1ec?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Salman', 'link': 'https://stackoverflow.com/users/27362525/salman'}",False,0,1726824263,1726824123,79006128,79005884,CC BY-SA 4.0,"<p>You can create a component and check the path if it starts with double slash like this</p> <p>import { useEffect } from 'react'; import { useNavigate } from 'react-router-dom';</p> <pre><code>const RedirectInvalidPath = () => {   const navigate = useNavigate();   useEffect(() => {     const url = window.location.pathname;     if (url.startsWith('//')) {       navigate('/');      }   }, []);   return null;  }; export default RedirectInvalidPath;  {/*and then setup the component in your router */}      <RedirectInvalidPath/> </code></pre>",1726824263.0,,true
"{'account_id': 35829471, 'reputation': 1, 'user_id': 27423651, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/17036f14d005702c6059627a7dd913e2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Dami100', 'link': 'https://stackoverflow.com/users/27423651/dami100'}",False,0,1727113444,1727113157,79015733,79005769,CC BY-SA 4.0,"<p><code>json.stringgify(carnet)</code> was sending """"value"""" resulting in extra double quotes in the payload</p> <p>Wrapping <strong>carnet</strong> in an object  <code>({ carnet })</code>  will ensure you're sending a valid JSON object.</p>",1727113444.0,,true
"{'account_id': 8225388, 'reputation': 183, 'user_id': 6187860, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/31e00b28080fb1b9d580f6023787ff53?s=256&d=identicon&r=PG', 'display_name': 'dt_medicin', 'link': 'https://stackoverflow.com/users/6187860/dt-medicin'}",True,0,1726868689,1726819445,79005838,79005769,CC BY-SA 4.0,"<p>When sending data to the server, you are only sending a string:</p> <pre><code>body: JSON.stringify(carnet) </code></pre> <p>That's why you are getting a value with double quotes <code>""""asdasda""""</code>.</p> <p>Considering that on the server side you are retrieving the <code>carnet</code> key, you need to change the request to send a valid JSON:</p> <pre><code>body: JSON.stringify({ carnet: carnet }) </code></pre>",1726868689.0,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",False,-1,1726933051,1726920008,79009511,79005730,CC BY-SA 4.0,"<p>As you know, there are synchronous codes and asynchronous codes.</p> <p>For example, the below statement is synchronous. It will block execution of the main function until it finishes. Please see the output below.</p> <pre><code>function sleep(milliseconds) {   console.log('sleeping');   const start = Date.now();   while (Date.now() - start < milliseconds) {} }  sleep(); console.log('main function'); </code></pre> <p><strong>Output</strong></p> <pre><code>sleeping main function </code></pre> <p>However, the below statement is asynchronous, although it does not wait for even 1 millisecond. Please see the output, the main function logs before the sleep function.</p> <pre><code>setTimeout(() => sleep(), 0); console.log('main function'); </code></pre> <p><strong>Output</strong></p> <pre><code>main function sleeping </code></pre> <p>What has been essentially happened in the above code is that we could write a synchronous statement executed in asynchronous manner.</p> <p>Now when we need to do the opposite, to write an asynchronous code in synchronous manner, how to do we it ? This is where the async - await keyword pair applies.</p> <p>In the code below, although the second asynchronous statement is timed out in 1 second, that statement still waits for the completion of the first asynchronous statement which finishes later in 2 seconds. It means that we could write two asynchronous statements to execute in synchronous manner. Please see below the output.</p> <pre><code>async function asyncfunc() {   await new Promise((resolve) =>     setTimeout(() => {       resolve(1);       sleep();       console.log('slept for 2000ms');     }, 2000)   );   await new Promise((resolve) =>     setTimeout(() => {       resolve(1);       sleep();       console.log('slept for 1000ms');     }, 1000)   ); }  asyncfunc().then(() => {}); console.log('main function'); </code></pre> <p><strong>Output</strong></p> <pre><code>main function sleeping slept for 2000ms sleeping slept for 1000ms </code></pre> <p>The summary is that the code needs to be asynchronous in nature to get it executed in async manner. In the above examples, setTimeout is the asynchronous function which makes the synchronous code asynchronous. A synchronous enclosed in a function with async keyword does not make the function executed asynchronously.</p> <p>However, the asynchronous statements enclosed in a function with async-await keyword pair makes the function to execute the asynchronous calls synchronously  and execute the function as a whole still asynchronously. Please recall that in the above output, main function finishes earlier than the async function.</p>",1726933051.0,,true
"{'account_id': 22226004, 'reputation': 16196, 'user_id': 16462950, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gjy1a31kVAiCn_hJAWq34vNkEHuXwBWbuL00Eakf4g=k-s256', 'display_name': 'Heiko Thei&#223;en', 'link': 'https://stackoverflow.com/users/16462950/heiko-thei%c3%9fen'}",False,1,1726921672,1726921241,79009546,79005730,CC BY-SA 4.0,"<blockquote> <p>Calling functions inside async functions does not make them non-blocking?</p> </blockquote> <p>Just moving a function to a different place in the code does not reduce the amount of work that the Javascript engine has to do. And while it does the work, its single thread is still blocked. Asynchronous functions are useful if they communicate with <em>other systems</em> (fetch from a web server, select from a database, await user input, and so on), because the Javascript engine can do other work while waiting for the other system to respond.</p> <p>Waiting for 5000ms can be viewed as a special case of communication with another system, if it is implemented with <code>setTimeout</code>: in this case the ""other system"" is the system clock.</p> <p>The ""other system"" can also be a second thread of the same Javascript engine (a worker thread in a browser, or a second Node.js process as in <a href=""https://stackoverflow.com/questions/73021181/expressjs-main-loop-blocked-during-intense-operation"">Expressjs main loop blocked during intense operation</a>).</p>",1726921672.0,,true
"{'account_id': 8280837, 'reputation': 66, 'user_id': 6225597, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/8FUZ4.jpg?s=256', 'display_name': 'Zubair Ahmed', 'link': 'https://stackoverflow.com/users/6225597/zubair-ahmed'}",False,1,1726818427,1726818427,79005778,79005730,CC BY-SA 4.0,"<p>Just because a function is called inside an async function, it doesn't automatically make that function non-blocking. The function itself needs to be asynchronous or involve an asynchronous operation (like await or Promise-based operations) to avoid blocking.</p> <pre><code>function sleep(milliseconds) {   return new Promise((resolve) => setTimeout(resolve, milliseconds)); }  async function handleSubmit() {   await sleep(5000); // Non-blocking now because it's asynchronous   // other logic } </code></pre>",,,true
"{'account_id': 2075881, 'reputation': 137, 'user_id': 1849243, 'user_type': 'registered', 'accept_rate': 86, 'profile_image': 'https://www.gravatar.com/avatar/da4a1e91b9ff72f54b2e250cfd95eacc?s=256&d=identicon&r=PG', 'display_name': 'bbasmer', 'link': 'https://stackoverflow.com/users/1849243/bbasmer'}",True,0,1727090544,1727090544,79014391,79005653,CC BY-SA 4.0,"<p>Ok, after a week of frustration, reading and trial and error, here is the solution that I have found for the issue mentioned above. It solves:</p> <ul> <li>Nx setup for Rspack</li> <li>Module federation setup</li> <li>Resolution of path's in tsconfig.base.json</li> <li>Setup for CSS and SCSS modules</li> </ul> <p>Resources that helped me on the way:</p> <ul> <li><a href=""https://www.youtube.com/watch?v=oJY92rZV8NE"" rel=""nofollow noreferrer"">Video 1</a></li> <li><a href=""https://www.youtube.com/watch?v=VE1FWi2L_-g"" rel=""nofollow noreferrer"">Video 2</a></li> <li><a href=""https://blog.soumyanildas.com/nx-rspack-micro-frontend"" rel=""nofollow noreferrer"">Blog post</a></li> </ul> <p>RTFM's:</p> <ul> <li><a href=""https://rspack.dev/guide/tech/css#enabling-css-support"" rel=""nofollow noreferrer"">Rspack Docu - CSS support</a></li> <li><a href=""https://rspack.dev/config/module#moduleparsercssauto"" rel=""nofollow noreferrer"">RSpack Docu - CSS Modules</a></li> <li><a href=""https://rspack.dev/config/module#modulegeneratorcssauto"" rel=""nofollow noreferrer"">RSpack Docu - CSS/auto generators</a></li> </ul> <p>And here is my rspack.config.js.</p> <p><strong>PLEASE NOTE</strong>: This works for MY project and I don't consider this a perfect solution. If you have other ideas or something to correct, feel free to let me know.</p> <p>Otherwise, I hope this helps somebody.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const { composePlugins, withNx, withReact } = require('@nx/rspack'); const {   ModuleFederationPlugin, } = require('@module-federation/enhanced/rspack'); const mfConfig = require('./module-federation.config'); const path = require('path');  const sassConfig = {   test: /\.scss$|\.sass$/,   use: [     {       loader: 'sass-loader',       options: {         // using `modern-compiler` and `sass-embedded` together significantly improve build performance,         // requires `sass-loader >= 14.2.1`         api: 'modern-compiler',         implementation: require.resolve('sass-embedded'),       },     },   ],   // set to 'css/auto' if you want to support '*.module.(scss|sass)' as CSS Modules, otherwise set type to 'css'   type: 'css/auto',   exclude: '/node_modules/', };  const cssConfig = {   test: /\.css$/,   use: [     {       loader: 'css-loader',     },   ],   type: 'css/auto',   exclude: '/node_modules/', };  module.exports = composePlugins(withNx(), withReact(), (config, context) => {   config.context = path.join(context.context.root, 'apps/container'); // Path to app   config.plugins.push(new ModuleFederationPlugin({ ...mfConfig, dts: false }));   config.output.publicPath = '/'; // '/' for host, 'auto' for remotes   config.devServer = {     ...config.devServer,     port: 4200, // Make sure port fits to application   };   //  Resolve the paths in tsconfig   config.resolve = {     ...config.resolve,     tsConfig: {       configFile: path.resolve(         context.context.root,         'apps/container/tsconfig.app.json',       ),       references: 'auto',     },   };   //  CSS / SCSS setup   config.experiments = { css: true };   config.module = {     ...config.module,     rules: [...config.module.rules, cssConfig, sassConfig],     parser: {       ...config.module.parser,       'css/auto': {         namedExports: false,       },     },     //  Make sure naming css classes of scss modules is working     generator: {       ...config.module.generator,       'css/auto': {         localIdentName: '[local]-[id]',         exportsConvention: 'camel-case',       },     },   };   return config; });</code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 30387152, 'reputation': 1, 'user_id': 23286793, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/H3LlXRqO.jpg?s=256', 'display_name': 'Zain', 'link': 'https://stackoverflow.com/users/23286793/zain'}",False,0,1726815108,1726815108,79005579,79005531,CC BY-SA 4.0,"<p>I have solved this error by using this workarround: <code>isDynamicServerError</code>. i have copied the solution from this post : <a href=""https://stackoverflow.com/questions/78010331/dynamic-server-usage-page-couldnt-be-rendered-statically-because-it-used-next"">Dynamic server usage: Page couldn't be rendered statically because it used `nextUrl.searchParams` in Next.js version 14</a></p> <pre><code>export const getMeAction = async () => {   try {     const res = await fetch(`${process.env.BACKEND_BASE}/users/me`, {       cache: 'no-store',       headers: { ...getAuthorizationHeader() },       next: { tags: [getCacheKey('userData')] },     });     if (!res.ok) {       throw new Error('server_error');     }     const { data } = await res.json();     return { success: data as UserType };   } catch (err) {     /** NOTE      * This is a workaround      * For the issue of next.js not being able to render the page statically      * This issue arises in the pricing page      * https://stackoverflow.com/questions/78010331/dynamic-server-usage-page-couldnt-be-rendered-statically-because-it-used-next      **/     if (isDynamicServerError(err)) {       throw err;     }     return { error: 'server_error' };   } }; </code></pre> <p>But again my question why this error is aresing only in this page becase i have other pages too where i am calling the same server action and i am not getting this error there</p> <pre><code>import DashboardProperitesMain from '@/components/pages/DashboardProperitesPage'; import UserCtxLayoutProvider from '@/components/ui/UserCtxLayoutProvider'; import { PropertiesStatusFilterEnum } from '@/config'; import { Roles } from '@/schemas'; import { getMeAction } from '@/server/auth-actions'; import { redirectBaseOnRole } from '@/server/helper'; import { UserType } from '@/types';  export default async function DashboardHome({   searchParams, }: {   searchParams?: {     page?: string;     status?: PropertiesStatusFilterEnum;   }; }) {   const currentPage = Number(searchParams?.page) || 1;   const userData = (await getMeAction())?.success;   redirectBaseOnRole(userData, [     Roles.ADMIN,     Roles.LANDLORD,     Roles.SUB_USER,     Roles.AGENT,   ]);   return (     <UserCtxLayoutProvider userData={userData}>       <DashboardProperitesMain         userData={userData as UserType}         currentPage={currentPage}         status={searchParams?.status}       />     </UserCtxLayoutProvider>   ); }  </code></pre> <p>Main:</p> <pre><code>import React from 'react';  import { Suspense } from 'react'; import TableWrapper from '@/components/pages/DashboardProperitesPage/TableWrapper'; import Header from '@/components/pages/DashboardProperitesPage/Header'; import { DashboardProperitesTableSkelton } from '@/components/ui/DashboardPropertiesTable'; import { UserType } from '@/types'; import { PropertiesStatusFilterEnum } from '@/config'; type Props = {   currentPage: number;   userData: UserType | undefined;   status?: PropertiesStatusFilterEnum; }; export default function DashboardProperitesMain({   currentPage,   userData,   status, }: Props) {   return (     <section className=' max-w-[1300px] mx-auto '>       <Header />       <Suspense         key={`${currentPage}-${status}`}         fallback={<DashboardProperitesTableSkelton />}       >         <TableWrapper           status={status}           userData={userData}           currentPage={currentPage}         />       </Suspense>     </section>   ); }  </code></pre> <p>Table Wrapper:</p> <pre><code>import React from 'react'; import {   getAllProperitesAction,   getMyProperitesAction, } from '@/server/property-actions'; import { DashboardPropertiesTable } from '@/components/ui/DashboardPropertiesTable'; import { UserType } from '@/types'; import { Roles } from '@/schemas'; import { PropertiesStatusFilterEnum } from '@/config'; type Props = {   currentPage: number;   userData: UserType | undefined;   status?: PropertiesStatusFilterEnum; }; export default async function TableWrapper({   currentPage,   userData,   status, }: Props) {   let properitesData;    if (userData?.role === Roles.ADMIN) {     properitesData = await getAllProperitesAction(       currentPage,       status     );   } else {     properitesData = await getMyProperitesAction(currentPage, status);   }    return (     <DashboardPropertiesTable       data={properitesData.data}       totalDocs={properitesData.totalDocs}       currentPage={currentPage}     />   ); }  </code></pre>",,,true
"{'account_id': 5550434, 'reputation': 698, 'user_id': 4403715, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-BoPPMN1xPhk/AAAAAAAAAAI/AAAAAAAAACk/Woj_TpDGIb8/photo.jpg?sz=256', 'display_name': 'Colo Ghidini', 'link': 'https://stackoverflow.com/users/4403715/colo-ghidini'}",False,2,1727367837,1726838858,79006962,79005516,CC BY-SA 4.0,"<p>Following <a href=""https://chromium.googlesource.com/playground/chromium-org-site/+/refs/heads/main/for-testers/command-line-flags.md"" rel=""nofollow noreferrer"">https://chromium.googlesource.com/playground/chromium-org-site/+/refs/heads/main/for-testers/command-line-flags.md</a> and running <code>/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --js-flags=--no-maglev-optimistic-peeled-loops</code> fixes the bug for me.</p> <p>from <a href=""https://issues.chromium.org/issues/367758074"" rel=""nofollow noreferrer"">https://issues.chromium.org/issues/367758074</a></p> <p>Update: Fixed on Chrome new release (129.0.6668.71)</p>",1727367837.0,,true
"{'account_id': 35878794, 'reputation': 11, 'user_id': 27449801, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/fb7b5879a0ffe50f90bed463463f8628?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Jose Arroliga', 'link': 'https://stackoverflow.com/users/27449801/jose-arroliga'}",False,1,1727211347,1727208398,79020192,79005516,CC BY-SA 4.0,"<p>we are seen the same inssue in our website</p> <p>doing a research we have found the root of the issue, the chrome update, to fix this we have added the emotion cache and disabled speedy</p> <p>here for reference <a href=""https://github.com/emotion-js/emotion/issues/3256"" rel=""nofollow noreferrer"">https://github.com/emotion-js/emotion/issues/3256</a></p> <p>update: the fix is already live in google chrome new version <a href=""https://chromium-review.googlesource.com/c/v8/v8/+/5887185"" rel=""nofollow noreferrer"">https://chromium-review.googlesource.com/c/v8/v8/+/5887185</a></p>",1727211347.0,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",False,0,1726818119,1726818119,79005760,79005407,CC BY-SA 4.0,"<p>Agreeing to the comment by @C3roe.</p> <p>For the desired functionality, you may need to use cookies, in place of storage objects or localStorage.</p> <p>Cookies are a form of ambient authority. The server sets the domain attribute specifying those hosts to which the cookie will be sent. The user agent will include the cookies in making HTTP requests when the domain attribute matches with the origin server. These HTTP requests can be for embedded contents like images and videos from other sites, fetch requests, and also top level navigations.</p> <p>However, Storage object or local storage cannot be included in top level navigations, the difficulty which you experience now.</p>",,,true
"{'account_id': 36155431, 'reputation': 11, 'user_id': 27593365, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d2c6a8a4ce585a60f1a1ac9c00938c75?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Juli&#225;n Esteban Aimar', 'link': 'https://stackoverflow.com/users/27593365/juli%c3%a1n-esteban-aimar'}",False,1,1727886429,1727886354,79047683,79005357,CC BY-SA 4.0,"<p>I have the same issue and I modified the vercel.json file changed ""builds"",</p> <pre><code>    ""config"": {       ""distDir"": ""build""     } </code></pre> <p>And ""routes"",</p> <pre><code>  {     ""src"": ""/(.*)"",     ""dest"": ""/frontend/$1""   } </code></pre> <p>Good luck !!!</p>",1727886429.0,,true
"{'account_id': 23188140, 'reputation': 27, 'user_id': 17284889, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJxriqZB6TqB_uL8El1APHeM_0fyJCjILyChFHp0=k-s256', 'display_name': 'Boocher', 'link': 'https://stackoverflow.com/users/17284889/boocher'}",False,0,1726861040,1726861040,79008068,79005303,CC BY-SA 4.0,"<p>I copied over to a sandbox, and after stripping out the unreferenced items, I'm not able to reproduce your problem. I am seeing it's increasing faster than you might be anticipating, but the submit method is firing for me.</p> <p>Here's <a href=""https://codesandbox.io/p/sandbox/sgsvqg"" rel=""nofollow noreferrer"">a link</a> to the sandbox.</p>",,,true
"{'account_id': 8280837, 'reputation': 66, 'user_id': 6225597, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/8FUZ4.jpg?s=256', 'display_name': 'Zubair Ahmed', 'link': 'https://stackoverflow.com/users/6225597/zubair-ahmed'}",False,0,1726815949,1726815949,79005625,79005303,CC BY-SA 4.0,"<p>you can have two buttons, on the last stage submit button should be rendered, and on the steps, the next button, for example {step < 3 && next</button} {step === 3 && next</button}</p>",,,true
"{'account_id': 19281617, 'reputation': 23, 'user_id': 15881586, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/f85f08bfc7ff966e046daa905bf1a194?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'wizerdd', 'link': 'https://stackoverflow.com/users/15881586/wizerdd'}",False,0,1726805830,1726805830,79005185,79005168,CC BY-SA 4.0,"<p>If anyone is going through the same issue, simply delete the .adminjs folder. Restart or reload, it will bundle again. Idk how the bundling works on AdminJS.</p>",,,true
"{'account_id': 3197891, 'reputation': 67, 'user_id': 2700673, 'user_type': 'registered', 'accept_rate': 47, 'profile_image': 'https://i.sstatic.net/Bxx43.jpg?s=256', 'display_name': 'The Old County', 'link': 'https://stackoverflow.com/users/2700673/the-old-county'}",False,0,1726805323,1726805323,79005167,79005136,CC BY-SA 4.0,<p>I got it working by adding an isActive property --- but the only problem is I have to add the property to true for everything rather than just add it and make it false for what I dont want sortable</p> <pre><code>    <TableSortLabel       active={headCell.isActive? orderBy === headCell.id: false}       hideSortIcon={headCell.isActive? false:true}       direction={orderBy === headCell.id ? order : 'asc'}       onClick={createSortHandler(headCell.id)}     > </code></pre>,,,true
"{'account_id': 26990748, 'reputation': 62, 'user_id': 20553682, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/681d2754676350a8abb0d02bdeb78cd0?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Ngaox Thao', 'link': 'https://stackoverflow.com/users/20553682/ngaox-thao'}",False,0,1726910863,1726910863,79009223,79005005,CC BY-SA 4.0,<p>You forgot to surround {children} in Navbar by main div. Here is the right code:</p> <pre><code><main>{children}</main> </code></pre> <p>. Add this in your layout.js and I'm sure it wil work.</p>,,,true
"{'account_id': 35758530, 'reputation': 1, 'user_id': 27385694, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ef2abcf3841edce4238aeb0b87f0de5b?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'CKang', 'link': 'https://stackoverflow.com/users/27385694/ckang'}",True,0,1727300444,1727300444,79024860,79004983,CC BY-SA 4.0,"<p>So, I went back and read the documentation on forwardRefs and in the documentation, it takes two arguments, but in my code I only gave it one. This was the reason that it was not working and throwing the error. the forwardRefs function, takes in props and the ref to be passed down to the children. I came across another post than in the case where no props is needed you can simply use _: unknown as a sort of placeholder.</p>",,,true
"{'account_id': 316828, 'reputation': 134336, 'user_id': 633183, 'user_type': 'registered', 'accept_rate': 66, 'profile_image': 'https://i.sstatic.net/Uc83p.png?s=256', 'display_name': 'Mulan', 'link': 'https://stackoverflow.com/users/633183/mulan'}",False,0,1726798806,1726798496,79004986,79004983,CC BY-SA 4.0,"<p><strong>React 19</strong></p> <p><a href=""https://react.dev/blog/2024/04/25/react-19#ref-as-a-prop"" rel=""nofollow noreferrer"">Starting in React 19</a>, you can now access <code>ref</code> as a prop for function components -</p> <pre><code>function MyInput({placeholder, ref}) {   return <input placeholder={placeholder} ref={ref} /> }  //... <MyInput ref={ref} /> </code></pre> <p><strong>React 18</strong></p> <p>Supply the types to <code>forwardRef<...></code> -</p> <pre><code>type IntroProps = {   children: R.ReactNode }  const Intro = R.forwardRef<HTMLDivElement, IntroProps>((props, ref) => (   <div     ref={ref}     children={props.children}     style={{       backgroundColor: ""orchid"",       color: ""white"",       padding: ""1rem"",     }}   /> ))  function Foo() {   const ref = R.useRef<null | HTMLDivElement>(null)   return <Intro ref={ref}  children=""hello world"" /> } </code></pre> <p><a href=""https://www.typescriptlang.org/play/?#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQFA0wCeYWcAkgHYzEAKxY6AXjgBvGnDi4AFsAA2AE0rsAXJiowAdNjwwAchDlYaAXzq4I7VPA5cIcIVvzqC0AO7Ioc7AQA8ACQAqALIAMgAiwABuAKIyWCBYnAA0bJw8fKgAfAAUWWDpyZQEAJR2GXBZYnDecpGV4oUCwoUm4uJSsgoJjXkQ-Ort8ootrZYMsY2ira0ARngA1gDmxACu7HIAwhAy0Cpk0O1yZIl1rWbbULsu0jBYRyfiYMhyNewLuwCMlCB3U0bDAPQZGhFIp0AirfDAcxwABiEAgWRKkwk5kscEKdlU2nUy1QWC83nYyxkMjgAB84AEQuForF4pxskSSaD6lgYMsoOwqtZiOisARGs02tJBl0yJIsCTbC5oPIyHBAcYaEA"" rel=""nofollow noreferrer"">demo on TypeScript playground</a></p> <p>Using <code>React.HTMAttributes<...></code> will likely be useful to you. This allows you to specify other props your component will receive -</p> <pre><code>const Intro = R.forwardRef<HTMLDivElement, R.HTMLAttributes<HTMLDivElement>>(   (props, ref) => <div ref={ref} children={props.children} />, )  function Foo() {   const ref = R.useRef<null | HTMLDivElement>(null)   return (     <Intro       ref={ref}       style={{         backgroundColor: ""orchid"",         color: ""white"",         padding: ""1rem"",       }}       onClick={event => console.log(""ref"", ref.current)}       children=""hello world""     />   ) } </code></pre> <p><a href=""https://www.typescriptlang.org/play/?#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQFA24QB2q8AkozMXALyZUwA6AtADuyKABNsBADwAJACoBZADIARYADcAogBssILBwA0fPIMWqAgjE7AARgFcYWVPOXqteg0ZgA+PwAKGjg4QLBiMFRTSgIASh4-OBkJLThY7gBvWIBfOFwAC2BdCUpGLIiIKIFC4tKjPIB6P2MaOLoCR0Z8YCY4ADEICECEzJD8phZ0rAIeM3wBR1QsaRlGR11dOAAfOEtPHX1DDiD1zfbQyhhHKEYw8dCZdk4IB9Dpgizct9CWAE99Fkxu8QXB7HgANYAc2IXQkAGEILpoAAucjQWoSMitUHvBjIqBosgiIoubE-d5gZASVKMKFEgCMlBA5NxORyFKY8N0wFwEKyWE0vkSE2YSKwAmRUMCFBm2I+NRuZRgcQ5uNqJTK3DIBSwmwgcBE0BKtBBzXG7RyQA"" rel=""nofollow noreferrer"">demo on TypeScript playground</a></p>",1726798806.0,,true
"{'account_id': 6819231, 'reputation': 138201, 'user_id': 5246885, 'user_type': 'registered', 'accept_rate': 78, 'profile_image': 'https://i.sstatic.net/Bxclj.jpg?s=256', 'display_name': 'Alex Mamo', 'link': 'https://stackoverflow.com/users/5246885/alex-mamo'}",True,0,1727082544,1727082544,79013932,79004894,CC BY-SA 4.0,"<blockquote> <p>It doesn't overwrite the user, it overwrites the user auth provider. If the user is registered using email/password then logs out and tries to log in by using their Google account, it will erase the email and password and use the Google auth as a provider.</p> </blockquote> <p>What you're experiencing, is the expected behavior because when the user signs in with email and password and right after with the Google provider, the data is always overwritten in the Firebase Authentication. This means that Google credentials remain the default and the email and password that were chosen before will no longer work to authenticate users. This is happening for an obvious reason, a Google account is a more trusted source than any other provider, including email and password.</p> <p>If you want to make both authentication types work, I recommend you <a href=""https://firebase.google.com/docs/auth/web/account-linking"" rel=""nofollow noreferrer"">link those 2 accounts in a single one</a>, based on the email address.</p>",,"[{'tags': ['google-cloud-vision', 'google-cloud-run', 'firebase-in-app-messaging', 'google-cloud-instance-template', 'google-cloud-translate', 'cordova-plugin-firebasex', 'google-cloud-spanner', 'google-cloud-data-transfer', 'google-cloud-storage-r', 'firebase-security', 'firebase-realtime-database', 'google-cloud-sdk', 'google-cloud-launcher', 'firebase-admin', 'google-kubernetes-engine', 'recaptcha-enterprise', 'google-anthos', 'google-cloud-webrisk', 'google-app-engine-php', 'google-cloud-memorystore', 'jib', 'firebase-analytics', 'google-cloud-datastore', 'firebasesimplelogin', 'apigee', 'firebase-hosting', 'google-cloud-healthcare', 'google-cloud-transcoder', 'firebase-app-distribution', 'google-cloud-kms', 'google-cloud-test-lab', 'google-cloud-code', 'firebase-test-lab', 'firebase-ab-testing', 'google-cloud-debugger', 'google-cloud-stackdriver', 'google-app-engine', 'google-cloud-url-maps', 'google-cloud-endpoints-v2', 'google-cloud-ml', 'google-compute-engine', 'google-cloud-storage', 'react-redux-firebase', 'google-cloud-api-gateway', 'firebase-dynamic-links', 'firebase-predictions', 'react-native-firebase', 'redux-saga-firebase', 'google-cloud-dataprep', 'google-cloud-automl', 'google-migrate-for-compute-engine', 'google-cloud-logging', 'firebase-invites', 'cloud-document-ai', 'google-cloud-python', 'google-cloud-node', 'google-cloud-tools', 'firebase-extensions', 'google-app-engine-golang', 'rest-firebase', 'google-cloud-armor', 'firebase-polymer', 'nativescript-firebase', 'google-app-engine-deploy', 'firebase-cloud-messaging', 'dialogflow-cx', 'google-cloud-spanner-emulator', 'google-cloud-search', 'looker', 'firebase-crash-reporting', 'google-cloud-build', 'google-cloud-identity-aware-proxy', 'google-cloud-instances', 'google-cloud-repository', 'dialogflow-es', 'vertex-ai-search', 'google-cloud-tasks', 'google-analytics-firebase', 'google-cloud-datalab', 'firebase-storage', 'google-cloud-iot', 'google-cloud-source-repos', 'firebase-assistant', 'google-cloud-messaging', 'google-cloud-pubsublite', 'google-cloud-firestore', 'google-cloud-networking', 'google-container-optimized-os', 'google-cloud-iam', 'google-cloud-save', 'google-cloud-nl', 'google-translate', 'firebase-mlkit', 'firebase-admob', 'google-cloud-internal-load-balancer', 'firebase-notifications', 'google-cloud-cpp', 'google-cloud-filestore', 'firebase-app-check', 'google-cloud-print-privet', 'google-cloud-intellij', 'google-cloud-router', 'google-cloud-profiler', 'google-cloud-identity', 'google-app-engine-python', 'google-cloud-ai', 'google-cloud-bigtable', 'google-cloud-billing', 'gcloud', 'google-cloud-metrics', 'firebase-database', 'firebase', 'google-cloud-dataflow', 'firebase-tools', 'google-cloud-console', 'google-cloud-vertex-ai', 'firebase-cli', 'google-cloud-print', 'google-app-engine-go', 'google-cloud-talent-solution', 'google-cloud-dataproc-metastore', 'google-cloud-speech', 'google-cloud-visualstudio', 'google-container-os', 'google-container-builder', 'google-cloud-monitoring', 'google-cloud-error-reporting', 'google-cloud-ai-platform-pipelines', 'stackdriver', 'google-cloud-asset-inventory', 'google-cloud-robotics', 'google-cloud-ml-engine', 'google-cloud-dns', 'google-cloud-pubsub', 'google-bigquery', 'google-app-engine-launch', 'google-cloud-workstations', 'firebase-performance', 'google-cloud-ops-agent', 'firebase-job-dispatcher', 'google-cloud-platform', 'google-cloud-vpn', 'google-cloud-resource-manager', 'google-cloud-deploy', 'firebaseui', 'google-cloud-shell', 'google-cloud-dataproc', 'firebase-machine-learning', 'firebase-util', 'firebase-app-indexing', 'google-dataflow', 'google-cloud-scheduler', 'google-cloud-sql', 'apigee-baas', 'firebase-queue', 'google-cloud-data-fusion', 'google-cloud-network-load-balancer', 'bigtable', 'google-prediction', 'firebase-remote-config', 'looker-studio', 'google-cloud-proxy', 'google-cloud-composer', 'google-container-registry', 'google-cloud-automl-nl', 'firebase-authentication', 'google-cloud-php-client', 'google-cloud-endpoints', 'google-cloud-powershell', 'google-cloud-http-load-balancer', 'google-cloud-interconnect', 'google-cloud-language', 'google-fusion-tables', 'google-cloud-recommendation', 'google-cloud-tpu', 'google-cloud-shell-editor', 'google-cloud-cdn', 'google-cloud-load-balancer', 'google-cloud-dlp', 'google-app-engine-patch', 'google-cloud-marketplace', 'maven-jib', 'google-cloud-trace', 'google-cloud-functions', 'google-cloud-registry', 'dialogflow-es-fulfillment', 'firebase-console'], 'external_links': [{'type': 'support', 'link': 'https://stackoverflow.com/contact?topic=15'}], 'description': 'A collective for developers who utilize Google Cloudâs infrastructure and platform capabilities. This collective is organized and managed by the Stack Overflow community.', 'link': '/collectives/google-cloud', 'name': 'Google Cloud', 'slug': 'google-cloud'}]",true
"{'account_id': 15853003, 'reputation': 264, 'user_id': 11438291, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-hwNjB3IuxAc/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reHvB1PwG4PR0hT4P8Kkw9CW7_6iQ/mo/photo.jpg?sz=256', 'display_name': 'Lazybob', 'link': 'https://stackoverflow.com/users/11438291/lazybob'}",False,0,1726837086,1726837086,79006848,79004575,CC BY-SA 4.0,"<p>To solve this, create another file and put the provider code in it with the <code>'use client'</code> to make client side component, then wrap your layout code in it.</p> <p>file path i suggest: <code>/src/lib/DatePickerProvider.tsx</code></p> <p>Exemple of the solution:</p> <pre class=""lang-js prettyprint-override""><code> 'use client'  import { LocalizationProvider } from '@mui/x-date-pickers' import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'  interface ClientLocalizationProviderProps {   children: React.ReactNode }  export default function ClientLocalizationProvider({   children }: ClientLocalizationProviderProps) {   return (     <LocalizationProvider dateAdapter={AdapterDayjs}>       {children}     </LocalizationProvider>   ) } </code></pre>",,,true
"{'account_id': 1091946, 'reputation': 11127, 'user_id': 1086398, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/3edfa49328efffd9d8e76a0487f1d703?s=256&d=identicon&r=PG', 'display_name': 'adsy', 'link': 'https://stackoverflow.com/users/1086398/adsy'}",True,1,1726839731,1726835612,79006760,79003907,CC BY-SA 4.0,"<p>We can achieve this by making the key of the record returned by the passed <code>styles</code> function generic such that the information required to infer these properties is not lost.</p> <pre><code>import { Theme } from '@mui/material' import { CSSObject } from 'tss-react' import { commonStyles } from '../commonStyles' import { makeStyles } from './helpers'  export const getUseStyles = <   RuleNames extends string,   CustomStyles extends Record<string, any>, >(   styles: (     theme: Theme,     customStyles?: CustomStyles,   ) => Record<RuleNames, CSSObject>,   customStyles?: CustomStyles, ) => {   return makeStyles()((theme) => {     return {       ...commonStyles(theme),       ...styles(theme, { ...customStyles } as CustomStyles),     }   }) }  </code></pre> <p><a href=""https://i.sstatic.net/v8dB2y3o.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/v8dB2y3o.png"" alt=""enter image description here"" /></a></p> <p>It's unclear what the purpose of <code>customStyles</code> is or how it affects the return values of the passed <code>styles</code> function. So that basically doesn't do anything type-wise here currently.</p>",1726839731.0,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",True,1,1726775630,1726775630,79004228,79003763,CC BY-SA 4.0,"<p><em><strong>Don't</strong></em> mutate your source of truth, e.g. the <code>subscriber</code> value/state being provided by the <code>Context</code>. Filtering is a <em>reducing</em> action, and once elements are removed from the source array they can't be brought back without either re-fetching all the data, or caching a separate copy of it or keeping track of what was removed. This would be extraneous unnecessary work and logic.</p> <p>I suggest storing the filtering value in to the <code>Context</code> and provide either an already filtered <code>subscriber</code> value, or provide both <code>subscriber</code> and the filter value to consumers for them to apply and compute the derived ""state"" value.</p> <p>Examples:</p> <ul> <li><p>Compute and provide derived filtered subscribers array</p> <p>Context.jsx</p> <pre class=""lang-js prettyprint-override""><code>const [search, setSearch] = React.useState("""");  ...  const filteredSubscribers = React.useMemo(() => {   return (subscriber ?? []).filter(     item => item.name.toLowerCase().includes(search)   ); }, [search, subscriber]);  ... </code></pre> <pre><code>function SearchBar() {   const { search, setSearch } = useContext(Context);    const handleSearch = (e) => {     e.preventDefault()     setSearch(e.target.value.toLowerCase());   }    return (     <div className='searchBar'>       <TextField         id=""input1""         label=""Search User Name""         value={search}         onChange={handleSearch}       />     </div>   ) } </code></pre> <pre><code>export default function ShowSubscriber() {   const { filteredSubscribers } = useContext(Context);    return filteredSubscribers     .map((item, i) => (       <div style={{ display: ""flex"", marginTop: ""20px"" }} key={i}>         <span           style={{             fontSize: ""25px"",             marginLeft: ""20px"",             marginRight: ""20px""           }}         >           {item.name} {item.subscribedToChannel}         </span>         <EditSubscriber />         <DeleteSubscriber />       </div>     )); } </code></pre> </li> <li><p>Provide both <code>subscriber</code> and <code>search</code> to consumers</p> <p>Context.jsx</p> <pre class=""lang-js prettyprint-override""><code>const [search, setSearch] = React.useState("""");  ... </code></pre> <pre><code>function SearchBar() {   const { search, setSearch } = useContext(Context);    const handleSearch = (e) => {     e.preventDefault()     setSearch(e.target.value.toLowerCase());   }    return (     <div className='searchBar'>       <TextField         id=""input1""         label=""Search User Name""         value={search}         onChange={handleSearch}       />     </div>   ) } </code></pre> <pre><code>export default function ShowSubscriber() {   const { search, subscriber } = useContext(Context);    return subscriber     ?.filter(item => item.name.toLowerCase().includes(search))     .map((item, i) => (       <div style={{ display: ""flex"", marginTop: ""20px"" }} key={i}>         <span           style={{             fontSize: ""25px"",             marginLeft: ""20px"",             marginRight: ""20px""           }}         >           {item.name} {item.subscribedToChannel}         </span>         <EditSubscriber />         <DeleteSubscriber />       </div>     )); } </code></pre> </li> </ul>",,,true
"{'account_id': 11432220, 'reputation': 834, 'user_id': 8380606, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://graph.facebook.com/1576250049112522/picture?type=large', 'display_name': 'Sandeep Ranjan', 'link': 'https://stackoverflow.com/users/8380606/sandeep-ranjan'}",False,0,1726776298,1726776298,79004264,79003709,CC BY-SA 4.0,<p>The time your useStates callback is running products.features would be undefined. So you are not able to map it. You could use optional chaining with a fallback empty array value.</p> <p>You could use useEffect and wait till products.features is an array.</p> <p>But would like to see more of your code before I give you a good solution</p>,,,true
"{'account_id': 27712797, 'reputation': 26, 'user_id': 21155118, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/uZeI2.jpg?s=256', 'display_name': 'Windoo', 'link': 'https://stackoverflow.com/users/21155118/windoo'}",False,0,1726815907,1726815907,79005622,79003644,CC BY-SA 4.0,"<p>hope it helps you</p> <pre><code>  <Carousel autoPlay={true}>     <div>       <img src=""assets/1.jpeg"" />       <p className=""legend"">Legend 1</p>     </div>     <div>       <img src=""assets/2.jpeg"" />       <p className=""legend"">Legend 2</p>     </div>     <div>       <img src=""assets/3.jpeg"" />       <p className=""legend"">Legend 3</p>     </div>   </Carousel> </code></pre>",,,true
"{'account_id': 12131124, 'reputation': 1, 'user_id': 8858084, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-K312CJmnu6s/AAAAAAAAAAI/AAAAAAAAABM/eHhMrrpx59U/photo.jpg?sz=256', 'display_name': 'Yakov P.', 'link': 'https://stackoverflow.com/users/8858084/yakov-p'}",False,0,1726769313,1726769313,79003886,79003644,CC BY-SA 4.0,<p>You just have to put some elements inside the carousel as slides.</p>,,,true
"{'account_id': 24132271, 'reputation': 16, 'user_id': 18099732, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJzwW_xWBdau30TxAYHojYnTnxXEq2-CTVK-rcIVklE=k-s256', 'display_name': 'Fazna Harees', 'link': 'https://stackoverflow.com/users/18099732/fazna-harees'}",True,0,1727094106,1726842238,79007176,79003539,CC BY-SA 4.0,"<p>You have to pass the duration and delay inside <code>transition.opacity</code> and <code>transition.scale</code> as you've mentioned it.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>useEffect(() => {       setTimeout(() => {         planBoxControls.start({           opacity: 1,           scale: 1,           transition: {               delay: 0,               duration: 5,               opacity: { ease: 'linear' ,duration:5},               scale: { ease: 'backOut',duration:2 },           },       });       }, 5000);</code></pre>  </div>  </div>  </p> <p>You'll get the slow effect from this code. The code you've written will also work if you remove opacity and scale from transition properties.</p>",1727094106.0,,true
"{'account_id': 12412632, 'reputation': 90, 'user_id': 9043967, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-zDWtcUZIOe4/AAAAAAAAAAI/AAAAAAAAAEg/bd8qrd1V6J0/photo.jpg?sz=256', 'display_name': 'Ahmad Quraishi', 'link': 'https://stackoverflow.com/users/9043967/ahmad-quraishi'}",False,0,1726773624,1726773624,79004128,79003511,CC BY-SA 4.0,"<p>Did you try assigning the className w-full to the wrapper View of password fields container? e.g.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-html lang-html prettyprint-override""><code><View className='w-full'>       <TextInput         placeholder=""New Password""         value={password}         onChangeText={(text) => setPassword(text)}         secureTextEntry       />       <TextInput         placeholder=""Confirm New Password""         value={confirmPassword}         onChangeText={(text) => setConfirmPassword(text)}         secureTextEntry       />       <Button title=""Reset Password"" onPress={handleResetPassword} />  </View></code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",True,1,1726863105,1726863105,79008137,79003440,CC BY-SA 4.0,"<h1>Issue</h1> <p>The issue is that you are not maintaining a valid state invariant. At some point during the execution of your code you modified <code>state.Notices</code> from an array type to something else, likely the entire javascript object that is the response value from the <code>fetchNotices</code> action.</p> <p>Given the following response value:</p> <pre class=""lang-json prettyprint-override""><code>{   ""Notices"": [     {       ""id"": ""1"",       ""Title"": ""test title 1"",       ""Description"": ""Fake Notice: this is fake"",                   ""StartDateTime"": ""2024-09-18"",       ""EndDateTime"": ""2024-09-26"",       ""Planned"": true,                   ""ImpactedApps"": [         {           ""Id"": ""1"",           ""Name"": ""Api 1""         }       ],              ""IsActive"": true     },      {       ""id"": ""2"",       ""Title"": ""test title 2"",       ""Description"": ""Fake Notice: this is fake"",                   ""StartDateTime"": ""2024-09-18"",       ""EndDateTime"": ""2024-09-26"",       ""Planned"": true,                   ""ImpactedApps"": [         {           ""Id"": ""2"",           ""Name"": ""Api 2""         }       ],              ""IsActive"": true     }   ],   ""CreatedDateTime"": ""2024-09-18"",   ""Version"": 1,   ""Title"": ""Notification Feed"" } </code></pre> <p>The <code>featchNotices.fulfilled</code> reducer case is passing the <em>entire</em> response payload object and this breaks the invaint.</p> <pre class=""lang-js prettyprint-override""><code>.addCase(fetchNotices.fulfilled, (state, action) => {                state.loading = false;   state.Notices= action.payload; // <-- not an array! ð }) </code></pre> <h1>Solution Suggestions</h1> <p>The code should pass the nested <code>Notices</code> array property to the state value.</p> <pre class=""lang-js prettyprint-override""><code>.addCase(fetchNotices.fulfilled, (state, action) => {                state.loading = false;   state.Notices = action.payload.Notice; // <-- an array ð }) </code></pre> <p>Alternatively you could return the notices array directly from the Thunk action if you have no need for the other response values.</p> <pre class=""lang-js prettyprint-override""><code>export const fetchNotices = createAsyncThunk('fetchNotices', async (thunkApi, { rejectWithValue }) => {   try {     const response = await fetch(""https://API_CALL/notice"")                               const { Notices } = await response.json();      return Notices;   } catch (error) {     return rejectWithValue(""Something isn't working"");    } });  </code></pre> <pre class=""lang-js prettyprint-override""><code>.addCase(fetchNotices.fulfilled, (state, action) => {                state.loading = false;   state.Notices = action.payload; // <-- an array ð }) </code></pre>",,,true
"{'account_id': 18282742, 'reputation': 3093, 'user_id': 13311273, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GhDN1-9fMTc1eWRay_inGJFCldR3IfJHW1I5ixIiQ=k-s256', 'display_name': 'Oki', 'link': 'https://stackoverflow.com/users/13311273/oki'}",True,1,1726765481,1726765481,79003689,79003364,CC BY-SA 4.0,"<p>From the docs:</p> <blockquote> <p>Custom Hooks let you share stateful logic, not state itself</p> </blockquote> <p><a href=""https://react.dev/learn/reusing-logic-with-custom-hooks#custom-hooks-let-you-share-stateful-logic-not-state-itself"" rel=""nofollow noreferrer"">https://react.dev/learn/reusing-logic-with-custom-hooks#custom-hooks-let-you-share-stateful-logic-not-state-itself</a></p>",,,true
"{'account_id': 32389242, 'reputation': 38, 'user_id': 25158350, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/25ee1f15599579b4e99bed58de6623d6?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Peter Wang', 'link': 'https://stackoverflow.com/users/25158350/peter-wang'}",False,0,1726765307,1726764819,79003656,79002937,CC BY-SA 4.0,"<p>Alongside the <code>slotProps</code> route. You could try using the <code>renderOption</code>. This route could give you more ability to choose exactly what goes into each list item as you can now use any MUI component inside of it.</p> <p><a href=""https://codesandbox.io/p/sandbox/mui-autocomplete-renderoption-7hlsct?file=%2Findex.js%3A51%2C7-67%2C9&workspaceId=4f72101f-5844-4e37-94be-be57ba868e5e"" rel=""nofollow noreferrer"">MUI Autocomplete renderOption Example</a></p> <p>Doing this allows you to click even outside of the box but in the same row and still trigger a select. <code>slotProps</code> does also allow for that but it requires more CSS into it.</p> <p>And if you wanted the user to have to select inside the box but not the row, you could just move the <code>{...params}</code> from the box to the Typography and it should work only when the user clicks inside the box.</p>",1726765307.0,,true
"{'account_id': 15503489, 'reputation': 110, 'user_id': 11184255, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/D2xTi.jpg?s=256', 'display_name': '4cyc', 'link': 'https://stackoverflow.com/users/11184255/4cyc'}",True,0,1726764297,1726764297,79003625,79002937,CC BY-SA 4.0,"<p>You should use <code>slotProps</code> on your <code>Autocomplete</code> like mentioned here: <a href=""https://stackoverflow.com/a/78267213/11184255"">https://stackoverflow.com/a/78267213/11184255</a></p> <p>So it would look something like that</p> <pre class=""lang-js prettyprint-override""><code><Autocomplete ...   slotProps={{     paper: {       sx: {         '& .MuiAutocomplete-listbox': {           '& .MuiAutocomplete-option': {             display: 'flex',             justifyContent: 'center',             border: '1px solid lightgray',             margin: '5px'           },         },       },     },   }} /> </code></pre>",,,true
"{'account_id': 1277970, 'reputation': 2911, 'user_id': 1232796, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c8b9f65fdc88eca3d9ce0a02a91d74aa?s=256&d=identicon&r=PG', 'display_name': 'Thomas Gak-Deluen', 'link': 'https://stackoverflow.com/users/1232796/thomas-gak-deluen'}",False,0,1727093171,1726752075,79002740,79002730,CC BY-SA 4.0,"<p>You are trying to use a client component in a server component.</p> <p>Add <code>""use client""</code> at the top of your layout.</p> <p>Or alternatively, create a new file <code>Providers.tsx</code> :</p> <pre><code>""use client""  import {I18nextProvider} from 'react-i18next';  import i18next from ""@/../i18n"";  export function Providers({ children }: { children: React.ReactNode }) {   return <I18nextProvider i18n={i18next}>{children}</I18nextProvider>; } </code></pre> <p>And in your layout</p> <pre><code> import { Providers } from ""./Providers"";  export default function RootLayout({children}: { children: React.ReactNode }) {   const requestHeaders = headers();   const locale = requestHeaders.get('accept-language')?.split(',')[0].slice(0, 2) || 'va';   i18next.changeLanguage(locale);   return (       <Providers>           <html lang={locale}>           <body>           <Suspense fallback={<Spinner/>}>               <Header/>               <div style={{width: '80%', minHeight: '60vh', margin: '0 auto'}}>                   {children}               </div>               <Footer/>           </Suspense>           </body>           </html>       </Providers>   ); } </code></pre>",1727093171.0,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",False,0,1726806021,1726805617,79005176,79002190,CC BY-SA 4.0,"<blockquote> <p>{here can I know what is a value in state before finishing a scope}</p> </blockquote> <p>As you know already, by design React works on <em><strong>Batching</strong></em>. Meaning React processes state updaters only after finishing the running event handler. This also means that the state updaters within an event handler, do not instantly change its current values, instead it just request for a new render.</p> <p>Still we can <em><strong>deduce</strong></em> the new state as below:</p> <p><strong>Your original code</strong></p> <pre><code>function a = () => {    ....statements    setState(a);    ....statements    {here can I know what is a value in state before finishing a scope} } </code></pre> <ol> <li><p>If a in the above code is <strong>either a const or an expression</strong>, then the new state value will be a itself.</p> </li> <li><p>if a is an <em><strong>updater function</strong></em>, then the new value can be deduced by invoking the same updater function by passing the present state value. The result will be the new state value.</p> </li> </ol> <p>Please see the code below which demoes the same. The output of the test runs have also been attached.</p> <p><strong>App.js</strong></p> <pre><code>import { useState } from 'react';  export default function App() {    const [number1, setNumber1] = useState(0);   const [number2, setNumber2] = useState(1);    function handleClick(e) {      setNumber1(number1 + 1);     setNumber2((number2) => number2 * 10);      console.log(`Previous render: deduced values`);     console.log(`number1 : ${number1 + 1} `);     console.log(`number2 : ${((prevNumber2) => prevNumber2 * 10)(number2)} `);   }    return (     <>       <label>Latest render : actual values</label>       <br />       <label>number1 : {number1}</label>       <br />       <label>number2 : {number2}</label>       <br />       <button onClick={handleClick}>Change State</button>     </>   ); } </code></pre> <p><strong>Test run results:</strong></p> <p><strong>1st click on Change state - Browser and Console display</strong></p> <p><a href=""https://i.sstatic.net/266QjqsM.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/266QjqsM.png"" alt=""1st click on Change state - Browser and Console display"" /></a></p> <p><strong>2nd click on Change state - Browser and Console display</strong></p> <p><a href=""https://i.sstatic.net/jn4qrAFd.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/jn4qrAFd.png"" alt=""2nd click on Change state - Browser and Console display"" /></a></p> <p><strong>Citations:</strong></p> <p><a href=""https://react.dev/learn/state-as-a-snapshot"" rel=""nofollow noreferrer"">State as a Snapshot</a></p> <p><a href=""https://react.dev/learn/queueing-a-series-of-state-updates"" rel=""nofollow noreferrer"">Queueing a Series of State Updates</a></p>",1726806021.0,,true
"{'account_id': 6075605, 'reputation': 71, 'user_id': 6785159, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/623980554447723/picture?type=large', 'display_name': 'Svitlana Tislenko', 'link': 'https://stackoverflow.com/users/6785159/svitlana-tislenko'}",False,1,1726755250,1726755250,79002982,79002054,CC BY-SA 4.0,"<p>To render an SVG string in React, use the react-svg library. Add library: <strong>npm install react-svg</strong></p> <p>How use the ReactSVG component:</p> <pre><code>import { ReactSVG } from 'react-svg';  const MyComponent = () => {     const svgString = '<svg>...</svg>'; // Your SVG string      return (         <ReactSVG src={`data:image/svg+xml;utf8,${encodeURIComponent(svgString)}`} />     ); }; </code></pre>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,1,1726759653,1726759653,79003333,79001768,CC BY-SA 4.0,"<p><code>fetchData</code> is a Redux-Toolkit <a href=""https://redux-toolkit.js.org/api/createAsyncThunk"" rel=""nofollow noreferrer"">Thunk</a> action, so you have a couple ways to execute additional logic after the Thunk action is fulfilled. Firstly though you need to understand that all Thunk actions resolve, so to find out if the action was fulfilled or rejected you should unwrap the returned Promise. See <a href=""https://redux-toolkit.js.org/api/createAsyncThunk#handling-thunk-results"" rel=""nofollow noreferrer"">Handling Thunk Results</a> for specific details.</p> <ul> <li><p>Using the Promise Chain</p> <pre class=""lang-js prettyprint-override""><code>const callback = () => {   dispatch(fetchData(...)).unwrap()     .then((data) => {       // do some work after fulfilled     })     .catch(error => {       // catch error/rejections and handle/ignore     }); }; </code></pre> </li> <li><p>Converting to <code>async/await</code> and <code>try/catch</code></p> <pre class=""lang-js prettyprint-override""><code>const callback = async () => {   try {     const data = await dispatch(fetchData(...)).unwrap();     // do some work after fulfilled   } catch(error) {     // catch error/rejections and handle/ignore   }; }; </code></pre> </li> </ul>",,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",True,0,1726741693,1726741693,79002081,79001749,CC BY-SA 4.0,"<p><strong>Please force the component MainPanel to render on every run of the loadHistory event in the component SidePanel.</strong></p> <p>At present you have passed the chatList to MainPanel, still it does not have rendered there. It must be rendered in the component MainPanel. Not only this, whenever you click ""Clear Chat"", the MainPanel component must re-render with the chat history. These two functionalities can be achieved as below.</p> <p>a) Use <em><strong>key</strong></em> as below to force to render MainPanel on every click of ""Clear Chat"". To learn more about this, please see the documentation <a href=""https://react.dev/learn/preserving-and-resetting-state#option-2-resetting-state-with-a-key"" rel=""nofollow noreferrer"">Resetting state with a key</a></p> <pre><code>  <div className=""col py-3 h-100"">     <MainPanel key={Math.random()} chatList={chatList} />   </div> </code></pre> <p>b) Please add a separate rendering logic in MainPanel exclusively for chatList as below.</p> <pre><code>{chatArray.length == 0 &&   chatList.map((message, i) => (     <Fragment key={i}>       <label>{message}</label>       <br />     </Fragment>   ))} </code></pre> <p><strong>A full listing of modified code with test results</strong></p> <p><em>Please note the API calls and the Components for which the source has not been included in the question have been substituted appropriately for the completeness of a working version to demo here.</em></p> <pre><code>import { Fragment, useState } from 'react';  export default function App() {   const [chatList, setChatList] = useState([]);    return (     <div className=""col-auto col-md-3 col-xl-2 px-sm-2 px-0 bg-dark"">       <div className=""d-flex flex-column align-items-center"">         <SidePanel setChatList={setChatList} />       </div>       <div className=""col py-3 h-100"">         <MainPanel key={Math.random()} chatList={chatList} />       </div>     </div>   ); }  const MainPanel = ({ chatList }) => {   const [userChat, setUserChat] = useState('');   const [chatArray, setChatArray] = useState([]);    function handleSubmit(e) {     e.preventDefault();     // Some UI login here     //    postChatEntry(newMessage); // commented for the MRE     postChatEntry(userChat); // added for the MRE   }    async function postChatEntry(message) {     // const request = new Request('/chat', {     //   method: 'POST',     //   body: JSON.stringify({ message: message.chatEntry }),     // });      // const response = await fetch(request);     // const jsonResponse = await response.json();     // if (jsonResponse) {     //chatArray.push(jsonResponse.reply); //     const deepCopy = [...chatArray, message];     setChatArray(deepCopy);     setUserChat('');     // }   }    return (     <section>       <div>         {chatArray.length == 0 &&           chatList.map((message, i) => (             <Fragment key={i}>               <label>{message}</label>               <br />             </Fragment>           ))}         {chatArray.map((message, i) => (           <Fragment key={i}>             <label>{message}</label>             <br />           </Fragment>         ))}       </div>       <form id=""chatForm"" onSubmit={handleSubmit}>         <input           placeholder=""Type your message here...""           value={userChat}           onChange={(e) => setUserChat(e.target.value)}         ></input>         <button>Post</button>       </form>     </section>   ); };  const SidePanel = ({ setChatList }) => {   function loadHistory(e) {     e.preventDefault();     // fetch('/history')     //   .then((res) => res.json())     //   .then((data) => {     //     const list = parseResponse(data);     //     setChatList(list);     //   });     setChatList(['chat-1', 'chat-2', 'chat-3']);   }    return (     <div>       <ul>         <li>           <a onClick={loadHistory}>Clear Chat</a>         </li>       </ul>     </div>   ); }; </code></pre> <p><strong>Test results</strong></p> <p><strong>On loading the App</strong></p> <p><a href=""https://i.sstatic.net/AJpHi0H8.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/AJpHi0H8.png"" alt=""On loading the App"" /></a></p> <p><strong>On a new Chat</strong></p> <p><a href=""https://i.sstatic.net/gwFUMTpI.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/gwFUMTpI.png"" alt=""Ona new Chat"" /></a></p> <p><strong>After loading from Chat history</strong></p> <p><a href=""https://i.sstatic.net/A2QY7R18.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/A2QY7R18.png"" alt=""After loading from Chat history"" /></a></p>",,,true
"{'account_id': 14562186, 'reputation': 465, 'user_id': 10517968, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3ff49299859fba8768b7087fe0ad8368?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Tim van Dam', 'link': 'https://stackoverflow.com/users/10517968/tim-van-dam'}",True,0,1726737349,1726736555,79001732,79001622,CC BY-SA 4.0,"<p>So the answer is to set the indexes to a minus value. This way your custom icons will show the left of the existing icons, e.g. the hamburger menu.</p> <pre><code>          index: -1,           title: ""Edit"",           class: ""custom-edit-icon"",           click: function () {             handleEditClick(chartDataToEdit);           }, </code></pre>",1726737349.0,,true
"{'account_id': 149787, 'reputation': 163405, 'user_id': 362536, 'user_type': 'registered', 'accept_rate': 88, 'profile_image': 'https://i.sstatic.net/yt7Em.jpg?s=256', 'display_name': 'Brad', 'link': 'https://stackoverflow.com/users/362536/brad'}",False,0,1726803667,1726803667,79005115,79000972,CC BY-SA 4.0,"<p>I don't know anything about expo-av, but you're probably running into the issue of the player having to ""sniff"" the content type, which is a common issue.</p> <p>This stream is an MP3 stream.  Neither Icecast nor SHOUTcast will align the stream for you, so the stream can start at any arbitrary byte offset.  It's up to the client to figure out the MPEG frame boundaries.  Start by looking for a series of bytes where the <a href=""http://mpgedit.org/mpgedit/mpeg_format/mpeghdr.htm#MPEG%20HEADER"" rel=""nofollow noreferrer"">first 11 bits are all set to <code>1</code></a>.  The codec does this for you, but if the player does not know what codec to use, it might buffer some arbitrary chunk of data, like 256 KB, before falling back to MP3.</p> <p>Another thing you can usually do is inform the player of the codec that you're using.  You will have to see if your framework allows setting the type of <code>audio/mpeg</code>.</p> <p>Finally, if you can adjust any buffer sizes, do so.  128 kbit/s audio doesn't take much data.  If it's truly a live stream with no server-side buffer, then it may take many seconds to buffer the player thinks it needs to maintain a steady playback rate.  Keep in mind, these players are tuned for video by default and will often buffer a fixed minimum amount.</p>",,,true
"{'account_id': 33593006, 'reputation': 131, 'user_id': 26007375, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/cab800d8c84c79c925d573f87445f567?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Carsten Codes', 'link': 'https://stackoverflow.com/users/26007375/carsten-codes'}",True,0,1726722186,1726722186,79000930,79000898,CC BY-SA 4.0,<p>How about extending your function with an additional line to check if it <code>startsWith</code> <code>https//</code>:</p> <pre><code>const validateUrl = (url) => {     const isValidUri = validUrl.isUri(url);     return isValidUri && isValidUri.startsWith('https://'); }; </code></pre>,,,true
"{'account_id': 35406291, 'reputation': 586, 'user_id': 27184656, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/cWqspvCg.png?s=256', 'display_name': 'The Teabag Coder', 'link': 'https://stackoverflow.com/users/27184656/the-teabag-coder'}",True,1,1726731541,1726728637,79001222,79000826,CC BY-SA 4.0,"<p>When a select is opened, it adds <code>style=""pointer-events: none""</code> to the <code>body</code> which prevents you from interact with other elements</p> <p>One way to change its behavior is to override the style above by adding an important <code>tailwind</code> class <code>!pointer-events-auto</code> to the body.</p> <p>working playground: <a href=""https://stackblitz.com/edit/stackblitz-starters-gl6ghw?description=The%20React%20framework%20for%20production&file=app%2Fpage.tsx,app%2Fglobals.css&title=Next.js%20Starter"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/stackblitz-starters-gl6ghw?description=The%20React%20framework%20for%20production&file=app%2Fpage.tsx,app%2Fglobals.css&title=Next.js%20Starter</a></p>",1726731541.0,,true
"{'account_id': 10680689, 'reputation': 326, 'user_id': 7862874, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-jQBVqj65_7E/AAAAAAAAAAI/AAAAAAAAALE/rMOG_UAHkXo/photo.jpg?sz=256', 'display_name': 'Jeremy Faret', 'link': 'https://stackoverflow.com/users/7862874/jeremy-faret'}",False,0,1727955041,1727955041,79050328,79000621,CC BY-SA 4.0,"<p>Are you trying to make the calls from a browser? It sounds like you might be running into a CORS error. If that's the case, you could try moving your API call to the server side, or you could launch your browser in a security bypass mode, like itâs explained here: <a href=""https://stackoverflow.com/questions/3102819/disable-same-origin-policy-in-chrome"">Disable same origin policy in Chrome</a>.</p>",,,true
"{'account_id': 125949, 'reputation': 12471, 'user_id': 322084, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/557247f0433d0d2844511251b0007c6d?s=256&d=identicon&r=PG', 'display_name': 'chrwahl', 'link': 'https://stackoverflow.com/users/322084/chrwahl'}",False,0,1727030863,1727030863,79012347,79000562,CC BY-SA 4.0,"<p>Here you have a vanilla JavaScript example. In the example the draggable element is not an SVG, but an HTML element.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const board = document.querySelector('section');  board.querySelectorAll('div').forEach(positionHex);  function positionHex(elm){   let q = parseInt(elm.dataset.q);   let r = parseInt(elm.dataset.r);   let s = parseInt(elm.dataset.s);   let elm_box = elm.getBoundingClientRect();   let section = elm.closest('section');   let section_box = section.getBoundingClientRect();   let zero = {     left: section_box.width / 2 - elm_box.width / 2,     top: section_box.height / 2 - elm_box.height / 2   };   elm.style.left = `${zero.left + q * elm_box.width * .75}px`;   elm.style.top = `${zero.top + -s * elm_box.height / 2 + r * elm_box.height / 2}px`; }  board.addEventListener('dragstart', e => {   e.dataTransfer.setData('text/plain', e.target.dataset.cat); });  board.addEventListener('dragover', e => {   e.preventDefault(); });  board.addEventListener('drop', e => {   e.preventDefault();   let target = e.target.closest('.hex');   if(!target || target.dataset.cat) return;   let cat_id = e.dataTransfer.getData('text/plain');   let board = target.closest('section');   let source = board.querySelector(`div[data-cat = ""${cat_id}""]`);   source.draggable = false;   delete source.dataset.cat;   target.dataset.cat = cat_id;   target.draggable = true; });</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>body {   background-color: DarkCyan; }  section {   position: relative;   border: solid thin black;   width: 500px;   height: 500px;   box-sizing: border-box; }  .hex {   position: absolute;   width: 100px;   aspect-ratio: 40/34.64;   background-image: url('data:image/svg+xml,<svg xmlns=""http://www.w3.org/2000/svg"" viewBox=""-22 -19.32 44 38.64""><path d=""M-10-17.32 10-17.32 20 0 10 17.32-10 17.32-20 0Z"" fill=""MediumTurquoise"" stroke=""PaleTurquoise"" stroke-width=""1"" /></svg>');   background-size: cover;   font-size: small;   align-content: center;   text-align: center; }  .hex::before {   content: attr(data-q)','attr(data-r)','attr(data-s); }  .hex[data-cat] {   background-image: url('data:image/svg+xml,<svg xmlns=""http://www.w3.org/2000/svg"" viewBox=""-22 -19.32 44 38.64""><path d=""M-10-17.32 10-17.32 20 0 10 17.32-10 17.32-20 0Z"" fill=""skyblue"" stroke=""PaleTurquoise"" stroke-width=""1"" /></svg>'); }  .hex[data-cat]::before {   content: 'Cat #'attr(data-cat); }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><section>   <div data-q=""-1"" data-r=""0"" data-s=""1"" data-cat=""1"" class=""hex"" draggable=""true""></div>   <div data-q=""0"" data-r=""0"" data-s=""0"" class=""hex""></div>   <div data-q=""-1"" data-r=""1"" data-s=""0"" class=""hex""></div>   <div data-q=""1"" data-r=""0"" data-s=""-1"" data-cat=""2"" class=""hex"" draggable=""true""></div>   <div data-q=""0"" data-r=""-1"" data-s=""1"" class=""hex""></div>   <div data-q=""1"" data-r=""-1"" data-s=""0"" class=""hex""></div>   <div data-q=""2"" data-r=""-1"" data-s=""-1"" class=""hex""></div>   <div data-q=""2"" data-r=""-2"" data-s=""0"" class=""hex""></div>   <div data-q=""1"" data-r=""-2"" data-s=""1"" class=""hex""></div> </section></code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 33593006, 'reputation': 131, 'user_id': 26007375, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/cab800d8c84c79c925d573f87445f567?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Carsten Codes', 'link': 'https://stackoverflow.com/users/26007375/carsten-codes'}",True,1,1726810070,1726810070,79005337,79000488,CC BY-SA 4.0,"<p>I think the underlying issues are:</p> <ol> <li>Specificity: some of your styled are being overwritten by the <code>fluentui</code> css styled. By adding <code>!important</code> you can force your styles to be used.</li> <li>The <code>overlay</code>, <code>textOverlay</code> and <code>playButton</code> should probably not be seperated into sibling <code>div</code>-elements, instead you can group them together.</li> </ol> <p>Here is my code (although the styling might not be exactly what you intended to do):</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>import { makeStyles } from '@fluentui/react-components';  export const useVideoYoutubeCardStyles = makeStyles({     card: {         width: '300px',         border: '1px solid #ccc',         borderRadius: '8px',         overflow: 'hidden',         position: 'relative',         cursor: 'pointer',         transition: 'transform 0.3s, box-shadow 0.3s',         '&:hover': {             transform: 'scale(1.05)',             boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',         },     },     overlay: {         position: 'absolute',         top: '0px',         width: '100%',         height: '100%',         backgroundColor: 'rgba(0, 0, 0, 0)',         transition: 'background-color 0.3s',         '&:hover': {             // backgroundColor: 'rgba(0, 0, 0, 0.6)', <-- moved this to textOverlay:hover         },     },     textOverlay: {         position: 'absolute',         top: '50%',         left: '50%',         transform: 'translate(-50%, -50%)',         color: 'white',         fontSize: '14px',         fontWeight: 100,         textAlign: 'center',         opacity: 0,         transition: 'opacity 0.3s',         fontFamily: 'Arial, sans-serif',         display: 'flex',         flexDirection: 'column',         alignItems: 'center',         justifyContent: 'center',          '&:hover': {             opacity: 1,             backgroundColor: 'rgba(0, 0, 0, 0.6)' //<-- this comes from overlay         },     },     playButton: {         position: 'absolute',         top: '30%',         left: '30%',         width: '100px !important', //<-- add !important because they are otherwise being overwritten         height: '100px !important', //<-- add !important because they are otherwise being overwritten         backgroundColor: 'rgba(255, 255, 255, 0.8)',         borderRadius: '50%',         display: 'flex',         alignItems: 'center',         justifyContent: 'center',         boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)',         transition: 'opacity 0.3s',     },     playButtonTriangle: {         position: 'absolute',         left: '37px',         top: '28px',         width: '30px',         height: '0px',         borderLeft: '30px solid gray',         borderTop: '20px solid transparent',         borderBottom: '20px solid transparent',         marginLeft: '3px',     }, });</code></pre>  </div>  </div>  </p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>import { Card, CardPreview, Image } from '@fluentui/react-components'; import * as React from 'react'; import { useVideoYoutubeCardStyles } from './YoutubeCard.styled.tsx';  export type YoutubeCardProps = {     card: string; }; export const YoutubeCard: React.FC<YoutubeCardProps> = React.memo((_) => {     const styles = useVideoYoutubeCardStyles();     const videoId = 'h3BKjZMGoIw';     const thumbnailUrl = `https://img.youtube.com/vi/${videoId}/hqdefault.jpg`;      const handleCardClick = () => {         window.open(`https://www.youtube.com/watch?v=${videoId}`, '_blank');     };      return (         <Card className={styles.card} onClick={handleCardClick}>             <CardPreview>                 <Image                     src={thumbnailUrl}                     alt=""YouTube Thumbnail""                     style={{ width: '100%' }}                 />                 {/*black overlay when hovering*/}                 <div className={styles.overlay}></div>                 <div id=""textOverlay"" className={styles.textOverlay}>                     <p style={{margin: 0}}>Video Test</p>                     <div id=""playButton"" className={styles.playButton}>                         <div className={styles.playButtonTriangle}></div>                     </div>                     {/*    <p style={{ margin: 0 }}>Vide Test Test</p>*/}                 </div>             </CardPreview>         </Card>     ); });  YoutubeCard.displayName = 'YoutubeCard';</code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 25465072, 'reputation': 897, 'user_id': 19264249, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2AAN0xM6.jpg?s=256', 'display_name': 'sahilatahar', 'link': 'https://stackoverflow.com/users/19264249/sahilatahar'}",False,1,1726725565,1726725565,79001058,79000488,CC BY-SA 4.0,"<p>I tried many ways to handle the nested code issue and checked the documentation, but I could not find any way to style the child on parent hover inside <code>makeStyles</code>. Finally, I use a similar package called <code>react-jss</code> to style elements.</p> <p><strong>NOTE:</strong> Some property is not working because they are override by <code>fluent ui</code> so I have added <code>!important</code> in many properties without it properties will not be applied.</p> <h3>You can use <code>react-jss</code> package to achieve your output:</h3> <p>Install <code>react-jss</code> package:</p> <pre class=""lang-bash prettyprint-override""><code>npm i react-jss </code></pre> <pre><code>// YoutubeCard.styles.tsx import { createUseStyles } from ""react-jss""  const useStyles = createUseStyles({     card: {         width: ""300px"",         border: ""1px solid #ccc"",         borderRadius: ""8px"",         overflow: ""hidden"",         position: ""relative"",         cursor: ""pointer"",         transition: ""transform 0.3s, box-shadow 0.3s"",         ""&:hover"": {             transform: ""scale(1.05)"",             boxShadow: ""0 4px 8px rgba(0, 0, 0, 0.2)"",             ""& $overlay"": {                 backgroundColor: ""rgba(0, 0, 0, 0.6)"",             },             ""& $textOverlay"": {                 opacity: 1,             },             ""& $playButton"": {                 opacity: 0,             },         },     },     overlay: {         position: ""absolute"",         top: 0,         left: 0,         width: ""100%"",         height: ""100%"",         backgroundColor: ""rgba(0, 0, 0, 0)"",         transition: ""background-color 0.3s"",     },     textOverlay: {         position: ""absolute"",         top: ""50%"",         left: ""50%"",         transform: ""translate(-50%, -50%)"",         color: ""white"",         opacity: 0,         transition: ""opacity 0.3s"",          height: ""100%"",         display: ""flex !important"", // Without !important property override         flexDirection: ""column"",         justifyContent: ""center"",         alignItems: ""center"",         textAlign: ""center"",     },     playButton: {         position: ""absolute"",         top: ""50%"",         left: ""50%"",         width: ""3rem !important"",         height: ""3rem !important"",         display: ""flex !important"",         justifyContent: ""center"",         alignItems: ""center"",         transform: ""translate(-50%, -50%)"",         backgroundColor: ""rgba(255, 255, 255, 0.8)"",         borderRadius: ""50%"",         transition: ""opacity 0.3s"",     },     playButtonTriangle: {         width: ""50%"",         height: ""50%"",         backgroundColor: ""red"",         marginLeft: "".5rem"",         clipPath: ""polygon(78% 52%, 0 0, 0 100%)"",     }, })  export default useStyles </code></pre> <pre><code>// YoutubeCard.tsx import { Card, CardPreview, Image } from ""@fluentui/react-components"" import * as React from ""react"" import useStyles from ""./YoutubeCard.styles""  export type YoutubeCardProps = {     card: string }  export const YoutubeCard: React.FC<YoutubeCardProps> = React.memo((_) => {     const videoId = ""h3BKjZMGoIw""     const thumbnailUrl = `https://img.youtube.com/vi/${videoId}/hqdefault.jpg`     const styles = useStyles()      const handleCardClick = () => {         window.open(`https://www.youtube.com/watch?v=${videoId}`, '_blank');     }      return (         <Card className={styles.card} onClick={handleCardClick}>             <CardPreview>                 <Image                     src={thumbnailUrl}                     alt=""YouTube Thumbnail""                     style={{ width: ""100%"" }}                 />                 <div className={styles.overlay}></div>                 <div className={styles.textOverlay}>                     <p>Video Test</p>                     <p>Vide Test Test</p>                 </div>                 <div className={styles.playButton}>                     <div className={styles.playButtonTriangle}></div>                 </div>             </CardPreview>         </Card>     ) })  YoutubeCard.displayName = ""YoutubeCard"" </code></pre>",,,true
"{'account_id': 12513488, 'reputation': 3522, 'user_id': 9107694, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c8df0972eede360961e46d3df9a29b48?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'SyndRain', 'link': 'https://stackoverflow.com/users/9107694/syndrain'}",True,1,1726697424,1726695744,79000252,79000174,CC BY-SA 4.0,"<p>One solution is to use grid layout, render both child span, and hide the one that shouldn't be rendered (using <code>visibility:hidden</code>). The advantage is that this can be done pure CSS without needing to calculate the Text size, which is usually pretty troublesome and buggy. But the drawback is of course the user can see the other child in the DOM tree, which might not be ideal depending on your use case.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.wrapper {   display: inline-grid;   border: 1px solid red; /* for showing the size*/ }  .wrapper>span {   grid-column: 1;   grid-row: 1;   text-wrap: nowrap; }  .wrapper>span:not(.rendered) {   visibility: hidden; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><span class=""wrapper"">    <span>Short Text</span>   <span class=""rendered"">Example 1. Long text I'm very long</span> </span> <span class=""wrapper"">    <span class=""rendered"">Example 2. Short Text</span>   <span>Very Long textttttttttttttttttttttttttttttttttttt</span> </span></code></pre>  </div>  </div>  </p> <h3>Code sample</h3> <pre><code>const MyComponent = (props: {     readonly textA: string;     readonly textB: string;     readonly renderB: boolean; }) => {     return (         <span style={{ display: 'inline-grid' }}>             <span                 style={{                     gridColumn: 1,                     gridRow: 1,                     visibility: props.renderB ? 'hidden' : 'visible',                 }}             >                 {props.textA}             </span>             <span                 style={{                     gridColumn: 1,                     gridRow: 1,                     visibility: props.renderB ? 'visible' : 'hidden',                 }}             >                 {props.textB}             </span>         </span>     ); }; </code></pre>",1726697424.0,,true
"{'account_id': 5658021, 'reputation': 2579, 'user_id': 4476484, 'user_type': 'registered', 'accept_rate': 75, 'profile_image': 'https://i.sstatic.net/bMNeb.jpg?s=256', 'display_name': 'nullromo', 'link': 'https://stackoverflow.com/users/4476484/nullromo'}",False,1,1726694559,1726694559,79000204,79000174,CC BY-SA 4.0,"<p>You can use a canvas to measure the width of text. The component from the question can be filled in as follows:</p> <pre><code>const MyComponent = (props: {     readonly textA: string;     readonly textB: string;     readonly renderB: boolean; }) => {     const maxWidth = (() => {         const context = document.createElement('canvas').getContext('2d');         if (context) {             context.font = '16px Roboto';         }         return Math.round(             Math.max(                 context?.measureText(props.textA).width ?? 0,                 context?.measureText(props.textB).width ?? 0,             ),         );     })();      return (         <span             style={{                 display: 'inline-block',                 width: `${maxWidth}px`,             }}         >             {props.renderB ? props.textB : props.textA}         </span>     ); }; </code></pre> <p>The downside is that you have to set the font, which means you need to know the font of the component.</p>",,,true
"{'account_id': 8280837, 'reputation': 66, 'user_id': 6225597, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/8FUZ4.jpg?s=256', 'display_name': 'Zubair Ahmed', 'link': 'https://stackoverflow.com/users/6225597/zubair-ahmed'}",False,1,1726723402,1726723402,79000974,79000148,CC BY-SA 4.0,<p>You can make the argument to getBadgeColor optional like getBadgeColor(param?: T).</p>,,,true
"{'account_id': 15125456, 'reputation': 46, 'user_id': 10914922, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/999ae17c05a08ba9c0802a24e9fc8c30?s=256&d=identicon&r=PG', 'display_name': 'Ikehunter5', 'link': 'https://stackoverflow.com/users/10914922/ikehunter5'}",True,2,1726697885,1726697885,79000320,79000148,CC BY-SA 4.0,"<p>Your function type expects a parameter because of <code>value: T</code> in the function's type. This essentially tells typescript ""Hey, no matter what, there will be a parameter passed in to this function, and it will be of type T"". A quick and easy way to fix this would be to do <code>value?: T</code> instead as this tells typescript that the param ""might or might not be there"", or that it's possibly undefined. The new type would look like this:</p> <pre><code>export type getBadgeColor<T> = (value?: T) => BadgeColor; </code></pre> <p>However, you may want to rethink the prop type you are passing in to the component to improve clarity. If you were to plainly express the type you are passing in to the react component, it would look like this:</p> <pre><code>interface BadgeProps<T> {     label: string;     color?: BadgeColor;     getBadgeColor?: () => ReturnType<getBadgeColor<T>>;     value?: T } </code></pre> <p>since you are passing it a function that calls <code>getBadgeColor</code>.</p> <p>Since you are just passing an anonymous function that doesn't expect an input and should return the badge color, maybe consider using something like this as your prop type:</p> <pre><code>interface BadgeProps<T> {     label: string;     color?: BadgeColor;     getBadgeColor?: () => BadgeColor;     value?: T } </code></pre> <p>This also gives you the flexibility of returning a plain badge color from the function passed in, which may help if you end up storing the badge color in state or something else.</p>",,,true
"{'account_id': 14588149, 'reputation': 1175, 'user_id': 10536232, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-esWCOSge7t0/AAAAAAAAAAI/AAAAAAAAAAs/EcUKJynKuW8/photo.jpg?sz=256', 'display_name': 'Scott Z', 'link': 'https://stackoverflow.com/users/10536232/scott-z'}",True,1,1726870761,1726778381,79004376,78999909,CC BY-SA 4.0,"<p>Since you have access to formContext you should be able to do something like this.</p> <pre><code>const EditableInput = React.forwardRef<HTMLInputElement, EditableInputProps>( ({ className, editPermission = true, ...props }, ref) => {      const {formState, getValues, resetField} = useFormContext(); // returns all the same methods and properties that useForm does.       const [canEdit, setCanEdit] = React.useState<boolean>(false);     const disabled = props.disabled || !editPermission;      const handleEdit = () => {          const value = getValue(props.name)          ....do something with the value....         if (!disabled) {             setCanEdit((prev) => !prev);         }        ...finally...        resetField(props.name, {defaultValue:value})  // this should reset the dirty state and the default value for the field so dirty can be properly detected.              };      const isDirty = formState.dirtyFields[props.name]  // this should be stateful and usable in your JSX to trigger conditional rendering.       return (         <div className=""relative"">......   </code></pre> <p>That will allow you to listen to the specific fields dirty state, get the value of the field on demand and then reset the field and it's default value which should also trigger the field to no longer be dirty.</p> <h2>Note on using the old render props and Controller api</h2> <p>Value and isDirty might be available directly on props, it might be worth investigating.</p> <h2>Small example with a typical form Implementation</h2> <p>Here is a link to a playground showing how this would work with a typical implementation of react-hook-form <a href=""https://stackblitz.com/edit/vitejs-vite-gswvco?file=src%2Fcomponents%2Fform.tsx,src%2Fcomponents%2Fenditable-input.tsx&terminal=dev"" rel=""nofollow noreferrer"">Stackblitz - Playground</a></p> <p>Editable Input component</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>import {   ChangeEventHandler,   forwardRef,   useEffect,   useRef,   useState, } from 'react'; import { Controller, useFormContext } from 'react-hook-form';  type Props = {   name: string; };  type InputProps = {   name: string;   onChange: (val: string) => void;   value: string; };  const Input = forwardRef<HTMLInputElement, InputProps>(function Input(   { value, ...props }: InputProps,   ref ) {   const inputRef = useRef<HTMLInputElement | null>(null);   const [isEditing, setIsEditing] = useState(false);   const {     formState: { dirtyFields },     resetField,     getValues,   } = useFormContext();   const isDirty = !!dirtyFields[props.name];   const handleChange: ChangeEventHandler<HTMLInputElement> = (e) => {     const val = e.target.value;     props.onChange?.(val);   };    const handleUpdate = () => {     const value = getValues(props.name);     resetField(props.name, { defaultValue: value });     setIsEditing(false);   };    useEffect(() => {     if (isEditing) {       inputRef.current?.focus();     }   }, [isEditing]);   return (     <div className=""input-wrapper"">       <input         ref={(e) => {           if (e) {             inputRef.current = e;           }           if (typeof ref === 'function') {             ref(e);           }         }}         type=""text""         value={value}         name={props.name}         onChange={handleChange}         disabled={!isEditing}         className={isEditing ? 'active' : ''}       />       {isDirty ? (         <button type=""button"" onClick={handleUpdate}>           Update         </button>       ) : (         <button           type=""button""           onClick={() => {             setIsEditing((p) => !p);           }}         >           Edit         </button>       )}     </div>   ); });  export default function EditableInput(props: Props) {   return (     <Controller       name={props.name}       render={(props) => {         return (           <Input             value={props.field.value}             name={props.field.name}             onChange={props.field.onChange}             ref={props.field.ref}           />         );       }}     />   ); }</code></pre>  </div>  </div>  </p> <p>form component</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>import { useState } from 'react'; import EditableInput from './enditable-input'; import { useForm, FormProvider, SubmitHandler } from 'react-hook-form';  const defaultValues = {   field1: '',   field2: '',   field3: '',   field4: '', };  export default function Form() {   const [result, setResult] = useState<typeof defaultValues | null>(null);   const methods = useForm({ defaultValues });   const handleSubmit: SubmitHandler<typeof defaultValues> = (data) => {     setResult(data);   };   const handleReset = () => {     setResult(null);     methods.reset(defaultValues);   };   return (     <div className=""form-container"">       <FormProvider {...methods}>         <form           className=""form""           id=""form-test""           onSubmit={methods.handleSubmit(handleSubmit)}         >           <EditableInput name=""field1"" />           <EditableInput name=""field2"" />           <EditableInput name=""field3"" />           <EditableInput name=""field4"" />         </form>         <div className=""control-container"">           <button type=""submit"" form=""form-test"" className=""button"">             Submit           </button>           <button             type=""button""             className=""button""             onClick={() => handleReset()}           >             reset           </button>         </div>       </FormProvider>       {result && <pre>{JSON.stringify(result, null, 2)}</pre>}     </div>   ); }</code></pre>  </div>  </div>  </p>",1726870761.0,,true
"{'account_id': 12264495, 'reputation': 38914, 'user_id': 8951377, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2MYqI.jpg?s=256', 'display_name': 'ppotaczek', 'link': 'https://stackoverflow.com/users/8951377/ppotaczek'}",True,1,1726845631,1726845631,79007370,78999780,CC BY-SA 4.0,"<p>The best solution will be to use annotations with the custom shape and plot lines without labels. For example:</p> <pre><code>Highcharts.SVGRenderer.prototype.symbols.customArrow = function (x, y, w, h) {   return ['M', x, y, 'L', x + w, y, x + w, y + h, x, y + h, x - 10, y +h / 2, 'z']; }; </code></pre> <hr /> <pre><code>  annotations: [{     crop: false,     events: {       add: function(){         const rotateLabel = (label) => {           const {             width,             height           } = label.graphic.getBBox();           label.attr({             rotation: -90,             rotationOriginX: width / 2,             rotationOriginY: height / 2           });         }          rotateLabel(this.labels[0]);         rotateLabel(this.labels[1]);       }     },     labels: [{       shape: 'customArrow',       text: 'Current',       ...     }, ...]   }] </code></pre> <hr /> <p><strong>Live demo:</strong> <a href=""https://stackblitz.com/edit/react-cfh7pt?file=index.js,style.css"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/react-cfh7pt?file=index.js,style.css</a></p> <p><strong>API Reference:</strong> <a href=""https://api.highcharts.com/highcharts/annotations"" rel=""nofollow noreferrer"">https://api.highcharts.com/highcharts/annotations</a></p> <p><strong>Docs:</strong> <a href=""https://www.highcharts.com/docs/advanced-chart-features/annotations-module"" rel=""nofollow noreferrer"">https://www.highcharts.com/docs/advanced-chart-features/annotations-module</a></p>",,,true
"{'account_id': 31757085, 'reputation': 1, 'user_id': 26426532, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocJK7_UM1HUI2YrH90BaiRzXOO969lMpHp7oWgWs5y2BJRYtmg=k-s256', 'display_name': 'Nikita Belov', 'link': 'https://stackoverflow.com/users/26426532/nikita-belov'}",False,0,1728357051,1728357051,79064206,78999742,CC BY-SA 4.0,<p>Had this one. Happened that my dependencies were old. Just run: bun add @uploadthing/react uploadthing</p>,,,true
"{'account_id': 22134893, 'reputation': 81, 'user_id': 16385863, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b26d2af53e8babecbf682942e9c8e39c?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Eyitayo Olaigbe', 'link': 'https://stackoverflow.com/users/16385863/eyitayo-olaigbe'}",False,0,1728223626,1728223626,79059281,78999742,CC BY-SA 4.0,"<p>To fix this you will need to use The Protection Bypass for Automation feature provided by vercel by generating a secret and adding this secret to your uploadThing settings. Follow the guide here: <a href=""https://docs.uploadthing.com/faq"" rel=""nofollow noreferrer"">https://docs.uploadthing.com/faq</a>.</p> <p>You can read more about this feature on vercel here: <a href=""https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/protection-bypass-automation"" rel=""nofollow noreferrer"">https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/protection-bypass-automation</a></p>",,,true
"{'account_id': 27444689, 'reputation': 412, 'user_id': 20938705, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/nPJxp.jpg?s=256', 'display_name': 'AmirHossein_Khakshouri', 'link': 'https://stackoverflow.com/users/20938705/amirhossein-khakshouri'}",False,1,1726688119,1726687370,78999893,78999742,CC BY-SA 4.0,"<p>If I understood the problem correctly, as the docs say</p> <p>only assets that are in the public directory at <code>build time</code> are rendered by Next.js. Added files <strong>will not be</strong> available at the time of request. We recommend using a third-party service such as Vercel Blob for permanent file storage.</p> <p><a href=""https://nextjs.org/docs/pages/building-your-application/optimizing/static-assets"" rel=""nofollow noreferrer"">https://nextjs.org/docs/pages/building-your-application/optimizing/static-assets</a></p>",1726688119.0,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,1,1726685950,1726685374,78999791,78999733,CC BY-SA 4.0,"<p>Partial path matches are not allowed in React-Router 6.</p> <p>You can either make the city a separate segment (<em>recommended</em>):</p> <pre class=""lang-js prettyprint-override""><code>path=""/property-in/:cityName"" </code></pre> <p>Or make the entire segment dynamic and parse the segment in the component:</p> <pre class=""lang-js prettyprint-override""><code>path=""/:propertyInCity"" // ""/property-in-newyork"" </code></pre> <pre class=""lang-js prettyprint-override""><code>const { propertyInCity } = useParams(); const [,,city] = propertyInCity.split(""-""); // [""property"", ""in"", ""newyork""] </code></pre> <p>See <a href=""https://reactrouter.com/en/main/route/route#dynamic-segments"" rel=""nofollow noreferrer"">Dynamic Segments</a> for complete details.</p>",1726685950.0,,true
"{'account_id': 27434665, 'reputation': 164, 'user_id': 20930777, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/8kQiA.jpg?s=256', 'display_name': 'sphnx', 'link': 'https://stackoverflow.com/users/20930777/sphnx'}",False,-1,1726685154,1726685154,78999776,78999733,CC BY-SA 4.0,"<p>Dynamic segments cannot be ""partial"":</p> <p><code>ð«""/teams-:teamId""</code> <code>â ""/teams/:teamId""</code> <code>ð« ""/:category--:productId""</code> <code>â ""/:productSlug""</code></p> <p>However, you can create your own way of handling it</p> <p>For something like <code>""/:category--:productId""</code> you can do:</p> <pre><code>  const { productSlug } = useParams();   const [category, product] = productSlug.split(""--""); </code></pre> <p>I hope this clears your doubts</p> <p>For your reference: <a href=""https://reactrouter.com/en/main/route/route"" rel=""nofollow noreferrer"">React Router</a></p>",,,true
"{'account_id': 35723840, 'reputation': 15, 'user_id': 27366414, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/6b96f0cad87cfdd2fe4ed39d72d78fbd?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'timo', 'link': 'https://stackoverflow.com/users/27366414/timo'}",False,0,1726723903,1726723903,79000999,78999231,CC BY-SA 4.0,"<p>As stated by <em>@Anandhu</em>, the problem was that when clicking in the checkbox it fired both events, selectorPane.onBlur() & checkbox.onChange(), which causes a double state change, so it flickered and remain the same.</p> <p>The optimal solution for me was checking if the new focused element is the checkbox by using the <strong>relatedTarget</strong> prop of the <em>FocusEvent object</em>, and skipping the state change from the onBlur() when that was the case.</p> <p>For that:</p> <ul> <li>added a reference to checkbox element</li> <li>on the handleSelectorPaneBlur func, <strong>skipped execution if e.relatedTarget == checkboxRef.current</strong></li> </ul> <p>The code with this solution:</p> <pre><code>import { useEffect, useRef, useState } from ""react""  import ""./Selector.css""  export default function Selector() {   const selectorPaneRef = useRef<HTMLDivElement | null>(null);   const checkboxRef = useRef<HTMLInputElement | null>(null);     const [ selectorPaneVisible, setSelectorPaneVisible ] = useState(false);    const handleCheckboxStateChange = (e: React.ChangeEvent<HTMLInputElement>) => {     const checkbox = e.target as HTMLInputElement;     setSelectorPaneVisible(checkbox.checked);   }    const handleSelectorPaneBlur = (e: React.FocusEvent<HTMLDivElement>) => {     //let checkbox handle the state change when it is the new focused element     if (e.relatedTarget == checkboxRef.current) {       return;     }           setSelectorPaneVisible(false);   }     //autofocus selector-pane when rendering with selectorPaneVisible = true   useEffect(() => {     if (selectorPaneVisible && !!selectorPaneRef.current) {       selectorPaneRef.current.focus();     }   }, [selectorPaneVisible])    return (     <div className=""selector"">       <input         type=""checkbox""         checked={selectorPaneVisible}         onChange={handleCheckboxStateChange}         ref={checkboxRef}       />       <div         className={`selector-pane ${selectorPaneVisible ? ""visible"" : """"}`}         onBlur={handleSelectorPaneBlur}         tabIndex={-1}         ref={selectorPaneRef}       >         content content content content       </div>     </div>   ) } </code></pre> <p>Css didn't change:</p> <pre><code>.selector > div {   background-color: green;   visibility: hidden; } .selector > div:focus {   background-color: red; } .selector > div.visible {   visibility: visible; } </code></pre> <p>Thanks to <em>@Anandhu</em> for the response & <em>@Drew Reese</em> for edition. ð</p>",,,true
"{'account_id': 20598744, 'reputation': 91, 'user_id': 15120463, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GiePiuJ1lf63hp_bWgt3JGCQDmlqQPoOSGFVzPdJw=k-s256', 'display_name': 'Anandhu', 'link': 'https://stackoverflow.com/users/15120463/anandhu'}",True,0,1726683071,1726683071,78999639,78999231,CC BY-SA 4.0,"<p>The issue is with the <code>onBlur</code> callback (actually that's how it's supposed to work).</p> <p>When the checkbox is checked, it sets the focus to the <code>selectorPane</code>. If you click the checkbox again to toggle visibility, the focus shifts from the <code>selectorPane</code> to the checkbox, causing the <code>onBlur</code> event of the <code>selectorPane</code> to fire prematurely.</p> <p>This hides the <code>selectorPane</code> before the checkbox click event can complete, leading to flickering as the state is reset.</p> <p>To verify this issue, you can add a delay to the state update inside the <code>onBlur</code> callback. For example:</p> <pre class=""lang-js prettyprint-override""><code>const handleSelectorPaneBlur = e => {   setTimeout(() => {     setSelectorPaneVisible(false);   }, 500); }; </code></pre> <p>Adding a timeout to the state update in the <code>onBlur</code> callback delays hiding the <code>selectorPane</code>, allowing the checkbox click event to complete properly.</p>",,,true
"{'account_id': 1915753, 'reputation': 402, 'user_id': 1728379, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c06a7fc686bc021258d1bf34c3397b6e?s=256&d=identicon&r=PG', 'display_name': 'krzysu', 'link': 'https://stackoverflow.com/users/1728379/krzysu'}",False,0,1728983939,1728983939,79089280,78999130,CC BY-SA 4.0,"<p>The Web3 library is installed correctly, but youâre seeing warnings about vulnerabilities in its subdependencies. These issues are the responsibility of the library maintainers, so you donât need to resolve them yourself. You can continue building your app, and the vulnerabilities should be addressed in future library updates.</p> <p>So you just run:</p> <pre><code>npm install web3 </code></pre> <p>And go back to building your dApp.</p>",,,true
"{'account_id': 19255510, 'reputation': 342, 'user_id': 14072521, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GjqjdEJ6E6oP0pTszmhZfNYbGCdVIFuZ7MTZqL9cVM=k-s256', 'display_name': 'Lindsey', 'link': 'https://stackoverflow.com/users/14072521/lindsey'}",False,0,1726814937,1726814937,79005566,78999128,CC BY-SA 4.0,"<p>Here are some ways you can manage the integration:</p> <ol> <li>Override MUIâs CSS Baseline: MUI uses a <code>CssBaseline</code> component to apply global styles similar to Tailwind's <code>preflight</code>. Instead of disabling Tailwind's <code>preflight</code>, you can override MUI's <code>CssBaseline</code> where needed.</li> </ol> <p>Add this to your main entry file (e.g., <code>index.js</code> or <code>App.js</code>):</p> <pre class=""lang-js prettyprint-override""><code>import { CssBaseline } from '@mui/material'; import { createTheme, ThemeProvider } from '@mui/material/styles';  // Create a custom theme without MUI's baseline styles const theme = createTheme({   components: {     MuiCssBaseline: {       styleOverrides: {         // Override global styles to avoid conflicts with Tailwind         body: {           margin: 0,         },         '*': {           boxSizing: 'border-box',         },       },     },   }, });  function App() {   return (     <ThemeProvider theme={theme}>       <CssBaseline />       {/* Your App components go here */}     </ThemeProvider>   ); }  export default App; </code></pre> <p>This allows you to retain Tailwind's <code>preflight</code> while removing some of MUI's global styling that may conflict with it.</p> <ol start=""2""> <li>Scoped MUI Usage:</li> </ol> <p>Instead of applying MUI components globally, scope them to specific parts of your application. Use Tailwind for most of the layout and styling, and apply MUI components only where necessary. This can help prevent unwanted style overrides.</p> <ol start=""3""> <li>Customizing Tailwindâs Preflight:</li> </ol> <p>If certain parts of Tailwind's preflight are conflicting with MUI, you can customize preflight rather than disabling it completely. Tailwind's <code>preflight</code> can be extended or adjusted in your <code>tailwind.config.js</code> file:</p> <pre class=""lang-js prettyprint-override""><code>module.exports = {   corePlugins: {     preflight: true,   },   theme: {     extend: {       // Your custom settings here     },   }, }; </code></pre> <p>By combining these strategies, you can effectively use MUI with Tailwind without turning off <code>preflight</code>.</p>",,,true
"{'account_id': 23729158, 'reputation': 846, 'user_id': 17748676, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/8235720c55e5b85621ae41754d1ddcf8?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Jouhar', 'link': 'https://stackoverflow.com/users/17748676/jouhar'}",False,0,1726682189,1726682189,78999599,78998749,CC BY-SA 4.0,"<p>I did similar language based routing in my project and following was my approach. Try updating middleware as follows.</p> <pre><code>//middleware.tsx const i18n = {   locales: [""pt"", ""en""], }; export default async function middleware(   req: NextRequest,   event: NextFetchEvent ) {   const pathname = req.nextUrl.pathname;    const localeInPathName = i18n.locales.find((locale) =>     pathname.startsWith(`/${locale}`)   );   let locale = localeInPathName ?? ""en"";     //for client routes only adding locale   if (     !localeInPathName &&     !(       pathname.startsWith(""/_next"") ||       pathname.includes(""/api/"") ||       PUBLIC_FILE.test(pathname)     )   ) {     return NextResponse.redirect(       new URL(         `/${locale}${pathname.startsWith(""/"") ? """" : ""/""}${pathname}`,         req.url       )     );   }  //Other scenarios </code></pre> <p>}</p>",,,true
"{'account_id': 31081729, 'reputation': 228, 'user_id': 23892802, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/JfWBg0g2.jpg?s=256', 'display_name': 'Feenix Net', 'link': 'https://stackoverflow.com/users/23892802/feenix-net'}",False,1,1726694211,1726670753,78998845,78998722,CC BY-SA 4.0,"<p>Plyr might be overriding some CSS properties, which is why your settings aren't working as expected.</p> <ol> <li><p><strong>Fixing Aspect ratio for Plyr</strong> <br> plyr creates additional wrapper elements that can interfere with direct CSS control over the video element. To ensure the aspect ratio works as expected, you need to control both the wrapper element and the video element inside. <br><br>I will give you the updated CSS for Playr</p> <pre><code> /* Wrapper for the Plyr player */  .plyr-container {  position: relative;  width: 100%; /* Ensures it fills the parent container */  padding-top: 56.25%; /* Aspect ratio: 16:9 (9 / 16 = 0.5625) */  height: 0; /* Important for aspect ratio handling */  overflow: hidden; /* Prevents content overflow */  }   /* Ensures the video element respects the parent container's dimensions */  .plyr-container video {  position: absolute;  top: 0;  left: 0;  width: 100%;  height: 100%;  object-fit: contain; /* This will maintain aspect ratio and fit within the bounds */  } </code></pre> </li> <li><p><strong>Enforcing consistency across all players</strong> <br> So you want to ensure that Plyr, Video.js, and your proprietary player behave consistently. <br></p> <pre><code> /* Shared styling for all video containers */  .video-container, .short-video-container, .plyr-container {      position: relative;      width: 100%;      padding-top: 56.25%; /* For 16:9 aspect ratio */      height: 0;      overflow: hidden;  }   /* Apply to video.js player */  .video-js {      position: absolute;      top: 0;      left: 0;      width: 100%;      height: 100%;      object-fit: contain;  }   /* Apply to the custom player video and Plyr */  .video-container video,   .plyr-container video,  .short-video-container video {      position: absolute;      top: 0;      left: 0;      width: 100%;      height: 100%;      object-fit: contain;  } </code></pre> </li> </ol> <p>Adjusting JavaScript for Plyr Player In some cases, Plyr might interfere with CSS sizing due to its own settings. You can disable certian native behaviors or set the aspect ratio in the Plyr options when initializing the player.</p> <p>So change index.js like this</p> <pre><code>if (!playerRef.current) {     playerRef.current = new Plyr(videoRef.current, {         controls: [             'play-large', 'restart', 'rewind', 'play', 'fast-forward', 'progress', 'current-time',              'duration', 'mute', 'volume', 'captions', 'settings', 'pip', 'airplay', 'fullscreen'         ],         ratio: '16:9', // Enforces the 16:9 aspect ratio in Plyr settings         fullscreen: {             enabled: true, // Ensures proper scaling in fullscreen mode             fallback: true,             iosNative: true         }     });      playerRef.current.source = {         type: 'video',         sources: [             {                 src: videoData?.video_link,                 type: 'video/mp4',             }         ]     };     playerRef.current.on('timeupdate', () => {         const currentTime = playerRef.current.currentTime;         setCurrentTime(currentTime);     }); } </code></pre>",1726694211.0,,true
"{'account_id': 26404808, 'reputation': 36, 'user_id': 20054758, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/1e0a5a7c3b958ed0154bedf0d587a4d4?s=256&d=identicon&r=PG', 'display_name': 'Samuel Santos', 'link': 'https://stackoverflow.com/users/20054758/samuel-santos'}",False,1,1726669845,1726669845,78998765,78998696,CC BY-SA 4.0,"<p>I recommend you to go read the react docs. That is not how components are used.</p> <p>What you want is probably something like this:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-html lang-html prettyprint-override""><code>function UserRules({ intl, home, dispatch }) {   const [selectedVoucherOption, setSelectedVoucherOption] = useState(null);    return (     <>       <Row>         <Col xs={12}>           <Label required>{intl.formatMessage({ ...messages.voucherOptions.header })}</Label>           <Dropdown             options={voucherOptions}             placeholder={intl.formatMessage({ ...messages.voucherOptions.placeholder })}             onChange={(_evt, obj) => {               setSelectedOption(obj);             }}           />         </Col>       </Row>       <UserEmail selectedVoucherOption={selectedVoucherOption} />     </>   )      function UserEmail({ selectedVoucherOption }) {     return (<span>{selectedVoucherOption}</span>)   }</code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 129540, 'reputation': 217665, 'user_id': 328193, 'user_type': 'registered', 'accept_rate': 91, 'profile_image': 'https://i.sstatic.net/FnwU5.jpg?s=256', 'display_name': 'David', 'link': 'https://stackoverflow.com/users/328193/david'}",True,1,1726669751,1726669751,78998752,78998696,CC BY-SA 4.0,"<p>Rendering a component happens in the JSX, not in a function.  (Though a function can certainly be used to build JSX, but that function would have to build JSX and not simply reference a component function like you're attempting.)</p> <p>For example:</p> <pre><code><Dropdown   options={voucherOptions}   placeholder={intl.formatMessage({ ...messages.voucherOptions.placeholder })}   onChange={(_evt, obj) => {     setSelectedOption(obj);   }} /> <UserEmail /> </code></pre> <p>Note the <code><UserEmail /></code> as a standalone element in the markup.  You can <em>conditionally</em> include it by wrapping it in a conditional expression.  For example:</p> <pre><code><Dropdown   options={voucherOptions}   placeholder={intl.formatMessage({ ...messages.voucherOptions.placeholder })}   onChange={(_evt, obj) => {     setSelectedOption(obj);   }} /> { someCondition ? <UserEmail /> : null } </code></pre> <p>Note that the JavaScript expression is wrapped in <code>{}</code> to indicate that it is an expression and not JSX markup.  Whatever condition you use as <code>someCondition</code> would determine whether the expression evaluates to <code><UserEmail /></code> or <code>null</code>.</p> <p>If you want to pass a prop to it, you'd do that exactly like the props you're already passing to other components:</p> <pre><code><Dropdown   options={voucherOptions}   placeholder={intl.formatMessage({ ...messages.voucherOptions.placeholder })}   onChange={(_evt, obj) => {     setSelectedOption(obj);   }} /> { someCondition ? <UserEmail someProp={selectedVoucherOption} /> : null } </code></pre> <p>And in the component you'd read that prop:</p> <pre><code>function UserEmail({ intl, onValueChange, someProp }) {   // Logic based on someProp } </code></pre> <p>Basically, the component you write is structurally no different from the 3rd party components you're already using.  A component is a component either way.  You'd include it in the JSX, conditionally or otherwise, and pass props to it like any other component.</p>",,,true
"{'account_id': 3344563, 'reputation': 39, 'user_id': 2809967, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/11da29129423bbcba7701ec4baf7be54?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'LulzSec', 'link': 'https://stackoverflow.com/users/2809967/lulzsec'}",False,0,1727893719,1727893719,79048050,78998370,CC BY-SA 4.0,<p><em>stack trace references Firebase -  getImmediate and getOrInitializeService</em></p> <p>I think firebase SDK is trying to access the 'navigator' object which is not available in the node.js environment</p>,,,true
"{'account_id': 31922780, 'reputation': 1, 'user_id': 24733428, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/vTNd1Lco.jpg?s=256', 'display_name': 'Konan', 'link': 'https://stackoverflow.com/users/24733428/konan'}",False,0,1726664419,1726664419,78998357,78998317,CC BY-SA 4.0,"<p>This looks to me like a good approach to avoid triggering multiple queries in rapid succession.</p> <p>What also would be possible to optimize, is by leveraging libraries like React Query's useQuery hook, which natively supports a staleTime option or refetch triggers.</p> <p>If debouncing is still required, consider using a more minimal approach without custom hooks or integrating a more specialized debounce library like lodash.</p> <p>A possible improvement without custom debounce logic could be:</p> <ol> <li>Use Lodash Debounce Lodash's debounce function is widely used and reliable for these scenarios.</li> </ol> <pre class=""lang-js prettyprint-override""><code>import { debounce } from 'lodash'; import { useQuery } from 'react-query';  const [start, setStart] = useState(0); const [search, setSearch] = useState('');  const fetchUsers = useCallback(debounce((start, search) => getUsers(start, search), 500), []);  const { data: usersData, error: usersError, isLoading: usersIsLoading, isError: usersIsError } = useQuery({     queryKey: ['users', start, search],     queryFn: () => fetchUsers(start, search),     staleTime: 500 // Optional: time to consider data fresh, avoids refetching }); </code></pre> <ol start=""2""> <li>Refine Debouncing Strategy Another way is to make sure that you debounce the setter functions for start and search only, which would be slightly more performant:</li> </ol> <pre class=""lang-js prettyprint-override""><code>const debouncedSetStart = useCallback(debounce(setStart, 500), []); const debouncedSetSearch = useCallback(debounce(setSearch, 500), []); </code></pre> <p>This for example, avoids the need for wrapping the entire query in a debounce handler, allowing the state updates to be controlled precisely, reducing unnecessary renders and queries.</p> <p>Both approaches aim to improve maintainability and avoid custom debounce hooks unless really needed.</p> <p>I hope I could help somehow, K.</p>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,0,1726671464,1726670383,78998808,78998228,CC BY-SA 4.0,"<blockquote> <p>I'm expecting the <code>votes: {count}</code> to show up on mount.</p> </blockquote> <p>It <em>does</em> display/render on the initial render cycle, but the problem is that the initial <code>article</code> state has an undefined <code>votes</code> property.</p> <pre class=""lang-js prettyprint-override""><code>const [article, setArticle] = useState({   title: ""Not Found"" // no votes property }); const [count, setCount] = useState(article.votes); // undefined </code></pre> <p>I suggest you provide a default <code>votes</code> property value, and update the effect to also update the <code>count</code> state when it updates the <code>article</code> state. <em><strong>Don't</strong></em> forget to include the <code>article_id</code> route path parameter as a dependency so the effect also runs if/when the article id parameter value changes.</p> <pre class=""lang-js prettyprint-override""><code>const [article, setArticle] = useState({   title: ""Not Found"",   votes: 0, }); const [count, setCount] = useState(article.votes);  useEffect(() => {   getArticle(article_id)     .then((article) => {       setArticle(article);       setCount(article.votes);     }); }, [article_id]); </code></pre> <p>The vote handlers are also mutating the <code>article</code> state with the post-increment/decrement operators. You should avoid mutating React states. Add or subtract 1 from the current <code>article.votes</code> value and pass <em>that</em> result to the <code>setCount</code> state setter function.</p> <pre class=""lang-js prettyprint-override""><code>function handleCountUp() {   updateArticleVotes(article_id, count, article.votes);   setCount(article.votes + 1); }  function handleCountDown() {   updateArticleVotes(article_id, count, article.votes);   setCount(Math.max(0, article.votes - 1)); } </code></pre> <p>The <code>count</code> state appears to be ""derived"" state from the <code>article</code> state, and typically is not recommended to also exist as React state. I suggest you update the code to update the <code>article.votes</code> state value directly and avoid the effectively duplicate <code>count</code> state.</p> <p>Example:</p> <pre class=""lang-js prettyprint-override""><code>const [article, setArticle] = useState({   title: ""Not Found"",   votes: 0, });  useEffect(() => {   getArticle(article_id)     .then((article) => {       setArticle(article);     }); }, [article_id]);  ...  function handleCountUp() {   updateArticleVotes(article_id, article.votes + 1);   setArticle(article => ({     ...article,     votes: article.votes + 1,   })); }  function handleCountDown() {   updateArticleVotes(article_id, Math.max(0, article.votes - 1);   setArticle(article => ({     ...article,     votes: Math.max(0, article.votes - 1),   })); }  ...  return (   <div>     <div className=""one-article-div"" id=""top"">       <h5>Votes: {article.votes}</h5>       <button         onClick={handleCountUp}         name=""Vote Up""         className=""input-submit margin-left-right""       >         Vote Up       </button>       <button         onClick={handleCountDown}         name=""Vote Down""         className=""input-submit margin-left-right""       >         Vote Down       </button>     </div>   </div> ); </code></pre>",1726671464.0,,true
"{'account_id': 4890128, 'reputation': 28417, 'user_id': 3963067, 'user_type': 'registered', 'accept_rate': 89, 'profile_image': 'https://www.gravatar.com/avatar/9717976cda8a758727ed0ca5451429bc?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Giorgi Moniava', 'link': 'https://stackoverflow.com/users/3963067/giorgi-moniava'}",False,1,1726669117,1726663523,78998275,78998228,CC BY-SA 4.0,"<blockquote> <p>At the moment the votes {count} is not showing up on mount</p> </blockquote> <p>It would not show up, because here:</p> <pre><code>  const [count, setCount] = useState(article.votes); </code></pre> <p>you have initialized <code>count</code> with <code>article.votes</code>. <em>Even if you change <code>article.votes</code> to something else afterwards, the <code>count</code> will not be re-initialized.</em> From the <a href=""https://react.dev/reference/react/useState#parameters"" rel=""nofollow noreferrer"">docs</a>:</p> <blockquote> <p>The value you want the state to be initially. It can be a value of any type, but there is a special behavior for functions. This argument is ignored after the initial render.</p> </blockquote> <p>You have to update <code>count</code> too using <code>setCount</code>, after  you get new <code>article</code> in <code>useEffect</code>.</p>",1726669117.0,,true
"{'account_id': 34480556, 'reputation': 149, 'user_id': 26592787, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5b4ddd206a5a44f0dae0fb2dcea85d67?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'jupremator', 'link': 'https://stackoverflow.com/users/26592787/jupremator'}",False,3,1726663651,1726663651,78998289,78998228,CC BY-SA 4.0,"<p>Inside the useEffect you need to add a setCount(article.votes).</p> <p>In your case, it doesn't work because the useEffect run after the mounting of your component. So at that time articles is undefined so votes is also undefined. And the initializer of the count state is set to undefined.</p> <pre><code>useEffect(() => {     getArticle(article_id).then((article) => {       setArticle(article);       setCount(article.votes);     });   }, []); </code></pre>",,,true
"{'account_id': 24589621, 'reputation': 374, 'user_id': 18493710, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/i81lL.jpg?s=256', 'display_name': 'okaeiz', 'link': 'https://stackoverflow.com/users/18493710/okaeiz'}",True,3,1726659543,1726659543,78998007,78997953,CC BY-SA 4.0,"<p>I guess your function is updating <code>taskData</code> multiple times within a loop so React may batch these updates for performance reasons. I'd do somtheing like this:</p> <pre class=""lang-js prettyprint-override""><code>import React, { useState, useEffect, useCallback } from 'react';  const DataManipulation = ({ data }) => {   const [taskData, setTaskData] = useState([]);    const addObjectToArray = useCallback((array, task, sub) => {     return [...array, { task, sub }];   }, []);    const subItemMaker = useCallback((subItem, task) => { // create a new array of items, then updates the state once with all new items.     const newItems = subItem.reduce((acc, sub) => {       if (preconditionCheck(sub)) {         return addObjectToArray(acc, task, sub);       }       return acc;     }, []);      setTaskData(prevTaskData => [...prevTaskData, ...newItems]);   }, [addObjectToArray]);    const makeUniqueProducts = useCallback((dataValues) => {     dataValues.forEach((dataItem) => {       subItemMaker(dataItem.subItemValues, dataItem.name);     });   }, [subItemMaker]);    useEffect(() => {     makeUniqueProducts(data);   }, [data, makeUniqueProducts]);    useEffect(() => {     console.log(taskData);   }, [taskData]);    return (     <>       {JSON.stringify(taskData)}     </>   ); };  export default DataManipulation; </code></pre> <p>I used the functional form of <code>setTaskData</code> to ensure we're always working with the most up-to-date state.</p>",,,true
"{'account_id': 18159614, 'reputation': 135, 'user_id': 13211175, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/ZtrrI.jpg?s=256', 'display_name': 'Tosin Ola', 'link': 'https://stackoverflow.com/users/13211175/tosin-ola'}",False,0,1728597854,1728597854,79076284,78997927,CC BY-SA 4.0,<p>you can try checking the type before accessing properties eg check the media type then safely access properties</p> <pre><code><View>   {moviesData.results.map((result: Media) => (     <Text key={result.id}>       {'original_title' in result ? result.original_title : 'N/A'}     </Text>   ))} </View> <View>   {showsData.results.map((result: Media) => (     <Text key={result.id}>       {'original_name' in result ? result.original_name : 'N/A'}     </Text>   ))} </View> </code></pre>,,,true
"{'account_id': 20676644, 'reputation': 55, 'user_id': 15181085, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-UmDtX1kdrGA/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucn8UqLHXv-GmBuJVb4nWrmo1WV9CA/s96-c/photo.jpg?sz=256', 'display_name': 'Chandru Logan', 'link': 'https://stackoverflow.com/users/15181085/chandru-logan'}",False,0,1726808727,1726808727,79005280,78997885,CC BY-SA 4.0,"<p>I finally found a way to fix this issue. Below are the steps I took to avoid the import statement error:</p> <p>When I checked the error, I noticed the path was pointing to the node_modules/axios file. By default, JEST should not include node_modules in testing, but in this case, it was happening. What I did was include node_modules in the configuration, and here are the changes I made in my jest.config.js:</p> <pre><code>    module.exports = {   transform: {     ""^.+\\.(js|jsx)$"": ""babel-jest""   },   transformIgnorePatterns: [     ""node_modules/(?!axios)"" // This will include axios from node_modules   ],   moduleNameMapper: {     ""\\.(css|less|sass|scss)$"": ""<rootDir>/__mocks__/styleMock.js"",   },   transform: {     ""^.+\\.(js|jsx)$"": ""babel-jest"",     ""^.+\\.svg$"": ""<rootDir>/svgTransform.js"", // This will avoid the error for SVG imports thrown by JEST     ""^.+\\.gif$"": ""<rootDir>/svgTransform.js"", // Handles GIF files similarly   },   moduleFileExtensions: [""js"", ""jsx"", ""json"", ""node""],   setupFiles: [""<rootDir>/jest.setup.js""], // Path to the setup file   testEnvironment: ""jsdom"", // This ensures the use of jsdom   setupFilesAfterEnv: ['<rootDir>/setupTests.js'], // Additional setup file   esModuleInterop: true }; </code></pre> <p>Hereâs my svgTransformer.js file (in case you need it):</p> <pre><code>module.exports = {   process() {     return {       code: `module.exports = {};`,       };     },      getCacheKey() {     // The output is always the same.     return ""svgTransform"";      },    }; </code></pre>",,,true
"{'account_id': 24589621, 'reputation': 374, 'user_id': 18493710, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/i81lL.jpg?s=256', 'display_name': 'okaeiz', 'link': 'https://stackoverflow.com/users/18493710/okaeiz'}",False,1,1726653876,1726653876,78997629,78997453,CC BY-SA 4.0,"<p>Your approach of passing a ref as a prop and populating it in a <code>useEffect</code> could work in simple cases. But it has some drawbacks:</p> <ol> <li>It's less idiomatic React code, which might confuse other developers.</li> <li>It doesn't provide the same level of encapsulation and API control. In fact <code>useImperativeHandle</code> allows you to explicitly define the public API of your component. You can expose only the methods you want, rather than the entire DOM node or component instance. This helps in maintaining better encapsulation and a cleaner API.</li> <li>It might lead to unnecessary re-renders if not implemented carefully.</li> </ol> <p>However you're not entirely wrong I guess.</p>",,,true
"{'account_id': 30632361, 'reputation': 1177, 'user_id': 23482465, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocLAZLa5VxbWiH6PTRVjXMnKAUjg3HrKiQeLqc8T1wL6Aw=k-s256', 'display_name': 'WeDoTheBest4You', 'link': 'https://stackoverflow.com/users/23482465/wedothebest4you'}",True,2,1726718229,1726652429,78997536,78997429,CC BY-SA 4.0,"<blockquote> <p>but I need the changed value. otherwise I can't update the state, as a result edit will not be performed. Help please.</p> </blockquote> <p>For a controlled input, the changed value is to be collected into the respective state character-wise. The below code does that.</p> <pre><code>  let changeHandler = (event) => {     let { value, name } = event.target;     console.log(name, value);     const newObj = {       ...old,       [name]: value,     };     setOld(newObj);   }; </code></pre> <p><strong>Further info :</strong></p> <p><a href=""https://react.dev/reference/react-dom/components/input#optimizing-re-rendering-on-every-keystroke"" rel=""nofollow noreferrer"">Optimizing re-rendering on every keystroke</a></p> <p><a href=""https://react.dev/reference/react/useDeferredValue#deferring-re-rendering-for-a-part-of-the-ui"" rel=""nofollow noreferrer"">Deferring re-rendering for a part of the UI</a></p> <p><strong>Sample code - full listing</strong></p> <p>Please see the test run results enclosed below and then please try the below code. See if it is possible to delete and update the field values. The code is very much the same of yours original code. The only change applied is in the changeHandler.</p> <p><em><strong>The onChange event is triggered on character-wise, this is the most important point to be taken care in this case, the rest of the codes need to align accordingly</strong></em>.</p> <p>This character based input is applicable while deleting as well as editing.</p> <p>For example, deleting character-wise the string ""book1"" in the field name.</p> <ol> <li><p>""Book1"" - by deleting the trailing character ""1"", the new value received in the onChange will be ""book"". This value needs to be updated into the state old instantly. This would sync the value in the input as well so that the state and the input will be the same value ""Book"".</p> </li> <li><p>""Book"" - delete ""k"" - will sync the state and value with ""Boo"".</p> </li> <li><p>""Boo"" - delete ""o"" - will sync the state and value with ""Bo"".</p> </li> <li><p>""Bo"" - delete ""o"" - will sync the state and value with ""B"".</p> </li> <li><p>""B"" - delete ""B"" - will sync the state and value with """".</p> </li> </ol> <p>Now the state has become empty along with the visual display.</p> <p>Another example, if we delete the whole string ""Book1"" in one short by selecting it, the changed value in the event will be """", this will be set to the state immediately, so that the input value will also be set to """".</p> <p>Please comment for further assistance.</p> <p><strong>App.js</strong></p> <pre><code>import React, { useEffect, useState } from 'react'; import { Form, Button } from 'react-bootstrap';  const EditData = () => {   let [old, setOld] = useState({     id: 'ab123',     bookname: 'Book1',     author: 'John Doe',     price: '1,234',   });    let changeHandler = (event) => {     let { value, name } = event.target;     console.log(name, value);     const newObj = {       ...old,       [name]: value,     };     setOld(newObj);   };    let submitHandler = (event) => {     event.preventDefault();     console.log('submitted');   };    return (     <div>       <Form onSubmit={submitHandler}>         <Form.Group className=""mb-3"" controlId=""booksname"">           <Form.Label>Name</Form.Label>           <Form.Control             type=""text""             name=""bookname""             value={old.bookname}             onChange={changeHandler}           />         </Form.Group>          <Form.Group className=""mb-3"" controlId=""booksauthor"">           <Form.Label>Author</Form.Label>           <Form.Control             type=""text""             name=""author""             value={old.author}             onChange={changeHandler}           />         </Form.Group>          <Form.Group className=""mb-3"" controlId=""booksprice"">           <Form.Label>Price</Form.Label>           <Form.Control             type=""text""             name=""price""             value={old.price}             onChange={changeHandler}           />         </Form.Group>          <Button variant=""outline-dark"" type=""submit"">           Submit         </Button>       </Form>     </div>   ); };  export default EditData; </code></pre> <p>Test results</p> <p><strong>""Book1"" edited to ""Boo""</strong></p> <p><a href=""https://i.sstatic.net/UDDaO6NE.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/UDDaO6NE.png"" alt=""""Book1"" edited to ""Boo"""" /></a></p> <p><strong>Author column value deleted wholly</strong></p> <p><a href=""https://i.sstatic.net/CbLvm5Lr.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/CbLvm5Lr.png"" alt=""Author column value deleted wholly"" /></a></p>",1726718229.0,,true
"{'account_id': 27710800, 'reputation': 1, 'user_id': 21153543, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/28c40decb468b7167b526c8453cc4a50?s=256&d=identicon&r=PG', 'display_name': 'Aliston Gomes', 'link': 'https://stackoverflow.com/users/21153543/aliston-gomes'}",False,0,1729246666,1729246019,79101591,78997376,CC BY-SA 4.0,"<p><strong>This helped me Im on MUI V5+ and not V6</strong><br /> import Grid from ""@mui/material/Unstable_Grid2"";</p>",1729246666.0,,true
"{'account_id': 10004569, 'reputation': 6775, 'user_id': 7399478, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/6c46d229383615d750a419dc8ebd578f?s=256&d=identicon&r=PG', 'display_name': 'Ahmet Emre Kilinc', 'link': 'https://stackoverflow.com/users/7399478/ahmet-emre-kilinc'}",True,1,1726674707,1726674707,78999147,78997376,CC BY-SA 4.0,"<p>Your dependencies show that you are using MUI v6:</p> <pre class=""lang-json prettyprint-override""><code>""@mui/icons-material"": ""^6.1.0"", ""@mui/material"": ""^6.1.0"", ""@mui/styled-engine-sc"": ""^6.1.0"", </code></pre> <p>Therefore, as it is stated in <a href=""https://mui.com/material-ui/migration/upgrade-to-v6/#grid2"" rel=""nofollow noreferrer"">v6 migration guide</a>, you need to remove all <code>Unstable_</code> prefixes like this:</p> <pre><code>-import { Unstable_Grid2 as Grid2 } from '@mui/material'; +import { Grid2 } from '@mui/material'; </code></pre> <p>and this:</p> <pre><code>-import Grid from '@mui/material/Unstable_Grid2'; +import Grid from '@mui/material/Grid2'; </code></pre>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",True,1,1726673021,1726673021,78999030,78997248,CC BY-SA 4.0,"<p>You can't nest routers like the error message states. You need only one router/routing context per application.</p> <p>The main/root app is rendering the router that provides the routing/navigation context to everything below it in the ReactTree, including the sub-apps, so the React sub-apps should render anything/everything <em><strong>but</strong></em> a nested router, e.g. <code>Routes</code>, <code>Route</code>, <code>Link</code>, etc., and not any <code>MemoryRouter</code>/<code>BrowserRouter</code>/etc.</p> <p>Obviously if/when you are testing or running the sub-applications alone they will need to be rendered into <em>something</em> that renders and provides the router/routing context.</p>",,,true
"{'account_id': 22335162, 'reputation': 61, 'user_id': 16555880, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/7b68e79929359813ed7ba1cf634a6243?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'laura', 'link': 'https://stackoverflow.com/users/16555880/laura'}",False,0,1726847952,1726847952,79007481,78996911,CC BY-SA 4.0,"<p>What you've tried is right, but just override the class .ant-select-selection--multiple, like this:</p> <pre><code>.ant-select-selection--multiple {     max-height: 60px;     overflow-y: auto;   } </code></pre> <p>this should work</p>",,,true
"{'account_id': 21309, 'reputation': 166982, 'user_id': 51685, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/vVhK5.jpg?s=256', 'display_name': 'AKX', 'link': 'https://stackoverflow.com/users/51685/akx'}",True,0,1726643403,1726643403,78996955,78996900,CC BY-SA 4.0,"<blockquote> <p>Can anyone help me to create server actions in pure react app(vitejs)?</p> </blockquote> <p>No, no one can. For a (Vite-built or otherwise) app, which runs entirely client-side in the web browser, there is no server that could run server actions.</p>",,,true
"{'account_id': 36365368, 'reputation': 1, 'user_id': 27701897, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/4ef8f8b47ceabaa9a3627bc32b56b817?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Pavel Komarov', 'link': 'https://stackoverflow.com/users/27701897/pavel-komarov'}",False,0,1728421358,1728421358,79067773,78996821,CC BY-SA 4.0,"<p>I`ve just dealed with it couples days ago. Create something like 'shared_cache.ts' in your route folder and export your fetch function wrapped in unstable_cache, but don't call it right away. Import it in server component (if you need initial data) and call it, pass data to Child, then import it again in Child component and use it with useEffect or whatever! gl!</p>",,,true
"{'account_id': 30349328, 'reputation': 392, 'user_id': 23258247, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocL6QoDKmBooN1fbN1mMswsllntFglYppN7GEE3ige-r=k-s256', 'display_name': 'Nahom', 'link': 'https://stackoverflow.com/users/23258247/nahom'}",False,-1,1726651330,1726650838,78997435,78996821,CC BY-SA 4.0,"<p><code>unstable_cache</code> can only be used in server components. Using <code>useState</code> makes your component a <a href=""https://nextjs.org/docs/app/building-your-application/rendering/client-components"" rel=""nofollow noreferrer"">client component</a>.</p> <p>Here is a quote from the <code>react</code> <a href=""https://react.dev/reference/react/cache"" rel=""nofollow noreferrer"">docs</a>:</p> <blockquote> <p>cache is only for use with React Server Components.</p> </blockquote> <p>Also, your Next.js version needs to be at least <a href=""https://nextjs.org/docs/app/api-reference/functions/unstable_cache#version-history"" rel=""nofollow noreferrer"">14.0.0</a> in order to use <code>unstable_cache</code>.</p> <p>Finally, here is how I used <code>unstable_cache</code> to implement ISG(Incremental Static Regeneration):</p> <pre class=""lang-js prettyprint-override""><code>import axios from ""axios""; import { unstable_cache } from ""next/cache"";  interface BlogPost {   id: number;   title: string;   content: string; }  async function fetchBlogPosts(): Promise<BlogPost[]> {   const url = ""https://api.vercel.app/blog"";    try {     const response = await axios.get<BlogPost[]>(url);     return response.data;   } catch (error) {     console.error(""Error fetching blog posts:"", error);     throw error;   } }  async function fetchBlogPostById(id: number): Promise<BlogPost | undefined> {   const url = `https://api.vercel.app/blog/${id}`;    try {     const response = await axios.get<BlogPost>(url);     return response.data;   } catch (error) {     console.error(`Error fetching blog post with ID ${id}:`, error);   } }  const getCachedBlogs = unstable_cache(async () => fetchBlogPosts()); const getCachedBlogById = unstable_cache(async (id) => fetchBlogPostById(id));  export const revalidate = 60;  // We'll prerender only the params from `generateStaticParams` at build time. // If a request comes in for a path that hasn't been generated, // Next.js will server-render the page on-demand. export const dynamicParams = true; // or false, to 404 on unknown paths  export async function generateStaticParams() {   let posts: BlogPost[] = await getCachedBlogs();    return posts.map((post) => ({     id: `${post.id}`,   })); }  export default async function Page({ params }: { params: { id: string } }) {   let post = await getCachedBlogById(params.id);    return (     <main>       <h1>{post?.title}</h1>       <p>{post?.content}</p>     </main>   ); } </code></pre>",1726651330.0,,true
"{'account_id': 1797513, 'reputation': 4022, 'user_id': 1636613, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/7fec4b4cf249a979fcb9b39a306bcce2?s=256&d=identicon&r=PG', 'display_name': 'Razzi Abuissa', 'link': 'https://stackoverflow.com/users/1636613/razzi-abuissa'}",True,1,1726637114,1726637114,78996657,78996547,CC BY-SA 4.0,"<p>As <a href=""https://stackoverflow.com/users/8690857/drew-reese"">Drew Reese</a> stated in a comment, React is not designed to allow both defaultValue and value. Logically, the defaultValue is redundant if you have a value: its default value would be the starting value.</p> <p>As can be seen in this pen using a simplified version of your code: <a href=""https://codepen.io/Razzi-Abuissa/pen/ExBBdYm"" rel=""nofollow noreferrer"">https://codepen.io/Razzi-Abuissa/pen/ExBBdYm</a></p> <pre><code>function Example() {   const [value, setValue] = React.useState('helo')    return <form>     <input defaultValue={5} value={value} onChange={e => setValue(e.target.value)} />   </form> }  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Example />) </code></pre> <p>In the console you can see React give the following warning:</p> <blockquote> <p>Warning: Example contains an input of type undefined with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: <a href=""https://reactjs.org/link/controlled-components"" rel=""nofollow noreferrer"">https://reactjs.org/link/controlled-components</a></p> </blockquote>",,,true
"{'account_id': 33593006, 'reputation': 131, 'user_id': 26007375, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/cab800d8c84c79c925d573f87445f567?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Carsten Codes', 'link': 'https://stackoverflow.com/users/26007375/carsten-codes'}",False,0,1726638904,1726638904,78996725,78996288,CC BY-SA 4.0,"<p>Did you already checked the <a href=""https://react.dev/warnings/invalid-hook-call-warning"" rel=""nofollow noreferrer"">Link</a> from your error message?</p> <blockquote> <p>There are three common reasons you might be seeing it:</p> <ol> <li><p>You might be breaking the Rules of Hooks.</p> </li> <li><p>You might have mismatching versions of React and React DOM.</p> </li> <li><p>You might have more than one copy of React in the same app.</p> </li> </ol> </blockquote> <p>Number 1 does not seem to be the case.</p> <p>For number 2:</p> <blockquote> <p>You can run <code>npm ls react-dom</code> [...] in your application folder to check which version youâre using.</p> </blockquote> <p>For number 3:</p> <p>You can run <code>npm ls react</code> in your application folder to check which version youâre using.</p>",,,true
"{'account_id': 6615307, 'reputation': 52364, 'user_id': 5108796, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5792d442b2c7e1ecd6b4efa8c10e6c11?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'ghybs', 'link': 'https://stackoverflow.com/users/5108796/ghybs'}",True,2,1726625548,1726623940,78996312,78996242,CC BY-SA 4.0,"<blockquote> <p>when I use that handleFriendClick function [...] all other friends are still being re-rendered</p> </blockquote> <p>The immediate cause is that <code>handleFriendClick</code> changes the value of <code>selectedFriends</code>, which is in its dependency array. Hence the <code>useCallback</code> hook returns a new function.</p> <p>A simple ""immediate"" solution consists in such cases in leveraging the <code>setSelectedFriends</code> state setter <a href=""https://react.dev/reference/react/useState#updating-state-based-on-the-previous-state"" rel=""nofollow noreferrer"">updater function</a> mode (which you already use somehow) to access that <code>selectedFriends</code> state as the previous value, instead of reading it directly.</p> <p>We can move a lot of logic <em>inside</em> that updater function.</p> <p>That way, we no longer need to have it in the dependency array:</p> <pre><code>const handleFriendClick = useCallback(   async (friend) => {     // Use a flag to know if more action is needed     let needFetch = false;      // Leverage the state setter updater function mode     // to get access to the state (previous) value,     // instead of reading it directly     setSelectedFriends((previousSelectedFriends) => {       // Some logic can be moved inside the updater function       const existingFriend = previousSelectedFriends.find((f) => f.id === friend.id);       if (existingFriend) {         if (existingFriend.isMessageBoxOpen) {           // Case 1: Message box is already open, no need to change anything           // Now make sure to return the same state value           // for the updater function           return previousSelectedFriends;         } else if (existingFriend.hasMessageBoxBeenOpenedOnce) {           // Case 2: Message box has been opened before but is currently closed,           // reopens the message box without fetching messages and resets unread messages           setFriendsList((prev) => prev.map((f) => (f.id === friend.id ? { ...f, unreadMessages: 0 } : f)));           // Now return the ne state value           // for the updater function           return previousSelectedFriends.map((f) => (f.id === friend.id ? { ...f, isMessageBoxOpen: true, unreadMessages: 0 } : f));         }       }       // Case 3: Message box has never been opened before, fetch messages and open the message box by adding a new friend with isMessageBoxOpen: true       needFetch = true;       // Now make sure to return the same state value       // for the updater function       return previousSelectedFriends;     }); // end of setSelectedFriends      // More actions to perform,     // which do not need the selectedFriends value     if (needFetch) {       await fetchMessagesForFriend(friend);       // reset unread messages       setFriendsList((prev) => prev.map((f) => (f.id === friend.id ? { ...f, unreadMessages: 0 } : f)));     }   },   [] // With this, the useCallback no longer depends on selectedFriends state directly! ); </code></pre> <hr /> <p>That being said, unless you actually see a performance issue, there is usually no harm having many Components ""re-render"" (what you observe when <code>console.log</code> in the body of the Components is executed).</p> <p>This is a normal React behavior, as it re-evaluates its Virtual DOM. But it does not trigger an actual DOM ""re-render"" (layout and painting, which are the usual performance bottlenecks of browsers), as long as the JSX output is the same.</p> <p>This should be your case: even if the <code>handleFriendClick</code> callback function changes, it is not used to <em>generate</em> some JSX content, but is (indirectly) attached only as an event listener.</p> <p>React actually manages all those event listeners globally through event delegation, and does not bother ""re-rendering"" the actual DOM when only these listeners change.</p> <p>Sometimes, it may happen that even the React re-evaluation of its Virtual DOM becomes heavy (typically when the Components still perform a lot of computations, without using <code>useMemo</code>). If for some reasons <code>useMemo</code> is still not enough, then indeed we may need <code>React.memo</code> to further avoid React re-renders.</p>",1726625548.0,,true
"{'account_id': 23910416, 'reputation': 103, 'user_id': 17907440, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJzeerl8j2oZ_8OVFt8dJEbTGsD-Ji9IuASZJbIJ=k-s256', 'display_name': 'Jeffrey Tillwick', 'link': 'https://stackoverflow.com/users/17907440/jeffrey-tillwick'}",False,0,1726619453,1726619453,78996204,78996200,CC BY-SA 4.0,"<p>Of course I find the answer just after posting the question...</p> <p>I just have to specify the sorting order without the default <code>null</code> in the gridOptions.</p> <pre><code>{     ...     sortingOrder: [ ""asc"", ""desc"" ],     .... } </code></pre>",,,true
"{'account_id': 20926271, 'reputation': 237, 'user_id': 15373625, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/7GuQd.jpg?s=256', 'display_name': 'techmeowt', 'link': 'https://stackoverflow.com/users/15373625/techmeowt'}",True,0,1726697537,1726697537,79000309,78996184,CC BY-SA 4.0,"<p>I wanted to post my answer in case anyone else runs into this problem in the future. I removed <code>const [findData, setFindData] = useState('')</code> because it was unnecessary. In the part of the <code>getProfile</code> function where I was pulling data from the database, I needed to clarify was the data was, so I changed that part to <code>const { data: values, error}</code>. Doing that allowed me to set the values to <code>values</code>. My dependency array was also incorrect. I removed <code>findData</code> from the array and replaced it with <code>supabase</code>. Here's the relevant updated code:</p> <p>This is the code relevant to state changes:</p> <pre><code>const [loading, setLoading] = useState(true);   const [email, setEmail] = useState('');   const [values, setValues] = useState(''); </code></pre> <p>This is the code I've written to get the signed-in user's profile:</p> <pre><code>const getProfile = async () => {     const {       data: { user },     } = await supabase.auth.getUser();     const loadingTimer = setTimeout(() => {       setLoading(false);       setEmail(user.email);       setValues({ ...values, email: user.email });     }, 2000);     const { data: values, error } = await supabase       .from('clients')       .select()       .eq('email', user.email)       .single();     setValues(values);     setPhone(values.phone);   };    useEffect(() => {     getProfile();   }, [loading, supabase]); </code></pre>",,,true
"{'account_id': 11969801, 'reputation': 285, 'user_id': 8758576, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5fd2a3d37bb79751c4858204b7851d4a?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'nd10', 'link': 'https://stackoverflow.com/users/8758576/nd10'}",False,0,1727242879,1727242879,79021265,78995986,CC BY-SA 4.0,"<p>I don't see a problem here. In fact we have done a whole bunch of customisations in our application too.</p> <p>Same as you are defining an aggregate method for the first grouped column, enable the row-grouping for second column and then define custom aggregate method which will just match the values and return you the count. <a href=""https://www.ag-grid.com/javascript-data-grid/aggregation/#customisations"" rel=""nofollow noreferrer"">You can refer this for more details</a></p>",,,true
"{'account_id': 1091946, 'reputation': 11127, 'user_id': 1086398, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/3edfa49328efffd9d8e76a0487f1d703?s=256&d=identicon&r=PG', 'display_name': 'adsy', 'link': 'https://stackoverflow.com/users/1086398/adsy'}",True,1,1726983221,1726776431,79004270,78995838,CC BY-SA 4.0,"<p>The core of the issue is that you have a sort of ""chicken and egg"" problem.</p> <p>You currently guard the buttons with the <code>isButtonVisible</code> check. If this returns <code>false</code> then the entire button will not render. The result of <code>isButtonVisible</code> is determined by the logic which measures if the button fits. However, it can't measure something which is not there.</p> <p>To determine what buttons should be visible, they must be in the DOM and painted by the browser. Otherwise, there is nothing to measure. For this reason, on mount <code>mainToolbarRef.current.children</code> is empty, so the overflow check can't be performed. To take the measurements you need, the elements have to actually be rendered in the first place.</p> <p>The reason it <em>appears</em> to work on resize is that you currently call <code>setVisibleButtons([...BUTTON_NAMES_LIST]);</code> inside of <code>doAdapt</code>, which sets them all to visible again. I suspect this was a previous fix/hack, but it was a fix to the symptom and not the <em>root cause</em> of the issue.</p> <p>This will actually only make them visible again a short time later since the state setting is not immediately effective (React queues the update).</p> <p>Because resize events often occur as many events in quick succession as the user drags their mouse to resize the window, a future event then experiences the ""all visible"" DOM state, and it is able to measure the buttons. This means that the resize behaviour is also a little broken, with it responding to <code>n+1</code> events later than it actually should. It probably also quickly flip-flops between good and bad states, and it's only due to how React batches update that it appears to work ok on resize under certain conditions. If there was only a single resize event like on a mobile device portrait/landscape orientation change, it's probably broken currently in that case too.</p> <p>But if they have to be in the DOM to know if they should appear, then how do we control their visibility?</p> <p>Essentially you need to render them all of the time, but control their visibility using the CSS <code>visibility</code> property conditionally set to <code>hidden</code> or <code>visible</code>. Note, <code>display: none</code> won't work here either as that means they are still not painted. <code>visibility</code> has the unique property that even if it has <code>visibility: hidden</code>, it is still internally inserted into the DOM flow. You can see this by hovering over the button when it's in this state in dev tools -- it still has dimensions and is ""present"".</p> <p>So we first need to remove the render condition on each button within the toolbar and move this to control the <code>visibility</code> CSS property. For example:</p> <pre><code>{isButtonVisible('color') && (   <Tooltip>     <TooltipTrigger asChild> </code></pre> <p>Becomes:</p> <pre><code><Tooltip>   <TooltipTrigger     asChild     style={{       visibility: isButtonVisible('color') ? 'visible' : 'hidden',     }}   > </code></pre> <p>Note you may want to use CSS classes to do this instead. Note, we <strong>do not</strong> change the guards of the buttons that exist within the overflow menu. They can stay the same, since we are not measuring those. Only the ones inside the toolbar directly need this change.</p> <p>Also note that the ""triple dot"" view more icon itself, <strong>does</strong> also need this change since it is within the toolbar. And we also need to make a change to the CSS here to position it correctly now the other buttons are ""rendered but hidden"" such that it is not pushed off the edge of the screen:</p> <pre><code>{/* More */} <Popover>   <Tooltip>   <TooltipTrigger     asChild     className=""h-9 w-9 shrink-0 cursor-pointer rounded-md px-2.5 transition-colors hover:bg-muted hover:text-muted-foreground""     style={{       position: 'absolute',       right: 0,       visibility: showMore ? 'visible' : 'hidden',      }}   > </code></pre> <p>Finally, we can clean up the resize logic to remove previous hacks around visibility that are no longer needed.</p> <pre><code>  const mainToolbarRef = useRef<HTMLElement>(null);   const [visibleButtons, setVisibleButtons] = useState<ButtonName[]>([]);   const [showMore, setShowMore] = useState(false);    const doAdapt = useCallback(() => {     const mainToolbar = mainToolbarRef.current;     if (mainToolbar) {       const buttonsArray = Array.from(mainToolbar.children);        const tempVisibleButtons: ButtonName[] = [];        buttonsArray.forEach((button, index) => {         const btn = button as HTMLElement;         if (isFullyVisible(btn)) {           tempVisibleButtons.push(BUTTON_NAMES_LIST[index]!);         }       });        setVisibleButtons(tempVisibleButtons);       setShowMore(tempVisibleButtons.length < buttonsArray.length - 1);     }   }, [mainToolbarRef]);    const isFullyVisible = (element: HTMLElement) => {     const rect = element.getBoundingClientRect();     const mainToolbarRect = mainToolbarRef.current?.getBoundingClientRect();     return rect.right <= (mainToolbarRect!.right - 40 || 0);   };    useLayoutEffect(() => {     doAdapt();      window.addEventListener('resize', doAdapt);      return () => {       window.removeEventListener('resize', doAdapt);     };   }, [doAdapt]);    const isButtonVisible = (buttonName: ButtonName) => {     return visibleButtons.includes(buttonName);   };  </code></pre> <p>The main changes here are that we no longer have the timeout, and we no longer set all buttons to visible again at any point. There is no need, as they are now measurable at all times no matter if they are in the visible button list at that time, or not. I also did a bit of minor cleanup to avoid looping multiple times unnecessarily by determining the show more button visibility dynamically based on array lengths.</p> <p>I've put this all together into a <a href=""https://stackblitz.com/edit/stackblitz-starters-dutxfd?file=app%2FToolbar.tsx"" rel=""nofollow noreferrer"">working StackBlitz</a>. This works correctly both on mount and on resize (including fixing the aforementioned hidden ""resize"" bugs that lay in wait).</p>",1726983221.0,,true
"{'account_id': 11929999, 'reputation': 2688, 'user_id': 8730140, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/TRG86.jpg?s=256', 'display_name': 'Simran Singh', 'link': 'https://stackoverflow.com/users/8730140/simran-singh'}",False,1,1726624979,1726624979,78996333,78995728,CC BY-SA 4.0,<p>There are two issues in your front-end app.</p> <ol> <li><p><strong>Using <code><Router/></code> two times:</strong><br/> You have imported the Router already in <code>main.jsx</code> file. You do not need to import it again in <code>App.jsx</code>. Please remove it from <code>App.jsx</code>.</p> </li> <li><p><strong><code>index.html</code> file do not exist in in the root of your project:</strong><br/> I noticed you shifted your <code>index.html</code> in public folder. It should be placed in the root of your project folder instead. So shift your file from <code>public</code> to root: <code>monteeNiveaux</code>.</p> </li> </ol> <p>Applying these two changes will fix your issue with front-end project.</p>,,,true
"{'account_id': 25465072, 'reputation': 897, 'user_id': 19264249, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2AAN0xM6.jpg?s=256', 'display_name': 'sahilatahar', 'link': 'https://stackoverflow.com/users/19264249/sahilatahar'}",False,0,1726624540,1726624540,78996323,78995728,CC BY-SA 4.0,"<p>On the frontend side, you are using <a href=""https://vitejs.dev/"" rel=""nofollow noreferrer"">vite</a> and your <code>index.html</code> file is inside <code>public</code> directory. In vite you CAN'T do this. Your <code>index.html</code> file should be in ROOT directory of the project. see <a href=""https://stackoverflow.com/questions/76590642/how-to-configure-vite-with-index-html-in-public-folder"">this question</a></p>",,,true
"{'account_id': 14588149, 'reputation': 1175, 'user_id': 10536232, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-esWCOSge7t0/AAAAAAAAAAI/AAAAAAAAAAs/EcUKJynKuW8/photo.jpg?sz=256', 'display_name': 'Scott Z', 'link': 'https://stackoverflow.com/users/10536232/scott-z'}",False,0,1726612811,1726612811,78996017,78995686,CC BY-SA 4.0,"<p>If you move the header and footer to wrap the <code>Outlet</code> You should get the behaviour your are looking for.</p> <pre><code>const ProtectedRoutes = () => {   const [user, setUser] = useState(null);   const [loading, setLoading] = useState(true);    useEffect(() => {     const unsubscribe = onAuthStateChanged(auth, (currentUser) => {       setUser(currentUser);       setLoading(false);     });      return () => unsubscribe();   }, []);    if (loading) {     return <Loader />;   }    return user ? (     <>       <Header />       <Outlet />       <Footer />     </>   ) : (     <Navigate to=""/login"" />   ); }; </code></pre>",,,true
"{'account_id': 25259377, 'reputation': 541, 'user_id': 19090490, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/cW1K3BLg.jpg?s=256', 'display_name': 'Antoliny Lee', 'link': 'https://stackoverflow.com/users/19090490/antoliny-lee'}",False,0,1726631871,1726631871,78996504,78995438,CC BY-SA 4.0,"<p>No authentication class specified.</p> <p>Add the authentication_classes variable to PostListCreateView and place the authentication class in the array to use.</p> <p>Perhaps, given that the token type delivered from axios is Bearer, it is expected to use jwt tokens.</p> <p>If you have implemented JWT token logic through the simple-jwt library, you have to add JWTAuthentication in authentication_classes array.</p> <pre><code>from rest_framework_simplejwt.authentication import JWTAuthentication  class PostListCreateView(generics.ListCreateAPIView):     queryset = Post.objects.all()     serializer_class = PostSerializer     permission_classes = [IsAuthenticatedOrReadOnly]     authentication_classes=[JWTAuthentication] </code></pre> <p>For your information, 401 error seems to occur during the Permission process.</p> <p>If you do not specify authentication_classes, as in your case, identify them as AnonymousUser and perform a permission check.</p> <p>You must accurately identify the user who sent the request through the authentication class to perform a permission check.</p>",,,true
"{'account_id': 6199990, 'reputation': 107, 'user_id': 4830138, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e035ecc49a580f98f70f1e9abe029b4e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Boingoloid', 'link': 'https://stackoverflow.com/users/4830138/boingoloid'}",False,0,1726613794,1726613794,78996054,78995389,CC BY-SA 4.0,"<p>I used a service called <a href=""https://www.wyzant.com/"" rel=""nofollow noreferrer"">https://www.wyzant.com/</a> and got linked up with a Next.js expert. I don't represent them or anything, just how I reached out for help.</p> <p>Solution: Delete this line from User model:</p> <pre><code> import { unique} from 'next/dist/build/utils' </code></pre> <p>Apparently this import that causes those files to all execute, thus causing my errors saying html was coming back where it expected json.</p>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,0,1726640958,1726640958,78996822,78995307,CC BY-SA 4.0,"<blockquote> <p>How can I measure how successful this memo is? Eg: I want to know how often it skips re-rendering because of the memo. Is there a general purpose hook/util that I can use to measure this?</p> </blockquote> <p>No, there is nothing ""out-of-the-box"" that measures this.</p> <p>It's also rather difficult to prove the negative, in general. It's easier to prove a component rendered when you expect it to than it is to prove it didn't render when you weren't expecting it to.</p> <blockquote> <p>I would like to know the count of all attempted renders and the count of renders that are skipped because of memo.</p> </blockquote> <p>If you are just wanting to know how effective the <code>memo</code> Higher Order Component is between a parent-child coupling you can use a React ref to track the components' render counts, and compare the counts.</p> <p>Example:</p> <pre class=""lang-js prettyprint-override""><code>const renderCountRef = React.useRef(0);  React.useLayoutEffect(() => {   renderCountRef.current++; }); </code></pre> <h2>Demo</h2> <p>Here's a demo with a parent component with two states, <code>count1</code> and <code>count2</code>, where <code>count1</code> is passed as props to the child component, and triggers the child to rerender. What you can observe here is that the child component only rerenders when its own state updates, or the prop value passed from the parent changes. When the parent component's <code>count2</code> state is updated and the parent rerenders, observe that the child component is not rerendered.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const Child = (props) => {   const [count, setCount] = React.useState(0);   const renderCountRef = React.useRef(0);    React.useLayoutEffect(() => {     renderCountRef.current++;   });    return (     <React.Fragment>       <h2>Child</h2>       <div>         State: {count}{"" ""}         <button type=""button"" onClick={() => setCount((c) => c + 1)}>           +1         </button>{"" ""}         --- Renders: {renderCountRef.current}       </div>       <div>Parent State1: {props.state1}</div>     </React.Fragment>   ); };  const MemoizedChild = React.memo(Child);  const Parent = () => {   const [count1, setCount1] = React.useState(0);   const [count2, setCount2] = React.useState(0);   const renderCountRef = React.useRef(0);    React.useLayoutEffect(() => {     renderCountRef.current++;   });    return (     <div className=""App"">       <h2>Parent</h2>       <div>         State1: {count1}{"" ""}         <button type=""button"" onClick={() => setCount1((c) => c + 1)}>           +1         </button>{"" ""}         --- State2: {count2}{"" ""}         <button type=""button"" onClick={() => setCount2((c) => c + 1)}>           +1         </button>{"" ""}         --- Renders: {renderCountRef.current}       </div>        <hr />       <MemoizedChild state1={count1} />     </div>   ); };  const rootElement = document.getElementById(""root""); const root = ReactDOM.createRoot(rootElement);  root.render(   <React.StrictMode>     <Parent />   </React.StrictMode> );</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.2.0/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.2.0/umd/react-dom.production.min.js""></script> <div id=""root"" /></code></pre>  </div>  </div>  </p>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,0,1726725568,1726588264,78994856,78994431,CC BY-SA 4.0,"<p>Assuming your <code>fetchSomeData</code> endpoint is a Query, the solution here is to use query tags and tag invalidation. E.g. the <code>fetchSomeData</code> query endpoint provides some tag(s) and the <code>some</code> mutation endpoint <em>invalidates</em> that/those tag/tags, which triggers the query endpoint to re-run.</p> <p>See the following for details:</p> <ul> <li><a href=""https://redux-toolkit.js.org/rtk-query/usage/automated-refetching"" rel=""nofollow noreferrer"">Automated Re-fetching</a></li> <li><a href=""https://redux-toolkit.js.org/rtk-query/api/createApi#providestags"" rel=""nofollow noreferrer""><code>createApi</code> <code>providesTags</code></a> and <a href=""https://redux-toolkit.js.org/rtk-query/usage/automated-refetching#providing-cache-data"" rel=""nofollow noreferrer"">Providing cache data</a></li> <li><a href=""https://redux-toolkit.js.org/rtk-query/api/createApi#invalidatestags"" rel=""nofollow noreferrer""><code>createApi</code> <code>invalidatesTags</code></a> and <a href=""https://redux-toolkit.js.org/rtk-query/usage/automated-refetching#invalidating-cache-data"" rel=""nofollow noreferrer"">Invalidating cache data</a></li> </ul> <p>Basic Example:</p> <pre class=""lang-js prettyprint-override""><code>const api = createApi({   baseQuery: fetchBaseQuery({     baseUrl: '/',   }),   tagTypes: ['Data'],   endpoints: (build) => ({     fetchSomeData: build.query({       query: () => '/someData',       providesTags: ['Data'],     }),     updateSomeData: build.mutation({       query: (body) => ({         url: 'post',         method: 'POST',         body,       }),       invalidatesTags: ['Data'],     }),   }), }) </code></pre> <hr /> <p>When the <code>updateSomeData</code> mutation endpoint runs it invalidates the <code>""Data""</code> tag and triggers any endpoints that provide a <code>""Data""</code> tag. The form component only uses the mutation hook and triggers the mutation. The query will be re-triggered and any current subscribers will automatically rerender/receive the updated query endpoint results when they become available.</p> <blockquote> <p>The only thing I want to do in my form component is dispatch an action that updates the form state synchronously. That's it. I don't want to trigger the data re-fetch from there. Is there any way for me to invalidate the tag so that wherever that query is being used, it will automatically re-fetch, without me needing to use a mutation?</p> </blockquote> <blockquote> <p>I'm just trying to decouple the filter component from the data fetching process as much as possible</p> </blockquote> <p>Yes, you can listen for specific Redux state changes and dispatch an API action to invalidate specific query tags to trigger the query endpoints to re-run. This will look <em>similar</em> to your second snippet attempt.</p> <p>Example custom hook implementation:</p> <pre class=""lang-js prettyprint-override""><code>import { useCallback, useEffect } from ""react""; import { useDispatch, useSelector } from ""react-redux""; import { debounce } from ""lodash"";  import { api } from ""./api.slice"";  export const useDataListener = (selectorFn, invalidateTags = []) => {   const dispatch = useDispatch();   const data = useSelector(selectorFn);    // Only used to not over-invalidate/trigger the endpoint too often   const debouncedDispatch = useCallback(debounce(dispatch, 500), [dispatch]);    useEffect(() => {     debouncedDispatch(api.util.invalidateTags(invalidateTags));   }, [data]); }; </code></pre> <p>Usage: The unit of code is what couples the Redux form state update to the query endpoint you want to trigger/re-trigger. If you don't want the form component to know anything about the API slice, then I suggest calling the hook one-level up in the component that is also rendering your form component.</p> <pre class=""lang-js prettyprint-override""><code>useDataListener((state) => state. filteredData, [""Data""]);  ...  <Form ... /> </code></pre>",1726725568.0,,true
"{'account_id': 21146760, 'reputation': 76, 'user_id': 15547910, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/0dc3846cff8a4523d3a3c201aae8fe4e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'IdrisSelimi', 'link': 'https://stackoverflow.com/users/15547910/idrisselimi'}",True,1,1726582818,1726582818,78994501,78994379,CC BY-SA 4.0,"<p>You can leverage the <code>key</code> prop at a higher level to force a <code>remount</code> of components when the company changes, which is a cleaner and more scalable solution than manually resetting the state in each component.</p> <p>ex:</p> <pre><code>const App = () => {   const { getCurrentCompanyId } = useCompany();   const companyId = getCurrentCompanyId();    return (     <div>       <Outlet key={companyId} />     </div>   ); }; </code></pre>",,,true
"{'account_id': 19255478, 'reputation': 9375, 'user_id': 14072498, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/a55d298fc2cb250243c15bd619f95613?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Roar S.', 'link': 'https://stackoverflow.com/users/14072498/roar-s'}",False,2,1726588721,1726588721,78994889,78994350,CC BY-SA 4.0,"<p><code>dataArr.pop()</code> will mutate dataArr. <code>slice(0, -1)</code> can be used instead; it returns a copy of the original array without the last element.</p> <p>A minimal version of <code>testAction</code> can look like this:</p> <pre><code>const testAction = () => {     setDataArr(prev => prev.slice(0, -1)) } </code></pre>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",True,3,1726594470,1726594470,78995183,78994337,CC BY-SA 4.0,"<p>From ""Strict Mode is triggering my reducer function twice which is expected."" it is obvious from the code that you are pushing <em>twice</em> into the array as an unintentional side-effect.</p> <p>The React <code>StrictMode</code> component re-runs certain lifecycle methods and hooks twice as a way to help you detect logical issues/bugs in your code.</p> <p>See <a href=""https://legacy.reactjs.org/docs/strict-mode.html#detecting-unexpected-side-effects"" rel=""nofollow noreferrer"">Detecting unexpected side effects</a> from the older legacy docs, which do a bit better job of explaining the finer details. I've emphasized the relevant point.</p> <blockquote> <p>Strict mode canât automatically detect side effects for you, but it can help you spot them by making them a little more deterministic. This is done by intentionally double-invoking the following functions:</p> <ul> <li>Class component <code>constructor</code>, <code>render</code>, and <code>shouldComponentUpdate</code> methods</li> <li>Class component static <code>getDerivedStateFromProps</code> method</li> <li>Function component bodies</li> <li>State updater functions (the first argument to <code>setState</code>)</li> <li><strong>Functions passed to <code>useState</code>, <code>useMemo</code>, or <code>useReducer</code></strong></li> </ul> </blockquote> <p>The reducer function is executed twice, and the issue is that you are directly mutating the current state object. In React we <em>never</em> directly mutate state and props. You should update the code to apply the Immutable Update Pattern, i.e. shallow copy all state, and nested state, that is being updated. Array.push directly pushes into the source array and mutates it.</p> <p>You can use either the Spread Syntax to copy the array, or use Array.concat to append to and return a <em>new</em> array reference.</p> <p>Examples:</p> <pre class=""lang-js prettyprint-override""><code>const reducer = (state, action) => {   switch(action.type) {     case 'addElement':       return {         ...state,            // <-- shallow copy state,         elements: [          // <-- new array reference           ...state.elements, // <-- shallow copy array           {                  // <-- append new data             id: (new Date()).toString()           }         ],       };      default:       return state;   } } </code></pre> <pre class=""lang-js prettyprint-override""><code>const reducer = (state, action) => {   switch(action.type) {     case 'addElement':       return {         ...state,                         // <-- shallow copy state,         elements: state.elements.concat({ // <-- append new data, return new array           id: (new Date()).toString()         }),       };      default:       return state;   } } </code></pre> <p>Also, just FYI, using dates as GUIDs is not generally recommended. Better to use a library designed for this. <a href=""https://www.npmjs.com/package/nanoid"" rel=""nofollow noreferrer"">Nano ID</a> is a great library for quickly generating sufficiently unique global ID values.</p>",,,true
"{'account_id': 14564876, 'reputation': 356, 'user_id': 10519924, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/300fa7649c69f117d3d73f1364157c18?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'phantom', 'link': 'https://stackoverflow.com/users/10519924/phantom'}",False,2,1726581005,1726581005,78994365,78994337,CC BY-SA 4.0,"<ul> <li>You are mutating the original state array directly by using <code>.push()</code> method, even though you spread the rest of the state.</li> <li>Instead of using <code>.push()</code>, spread the existing array into new array & add the new elements using <code>[...state.elements, newElement]</code>.</li> <li>Update your reducer function accordingly, here is the code snippet how to do the same.</li> </ul> <pre class=""lang-js prettyprint-override""><code>const reducer = (state, action) => {   if (action.type === 'addElement') {     return {       ...state,       elements: [...state.elements, { id: new Date().toString() }]     };   }   return state; }; </code></pre>",,,true
"{'account_id': 2668205, 'reputation': 2380, 'user_id': 2306102, 'user_type': 'registered', 'accept_rate': 50, 'profile_image': 'https://i.sstatic.net/POqSz.png?s=256', 'display_name': 'Alexander Schranz', 'link': 'https://stackoverflow.com/users/2306102/alexander-schranz'}",False,0,1726581411,1726581411,78994406,78994307,CC BY-SA 4.0,"<p>Sulu let you use the frontend tools you want and doesn't force you what to use. This also means there are lot of different possibilities to achieve things.</p> <p>If you are using symfony / twig you might use webpack encore to build your CSS / JS. There it should also be possible to enable react support with a few lines, see the official Symfony Documentation about this:</p> <p><a href=""https://symfony.com/doc/current/frontend/encore/reactjs.html"" rel=""nofollow noreferrer"">https://symfony.com/doc/current/frontend/encore/reactjs.html</a></p> <p>You also find step by step Tutorials to this topic in SymfonyCasts:</p> <p><a href=""https://symfonycasts.com/screencast/reactjs"" rel=""nofollow noreferrer"">https://symfonycasts.com/screencast/reactjs</a></p> <p>Webpack Encore is a layer around Webpack to make configuration of such things easier. You might can replace your current webpack setup with webpack encore <a href=""https://symfony.com/doc/current/frontend/encore/installation.html"" rel=""nofollow noreferrer"">https://symfony.com/doc/current/frontend/encore/installation.html</a>. It can be used without stimulus or hotwire which I do myself.</p>",,,true
"{'account_id': 22764972, 'reputation': 575, 'user_id': 16923160, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/QdPqFHnZ.jpg?s=256', 'display_name': 'vzsoares', 'link': 'https://stackoverflow.com/users/16923160/vzsoares'}",True,1,1726580779,1726580449,78994329,78994239,CC BY-SA 4.0,"<p>From the <a href=""https://nextjs.org/docs/app/building-your-application/rendering/composition-patterns#interleaving-server-and-client-components"" rel=""nofollow noreferrer"">nextjs 14 docs</a>:</p> <blockquote> <h3>Interleaving Server and Client Components</h3> <p>When interleaving Client and Server Components, it may be helpful to visualize your UI as a tree of components. Starting with the root layout, which is a Server Component, you can then render certain subtrees of components on the client by adding the ""use client"" directive.</p> <p>Within those client subtrees, <strong>you can still nest Server Components or call Server Actions</strong>, however there are some things to keep in mind:</p> <ul> <li>During a request-response lifecycle, your code moves from the server to the client. If you need to access data or resources on the server while on the client, you'll be making a new request to the server - not switching back and forth.</li> <li>When a new request is made to the server, all Server Components are rendered first, including those nested inside Client Components. The rendered result (RSC Payload) will contain references to the locations of Client Components. Then, on the client, React uses the RSC Payload to reconcile Server and Client Components into a single tree.</li> <li>Since Client Components are rendered after Server Components, you cannot import a Server Component into a Client Component module (since it would require a new request back to the server). Instead, you can pass a Server Component as props to a Client Component. See the unsupported pattern and supported pattern sections below.</li> </ul> </blockquote> <p><em>Will using material UI theme provider in Next js make everything client component?</em></p> <p>No it won't, as long as you extract the provider client component into a separate file. (exactly as shown in the question)</p>",1726580779.0,,true
"{'account_id': 9875318, 'reputation': 99, 'user_id': 11718298, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5b03f0b13090445f7907f517100cb785?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Kelo', 'link': 'https://stackoverflow.com/users/11718298/kelo'}",True,0,1726819010,1726819010,79005810,78994196,CC BY-SA 4.0,"<p>I have figured out what the problem was. The URL in the <code>handleDownloadClick</code> function was missing an important part at the beginning. So, I reformatted it like this:</p> <pre><code>const baseUrl = `${window.location.origin}/api`;     const url = `${baseUrl}/download/?filename=${encodeURIComponent(filename)}&collection_name=${encodeURIComponent(collectionName)}`; </code></pre> <p>This dynamically generates the URL based on the server address and handles the download properly.</p>",,,true
"{'account_id': 3446506, 'reputation': 319195, 'user_id': 2887218, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/WL57j.png?s=256', 'display_name': 'jcalz', 'link': 'https://stackoverflow.com/users/2887218/jcalz'}",True,1,1726678816,1726678816,78999394,78993976,CC BY-SA 4.0,"<p>Unfortunately this is not currently possible in TypeScript with JSX. Even though the components <code>SomeModal</code> and <code>SomeOtherModal</code> have different types, the JSX elements <code><SomeModal /></code> and <code><SomeOtherModal /></code> have the <em>same</em> type, which is <code>JSX.Element</code>. So no matter how you write the call signature for <code>openModal()</code>, the argument to <code>openModal()</code> will not have the information you need. You're stuck.</p> <p>There is a longstanding open feature request in GitHub at <a href=""https://github.com/microsoft/TypeScript/issues/14729"" rel=""nofollow noreferrer"">microsoft/TypeScript#14729</a> to allow some way of distinguishing the type of JSX elements based on their contents. Maybe someday it will be implemented, and the chance of that presumably increases with an increase in community demand. So anyone who wants to see this happen might like to go to that issue and give it a ð. But until and unless such a feature is introduced, you can't do this with JSX.</p> <hr /> <p>You <em>might</em> work around it by giving up on JSX and calling <a href=""https://react.dev/reference/react/createElement"" rel=""nofollow noreferrer""><code>createElement()</code></a> instead, at which point you could use <a href=""https://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation"" rel=""nofollow noreferrer"">module augmentation</a> to overload <code>createElement()</code> such that the information you care about is propagated:</p> <pre><code>import React from 'react'; declare module 'react' {     function createElement<P extends {}, T>(         type: React.FunctionComponent<P> & { resultType: T },         props?: React.Attributes & P | null,         ...children: React.ReactNode[]     ): React.FunctionComponentElement<P> & { __resultType: T }; } </code></pre> <p>That's just one possible way to do that; presumably <code>__resultType</code> will not really be present at runtime (but neither is <code>resultType</code> in your example code).  And then your <code>someModal</code> could use that propagated information:</p> <pre><code>const openModal = <T extends JSX.Element & {__resultType: any}>(element: T) => {     return null! as T[""__resultType""]; // not sure how you'd implement this } </code></pre> <p>And finally your code behaves as expect <em>if you give up on JSX</em>:</p> <pre><code>const SomeModal: React.FC & { resultType: boolean } = () => <div />; SomeModal.resultType = true;  let someResult = openModal(React.createElement(SomeModal)); // boolean  const SomeOtherModal: React.FC & { resultType: string } = () => <div />; SomeOtherModal.resultType = ""string"";  let someOtherResult = openModal(React.createElement(SomeOtherModal)); // string </code></pre> <p><a href=""https://www.typescriptlang.org/play/?target=7#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wG4BYAKABMk0AbFIuECagV3qQKPRnzgBvKnFFxM7AHYZgESXDS8YSAKJcQSSTAA8ABThIAHssnUAzkIC+AGjgAVAHwAKEWLcwAnmCQAuRMRgAOgAxKRk5AGFcSElNHV0HOAAyITgiM04YOy9fezgbVzdRMBwwMwB+P2Q+QIBBGBgoYAAjdmULFP0AHzhJTnprQqLAkbQAC2B6aiJJKoDA6owAOTYkAG0AXSGASjma0OkYWUko8Dk4tSQNLT1ElME4AH1H9Mzs7z87fIpKSyoqNByMzwADKuCQAFk2Ch6HsMCEIslUq96Fkcn5mhAIFwUPJLHAALxwJzbQmJbTUYAANzgAHoHD8wRoodQYYEUWjvIS4I12EgfgCgaDwQB5GBjJBQFkwuFBYKI+5pJAZVHvXLApqSADm+W5JLJcAp1LpDKoTKQYolUuh9HZyreOW5ACINcBtU6BZRAZJgXAIN5JNL6NztF8jCZzHAAFIggAagUu13g92eHLVflxHksziQ6jin1JBMSwkobiIMHYUHkfXo9AAhHAUBY7Gsnan7aqck6tr8qFx4GZwcgVfAif7NEGnIsgopUMpE3EnOag9ttj9+3BBxpLZLh5luePAzap-NZyh53mtEvReLJSu10A"" rel=""nofollow noreferrer"">Playground link to code</a></p>",,,true
"{'account_id': 23188140, 'reputation': 27, 'user_id': 17284889, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJxriqZB6TqB_uL8El1APHeM_0fyJCjILyChFHp0=k-s256', 'display_name': 'Boocher', 'link': 'https://stackoverflow.com/users/17284889/boocher'}",False,0,1726601167,1726601167,78995528,78993976,CC BY-SA 4.0,"<p>Generics! If I understand your problem correctly, something like this should get you what you're looking for:</p> <pre><code>function openModal<T extends { resultType: unknown}>(arg: T): T[""resultType""]{     if (typeof arg.resultType === ""string"")         console.log(""String!"")      if (typeof arg.resultType === 'boolean')         console.log(""Boolean!"")     return arg.resultType };  const someResult = openModal({resultType:true}) const someOtherResult = openModal({resultType:""Im a string!""}) </code></pre> <p>The <code>T</code> would be replaced by whatever type you would like to narrow it down to, from your example it would be <code>React.FC</code></p> <p>Heres <a href=""https://www.typescriptlang.org/play/?#code/PTAEBMFMGMBsEMBOlQDMCuA7aAXAlgPaagEAOkmAsgePLADwAqokAHjheAM6gDeoyLulg5GAT3IAuUFgDWmAgHdiAXwB8ACgCUkxgG0ARIOGiJkAwF0AUFZChoRLjlAcnoALwlyVGnXq9jEXEpUCdEPEwAc3VtGwxsfCIvCmpaBmY2DkxuPgFIISCzaTkFZRikSOlGHVB9I3yTYPMLXitQdtA8VFANHDMCboqAOkDTcg93TwMwiMiDLTaOpYdMLgJYSCHYAkiNAwBlHHCogEJ5myWunr7yAdBh0aaJzwByACMCdch4TBeFpeWji+Wx2ewAQp8Nj8zv8OsgcOhEMQHg1CuQrCoANw2FZuNYAW0gACVUc5PGQUr5YBoAqSmpIjuhICoFrjnATIAB5HAAC0giBJBTJyR8aRpjyKBgAkvj7qEjrMziygA"" rel=""nofollow noreferrer"">a link</a> the playground link if you want to mess with it</p>",,,true
"{'account_id': 23094543, 'reputation': 73, 'user_id': 17204881, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ddbc8520b107047f932ac3623893d958?s=256&d=identicon&r=PG', 'display_name': 'Abolfazl Jamshidi', 'link': 'https://stackoverflow.com/users/17204881/abolfazl-jamshidi'}",False,0,1726568295,1726568295,78993593,78993503,CC BY-SA 4.0,"<p>According to Next.js documents and using the app router, every component which is rendered inside a client component will automatically become a part of the client bundle. You take a look at this point here: <a href=""https://nextjs.org/docs/app/building-your-application/rendering/client-components#using-client-components-in-nextjs"" rel=""nofollow noreferrer"">https://nextjs.org/docs/app/building-your-application/rendering/client-components#using-client-components-in-nextjs</a></p>",,,true
"{'account_id': 23094543, 'reputation': 73, 'user_id': 17204881, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ddbc8520b107047f932ac3623893d958?s=256&d=identicon&r=PG', 'display_name': 'Abolfazl Jamshidi', 'link': 'https://stackoverflow.com/users/17204881/abolfazl-jamshidi'}",False,0,1726570098,1726570098,78993692,78993440,CC BY-SA 4.0,"<p>You can use <code>watch</code> method which is returned from the <code>useForm</code> hook. Or you can create a watcher for it using a hook called <code>useWatch</code> and then update the values conditionally.</p> <p>useWatch reference: <a href=""https://react-hook-form.com/docs/usewatch"" rel=""nofollow noreferrer"">https://react-hook-form.com/docs/usewatch</a></p> <p>watch reference: <a href=""https://react-hook-form.com/docs/useform/watch"" rel=""nofollow noreferrer"">https://react-hook-form.com/docs/useform/watch</a></p> <p>If there was any questions, I would be happy to help.</p>",,,true
"{'account_id': 18070853, 'reputation': 1, 'user_id': 13135559, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/4b0329bbe09421194c5225ce80c8af48?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Bruno Chirelli', 'link': 'https://stackoverflow.com/users/13135559/bruno-chirelli'}",False,0,1726581816,1726581775,78994427,78993226,CC BY-SA 4.0,"<p>If you're not using portals or any iframe with your components, React should share the imports with its children or in this case, with the sibling. So generally speaking, if you lift the state up, it would be enough to share the same libraries across components.</p> <p>In your case, ProjectB is a sibling of <code>ToastifyContainer</code>, so you need to ensure that those components are also siblings, otherwiser, just lift the <code>ToastContainer</code> to its parent component.</p> <p>After that you can use the <code>toast</code> function with it.</p>",1726581816.0,,true
"{'account_id': 6324620, 'reputation': 4472, 'user_id': 4911434, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://i.sstatic.net/rV0O7.jpg?s=256', 'display_name': 'Alessandro', 'link': 'https://stackoverflow.com/users/4911434/alessandro'}",False,0,1726565515,1726565515,78993414,78993214,CC BY-SA 4.0,"<p>I solved using the <em>""aws-amplify/auth""</em> library as the following, in the <strong>Login</strong> component:</p> <pre><code>import { Amplify } from ""aws-amplify""; import { signOut } from ""aws-amplify/auth"" import { withAuthenticator } from '@aws-amplify/ui-react';  import awsconfig from './aws-exports';  Amplify.configure(awsconfig);  function Login( { doSignOut, label } ) {   async function handleSignOut() {     await signOut();     await doSignOut();   }    return (     <button type=""button"" onClick={handleSignOut}>       {label}     </button>   ) }  export default withAuthenticator(Login); </code></pre> <p>And passing the method to hide the <strong>Login</strong> in the <strong>App</strong> class:</p> <pre><code><Login doSignOut={this.showHome} label={""Logout""} /> </code></pre>",,,true
"{'account_id': 24589621, 'reputation': 374, 'user_id': 18493710, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/i81lL.jpg?s=256', 'display_name': 'okaeiz', 'link': 'https://stackoverflow.com/users/18493710/okaeiz'}",True,0,1726560453,1726560453,78993107,78993032,CC BY-SA 4.0,"<p>This question is written in a vague way but as far as I understand, you have to modify your <code>axios</code> interceptor to automatically redirect the user to the login page. The interceptor (<code>axiosAuthorized.interceptors.response.use</code>) should check for the 401 status code. If such a status code is returned, you can redirect the user to the login page and reset the user's state in the Redux store.</p> <p>You can do this for example:</p> <pre class=""lang-js prettyprint-override""><code>import axios from 'axios'; import store from '../redux/store'; import { resetUser } from '../redux/slices/userSlice'; import { useHistory } from 'react-router-dom';  export const axiosAuthorized = axios.create({     baseURL: process.env.REACT_APP_BACKEND_ENDPOINT,     timeout: 20000 });  // the interceptor for requests axiosAuthorized.interceptors.request.use(     config => {         const token = store.getState().user.user.accessToken;         if (token) {             config.headers[""x-access-token""] = token;         }         return config;     },     error => {         return Promise.reject(error);     } );  // the interceptor for response axiosAuthorized.interceptors.response.use(     response => {         return response;     },     error => {         if (error.response && error.response.status === 401) {             // Handle 401 error: Unauthorized             store.dispatch(resetUser()); // reset the user state in Redux             window.location.href = '/login'; // redirect to the login page         }         return Promise.reject(error);     } );  </code></pre> <p>Therefore, the response interceptor checks if the response status is 401. If it is, it dispatches the <code>resetUser</code> action to clear the user's state in Redux, and then redirects the user to the login page using <code>window.location.href = '/login';</code>.</p> <p>And the request interceptor remains largely the same, setting the <code>x-access-token</code> header with the current token stored in Redux.</p>",,,true
"{'account_id': 20659146, 'reputation': 4711, 'user_id': 15167500, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/JQibI.jpg?s=256', 'display_name': 'rozsazoltan', 'link': 'https://stackoverflow.com/users/15167500/rozsazoltan'}",False,1,1726570664,1726566745,78993492,78992932,CC BY-SA 4.0,"<h3>Solution (with your code)</h3> <pre class=""lang-js prettyprint-override""><code>// set true, set false, set true... loop const shouldStick = entry.intersectionRatio < 0.95;  </code></pre> <p>In your code, you depend on the value of <code>entry.intersectionRatio</code> to determine whether the sticky state should be <code>true</code> or <code>false</code>. This condition should not be less than <code>0.95</code> but should be exactly equal to <code>1</code>.</p> <pre><code>const observer = new IntersectionObserver(   ([entry]) => {     if (entry.intersectionRatio < 0.95) {       console.log('Element is less than 95% visible');     } else {       console.log('Element is at least 95% visible');     }   }, );  // entry.intersectionRatio maybe will 0.5 --> set sticky state to true // now by sticky style, entry.intersectionRatio will be 1.0 --> 1.0 < 0.95 === false --> set sticky state to false // ... loop </code></pre> <p>When you set the sticky state, the value of <code>entry.intersectionRatio</code> will be <code>1</code>, which is greater than <code>0.95</code>, and that's why you get an infinite loop.</p> <pre class=""lang-js prettyprint-override""><code>// set true (end) const shouldStick = entry.intersectionRatio === 1;  // or: Although I don't see much point in this const shouldStick = entry.intersectionRatio > 0.95; </code></pre> <h3>Alternative solution (just use CSS <code>position: sticky;</code>)</h3> <p>Although you are currently using it, the sticky position works as you expect even without your JS code. When the element reaches the specified distance from the top in pixels, it becomes fixed there as you continue scrolling. Since you set <code>top: 0</code>, the element will stay fixed when it reaches the 0 pixel position of its parent element.</p> <pre class=""lang-js prettyprint-override""><code>const stickyResultsHeader = {   // design   padding: ""1.5rem 0"",   backgroundColor: ""gray"",   display: ""flex"",   borderBottom: ""1px solid #e1e1e1e1"",   // for sticky state   position: shouldSticky ? ""sticky"" : ""block"", // only drawback in the function is that the switch does not toggle back automatically to sticky   top: ""0"",   zIndex: 10, }; </code></pre> <pre class=""lang-html prettyprint-override""><code><div style={stickyResultsHeader}>   <div style={leftSectionStyle}>     <h4>Tests</h4>     <Button kind=""ghost"" size=""md"">       <span>Reset</span> <!-- onClick set shouldSticky to false -->     </Button>   </div> </div> </code></pre>",1726570664.0,,true
"{'account_id': 9067213, 'reputation': 27627, 'user_id': 6751634, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/kjSAI.jpg?s=256', 'display_name': 'Fei Han', 'link': 'https://stackoverflow.com/users/6751634/fei-han'}",False,1,1726563173,1726562018,78993186,78992531,CC BY-SA 4.0,"<p>As far as I know, this is no direct support for using Crystal Reports in ASP.NET Core at this time.</p> <p>If you'd like to expose existing Crystal Reports to React client users (migrate from webform to React + ASP.NET Core APIs), as you mentioned in possible approach/steps, you can try to make webform project expose Crystal Reports as webmethods or service, then consume the service form React client to render generated PDF report. And if you do not want React client communicate data with old webform app, you can implement/configure your ASP.NET Core API to serve as an intermediary proxy between the React app and the webform app.</p> <p>Besides, redesign and reconstruct projects is an alternative way. Make ASP.NET Core API to expose data to client app, and implement report features with pure js solution based on fetched data on React client. As @Arvo mentioned, this might takes considerable effort due to its complexity.</p>",1726563173.0,,true
"{'account_id': 1923814, 'reputation': 4008, 'user_id': 1734722, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/qcSQ4.jpg?s=256', 'display_name': 'MilletSoftware', 'link': 'https://stackoverflow.com/users/1734722/milletsoftware'}",False,1,1726552073,1726552073,78992677,78992531,CC BY-SA 4.0,"<p>The Crystal portion must run on Windows under .NET Framework. Can't use .NET Core. So highest you can go is 4.8.1.</p> <p>Your main app can call the Crystal app, pass the rpt file path, parameters, logon info, export format, export file, etc. It can then deliver the exported file to the end user.</p> <p>If you don't want to develop the Crystal portion yourself, there are 3rd-party Crystal Reports automation packages that provide a command line API.</p>",,,true
"{'account_id': 25671670, 'reputation': 44, 'user_id': 19435806, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e6f5160abe88e47939e558aec82f5ad4?s=256&d=identicon&r=PG', 'display_name': 'billyboyalex', 'link': 'https://stackoverflow.com/users/19435806/billyboyalex'}",False,-1,1728994848,1728994848,79089898,78991940,CC BY-SA 4.0,"<p>You could just use <code>npx create-next-app@latest</code>, where you will get the option to use typescript.</p> <p>From React docs: <a href=""https://react.dev/learn/start-a-new-react-project"" rel=""nofollow noreferrer"">https://react.dev/learn/start-a-new-react-project</a></p>",,,true
"{'account_id': 21221436, 'reputation': 26, 'user_id': 15607925, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-zZ3iLzP-BWo/AAAAAAAAAAI/AAAAAAAAA7g/AMZuucmukK2kBwIizNJz4cdJXcqmTgttNw/s96-c/photo.jpg?sz=256', 'display_name': 'Nabin', 'link': 'https://stackoverflow.com/users/15607925/nabin'}",False,0,1726564475,1726564475,78993347,78991920,CC BY-SA 4.0,"<p>Use two different start and end times. One to display on react-big-calendar and other to store the actual data.</p> <p>Your new sample event may look like this.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>{     ""id"": ""a3c50e3b-cd9d-4701-8b35-86e05df23c3d"",     ""details"":{       ""start"": ""2024-09-17T09:07:00.000Z"",       ""end"": ""2024-09-20T10:07:00.000Z"",     }     ""type"": ""jitsi_live_session"",     ""title"": ""jitsionesep"",     ""course_name"": ""rafel mission"",     ""start"": ""2024-09-17T09:07:00.000Z"",     ""end"": ""2024-09-17T10:07:00.000Z"",     ""learning_object_id"": ""71d07c4e-6417-4af9-8509-7047f0dbf980"",     ""session_id"": ""7d93ecd1-2d12-4b5b-8c4d-dab33169579e"",     ""allDay"": false }</code></pre>  </div>  </div>  </p> <p>The outer start and end time are used by react-big-calendar for displaying the event on the calendar whereas you can use the start and end from details object to use for yourself.</p> <p>You can modify the end for react-big-calendar as</p> <pre><code>end: new Date(start.getTime() + 15*60*1000) </code></pre> <p>which will add 15 minutes to the start time. Since react-big-calendar takes the event as allDay if the start and end are on different dates(which seems quite fair), so may be its only way to do it.</p>",,,true
"{'account_id': 22771665, 'reputation': 21, 'user_id': 16928992, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/GqBf7.png?s=256', 'display_name': 'Olaf Swan', 'link': 'https://stackoverflow.com/users/16928992/olaf-swan'}",False,1,1726942819,1726942819,79010223,78991914,CC BY-SA 4.0,"<p>@sphnx was right to suggest starting the debugging process by exploring the Expo router file. That was exactly where the bug was â a function within the return value.</p> <p><a href=""https://i.sstatic.net/ykUlwWJ0.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/ykUlwWJ0.png"" alt=""Functions are not valid as a React child"" /></a></p> <p>Many thanks to him for taking the time to help me!</p>",,,true
"{'account_id': 23879074, 'reputation': 155, 'user_id': 17879981, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/o3CeI.jpg?s=256', 'display_name': 'ThatNerd', 'link': 'https://stackoverflow.com/users/17879981/thatnerd'}",False,0,1726550051,1726550051,78992603,78991831,CC BY-SA 4.0,"<p><a href=""https://react.dev/reference/react-dom/server/renderToStaticMarkup"" rel=""nofollow noreferrer""><code>renderToStaticMarkup</code></a> from the <code>react-dom/server</code> package might be useful for this.</p> <blockquote> <p>On the server, call renderToStaticMarkup to render your app to HTML [...] This method renders <strong>non-interactive HTML that cannot be hydrated</strong>. This is useful if you want to use React as a simple static page generator, or <em>if youâre rendering completely static content like emails</em>.</p> </blockquote> <p>(italics mine)</p> <p>Calling this function via some sort of JavaScript interop with your existing setup, and passing in the component you wish to render into an HTML string, should accomplish what you are looking for.</p>",,,true
"{'account_id': 31231533, 'reputation': 11, 'user_id': 24035890, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/04d5d88738749ea1d26807e0cf11be6e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'user24035890', 'link': 'https://stackoverflow.com/users/24035890/user24035890'}",False,1,1726513735,1726513540,78991467,78991430,CC BY-SA 4.0,"<p>Probably the best way would be to first make sure that the scss files are compiled into css. Then make sure they are hosted with your project or on a CDN. You can do this pretty easily with webpack if you didn't use CRA or if you eject your app. Just make sure that your css files are not put in the same bundle as your other files.</p> <p>You can dynamically import stylesheets in a variety of ways. For example, you can return a <link rel=""stylesheet"" href={cssSource}> on a component where cssSource is a string that points to your hosted css file. Of course there are other ways too, but they all will use similar methods of adding a link stylesheet.</p> <p>See: <a href=""https://stackoverflow.com/questions/28386125/dynamically-load-a-stylesheet-with-react"">Dynamically load a stylesheet with React</a></p>",1726513735.0,,true
"{'account_id': 1091946, 'reputation': 11127, 'user_id': 1086398, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/3edfa49328efffd9d8e76a0487f1d703?s=256&d=identicon&r=PG', 'display_name': 'adsy', 'link': 'https://stackoverflow.com/users/1086398/adsy'}",True,1,1726533246,1726532279,78992171,78991374,CC BY-SA 4.0,"<p>This is possible if you mock <code>ChildComponent</code> with a fake component implementation that simply binds a mock function to <code>props.doSomething()</code> inside of its render.</p> <p>That mock function can then also be statically exposed on the component function itself, so you can trigger it from the test.</p> <p>The below assumes <code>ChildComponent</code> is default exported in its own file as this is not mentioned in the question. However, adjustments can be made to work with a named export pattern, too.</p> <p>It does, however, require that the <code>ChildComponent</code> be in a different file than the <code>ParentComponent</code>. If they are in the same file, you cannot mock the <code>ChildComponent</code> before the ESM module initialises and relevant components within have already grabbed internal reference to the real impls within the same module -- at least in a way that doesn't require esoteric hacks. You can also choose to just make the code more testable to get around this if needed. For example, allowing a custom <code>ChildComponent</code> to be passed to <code>ParentComponent</code>, or the render props pattern.</p> <pre><code>import React from 'react' import { render } from '@testing-library/react' import ChildComponent from './ChildComponent' import ParentComponent from './ParentComponent'  jest.mock('./ChildComponent', () => {   const callDoSomething = jest.fn()   const MockComponent = ({ doSomething }) => {     // Store the prop to be accessible for testing     callDoSomething.mockImplementation(() => doSomething())      return null   }    MockComponent.callDoSomething = callDoSomething    return {     __esModule: true,     default: MockComponent,   } })  // ...  it('calls someLogicA when doSomething is called', () => {   render(<ParentComponent />)   ChildComponent.callDoSomething()   // expect(the logic for someLogic to work); })  </code></pre> <p>It's perhaps worth noting that this rails against usual expectations around ""react-testing-library"", which encourages tests that assert on tangible user-visible elements and doesn't go out of its way to support tests of underlying implementations.</p> <p>It appears you are aware of this in this case and are looking for an escape hatch because rendering the ""real thing"" is likely hard in your case.</p> <p>However, before using this particular escape hatch, you should consider if a more realistic mock could be implemented, if JSDOM can be patched up to work with what you need, or even possibly consider testing with a real browser like Cypress/Playwright component testing, for example.</p> <p>You could also consider encapsulating this logic in a hook and using that inside <code>ParentComponent</code>. You could then test this hook in isolation without mocking. This is arguably making your code more testable, which is rarely a bad thing.</p>",1726533246.0,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,0,1726554260,1726554260,78992758,78991366,CC BY-SA 4.0,"<h1>Issue</h1> <p>When the URL is manually updated it reloads the page, e.g. the entire React app. The <code>Logout</code> component renders the redirect to <code>""/get-started""</code> on the initial render and the effect doesn't execute until the end of the render cycle. By this point in time the <code>AuthProvider </code> component has also already mounted and run <em>its</em> side-effect to check the auth status.</p> <h1>Solution</h1> <h2>TL;DR Reason</h2> <p>The TL;DR is that the navigation from the <code>""/logout""</code> to <code>""/get-started""</code> happens prior to the <code>Logout</code> component's <code>useEffect</code> hook callback executing, so all the auth logic is looking at the current stored JWT token data before the <code>Logout</code> effect has cleared it out.</p> <h2>Suggestion to Fix</h2> <p>You should delay the logout navigation to occur <em>at least</em> one render cycle after the enqueued state updates for <code>setLoggedIn</code>, <code>setUserId</code>, and <code>setJwt</code> have had a chance to be processed by React and a rerender triggered so the auth flows can run and read the updated states and local and session storage values.</p> <p>The trivial solution is to use a <code>setTimeout</code> with the shortest delay possible, which is enough to place the timeout callback at the end of the Javascript event loop and allow React to update.</p> <p>Example:</p> <p>Logout.tsx</p> <pre><code>import { useNavigate } from 'react-router-dom';  const Logout = () => {   const navigate = useNavigate();    const { setLoggedIn, setUserId, setJwt } = useAuth();    // Reset all states and clear storage   useEffect(() => {     localStorage.clear();     sessionStorage.clear();      // Enqueue React state updates     setLoggedIn(false);     setUserId(-1);     setJwt("""");      // Place callback to end of event loop to navigate after     // React updates are processed     setTimeout(() => navigate(""/get-started""), 0);   }, []);    // Return & render anything really, anything but Navigate   return <div>Logging out...</div>; }; </code></pre> <h2>Non-TL;DR Explanation</h2> <p>This is a basic/rough run-down of events as I'm able to track through them:</p> <ol> <li><p>Manually update URL path to <code>""/logout""</code> and the page is reloaded</p> </li> <li><p>The React app mounts</p> </li> <li><p><code>AuthProvider</code> mounts & renders</p> <ul> <li><code>jwt</code> state is initialized from <code>localStorage</code></li> <li><code>loggedIn</code> is initially false</li> </ul> </li> <li><p>Path <code>""/logout""</code> is matched and <code>Logout</code> mounts & renders</p> <ul> <li><code>Logout</code> renders <code><Navigate to=""/get-started"" /></code> to navigate to <code>""/get-started""</code> route</li> <li><code>""/get-started""</code> route renders <code><Navigate to=""/get-started/login"" /></code></li> <li><code>""/get-started/login""</code> and <code>Login</code> is rendered.</li> </ul> </li> <li><p>I <em>think</em> roughly here both the effects in <code>Login</code> and <code>AuthProvider</code> execute. <code>AuthProvider</code>'s effect uses the initial <code>jwt</code> state for the auth check and updates the <code>loggedIn</code> state. <code>Logout</code>'s effect clears the storage and enqueues state updates.</p> </li> <li><p><code>Login</code> renders <code>if (loggedIn) return <Navigate to=""/"" />;</code> and navigates to <code>""/""</code> because <code>loggedIn</code> is true after the <code>AuthProvider</code> auth API call resolves</p> </li> <li><p>Path <code>""/""</code> renders <code>App</code> and since <code>loggedIn</code> is true, <code><Navigate to=""/home"" /></code> is rendered and the UI navigates and renders the <code>Home</code> component.</p> </li> </ol>",,,true
"{'account_id': 27434665, 'reputation': 164, 'user_id': 20930777, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/8kQiA.jpg?s=256', 'display_name': 'sphnx', 'link': 'https://stackoverflow.com/users/20930777/sphnx'}",True,1,1726511340,1726511340,78991365,78991343,CC BY-SA 4.0,"<p>Before you map any array which may be undefined to the compiler (anything which is not static), always check if it exists</p> <p>For Example:</p> <pre><code>const staticArray = [""Static"", ""Array""];  const dynamicArray = fetchDynamicArray();   staticArray.map((item) => {...}) // Correct  dynamicArray && dynamicArray.map((item) => {...}) // Check for undefined </code></pre>",,,true
"{'account_id': 482477, 'reputation': 964, 'user_id': 896907, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c045139ddecaa6bed27c00bd16fc917f?s=256&d=identicon&r=PG', 'display_name': 'josef', 'link': 'https://stackoverflow.com/users/896907/josef'}",False,0,1727203705,1727203705,79019970,78991252,CC BY-SA 4.0,"<p>use the <code>useGSAP</code> hook instead of <code>useEffect</code> <a href=""https://gsap.com/resources/React/#usegsap-hook-"" rel=""nofollow noreferrer"">https://gsap.com/resources/React/#usegsap-hook-</a></p>",,,true
"{'account_id': 25465072, 'reputation': 897, 'user_id': 19264249, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2AAN0xM6.jpg?s=256', 'display_name': 'sahilatahar', 'link': 'https://stackoverflow.com/users/19264249/sahilatahar'}",True,1,1726559915,1726542311,78992407,78991196,CC BY-SA 4.0,"<p>Use a <strong>helper function</strong> for generating dynamic colors since React-specific features (like state or effects) aren't needed. You can still pass the theme or color palette as an argument to avoid hardcoding colors, making it simple and efficient. Custom hooks are unnecessary here.</p> <h2>Update</h2> <p>To pass the theme to the <code>BackgroundColors</code> array, you can pass the theme (or color palette) as a parameter to your <code>createColor</code> function or directly reference the theme object within the helper function. This avoids hardcoding and keeps it dynamic based on the theme.</p> <p>Hereâs an example where you pass the theme to your helper function:</p> <h3>Example</h3> <pre><code>export interface BackgroundColors {   from: number;   to: number;   color: string; }  const createColor = (value: number, theme: any) => {   const colors: BackgroundColors[] = [     { from: 0, to: 5, color: theme.colors.red }, // Use theme colors     { from: 6, to: 10, color: theme.colors.blue },     { from: 11, to: 15, color: theme.colors.green },   ];    return colors.find((bg) => value >= bg.from && value <= bg.to)?.color || theme.colors.default; };  // Simulating theme object for this example const theme = {   colors: {     red: ""#FF0000"",     blue: ""#0000FF"",     green: ""#008000"",     default: ""#FFFFFF"",   }, };  const App = () => {   const value = 3;   const color = createColor(value, theme);    return (     <div style={{ backgroundColor: color }}>       The background color changes based on value!     </div>   ); };  export default App; </code></pre>",1726559915.0,,true
"{'account_id': 18683637, 'reputation': 131, 'user_id': 13619649, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3881d5a9aea4783e16c8609f1b120bd1?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'GoldCasket', 'link': 'https://stackoverflow.com/users/13619649/goldcasket'}",True,0,1726578763,1726578763,78994231,78991069,CC BY-SA 4.0,"<p>For anyone who runs into this, the problem in this case was that the request was returning a void response type (204 on success) so it needed a format param adding to decode the error correctly.</p>",,,true
"{'account_id': 19499213, 'reputation': 41, 'user_id': 14265735, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d8bd61ab7309a218fb4843d278cf88ed?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Manikandan', 'link': 'https://stackoverflow.com/users/14265735/manikandan'}",False,0,1726507771,1726507771,78991186,78991069,CC BY-SA 4.0,"<p>You should not destructure error from OnError</p> <pre><code>const apiCall = useMutation({       mutationFn: async (payload) => apiRequest(id, payload),       onSuccess: () => {         console.log(""success handling done here"");       },       onError: (error) => {         console.log(""Error:"", error); // Logging the actual error       },     }); </code></pre>",,,true
"{'account_id': 11167278, 'reputation': 207, 'user_id': 8195540, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/44c96e070db71ca65bb9883410467396?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'CodeByAk', 'link': 'https://stackoverflow.com/users/8195540/codebyak'}",False,0,1726555735,1726555735,78992820,78991017,CC BY-SA 4.0,"<p>I am not sure it will help you or not but you can try this once by adding loader and autoHeight</p> <pre><code>import React, { useState, useEffect } from 'react'; import { DataGrid } from '@mui/x-data-grid';  const MyComponent = () => {   const [table, setTable] = useState('table1');   const [loading, setLoading] = useState(false);    const handleButtonClick = (newTable) => {     setLoading(true);     setTimeout(() => {       setTable(newTable);       setLoading(false);     }, 300); // Adjust the delay as needed   };    return (     <div>       <button onClick={() => handleButtonClick('table1')}>Show Table 1</button>       <button onClick={() => handleButtonClick('table2')}>Show Table 2</button>       {loading ? (         <div>Loading...</div>       ) : (         <DataGrid           rows={table === 'table1' ? rows1 : rows2}           columns={columns}           autoHeight           rowHeight={50} // Adjust as needed         />       )}     </div>   ); }; </code></pre>",,,true
"{'account_id': 33593006, 'reputation': 131, 'user_id': 26007375, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/cab800d8c84c79c925d573f87445f567?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Carsten Codes', 'link': 'https://stackoverflow.com/users/26007375/carsten-codes'}",False,0,1726555775,1726555775,78992823,78990940,CC BY-SA 4.0,"<p>Have you tried to use <code>require</code> or <code>import</code> to resolve paths correctly, as Webpack will process these paths during build time?</p> <pre><code>import React from ""react""; import { Unity, useUnityContext } from ""react-unity-webgl"";  // Use require for dynamic asset loading export default function UnityPlayer() {     const { unityProvider } = useUnityContext({         loaderUrl: require(""./assets/WebGLExport.loader.js""),         dataUrl: require(""./assets/WebGLExport.data""),         frameworkUrl: require(""./assets/WebGLExport.framework.js""),         codeUrl: require(""./assets/WebGLExport.wasm""),     });      return <Unity unityProvider={unityProvider} />; } </code></pre>",,,true
"{'account_id': 20818493, 'reputation': 71, 'user_id': 15290749, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-Mjk0S0VHAvg/AAAAAAAAAAI/AAAAAAAAAJY/AMZuucmHGMWUSK1wyHHGo3fc4iTMzSLqMA/s96-c/photo.jpg?sz=256', 'display_name': 'Mateus Duarte', 'link': 'https://stackoverflow.com/users/15290749/mateus-duarte'}",True,1,1726502688,1726502688,78990942,78990928,CC BY-SA 4.0,"<p>The thing is that, in React, event handler functions (like handleSubmit) don't return JSX directly. They perform some action (updating the state with setState), and then the component's return function is the one that will render JSX.</p> <p>Instead of trying to return JSX from handleSubmit, update the state (movieName) and use that in the main component.</p> <p>Example</p> <pre><code>import { useState } from 'react'; import SearchMovies from './components/SearchMovies'; import PlayTrailer from './components/PlayTrailer';  function App() {     const [movieName, setMovieName] = useState('');      const handleSubmit = (movie) => {         console.log('movie submitted', movie);          setMovieName(movie);      };      return (         <div>             <SearchMovies onSubmit={handleSubmit} />             {movieName && <div>Movie submitted: {movieName}</div>}         </div>     ); }  export default App; </code></pre>",,,true
"{'account_id': 3211927, 'reputation': 183, 'user_id': 2711741, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b074bec31ec5409a7573d392ab3c2a7f?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'DanielPanic', 'link': 'https://stackoverflow.com/users/2711741/danielpanic'}",False,0,1726502653,1726502653,78990941,78990890,CC BY-SA 4.0,"<p>That seems a propagation error. Try this:</p> <pre><code><AccordionContent> <div className=""space-y-4"">     <div>         <Label>Playlist Name</Label>         <Input             value={playlistName}             onChange={(e) => updatePlaylistName(playlistName, e.target.value)}             onKeyDown={(e) => {                 if (e.key === ' ') {                     e.stopPropagation();                 }             }}             className=""mt-1 bg-white text-black""         />     </div>      <Button         variant=""ghost""         size=""sm""         onClick={(e) => {             e.stopPropagation();             deletePlaylist(playlistName);         }}         className=""hover:bg-red-100 p-2 mr-2""     >         <Trash2 size={16} className=""text-red-500"" />     </Button> </div> <div className=""space-y-4"">     <div className=""flex space-x-4"">         <div className=""w-1/2"">             <Label>Start Time</Label>             <Input                 type=""time""                 value={playlist.start_time}                 onChange={(e) => updateSchedule(playlistName, 'start_time', e.target.value)}                 className=""mt-1 bg-white text-black""             />         </div>         <div className=""w-1/2"">             <Label>End Time</Label>             <Input                 type=""time""                 value={playlist.end_time}                 onChange={(e) => updateSchedule(playlistName, 'end_time', e.target.value)}                 className=""mt-1 bg-white text-black""             />         </div>     </div>     <div>         <Label className=""mb-2 block"">Weekdays</Label>         <div className=""flex space-x-4 mt-2"">             {['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map((day, index) => (                 <div key={day} className=""flex items-center"">                     <Checkbox                         id={`${day}-${playlistName}`}                         checked={playlist.weekdays[index] === '1'}                         onCheckedChange={() => updateWeekday(playlistName, index)}                     />                     <Label htmlFor={`${day}-${playlistName}`} className=""ml-1"">{day}</Label>                 </div>             ))}         </div>     </div>     {renderMediaSection(playlistName, 'images')}     {renderMediaSection(playlistName, 'videos')} </div> </code></pre>  <p>The problem is that when you click the input you are also triggering the accordion, so you need to stop the event propagation when you click the input.</p>",,,true
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,0,1726503458,1726502951,78990958,78990857,CC BY-SA 4.0,"<p><code>useSearchResult</code> isn't actually a React hook, it appears to be a regular React component, e.g. a function that returns JSX. You should rename to <code>SearchResult</code> and render it as JSX directly.</p> <p>Example:</p> <pre><code>const SearchResult = ({ item }) => {   return (     <div>       {item.name}       {item.id}     </div>   ); }; </code></pre> <pre><code>return (   ...   {items.map(item => <SearchResult key={item.id} item={item} />)}   ... ); </code></pre> <p>React will handle rerendering when the <code>items</code> ""dependency"" updates. If there is an issue with rerendering too often, then memoize the <code>items</code> array value.</p> <pre><code>const memoizedItems = useMemo(() => {   // compute and return stable items array }, [/* dependencies */]);  ...  return (   ...   {memoizedItems.map(item => <SearchResult key={item.id} item={item} />)}   ... ); </code></pre>",1726503458.0,,true
"{'account_id': 4687875, 'reputation': 83797, 'user_id': 3794812, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/91da5cf982069e22d3bd0b514dfb45e2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Nicholas Tower', 'link': 'https://stackoverflow.com/users/3794812/nicholas-tower'}",True,1,1726502710,1726502400,78990934,78990857,CC BY-SA 4.0,"<pre><code>const useSearchResult = ({item}) => {  return (    <div>      {item.name}      {item.id}     </div>  ) } </code></pre> <p>Since this code does not call any hooks (eg, <code>useState</code>, <code>useEffect</code>), it is not a custom hook. It does not need to follow the <a href=""https://react.dev/reference/rules/rules-of-hooks"" rel=""nofollow noreferrer"">rules of hooks</a>, meaning you can safely call it as many times as you like, and you can change the number of times on each render. The only thing you should do is change the name of it so no one (neither humans, nor automated tools like eslint) mistakenly thinks it needs to follow the rules of hooks.</p>",1726502710.0,,true
"{'account_id': 25977102, 'reputation': 16, 'user_id': 19691413, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5e29594008e28a7651b421f2ad75985d?s=256&d=identicon&r=PG', 'display_name': 'Erfan Noyon', 'link': 'https://stackoverflow.com/users/19691413/erfan-noyon'}",True,0,1726498367,1726498367,78990702,78990696,CC BY-SA 4.0,"<p>you need to manage the state properly and ensure that this state is reflected in a hidden input field that will be included in the form data.</p> <p>You'll need to add a hidden input field to your form to capture the value selected in the ComboboxDemo component. This field should be updated whenever the selection changes. when a selection is made in the ComboboxDemo, the hidden input field's value is updated accordingly.</p> <pre><code>    ""use client""  import { Input } from '@/components/ui/input' import { Label } from '@/components/ui/label' import * as React from 'react' import { Check, ChevronsUpDown } from ""lucide-react"" import { cn } from ""@/lib/utils"" import { Button } from ""@/components/ui/button"" import {   Command,   CommandEmpty,   CommandGroup,   CommandInput,   CommandItem,   CommandList, } from ""@/components/ui/command"" import {   Popover,   PopoverContent,   PopoverTrigger, } from ""@/components/ui/popover"" import SubmitButtonForm from '../../components/submit-form-button' import { Airplane } from '@prisma/client' import { useFormState } from 'react-dom' import { saveFlight } from '../lib/action' import { ActionResult } from '@/app/dashboard/(auth)/signin/form/action'  interface FormFlightProps {   airplanes: Airplane[] }  const initialFormState: ActionResult = {   errorTitle: null,   errorDesc: [] }  export default function FormFlight({ airplanes }: FormFlightProps) {    const [state, formAction] = useFormState(saveFlight, initialFormState)    function ComboboxDemo() {     const [open, setOpen] = React.useState(false)     const [value, setValue] = React.useState<string>("""")      // Update the hidden input field with the selected value     React.useEffect(() => {       const hiddenInput = document.getElementById('planeId') as HTMLInputElement       if (hiddenInput) {         hiddenInput.value = value       }     }, [value])      return (       <Popover open={open} onOpenChange={setOpen}>         <PopoverTrigger asChild>           <Button             variant=""outline""             role=""combobox""             aria-expanded={open}             className=""w-[100%] justify-between mt-8""           >             {value               ? airplanes.find((airplane) => airplane.name === value)?.name               : ""Pilih Pesawat...""}             <ChevronsUpDown className=""ml-2 h-4 w-4 shrink-0 opacity-50"" />           </Button>         </PopoverTrigger>         <PopoverContent className=""w-[250px] md:w-[370px] lg:w-[640px] p-0"">           <Command>             <CommandInput placeholder=""Cari Pesawat/Penerbangan..."" />             <CommandList>               <CommandEmpty>Pesawat/Penerbangan tidak ditemukan.</CommandEmpty>               <CommandGroup>                 {airplanes.map((airplane) => (                   <CommandItem                     key={airplane.id}                     value={airplane.name}                     onSelect={(currentValue) => {                       setValue(currentValue === value ? """" : currentValue)                       setOpen(false)                     }}                   >                     <Check                       className={cn(                         ""mr-2 h-4 w-4"",                         value === airplane.name ? ""opacity-100"" : ""opacity-0""                       )}                     />                     {airplane.name}                   </CommandItem>                 ))}               </CommandGroup>             </CommandList>           </Command>         </PopoverContent>       </Popover>     )   }    return (     <form action={formAction} className='space-y-6'>       <div className='grid grid-cols-2 gap-4'>         <div className='space-y-2'>           <Label htmlFor=""planeId"">Pilih Pesawat</Label>           <ComboboxDemo />           <Input             type='hidden'             name=""planeId""             id=""planeId""             required           />         </div>          <div className=""space-y-2"">           <Label htmlFor=""price"">Harga Tiket</Label>           <Input             placeholder=""Harga Tiket...""             name=""price""             id=""price""             type='number'             min={0}             required           />           <span className=""text-xs text-gray-900"">             *Kelas Bisnis ++ Rp 500.000, Kelas First ++ Rp 750.000*           </span>         </div>       </div>       <div className=""grid grid-cols-3 gap-4"">         <div className=""space-y-2"">           <Label htmlFor=""departureCity"">Kota Keberangkatan</Label>           <Input             placeholder=""Kota Keberangkatan...""             name=""departureCity""             id=""departureCity""             required           />         </div>         <div className=""space-y-2"">           <Label htmlFor=""departureDate"">Tanggal Keberangkatan</Label>           <Input             type='datetime-local'             placeholder=""Tanggal Keberangkatan...""             name=""departureDate""             id=""departureDate""             className='block'             required           />         </div>         <div className=""space-y-2"">           <Label htmlFor=""departureCityCode"">Kode Kota</Label>           <Input             placeholder=""Kode Kota...""             name=""departureCityCode""             id=""departureCityCode""             required           />         </div>       </div>       <div className=""grid grid-cols-3 gap-4"">         <div className=""space-y-2"">           <Label htmlFor=""destinationCity"">Kota Tujuan</Label>           <Input             placeholder=""Kota Tujuan...""             name=""destinationCity""             id=""destinationCity""             required           />         </div>         <div className=""space-y-2"">           <Label htmlFor=""arrivalDate"">Tanggal Tiba</Label>           <Input             type='datetime-local'             placeholder=""Tanggal Tiba...""             name=""arrivalDate""             id=""arrivalDate""             className='block'             required           />         </div>         <div className=""space-y-2"">           <Label htmlFor=""destinationCityCode"">Kode Kota</Label>           <Input             placeholder=""Kode Kota...""             name=""destinationCityCode""             id=""destinationCityCode""             required           />         </div>       </div>        <SubmitButtonForm />     </form>   ) } </code></pre>",,,true
"{'account_id': 25465072, 'reputation': 897, 'user_id': 19264249, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2AAN0xM6.jpg?s=256', 'display_name': 'sahilatahar', 'link': 'https://stackoverflow.com/users/19264249/sahilatahar'}",False,0,1726542572,1726542572,78992418,78990511,CC BY-SA 4.0,"<p>The issue with your image becoming square in production is likely due to Next.js optimization. Here's how you can try fix it:</p> <ol> <li><p><strong>Aspect Ratio</strong>: Remove or adjust <code>width</code> and <code>height</code> props to maintain the image's natural aspect ratio.</p> </li> <li><p><strong>Disable Optimization</strong>: Add the <code>unoptimized</code> attribute to prevent resizing issues:</p> <pre><code><Image   className=""mb-5 w-full rounded-lg object-cover""   src={coverImage}   alt={title}   width={1000}   height={500}   unoptimized /> </code></pre> </li> </ol>",,,true
"{'account_id': 17037829, 'reputation': 166, 'user_id': 12326471, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RM8RT.jpg?s=256', 'display_name': 'Lucas Henrique', 'link': 'https://stackoverflow.com/users/12326471/lucas-henrique'}",False,0,1726667851,1726494399,78990457,78990393,CC BY-SA 4.0,"<p>From what I have gathered from the code, the default key where it stores the configuration is actually called <code>darkMode</code>, in camelCase.</p> <p>For the storage part, it seems like they do a lot of checks when getting the <code>localStorage</code> instance, so SSR may be a pain to work with, reference: <a href=""https://github.com/donavon/use-persisted-state/blob/develop/src/index.js"" rel=""nofollow noreferrer"">https://github.com/donavon/use-persisted-state/blob/develop/src/index.js</a></p> <p>You could try to use the <code>storageProvider</code> option in the second argument to define the global <code>localStorage</code> as a provider to keep things consistent, this is the only solution I can think as of right now.</p> <p>Also, if you're using the <code>use-dark-mode</code> library on a version below verion 2.0, I don't think they store the dark mode config in <code>localStorage</code>, as the latest updated README says that the storing feature is new in version 2.0.</p> <p>Another point of attention is that @nextui has its own theming configuration, so you probably can't just use the <code>use-dark-mode</code> hook there and it just works. Since @nextui is built on top of tailwind (as per the documentation) you probably should configure the dark mode part through there and implement some code to load the dark mode configuration from localStorage and apply it. Reference: <a href=""https://nextui.org/docs/customization/theme"" rel=""nofollow noreferrer"">https://nextui.org/docs/customization/theme</a></p>",1726667851.0,,true
"{'account_id': 18133571, 'reputation': 2456, 'user_id': 13188385, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/TK8gC.png?s=256', 'display_name': 'Asplund', 'link': 'https://stackoverflow.com/users/13188385/asplund'}",False,0,1726495478,1726494559,78990474,78990339,CC BY-SA 4.0,"<blockquote> <p>[...] best practice [...]</p> </blockquote> <p>The best practice is to use the <code><Link /></code> component as the button element <code><Button as={Link} /></code>.</p> <p>Assuming you're using <code>react-router</code>, the <code>Link</code> component is rendered as an anchor element (<code><a /></code>) but when it's clicked by the user it calls <code>preventDefault()</code> to prevent a hard navigation and internally calls <code>useNavigate().navigate()</code> (or some similar <a href=""https://developer.mozilla.org/en-US/docs/Web/API/History_API"" rel=""nofollow noreferrer"">History API</a> abstraction).</p> <p>In effect <code><Link to=""/path"" /></code> is an abstraction of <code><a onClick={() => navigate(""/path"")} /></code>.</p> <p>By not using anchor links (<code><a /></code>) the user is unable to open the link in a different tab. Furthermore you're hurting accessibility by not supporting assistive technologies. Therefore, you should always use proper tags when possible (not <code><button onClick={navigate} /></code>).</p> <p>Another reason not to use JavaScript for navigation is that crawlers such as Google bot cannot discover your pages.</p> <hr /> <blockquote> <p>[...] difference like in performance [...]</p> </blockquote> <p>There's no substantial difference in performance between the two approaches.</p> <hr /> <blockquote> <p>[...] difference in functionality level.</p> </blockquote> <p>For a normal user who only use the mouse to navigate the functionality is the same, however as aforementioned, assistive tools such as a screen reader will without additional markup be unable to recognize the button as a link.</p>",1726495478.0,,true
"{'account_id': 25465072, 'reputation': 897, 'user_id': 19264249, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2AAN0xM6.jpg?s=256', 'display_name': 'sahilatahar', 'link': 'https://stackoverflow.com/users/19264249/sahilatahar'}",False,0,1726542765,1726542765,78992422,78990162,CC BY-SA 4.0,"<p>To fix the <code>router.push()</code> issue after login:</p> <ol> <li>Use <strong><code>router.replace()</code></strong> instead of <code>router.push()</code> to prevent navigating back to the login page.</li> </ol> <pre class=""lang-js prettyprint-override""><code>router.replace(returnURL); </code></pre> <ol start=""2""> <li><strong>Refresh the page</strong> after setting cookies to ensure middleware is triggered:</li> </ol> <pre class=""lang-js prettyprint-override""><code>await router.refresh(); router.replace(returnURL); </code></pre> <ol start=""3""> <li><p><strong>Ensure cookies are set</strong> before redirecting to avoid race conditions.</p> </li> <li><p>Middleware should properly handle auth:</p> </li> </ol> <pre class=""lang-js prettyprint-override""><code>if (!accessToken && !['/login', '/signup'].includes(url)) {   const redirectURL = new URL('/login', request.url);   redirectURL.searchParams.set('returnURL', request.nextUrl.pathname);   return NextResponse.redirect(redirectURL); } </code></pre> <p>This should solve the issue.</p>",,,true
"{'account_id': 3449131, 'reputation': 12455, 'user_id': 2889165, 'user_type': 'registered', 'accept_rate': 73, 'profile_image': 'https://www.gravatar.com/avatar/62931897c4e9e8f26323f46899553bbb?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Andreas Lundgren', 'link': 'https://stackoverflow.com/users/2889165/andreas-lundgren'}",False,0,1726659059,1726659059,78997974,78990065,CC BY-SA 4.0,"<p>Note that you can use <strong>either</strong> JWT:s <strong>or</strong> Session-ID's, and you can send them in <strong>either</strong> a cookie <strong>or</strong> a header. Most common is to send session id's in cookies, and JWT:s in headers (I assume mousetails comment is based on that) but it's quite often JWT:s are sent in cookies too, and nothing prevents you from sending a session id in a header.</p> <p>Sending a JWT in a HTTP-Only Cookie is often the safest way (most robust from a security perspective, harder to mess up). This will prevent other javascripts from reading the JWT (and stealing it), and it will ensure that it's not sent to any other origins (that can steal it from there). However this only works in browsers, it only works if your API is located on the same domain (else the browser will not send the cookie) and its only possible if your client code is not depending on the JWT. (Client code should never have any security dependencies on the JWT because client side it can be manipulated, but it can tune the UI according to the access rights the JWT claims that the user to has.)</p> <p>If you use the JWT in an app (not browser), header is often a better option. (How to store it is <a href=""https://stackoverflow.com/a/76889949/2889165"">described here on SO</a>).</p> <p>In the Browser inspector, check the cookie header if the JWT is attached at all. And check your backend code whether it expects to receive the JWT in a cookie (and what name of that cookie) or in a header (that is by standards named <code>Authentication</code>.)</p>",,,true
"{'account_id': 13468738, 'reputation': 7423, 'user_id': 9718056, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ee99b210db5777e5e0a69aaa025cd461?s=256&d=identicon&r=PG', 'display_name': 'Arkellys', 'link': 'https://stackoverflow.com/users/9718056/arkellys'}",True,1,1726659986,1726659664,78998015,78990015,CC BY-SA 4.0,"<p>The problem you get is a race-condition issue with preloads that use ESM. The preload script is supposed to block the page load when the latter has a content (and so loads <em>before</em> the page), but it doesn't always work with the reload system of webpack/vite.</p> <p>There is no real workaround, other than rewriting your code to make sure it doesn't ask anything to the preload before it's loaded, or just not using ESM.</p> <p>You can also wait for the bug to be fixed: <strong>there is an <a href=""https://github.com/electron/electron/issues/40777"" rel=""nofollow noreferrer"">open issue</a> about it</strong>. Note that this problem probably only occurs in dev mode.</p>",1726659986.0,,true
"{'account_id': 34837232, 'reputation': 111, 'user_id': 26814915, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/mLWaddQD.jpg?s=256', 'display_name': 'Samax', 'link': 'https://stackoverflow.com/users/26814915/samax'}",False,0,1726488288,1726488288,78990090,78989839,CC BY-SA 4.0,<p>update the /admin/ location block</p> <pre><code>    index index.html;     try_files $uri $uri/ /admin/index.html; </code></pre>,,,true
"{'account_id': 7836845, 'reputation': 48184, 'user_id': 5924562, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/ea9d589e5f03856ee87f615ab80dda72?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Naren Murali', 'link': 'https://stackoverflow.com/users/5924562/naren-murali'}",True,0,1726486587,1726486587,78989980,78989821,CC BY-SA 4.0,"<p>First you need to create an API, or in the existing API return the number of pages, based on the pagination size.</p> <p>I can see the server is already doing pagination.</p> <pre><code>https://abc.abc.com/api/v1/nft/getNFT?page=2&itemsPerPage=5 </code></pre> <p>For you so you need not slice the array, just display it directly.</p> <pre><code>    <tbody>       {cryptoData         .map((crypto: any) => (           <tr key={crypto.index}> </code></pre> <p>Secondly, since the total pages will always be 1, since the API is paginating the results. You need to fetch the total pages based on the pagination size, using another API instead.</p> <p>I set the <code>totalPages</code> variable to <code>20</code>, then it started working.</p> <pre><code>'use client'; import { useEffect, useState } from 'react'; import Link from 'next/link'; import Form from 'react-bootstrap/Form';  const NftData = () => {   const [cryptoData, setCryptoData] = useState([]);   const [currentPage, setCurrentPage] = useState(1);   const [itemsPerPage, setItemsPerPage] = useState(5);   const [totalPages, setTotalPages] = useState(20);    useEffect(() => {     fetch(       `https://apicall.trabic.com/api/v1/nft/getNFT?page=${currentPage}&itemsPerPage=${itemsPerPage}`     )       .then((response) => response.json())       .then((data) => setCryptoData(data))       .catch((error) => console.error('Error fetching data:', error));   }, [currentPage, itemsPerPage]);    // useEffect(() => {   //   console.log('cal', cryptoData.length);   //   setTotalPages(Math.ceil(cryptoData.length / itemsPerPage));   // }, [cryptoData]);    const handlePageChange = (page: number) => {     if (page > 0 && page <= totalPages) {       setCurrentPage(page);     }   };    return (     <div className=""container"">       <table className={` table`}>         <thead>           <tr>             <th scope=""col"">#</th>             <th scope=""col"">NFT</th>             <th scope=""col"">Floor Price</th>             <th scope=""col"">24h Change</th>             <th scope=""col"">24h Volume</th>             <th scope=""col"">Owners</th>             <th scope=""col"">Assets Change</th>             <th scope=""col"">Timestamp</th>           </tr>         </thead>         <tbody>           {cryptoData.map((crypto: any) => (             <tr key={crypto.index}>               <th scope=""row"">{crypto.index}</th>               <td>{crypto.nft}</td>               <td>{crypto.floor_price}</td>               <td                 className={                   crypto.total_24h.startsWith('-')                     ? 'text-danger'                     : 'text-success'                 }               >                 {crypto.total_24h}               </td>               <td>{crypto.total_24h_volume}</td>               <td>{crypto.owners}</td>               <td                 className={                   crypto.total_assets.startsWith('-')                     ? 'text-danger'                     : 'text-success'                 }               >                 {crypto.total_assets}               </td>               <td>{new Date(crypto.time_stamp).toLocaleString()}</td>             </tr>           ))}         </tbody>       </table>        <div className=""container"">         <div className=""row"">           <div className=""col-md-3 col-12"">             <p className=""float-start fs-6 textPara"">               Showing {(currentPage - 1) * itemsPerPage + 1} to{' '}               {Math.min(currentPage * itemsPerPage, cryptoData.length)} of{' '}               {cryptoData.length} results             </p>           </div>           <div className=""col-md-6 col-12"">             <nav aria-label=""Page navigation example my-3"">               <ul className=""pagination d-flex justify-content-center"">                 <li className=""page-item"">                   <Link                     href=""#""                     aria-label=""Previous""                     onClick={() => handlePageChange(currentPage - 1)}                   >                     <span aria-hidden=""true"">&laquo;</span>                   </Link>                 </li>                 {Array.from(                   { length: totalPages },                   (_, index) => index + 1                 ).map((pageNumber) => (                   <li key={pageNumber} className=""page-item"">                     <Link                       href=""#""                       className={`page-link ${                         pageNumber === currentPage ? 'active' : ''                       }`}                       onClick={() => handlePageChange(pageNumber)}                     >                       {pageNumber}                     </Link>                   </li>                 ))}                 <li className=""page-item"">                   <Link                     href=""#""                     aria-label=""Next""                     onClick={() => handlePageChange(currentPage + 1)}                   >                     <span aria-hidden=""true"">&raquo;</span>                   </Link>                 </li>               </ul>             </nav>           </div>           <div className=""col-md-3 col-12"">             <Form.Select               size=""lg""               className=""float-end w-25""               onChange={(e) => {                 setItemsPerPage(parseInt(e.target.value));                 setCurrentPage(1); // Reset current page to 1 when items per page changes               }}             >               <option value=""20"">20</option>               <option value=""50"">50</option>               <option value=""100"">100</option>               <option value=""300"">300</option>             </Form.Select>           </div>         </div>       </div>     </div>   ); };  export default NftData; </code></pre> <h3><a href=""https://stackblitz.com/edit/stackblitz-starters-f1zgq8?file=app%2Fpage.tsx"" rel=""nofollow noreferrer"">Stackblitz Demo</a></h3>",,,true
"{'account_id': 9514279, 'reputation': 828, 'user_id': 7172290, 'user_type': 'registered', 'accept_rate': 0, 'profile_image': 'https://i.sstatic.net/F0kEhtTV.webp?s=256', 'display_name': 'docker compose', 'link': 'https://stackoverflow.com/users/7172290/docker-compose'}",False,1,1726483032,1726483032,78989789,78989642,CC BY-SA 4.0,"<p>Create a callback route after successfull authentication, then use that data to query your MySQL database.</p> <pre><code>export const callback = async (   req: Request,   res: Response,   next: NextFunction ) => {   async function callback(userDetails: { username: string }) {     // find user in mongodb     let user = await User.findOne({ username: userDetails.username });      if (!user) {       user = // await create user in mysql     }      return user;   } }; </code></pre> <p>I recommend looking into <a href=""https://www.passportjs.org/packages/passport-local/"" rel=""nofollow noreferrer"">passport</a>, if you haven't already.</p>",,,true
"{'account_id': 9901114, 'reputation': 2575, 'user_id': 7331107, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ff25d3b96cd4c1716dce786abff9a7c5?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'avenmia', 'link': 'https://stackoverflow.com/users/7331107/avenmia'}",False,0,1670274311,1670274311,74694374,74621530,CC BY-SA 4.0,<p>The issue was the application was throwing an uncaught error in the waitFor which is why it was running an empty div and the data-testid was disappearing.</p>,,,false
"{'account_id': 3139368, 'reputation': 74, 'user_id': 2655125, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d18c783370eddfb1985076a8eb93e1f5?s=256&d=identicon&r=PG', 'display_name': 'Med Djelaili', 'link': 'https://stackoverflow.com/users/2655125/med-djelaili'}",True,1,1669769760,1669765544,74621454,74621244,CC BY-SA 4.0,"<p>the route method is get and you're sending  a post request from react, this is how you  r react code should look</p> <pre><code>import React from ""react""; import ""./App.css""; import $ from ""jquery"";  function App() {   var [data, setData] = React.useState(null);    const api = ""http://localhost:3001/api"";    React.useEffect(() => {     $.get( api,{         username: ""bobs"",         password: ""pizza"",       },       function (data, status) {         setData = data;         console.log(status + "" "" + data);       });   }, []);    return <>{!data ? ""Loading..."" : data}</>; }  export default App; </code></pre>",1669769760.0,,false
"{'account_id': 14629334, 'reputation': 1, 'user_id': 10565677, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/aLxWz.png?s=256', 'display_name': 'lachlanterrey', 'link': 'https://stackoverflow.com/users/10565677/lachlanterrey'}",False,0,1669763627,1669763627,74621277,74621046,CC BY-SA 4.0,<p>I would recommend using a library called 'clsx' it will help with writing something like this</p>,,,false
"{'account_id': 24313399, 'reputation': 11, 'user_id': 18255038, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3eefd66c431e8c821f5b0d1de62c0599?s=256&d=identicon&r=PG', 'display_name': 'donaldchen34', 'link': 'https://stackoverflow.com/users/18255038/donaldchen34'}",False,0,1669788698,1669788698,74623534,74620935,CC BY-SA 4.0,"<p>Axios calls are async so the user api call will be called before your comments are fetched.</p> <p>You can add <code>comments</code> to the User api useEffect so it would look like<br /> <code>React.useEffect(() => { ... }, [comments]);</code><br /> This makes it so the call is made whenever comments changes</p>",,,false
"{'account_id': 2612804, 'reputation': 3016, 'user_id': 2262604, 'user_type': 'registered', 'accept_rate': 38, 'profile_image': 'https://www.gravatar.com/avatar/e3943fd9144836c36e638e29e6fe42c6?s=256&d=identicon&r=PG', 'display_name': 'Michael Lynch', 'link': 'https://stackoverflow.com/users/2262604/michael-lynch'}",True,2,1669821811,1669821811,74630203,74620908,CC BY-SA 4.0,"<p>This works for me:</p> <pre><code>declare module '*.svg' {   import React = require('react');   export const ReactComponent: React.FC<React.SVGProps<SVGSVGElement>>; } </code></pre> <p>Credit: <a href=""https://stackoverflow.com/a/54122106/2262604"">https://stackoverflow.com/a/54122106/2262604</a></p> <p>It seems strange to me creating a <code>ReactComponent</code> variable, but I no longer get any TS errors.</p>",,,false
"{'account_id': 22698665, 'reputation': 127, 'user_id': 16866418, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/xONtF.png?s=256', 'display_name': 'Shubhdeep Chhabra', 'link': 'https://stackoverflow.com/users/16866418/shubhdeep-chhabra'}",True,0,1670650548,1670650548,74750636,74620899,CC BY-SA 4.0,"<p>Used basic CSS, but you can even use styled-components, etc.</p> <p>Add a class name to Tab and also import a CSS file. As done below -</p> <pre class=""lang-js prettyprint-override""><code>import React from 'react' import { Tab } from 'semantic-ui-react' import ""./tabStyle.css""  const panes = [   { menuItem: 'Tab 1', render: () => <Tab.Pane>Tab 1 Content</Tab.Pane> },   { menuItem: 'Tab 2', render: () => <Tab.Pane>Tab 2 Content</Tab.Pane> },   { menuItem: 'Tab 3', render: () => <Tab.Pane>Tab 3 Content</Tab.Pane> }, ]  const TabExampleMenuPositionRight = () => (   <Tab     menu={{ fluid: true, vertical: true }}     menuPosition='right'     panes={panes}     className=""styledTab""   /> )  export default TabExampleMenuPositionRight  </code></pre> <p>And in tabStyle.css use this code which will target the tab panes created by semantic-ui-react -</p> <pre class=""lang-css prettyprint-override""><code>.styledTab .ui.grid>.column:not(.row) {   padding-right: 0px !important;   padding-left: 0px !important; } </code></pre>",,,false
"{'account_id': 20049757, 'reputation': 191, 'user_id': 14698690, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e70a9591e7d4e0b05c276be282e5762a?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Daniel', 'link': 'https://stackoverflow.com/users/14698690/daniel'}",True,1,1669761786,1669759350,74620696,74620666,CC BY-SA 4.0,"<p>Next.js uses the file system to enable routing in the app. Next automatically treats every file with the extensions .js, .jsx, .ts, or .tsx under the pages directory as a route. So no react-router-dom is required. Thats most likely the problem. nextjs is confused and react-router-dom overwrites the existing routes.</p> <pre><code>            <div>                 <h1>Home Page</h1>                 <Link href='/article'>                     <a>Articles</a>                 </Link>                 <br/>                 <Link href='/book'>                     <a>Books</a>                 </Link>             </div> </code></pre> <p>Something like that does the job already</p> <p>heres another example</p> <pre><code>import Link from ""next/link"";  export default function Home() {   return (     <div>       <Link href={""howto""}>click me</Link>     </div>   ) } </code></pre> <p>this is actually everything you would need to route. i would stay with conventions to name the function Home since it is used outside. you dont need to import anything</p>",1669761786.0,,false
"{'account_id': 7615319, 'reputation': 7647, 'user_id': 5774952, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/yZM8h.png?s=256', 'display_name': 'Zac Anger', 'link': 'https://stackoverflow.com/users/5774952/zac-anger'}",False,0,1669786642,1669786642,74623300,74620634,CC BY-SA 4.0,"<p>Map is the wrong method for this use-case; <code>some</code> is what you need.</p> <pre><code>{onlineFriends.some(onlineFriend => onlineFriend.userId === friend.user_id) ? 'online' : 'offline'} </code></pre> <p>You could also use <code>filter</code> with a length check on the result array, or <code>find</code> (which would work identically to <code>some</code> in this case).</p>",,,false
"{'account_id': 5407800, 'reputation': 2713, 'user_id': 4305693, 'user_type': 'registered', 'accept_rate': 20, 'profile_image': 'https://i.sstatic.net/gLxFA.jpg?s=256', 'display_name': 'Rubel Hossain', 'link': 'https://stackoverflow.com/users/4305693/rubel-hossain'}",False,0,1710962825,1710962825,78195836,74620427,CC BY-SA 4.0,"<p>simply just updated the vite.config.js file, added allow file types in react plugin.</p> <p><code>export default defineConfig({ plugins: [react({ include: /\.(mdx|js|jsx|ts|tsx)$/ })], });</code></p>",,,false
"{'account_id': 30279970, 'reputation': 11, 'user_id': 23205457, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocKLXAKKbLjzSLZW75qdZf5suRDP_urDYeOXoSVzKTlNtdwB=k-s256', 'display_name': 'Ravi Dubey', 'link': 'https://stackoverflow.com/users/23205457/ravi-dubey'}",False,1,1704555186,1704555186,77769977,74620427,CC BY-SA 4.0,"<p>Thanks to - @Maksim Shamihulau  This answer worked for me for latest versions of Vite & React and used Tailwind Css also and it started working <a href=""https://stackoverflow.com/a/76726872/23205457"">https://stackoverflow.com/a/76726872/23205457</a>  :-</p> <pre><code>import { defineConfig, transformWithEsbuild } from 'vite' import react from '@vitejs/plugin-react'  export default defineConfig({   plugins: [     {       name: 'treat-js-files-as-jsx',       async transform(code, id) {         if (!id.match(/src\/.*\.js$/))  return null          // Use the exposed transform from vite, instead of directly         // transforming with esbuild         return transformWithEsbuild(code, id, {           loader: 'jsx',           jsx: 'automatic',         })       },     },     react(),   ],    optimizeDeps: {     force: true,     esbuildOptions: {       loader: {         '.js': 'jsx',       },     },   }, }) </code></pre>",,,false
"{'account_id': 5686821, 'reputation': 1035, 'user_id': 4496102, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-DGYC1d3q12A/AAAAAAAAAAI/AAAAAAAATDI/WXItQPR_XKk/photo.jpg?sz=256', 'display_name': 'Drikus Roor', 'link': 'https://stackoverflow.com/users/4496102/drikus-roor'}",False,9,1703368713,1703368713,77709161,74620427,CC BY-SA 4.0,"<p>I had the same problem when migrating from CRA to Vite. Based on the example in <a href=""https://github.com/vitejs/vite/issues/769#issuecomment-777843876"" rel=""noreferrer"">this comment</a> on Github I was able to treat all <code>.js</code> files as <code>jsx</code>:</p> <h2>vite.config.ts</h2> <pre><code>export default defineConfig({    // rest of configuration    esbuild: {     include: /\.js$/,     exclude: [],     loader: 'jsx',   }, }) </code></pre> <p>If you want to treat all combinations of <code>.js</code>, <code>.jsx</code>, <code>.ts</code>, and <code>.tsx</code> files as <code>jsx</code>, you might want to use the following <code>include</code> pattern:</p> <pre><code>esbuild: {   include: /\.[jt]sx?$/,   exclude: [],   loader: 'jsx', }, </code></pre>",,,false
"{'account_id': 17474465, 'reputation': 1460, 'user_id': 12669625, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-My4942-gV5Q/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reqgYWvUQ2KRHmW831UW4ZUNjLyTQ/photo.jpg?sz=256', 'display_name': 'Soof Golan', 'link': 'https://stackoverflow.com/users/12669625/soof-golan'}",False,12,1700216880,1669757251,74620428,74620427,CC BY-SA 4.0,"<p>You can change esbuild configuration to treat all js files as jsx with the <code>loader</code> option:</p> <pre class=""lang-js prettyprint-override""><code>// vite.config.ts import {defineConfig} from 'vite'  // https://vitejs.dev/config/ export default defineConfig(() => ({   esbuild: {     loader: ""tsx"", // OR ""jsx""     include: [       // Add this for business-as-usual behaviour for .jsx and .tsx files       ""src/**/*.jsx"",       ""src/**/*.tsx"",       ""node_modules/**/*.jsx"",       ""node_modules/**/*.tsx"",        // Add the specific files you want to allow JSX syntax in       ""src/LocalJsxInJsComponent.js"",       ""node_modules/bad-jsx-in-js-component/index.js"",       ""node_modules/bad-jsx-in-js-component/js/BadJSXinJS.js"",       ""node_modules/bad-jsx-in-js-component/ts/index.ts"",       ""node_modules/bad-jsx-in-js-component/ts/BadTSXinTS.ts"",        // --- OR ---        // Add these lines to allow all .js files to contain JSX       ""src/**/*.js"",       ""node_modules/**/*.js"",        // Add these lines to allow all .ts files to contain JSX       ""src/**/*.ts"",       ""node_modules/**/*.ts"",     ],   }, })); </code></pre> <p>Note: there is a performance penalty for loading .js files with the .jsx loader.</p> <p>Answer taken from this <a href=""https://github.com/vitejs/vite/discussions/3448#discussioncomment-747542"" rel=""nofollow noreferrer"">discussion in Vite's GitHub</a>, Which marks the incorrect (and older) answer as the ""correct"" one.</p> <h2>Update March 2023</h2> <p>The original answer did not work correctly for <code>vite build</code>, only for <code>vite dev</code>. The current version works for both with <code>vite@^4.0.0</code></p> <p>Here is an <a href=""https://github.com/soof-golan/so-vite-jsx-in-js"" rel=""nofollow noreferrer"">example repo</a> you can clone and test the solution.</p> <h2>Update November 2023</h2> <p>Vite 5.0 was released, this might not be relevant anymore, edits + corrections welcome.</p>",1700216880.0,,false
"{'account_id': 444719, 'reputation': 1608, 'user_id': 836723, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/lsdP2.jpg?s=256', 'display_name': 'Maksim Shamihulau', 'link': 'https://stackoverflow.com/users/836723/maksim-shamihulau'}",False,22,1689831070,1689830373,76726872,74620427,CC BY-SA 4.0,"<p>The <code>vite.config.js</code> below makes Vite/Vitest treat <code>*.js</code> files as JSX to avoid errors like:</p> <blockquote> <p>Error: Failed to parse source for import analysis because the content contains invalid JS syntax. If you are using JSX, make sure to name the file with the .jsx or .tsx extension.</p> </blockquote> <p><strong>vite.config.js</strong></p> <pre class=""lang-js prettyprint-override""><code>import { defineConfig, transformWithEsbuild } from 'vite' import react from '@vitejs/plugin-react'  export default defineConfig({   plugins: [     {       name: 'treat-js-files-as-jsx',       async transform(code, id) {         if (!id.match(/src\/.*\.js$/))  return null          // Use the exposed transform from vite, instead of directly         // transforming with esbuild         return transformWithEsbuild(code, id, {           loader: 'jsx',           jsx: 'automatic',         })       },     },     react(),   ],    optimizeDeps: {     force: true,     esbuildOptions: {       loader: {         '.js': 'jsx',       },     },   }, }) </code></pre>",1689831070.0,,false
"{'account_id': 5258161, 'reputation': 1646, 'user_id': 4200446, 'user_type': 'registered', 'accept_rate': 75, 'profile_image': 'https://i.sstatic.net/21iKG.png?s=256', 'display_name': 'jdunning', 'link': 'https://stackoverflow.com/users/4200446/jdunning'}",False,4,1679433525,1679433525,75806433,74620427,CC BY-SA 4.0,"<p>I wasn't able to get the config in <a href=""https://stackoverflow.com/a/74620428/4200446"">this answer</a> to work as-is.  I needed to add <code>include</code> and <code>exclude</code> keys to the <code>esbuild</code> config for some reason.</p> <p>Building on <a href=""https://github.com/vitejs/vite/discussions/3448#discussioncomment-5288419"" rel=""nofollow noreferrer"">this comment</a> on the Vite discussion board, I was able to get this config file working for both <code>vite serve</code> and <code>vite build</code>.  (Well, ""working"" as in not complaining about JSX in <code>.js</code> files anymore.  Vite is still complaining about some CJS modules...)</p> <pre class=""lang-js prettyprint-override""><code>// vite.config.js import fs from ""node:fs""; import { defineConfig } from ""vite""; import react from ""@vitejs/plugin-react""; import * as esbuild from ""esbuild"";  const sourceJSPattern = /\/src\/.*\.js$/; const rollupPlugin = (matchers) => ({   name: ""js-in-jsx"",   load(id) {     if (matchers.some(matcher => matcher.test(id))) {       const file = fs.readFileSync(id, { encoding: ""utf-8"" });       return esbuild.transformSync(file, { loader: ""jsx"" });     }   } });  export default defineConfig({   plugins: [     react()   ],   build: {     rollupOptions: {       plugins: [         rollupPlugin([sourceJSPattern])       ],     },     commonjsOptions: {       transformMixedEsModules: true,     },   },   optimizeDeps: {     esbuildOptions: {       loader: {         "".js"": ""jsx"",       },     },   },   esbuild: {     loader: ""jsx"",     include: [sourceJSPattern],     exclude: [],   }, }); </code></pre>",,,false
"{'account_id': 9155559, 'reputation': 547, 'user_id': 6808605, 'user_type': 'registered', 'accept_rate': 33, 'profile_image': 'https://www.gravatar.com/avatar/ec2ba279d3786c113dd69879c018dab1?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Normal', 'link': 'https://stackoverflow.com/users/6808605/normal'}",False,2,1700740851,1700734653,77536060,74620354,CC BY-SA 4.0,"<p>You can use this custom hook:</p> <pre><code>export const useDoubleClick = (onClick, onDbClick, delay = 300) => {   const timePassed= useRef(0);   return (e) => {    if (e.detail === 1) {      setTimeout(() => {        if (Date.now() - timePassed.current >= delay) {          onClick();        }      }, delay)    }     if (e.detail === 2) {      timePassed.current = Date.now();      onDbClick();    }  } } </code></pre> <p>And in then use it like this:</p> <pre><code>const onClick = () => console.log('click') const onDoubleClick = () => console.log('double click')  const myDoubleClickCallback = useDoubleClick(onClick, onDoubleClick); </code></pre> <p>And add myDoubleClickCallback to the component:</p> <pre><code><div onClick={myDoubleClickCallback}>Click Me</div> </code></pre> <p><a href=""https://codesandbox.io/p/sandbox/jovial-water-hhs75d?file=%2Fsrc%2FApp.js%3A16%2C1&layout=%257B%2522sidebarPanel%2522%253A%2522EXPLORER%2522%252C%2522rootPanelGroup%2522%253A%257B%2522direction%2522%253A%2522horizontal%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522id%2522%253A%2522ROOT_LAYOUT%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522clpb4m6s80007356l0sg58blo%2522%252C%2522sizes%2522%253A%255B70%252C30%255D%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522EDITOR%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522id%2522%253A%2522clpb4m6s80003356ltftxhlvd%2522%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522SHELLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522id%2522%253A%2522clpb4m6s80004356l5tmkvkmy%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522DEVTOOLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522id%2522%253A%2522clpb4m6s80006356lcknt5n6f%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%252C%2522sizes%2522%253A%255B50%252C50%255D%257D%252C%2522tabbedPanels%2522%253A%257B%2522clpb4m6s80003356ltftxhlvd%2522%253A%257B%2522id%2522%253A%2522clpb4m6s80003356ltftxhlvd%2522%252C%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clpb4ww330003356km2cwugrp%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522FILE%2522%252C%2522initialSelections%2522%253A%255B%257B%2522startLineNumber%2522%253A16%252C%2522startColumn%2522%253A1%252C%2522endLineNumber%2522%253A16%252C%2522endColumn%2522%253A1%257D%255D%252C%2522filepath%2522%253A%2522%252Fsrc%252FApp.js%2522%252C%2522state%2522%253A%2522IDLE%2522%257D%255D%252C%2522activeTabId%2522%253A%2522clpb4ww330003356km2cwugrp%2522%257D%252C%2522clpb4m6s80006356lcknt5n6f%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clpb4m6s80005356lh7uxnoge%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522UNASSIGNED_PORT%2522%252C%2522port%2522%253A0%252C%2522path%2522%253A%2522%2522%257D%255D%252C%2522id%2522%253A%2522clpb4m6s80006356lcknt5n6f%2522%252C%2522activeTabId%2522%253A%2522clpb4m6s80005356lh7uxnoge%2522%257D%252C%2522clpb4m6s80004356l5tmkvkmy%2522%253A%257B%2522tabs%2522%253A%255B%255D%252C%2522id%2522%253A%2522clpb4m6s80004356l5tmkvkmy%2522%257D%257D%252C%2522showDevtools%2522%253Atrue%252C%2522showShells%2522%253Atrue%252C%2522showSidebar%2522%253Atrue%252C%2522sidebarPanelSize%2522%253A15%257D"" rel=""nofollow noreferrer"">Link to CodeSandbox</a></p>",1700740851.0,,false
"{'account_id': 5258007, 'reputation': 404, 'user_id': 4200334, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/ZgwRi.jpg?s=256', 'display_name': 'dbonev', 'link': 'https://stackoverflow.com/users/4200334/dbonev'}",False,0,1669759400,1669759400,74620701,74620354,CC BY-SA 4.0,<pre><code>singleClickMethod () {}; doubleClickMethod () {};  hasDoubleClick = false:  onClickHandler (event) {     event.preventDefault();     event.stopPropagation();      setTimeout(() => {         if (hasDoubleClick) {             hasDoubleClick = false;             return;         }          singleClickMethod();     }); };  onDblClickHandler () {     hasDoubleClick = true;      doubleClickMethod(); } </code></pre> <p>Such approach is going to work for you and distinguish the click events.</p>,,,false
"{'account_id': 27090399, 'reputation': 81, 'user_id': 20638285, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/rcGJd.png?s=256', 'display_name': 'Petar Dimitrov', 'link': 'https://stackoverflow.com/users/20638285/petar-dimitrov'}",False,6,1677281840,1670001036,74659225,74620337,CC BY-SA 4.0,"<p>So I found the solution by myself. I will post it here, with hope to help someone else who is struggling with this problem.</p> <p>So using the react library <strong>@react-oauth/google</strong> I used the <strong>useGoogleLogin</strong> hook. I added ""<strong>flow: 'auth-code'</strong>"" to function's options object.</p> <pre><code>const login = useGoogleLogin({     onSuccess: codeResponse => console.log(codeResponse),     flow: 'auth-code', }); </code></pre> <p>The function is triggered by click on simple button.</p> <p>After successful login from the user, in the response object we can find a <strong>code</strong> property. We can exchange the <strong>code</strong> for an access,refresh and id token by calling the google oauth2 api:</p> <pre><code>curl --location --request POST 'https://oauth2.googleapis.com/token' \ --header 'Content-Type: application/x-www-form-urlencoded' \ --data-urlencode 'client_id=your_client_id' \ --data-urlencode 'client_secret=your_client_secret' \ --data-urlencode 'code=recieved_code_after_login' \ --data-urlencode 'grant_type=authorization_code' \ --data-urlencode 'redirect_uri=one of your redirect uri's listed in your  credential' </code></pre> <p>after successful request access,refresh and id token are received.</p> <p>refreshing the token also so simple:</p> <pre><code>curl --location --request POST 'https://oauth2.googleapis.com/token' \ --header 'Content-Type: application/x-www-form-urlencoded' \ --data-urlencode 'client_id=your_client_id' \ --data-urlencode 'client_secret=your_client_secret' \ --data-urlencode 'grant_type=refresh_token' \ --data-urlencode 'refresh_token=received_refresh_token' </code></pre> <p>Here is the original Google documentation: <a href=""https://developers.google.com/identity/protocols/oauth2/web-server#httprest_3"" rel=""nofollow noreferrer"">https://developers.google.com/identity/protocols/oauth2/web-server#httprest_3</a></p> <p>!important! Remember that the refresh is valid until access is revoked. When you refresh the tokens, a new refresh token is not coming with the response. For further refreshes, you can use the same refresh token, receive by exchange.</p>",1677281840.0,,false
"{'account_id': 27090352, 'reputation': 1, 'user_id': 20638244, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu3xiLKe9BJqltdUvMnEAnoO9GCb3FNk4WvEiIhD=k-s256', 'display_name': 'Chris', 'link': 'https://stackoverflow.com/users/20638244/chris'}",False,0,1669824005,1669823397,74630552,74620187,CC BY-SA 4.0,"<p>I was able to find a way through using iframe tags. This places a html document within the component i.e. the iframe serves as its own Html page essentially.</p> <pre><code>return (         <div>             <iframe                 scrolling='no'                 srcDoc={`             <div                 id='wg-api-football-standings'                 data-host='v3.football.api-sports.io'                 data-key='insert-api-key'                 data-league={1}                 data-team=''                 data-season={2022}                 data-theme=''                 data-show-errors='false'                 data-show-logos='true'                 className='wg_loader'             />             <script             type=""module""             src=""https://widgets.api-sports.io/2.0.3/widgets.js""         ></script>`}             />         </div>     ); </code></pre>",1669824005.0,,false
"{'account_id': 22185591, 'reputation': 1191, 'user_id': 16517581, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/gkWc7.png?s=256', 'display_name': 'DSDmark', 'link': 'https://stackoverflow.com/users/16517581/dsdmark'}",False,0,1670501428,1670501428,74730073,74620145,CC BY-SA 4.0,"<h5>Hi @Artur KÄdzior</h5> <p>Did you try to use <code>import Draggable from 'react-draggable';</code></p> <p><a href=""https://codesandbox.io/s/fullcalendar-xarrows-forked-8uqnzw?file=/src/App.js"" rel=""nofollow noreferrer""><strong>codesandbox</strong></a></p>",,,false
"{'account_id': 22425702, 'reputation': 4266, 'user_id': 16632344, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/aQbs8.jpg?s=256', 'display_name': 'monim', 'link': 'https://stackoverflow.com/users/16632344/monim'}",False,0,1669757733,1669757733,74620493,74620126,CC BY-SA 4.0,"<p>You can use <strong>useEffect hook</strong> with <code>cleanup function</code>   to manage the <code>clearInterval</code> method .</p> <p><strong>like this :</strong></p> <pre><code>function PlantDefuser() {   const [run, setRun] = useState(false);    useEffect(() => {     if (run) {       const countTimer = setInterval(() => {         console.log(""Defuser Planted"");       }, 1000);        return () => {         console.log(countTimer);         clearInterval(countTimer);       };     }   }, [run]);    return (     <button onMouseDown={() => setRun(!run)} onMouseUp={() => setRun(!run)}>       Press and Hold     </button>   ); }  export default PlantDefuser; </code></pre>",,,false
"{'account_id': 19596114, 'reputation': 328, 'user_id': 14342112, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/H0QnR.jpg?s=256', 'display_name': 'Angel Zlatanov', 'link': 'https://stackoverflow.com/users/14342112/angel-zlatanov'}",False,0,1669755588,1669755588,74620189,74620126,CC BY-SA 4.0,"<p>When you declare variables like so in the function component, it is being created on each render. You should be saving the interval id in a state like so:</p> <pre><code>import React, { useState } from ""react"";  const PlantDefuser = () => {     const [plantingInterval, setPlantingInterval] = useState(null);      const planting = () => {         const plantingIntervalId = setInterval(() => {             console.log(""Defuser Planted"");         }, 1000);         setPlantingInterval(plantingIntervalId);     };      const notPlanting = () => {         clearInterval(plantingInterval);         setPlantingInterval(null);     };      return (         <button onMouseDown={planting} onMouseUp={notPlanting}>             Press and Hold         </button>     ); };  export default PlantDefuser; </code></pre> <p>You might also want to make sure the interval is being cleared when the component unmounts.</p>",,,false
"{'account_id': 15884057, 'reputation': 1130, 'user_id': 19027584, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2byRd.jpg?s=256', 'display_name': 'Martinez', 'link': 'https://stackoverflow.com/users/19027584/martinez'}",True,3,1669755573,1669755573,74620188,74620126,CC BY-SA 4.0,"<p>This could help you:</p> <p><code>useRef</code> allows us to store and update data in the component without triggering a re-render. Now the only re-render happens when the props are updated.</p> <p>We can store interval in a <code>ref</code> like so</p> <pre><code>import { useRef } from ""react"";  const PlantDefuser = () => {   const interval = useRef();    function planting() {     interval.current = setInterval(() => {       console.log(""Defuser Planted"");     }, 1000);   }    function notPlanting() {     clearInterval(interval.current);   }    return (     <button onMouseDown={planting} onMouseUp={notPlanting}>       Press and Hold     </button>   ); }  export default PlantDefuser </code></pre>",,,false
"{'account_id': 10017342, 'reputation': 1075, 'user_id': 7408143, 'user_type': 'registered', 'accept_rate': 92, 'profile_image': 'https://i.sstatic.net/w6j01.png?s=256', 'display_name': 'J3STER', 'link': 'https://stackoverflow.com/users/7408143/j3ster'}",True,0,1669829941,1669829941,74631974,74620070,CC BY-SA 4.0,"<p>Well, as per @CBroe's suggestion, I used the debug token Graph endpoint to retrieve info about the token (Doc <a href=""https://developers.facebook.com/docs/graph-api/reference/v15.0/debug_token"" rel=""nofollow noreferrer"">https://developers.facebook.com/docs/graph-api/reference/v15.0/debug_token</a>).</p> <p>So in the front end, I get the info shown in the question, and I need to pass that info to a backend API, as well as proof of said info legitimacy. So, in pseudocode:</p> <pre><code>// Frontend body = {     ""name"": ""<My Name Here>"",     ""email"": ""<My Mail Here>"",     ""picture"": ""<Picture Data Here>"",     ""id"": ""<ID Here>"",     ""accessToken"": ""EAAJlEXBfRWgBAGHTP0ZAgRttMSMZz..."",     ""userID"": ""<User ID Here>"",     ""expiresIn"": 6488,     ""signedRequest"": ""<A Bunch of Gibberish>"",     ""graphDomain"": ""facebook"",     ""data_access_expiration_time"": 1677528712 }; RestClient.call(""myapiurl/myendpoint"", ""HTTP_METHOD"", body=body); </code></pre> <p>and</p> <pre><code>// Backend function checkValidity(info) {     version = ""v15.0""     token = info.accessToken;     endpointURL = ""https://graph.facebook.com/${version}/debug_token?input_token=${token}"";     headers = { ""Authorization"": ""Bearer ${token}"" };     response = RestClient.call(endpointURL, ""GET"", headers=headers);     // Note that the token is sent twice, once for Auth purposes, and another time as payload for the debug endpoint     /*         The response will look like:         {             ""data"": {                 ""app_id"": ""<APP ID>"",                 ""type"": ""USER"",                 ""application"": ""<APP Name>"",                 ""data_access_expires_at"": 1677601862,                 ""expires_at"": 1669831200,                 ""is_valid"": true,                 ""scopes"": [                     ""email"",                     ""public_profile""                 ],                 ""user_id"": ""<USER ID>""             }         }     */     if (response.data.app_id == ""<MY APP ID>"" && response.data.user_id == info.userID) {         return true;     } else {         return false;     } }  app.post('/myendpoint', function(req, res) {     checkValidity(req.body);     res.send('some result'); }); </code></pre> <p>This way we can be sure that <strong>the token is valid</strong> (as if it wasn't, the facebook endpoint would have returned an error. Also, we can <strong>confirm the token was generated by userID for appID</strong>. In your backend data system you need to use the userID as your main reference, because its the only guaranteed value to have to map that user's activity in that appID (unless the user allows the app to read the email).</p> <p>Note that the <code>userID</code> is different for each user-app pair, so if you want data such as the user email, you need to use the token to hit facebook's <code>/user</code> endpoint with that <code>userID</code> to get the info you need.</p> <p>You should not trust the <code>email</code> field sent in the body because, since the AppID is public as its dealt with in the frontend, someone could make up a mock frontend and login with their own account (therefore generating a valid token with its matching userID) and forge the rest of the fields in the <code>body</code>.</p> <p>This assumes the token has not been stolen (as with any bearer token solution), and that the user is careful and aware of where he/she is signing into, (as a malicious phishing clone frontend could trick the user into SSOing into a fake site).</p>",,,false
"{'account_id': 23089931, 'reputation': 1334, 'user_id': 17200950, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/4c0e5edffd2c7d50837ddbd37828b63a?s=256&d=identicon&r=PG', 'display_name': 'Woohaik', 'link': 'https://stackoverflow.com/users/17200950/woohaik'}",True,12,1669956067,1669956067,74650985,74620049,CC BY-SA 4.0,"<p>As mentioned by Chad S. invalidating queries can be done by using objects as the keys, the method will work by a match, it does not necessarily need the exact query to match, and there is a <a href=""https://react-query-v3.tanstack.com/guides/filters#query-filters"" rel=""noreferrer"">flag for that</a>: <code>exact: true</code>.</p> <p>But to get the querykeys, if that is what you are looking for, then here's an explanation.</p> <hr /> <p>To access the queryKeys that the client is listening to, use the <code>useQueryClient</code> hook.</p> <pre><code>const queryClient = useQueryClient() </code></pre> <p>With the hook called, have access to the method: <code>getQueryCache()</code>. This will return the query cache the client is connected to. <a href=""https://react-query-v3.tanstack.com/reference/QueryClient#queryclientgetquerycache"" rel=""noreferrer"">Reference</a></p> <p>Now to get the active query keys, call the method <code>getAll()</code> in the <code>queryCache</code> and this will return an array of <code>Query</code>. Now can access the <code>QueryKey</code>.</p> <pre><code>const queryCache = queryClient.getQueryCache() const queryKeys = queryCache.getAll().map(cache => cache.queryKey) // QueryKey[] </code></pre>",,,false
"{'account_id': 6859767, 'reputation': 6613, 'user_id': 5274205, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d3a281a1418dbceeda34cc93d3744554?s=256&d=identicon&r=PG', 'display_name': 'Chad S.', 'link': 'https://stackoverflow.com/users/5274205/chad-s'}",False,2,1669769126,1669769126,74621753,74620049,CC BY-SA 4.0,"<p>I would suggest re-organizing your query keys slightly. It is much easier to use objects for keys than using the suggested 'list' style. e.g.</p> <pre class=""lang-js prettyprint-override""><code>return useQuery(   ['questions', { by_vendor: vendor, by_status: status }],   async ({queryKey}) => {     // Stuff to use the query key and get api data   } );  </code></pre> <p>Then you can invalidate them later with:</p> <pre class=""lang-js prettyprint-override""><code>queryClient.invalidateQueries({   queryKey: ['questions', { by_status: status }], }) </code></pre> <p>For more information check out <a href=""https://tkdodo.eu/blog/effective-react-query-keys"" rel=""nofollow noreferrer"">Effective React-Query Keys</a> and <a href=""https://react-query-v3.tanstack.com/guides/query-invalidation"" rel=""nofollow noreferrer"">Query Invalidation</a></p>",,,false
"{'account_id': 17567156, 'reputation': 3020, 'user_id': 12743692, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jG5eJ.png?s=256', 'display_name': 'dreambold', 'link': 'https://stackoverflow.com/users/12743692/dreambold'}",True,4,1669830860,1669755000,74620109,74620013,CC BY-SA 4.0,"<p>You can try this approach:</p> <pre><code>import React, { Component } from ""react""; import { render } from ""react-dom""; import * as babel from ""babel-standalone"";  const userInputtedCode = ` function App() {     return <div>Hello world</div> } `; const babelCode = babel.transform(userInputtedCode, {   presets: [""react"", ""es2017""] }).code;  const code = babelCode.replace('""use strict"";', """").trim(); const func = new Function(""React"", `return ${code}`); const App = func(React); render(<App />, document.getElementById(""root"")); </code></pre> <p>PS: Make sure to run <code>npm i babel-standalone</code> before running the app.</p>",1669830860.0,,false
"{'account_id': 26764465, 'reputation': 1369, 'user_id': 20361860, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/J2kk2.png?s=256', 'display_name': 'Asraf', 'link': 'https://stackoverflow.com/users/20361860/asraf'}",True,1,1669753613,1669753613,74619908,74619823,CC BY-SA 4.0,"<p>You were close, you just need to check any inner object contains your desire data by using <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some?retiredLocale=de"" rel=""nofollow noreferrer""><code>.some()</code></a> <div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const data = [{ object1Name: ""test"", secondaryObjects: [{ second2Name: ""Hello!"", data: ""remove based on this"" }, { second2Name: ""hello"", data: ""hello"" } ] }, { object1Name: ""test"", secondaryObjects: [{ second2Name: ""test-again"", data: ""test...."" }] } ]; const filtered = data.filter(item => item.secondaryObjects.some(it => it.second2Name === ""hello"")); console.log(filtered);</code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 21226, 'reputation': 22789, 'user_id': 51428, 'user_type': 'registered', 'accept_rate': 82, 'profile_image': 'https://i.sstatic.net/upKaE.jpg?s=256', 'display_name': 'flq', 'link': 'https://stackoverflow.com/users/51428/flq'}",False,1,1669753341,1669753341,74619873,74619823,CC BY-SA 4.0,<p>You need to look into all secondary objects then. <code>Some</code> will do that for you:</p> <pre><code>const filteredField =    data.filter(entry => entry.secondaryObjects     .some(o => o.second2Name.includes('hello')) </code></pre>,,,false
"{'account_id': 17462254, 'reputation': 33, 'user_id': 12659654, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/2760041690755743/picture?type=large', 'display_name': 'GastonKhouri', 'link': 'https://stackoverflow.com/users/12659654/gastonkhouri'}",False,1,1669754131,1669754131,74620005,74619804,CC BY-SA 4.0,"<p>It seems to me that you have to add a status property, in this there will be three possible states, <code>'checking'</code>, <code>'authenticated'</code> or <code>'not-authenticated'</code>, you can add it in your userSlice, the initial state of this will be <code>'checking'</code> , when you finish the authentication verification of your user, place it <code>'authenticated'</code> or <code>'not-authenticated'</code> depending on the result of this.</p> <p>If you don't wait for the user to finish loading, the login screen will be rendered first and what is happening to you will happen. To correct it, you just have to do the following in your component:</p> <pre><code>function Authentication() {      // Redux to manage user state     var user = useSelector( selectUser ); // Use the userReducer called ""user""      var status = useSelector( selectStatus );     // status = 'not-authenticated'; // 'authenticated'; // 'not-authenticated';      if ( status === 'checking' ) {         return (             <Loading />         );     }      return (         <>             {                 status === 'authenticated'                     ? <Dashboard />                     : <Login />             }         </>     ); } </code></pre> <p>All the best. I hope it helps you.</p>",,,false
"{'account_id': 13998765, 'reputation': 632, 'user_id': 10110932, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/816809c72ea9881e9ae79e5fe4d70c0d?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'adam.k', 'link': 'https://stackoverflow.com/users/10110932/adam-k'}",True,0,1669753797,1669753797,74619942,74619798,CC BY-SA 4.0,"<p><code>result.json()</code> returns a promise. Therefore changing your fetch to this may help</p> <pre><code>  fetch(""http://localhost:8080/qna/all"")         .then(result=>result.json().then((jsonResult)=>{             this.setState({questionsAndAnswers: jsonResult})             console.log(""Recieved Details"")         })) </code></pre> <p>I did not format the code properly because I want to highlight that <code>.then()</code> needs to be chained to the json call. In your code you have <code>((result) => result.json()).then()</code>, so you need to remove the closing bracket <code>)</code> and chain the <code>.then()</code> to <code>.json()</code>. Which would be <code>((result) => result.json().then(jsonRes => // do stuff))</code></p>",,,false
"{'account_id': 20668925, 'reputation': 120, 'user_id': 15175112, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gj881V7Qb05cs2U0-yfrZeNYnDfM7xBHIXBP-MWQw=k-s256', 'display_name': 'LiquiD.S1nn3r', 'link': 'https://stackoverflow.com/users/15175112/liquid-s1nn3r'}",True,0,1669753578,1669753578,74619903,74619507,CC BY-SA 4.0,"<p>It clearly states that your error comes from a network connection. It may be caused by a VPN. Anyway, if you are new to React and if I may suggest a better solution for you to start a project... CRA is outdated nowadays. Use Vite. Just run this</p> <pre><code>npm create vite@latest some-react-app-name --template react </code></pre>",,,false
"{'account_id': 97660, 'reputation': 28025, 'user_id': 264794, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/544a9bda68e318eea03a8ecb886ca458?s=256&d=identicon&r=PG', 'display_name': 'Ryan Wheale', 'link': 'https://stackoverflow.com/users/264794/ryan-wheale'}",True,1,1670261208,1669752864,74619782,74619422,CC BY-SA 4.0,"<p>There are a couple things you need to do to get this working in a react context:</p> <ol> <li><p>The <code>spinWheel</code> method should return start/stop/cleanup methods for controlling the wheel. The cleanup method should clean up any artifacts such as event handlers and whatnot.</p> <pre class=""lang-js prettyprint-override""><code>const startSpin = () => {   if (isSpinning) return;   isSpinning = true;   isAccelerating = true;   angVelMax = rand(0.25, 0.4); };  const stopSpin = () => {   isSpinning = false;   isAccelerating = false; }  elSpin.addEventListener(""click"", startSpin);  const cleanup = () => {   elSpin.removeEventListener(""click"", startSpin); };  ... return { startSpin, stopSpin, cleanup }; </code></pre> </li> <li><p>As mentioned in a comment, you need to make sure your effect has a ""cleanup"" function which stops the wheel (see this <a href=""https://beta.reactjs.org/learn/synchronizing-with-effects#how-to-handle-the-effect-firing-twice-in-development"" rel=""nofollow noreferrer"">link</a>). This is necessary so that the <em>setup â cleanup â setup</em> sequence works in development as described on that page.</p> <pre class=""lang-js prettyprint-override""><code> useEffect(() => {    const ctx = wheel.current.getContext(""2d"");    const elSpin = spin.current;    const { startSpin, stopSpin, cleanup } = spinWheel(ctx, elSpin);    startSpin();    return () => {      stopSpin();      cleanup();    }  }, []); </code></pre> </li> </ol> <p>Here's a link to a working sandbox: <a href=""https://codesandbox.io/s/spin-wheel-forked-tb42zf?file=/src/components/SpinWheel/SpinWheel.js:546-826"" rel=""nofollow noreferrer"">https://codesandbox.io/s/spin-wheel-forked-tb42zf?file=/src/components/SpinWheel/SpinWheel.js:546-826</a></p>",1670261208.0,,false
"{'account_id': 27089620, 'reputation': 1, 'user_id': 20637623, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/239797368a723bde6832229512ab89bf?s=256&d=identicon&r=PG', 'display_name': 'Thirdy Raza', 'link': 'https://stackoverflow.com/users/20637623/thirdy-raza'}",False,0,1670596274,1670150416,74674739,74619352,CC BY-SA 4.0,"<p>I did some research and I found a way using Schema Virtuals</p> <p>I added the requestor on my <em>reserve.model</em> file</p> <pre><code>  const reserveSchema = mongoose.Schema({     user: {         type: mongoose.Schema.Types.ObjectId,         required: true,         ref: 'User'     },     requestor: {         type: String,         required: true     }   }); </code></pre> <p>then I added a <strong>Schema.virtual</strong></p> <pre><code>  reserveSchema.virtual('requestor-name', {     ref: 'User',     localField: 'requestor',     foreignField: 'name'   }); </code></pre> <p>i also added that requestor field in my <em>reserve.controller</em> : <code>requestor:req.user.name</code></p>",1670596274.0,,false
"{'account_id': 18235871, 'reputation': 81, 'user_id': 13273885, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d286c6429e1793eddd90c235e95b7f43?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'crazy_enter', 'link': 'https://stackoverflow.com/users/13273885/crazy-enter'}",False,0,1670099295,1670099295,74670438,74619352,CC BY-SA 4.0,"<p>For that to work you need to <code>populate</code> the user reference</p> <p>Here's some psudo code that demonstrates how to populate a field:</p> <pre class=""lang-js prettyprint-override""><code>Reserve.find({ /* Insert serach criteria or nothing at all */ }).populate('user'); </code></pre> <p>I hope this helps! Docs: <a href=""https://mongoosejs.com/docs/populate.html"" rel=""nofollow noreferrer"">https://mongoosejs.com/docs/populate.html</a></p>",,,false
"{'account_id': 23295174, 'reputation': 64, 'user_id': 17376691, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gi6gprv6IHDXvUVQqtXhXmacNq2l_dVm0XYlyJ12Q=k-s256', 'display_name': 'pavankommi', 'link': 'https://stackoverflow.com/users/17376691/pavankommi'}",False,1,1669982598,1669981999,74655383,74619326,CC BY-SA 4.0,"<p>You can use <a href=""https://reactnative.dev/docs/share"" rel=""nofollow noreferrer"">Share</a> from react-native</p> <pre><code>import { Share } from 'react-native'; //... <Button      title=""share""      onPress={() => Share.share({          message:              `Your message. ${yourAppUrl}`,      })} /> </code></pre> <p>See also <a href=""https://docs.expo.dev/guides/linking/"" rel=""nofollow noreferrer"">expo-linking</a></p> <pre><code>import * as Linking from 'expo-linking'; Linking.openURL('https://appurl'); </code></pre>",1669982598.0,,false
"{'account_id': 17923301, 'reputation': 351, 'user_id': 13022536, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/uga9g.jpg?s=256', 'display_name': 'Getsumi3', 'link': 'https://stackoverflow.com/users/13022536/getsumi3'}",True,1,1669757011,1669757011,74620394,74619297,CC BY-SA 4.0,"<p>I reformatted your code for better readability It actually works. <code>completeSignup</code> is called in <code>Payment</code> and it changes states in <code>Parent</code></p> <p>The only thing I fixed is <code>handleSubmitSub</code> in <code>Payment</code> component</p> <p>In <code>handleSubmitSub</code> you should call <code>paymentChange</code> as a function() Like this</p> <p><code>const handleSubmitSub = async (event) => {paymentChange()}</code></p> <p>Full code:</p> <pre><code>const Parent  = () => {   const [showPayment, setShowPayment] = useState(true);   const [showSignupComplete, setShowSignupComplete] = useState(false);    const completeSignup = () => {       setShowPayment(false);       setShowSignupComplete(true);   }    return (     <div>       {showPayment && <Payment paymentChange={completeSignup}/>}       {         showSignupComplete &&          <div> Sign up complete </div>       }     </div>   )    }  const Payment = ({paymentChange}) => {    const handleSubmitSub = async (event) => {paymentChange()}    return (     <div>       <button           type=""submit""           fullWidth           variant=""contained""           color=""primary""           className=""submit""            onClick={handleSubmitSub}            >             Complete Payment         </button>     </div>   ) } </code></pre> <p>P.S: I'd recommend naming functions inside components with a lower camelCase = () => {}, so those functions will not be misread as a react Component = () => {}</p>",,,false
"{'account_id': 20668925, 'reputation': 120, 'user_id': 15175112, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gj881V7Qb05cs2U0-yfrZeNYnDfM7xBHIXBP-MWQw=k-s256', 'display_name': 'LiquiD.S1nn3r', 'link': 'https://stackoverflow.com/users/15175112/liquid-s1nn3r'}",False,0,1669751867,1669751867,74619605,74619297,CC BY-SA 4.0,"<p>Your naming is a bit confucing here, that onClick you put on the  component is not an actual event handler, it's a prop. You have to accept the ""handleSubmitSub"" function in the child component as props.</p> <p>In the child component do the following:</p> <pre><code>const Button = ({onClick as fn}) => {  /// your code here.....  return ( <button onClick={fn}>YOUR BUTTON TEXT</button> )  } </code></pre>",,,false
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,0,1669794173,1669750359,74619341,74619192,CC BY-SA 4.0,"<p>If I'm understanding correctly that you want <code>HomeLayout</code> component to be the ""default"" route/component then simply redirect any path that wasn't already previously matched and rendered by the <code>Switch</code> component to <code>""/home""</code>.</p> <p>Example:</p> <pre><code><HashRouter>   <Switch>     <Route path=""/auth"" component={AuthLayout} />     <Route path=""/admin"" component={AdminLayout} />     <Route path=""/home"" component={HomeLayout} />     <Redirect to=""/home"" />   </Switch> </HashRouter> </code></pre> <p>It appears the basic gist that you want certain routes from the <code>routes</code> config to use specific layouts. All the ""public"" routes are going to be nested under the <code>""/home""</code> root path, i.e. they should be <code>""/home/contact-us""</code>, etc, like the <code>NavLink</code> in the <code>Navbar</code> using <code>to='auth/sign-in'</code> to navigate into the <code>""/auth""</code> root directory. The <code>HomeLayout</code> component should render these descendent routes building relative from the parent <code>""/home""</code> path.</p> <p>Example:</p> <pre><code>import { Switch, Route, useRouteMatch } from 'react-router-dom';  function HomeLayout() {   const { path } = useRouteMatch(); // <-- ""/home""    const getRoutes = (routes) => {     return routes       .filter((route) => route.layout === ""/Public"") // <-- filter public routes       .map((route) => (         <Route           key={`${path}${route.path}`}           path={`${path}${route.path}`} // <-- build path, a.k.a. ""/home/about-us""           component={route.component}           exact // <-- exactly match so route path order is irrelevant         />       ));   };    ...    return (     <Box       ...     >       <Box mx=""auto"" minH=""100vh"">         <Nav />         <Switch>{getRoutes(routes)}</Switch>         <Footer />       </Box>     </Box>   ); } </code></pre> <p>Update the routes configuration to fix the <code>Home</code> component rendering on <code>""/home""</code> exactly instead of on <code>""/home/home""</code>.</p> <pre><code>const routes = [   {     name: ""Dashboard"",     layout: ""/admin"",     path: ""/default"",     icon: <Icon as={MdHome} width=""20px"" height=""20px"" color=""inherit"" />,     component: MainDashboard   },   {     name: ""Alumni"",     layout: ""/admin"",     icon: <Icon as={MdBarChart} width=""20px"" height=""20px"" color=""inherit"" />,     path: ""/data-tables"",     component: DataTables   },   {     name: ""Profile"",     layout: ""/admin"",     path: ""/profile"",     icon: <Icon as={MdPerson} width=""20px"" height=""20px"" color=""inherit"" />,     component: Profile   },   {     name: ""Sign In"",     layout: ""/auth"",     path: ""/sign-in"",     icon: <Icon as={MdLock} width=""20px"" height=""20px"" color=""inherit"" />,     component: SignInCentered   },   {     name: ""Sign In"",     layout: ""/auth"",     path: ""/sign-up"",     icon: <Icon as={MdLock} width=""20px"" height=""20px"" color=""inherit"" />,     component: SignUp   },   {     name: ""Landing Page"",     layout: ""/Public"",     path: ""/"",      // <-- use ""/"" here instead of `""/home""`     component: Home   },   {     name: ""Contact Us"",     layout: ""/Public"",     path: ""/contact-us"",     component: Contact   },   {     name: ""About Us"",     layout: ""/Public"",     path: ""/about-us"",     exact: ""true"",     component: About   } ]; </code></pre> <p><a href=""https://codesandbox.io/s/trusting-cohen-vdofhb?fontsize=14&hidenavigation=1&module=%2Fsrc%2FApp.js&theme=dark"" rel=""nofollow noreferrer""><img src=""https://codesandbox.io/static/img/play-codesandbox.svg"" alt=""Edit unable-to-set-default-route-in-react-router-v5"" /></a></p>",1669794173.0,,false
"{'account_id': 1465269, 'reputation': 12222, 'user_id': 1712294, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/798141b89e80db24a6ffea5007f79024?s=256&d=identicon&r=PG', 'display_name': 'Michal Trojanowski', 'link': 'https://stackoverflow.com/users/1712294/michal-trojanowski'}",True,2,1670935950,1670935950,74785167,74619164,CC BY-SA 4.0,"<p>I would go with keeping separate information about the logged-in user in either the memory or session storage. You could just keep an <code>isLoggedIn</code> flag and maybe the username to display a greeting, etc. If you want to keep that information in memory, not session storage, then you can have an effect that will fire on every page refresh and ask your backend for the login state of the user. Such a request will send the cookie to the backend, and the backend can respond with information about whether the user is logged in and their username.</p> <blockquote> <p>but this approach seems like it could result in inconsistency if somehow the cookie validated but the session storage did not communicate that.</p> </blockquote> <p>I think you don't have to be concerned with inconsistencies. If the user is logged in, but your front will not have that information then you will display a ""log in"" button, and the user will be automatically logged in when they click. If the user's session would expire, but you will still have information that they're logged in, then you will get a 401 response when calling your backend. You can then catch such a response and update the user's state in your front.</p>",,,false
"{'account_id': 8545313, 'reputation': 169, 'user_id': 6404049, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-q8BmOMVd7AI/AAAAAAAAAAI/AAAAAAAAABM/OyEkAyjonq4/photo.jpg?sz=256', 'display_name': 'Ihor Romanchuk', 'link': 'https://stackoverflow.com/users/6404049/ihor-romanchuk'}",False,0,1669749094,1669749094,74619129,74618953,CC BY-SA 4.0,"<p>I'd recommend to look into React Hook Form library. It really helps working with forms in React. It might look a bit complicated in the beginning, but believe me you'll be grateful you went for it.</p> <p>Here is the <a href=""https://react-hook-form.com/api/usefieldarray/"" rel=""nofollow noreferrer"">link</a> to documentation where they show how to do what you need.</p>",,,false
"{'account_id': 22336515, 'reputation': 49, 'user_id': 16556992, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/ZpPr4.jpg?s=256', 'display_name': 'LucaDCS', 'link': 'https://stackoverflow.com/users/16556992/lucadcs'}",False,0,1670088179,1669762407,74621103,74618861,CC BY-SA 4.0,"<p>From what I understand, what you are trying to modify is the color of the date fields when the focus is on them:</p> <p><a href=""https://i.sstatic.net/FKrwg.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/FKrwg.png"" alt=""input date example"" /></a></p> <p>To do this ""customization"" you have to know mainly 2 things:</p> <p><strong>Webkit</strong>: Webkit is an html/css web browser rendering engine that works primarily in Safari and Chrome browsers.</p> <p><strong>Focus</strong>: It is a CSS pseudo-class, which refers to the element that is being focused on in the browser, usually activated when the user clicks, touches an element or selects it with the ""Tab"" key on the keyboard.</p> <p>In the following example, I edit the appearance of <strong>ALL</strong> the inputs fields with the type <strong>date</strong> that have the <strong>focus</strong> on them and apply a red <strong>background-color</strong> to them, although you can also edit it using a class or the ID of your input.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-css lang-css prettyprint-override""><code>input[type=""date""]::-webkit-datetime-edit-day-field:focus,  input[type=""date""]::-webkit-datetime-edit-month-field:focus, input[type=""date""]::-webkit-datetime-edit-year-field:focus  {     background-color: red;     outline: none; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><input type=""date"" name="""" id=""""></code></pre>  </div>  </div>  </p>",1670088179.0,,false
"{'account_id': 18877508, 'reputation': 401, 'user_id': 20539156, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b59d54dc3d0f3a0f6dcaeabdece9ec96?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'AbsoluteZero', 'link': 'https://stackoverflow.com/users/20539156/absolutezero'}",True,0,1669747775,1669747775,74618906,74618754,CC BY-SA 4.0,"<p>You could use a regular expression to get the percentage from your string, here's an example:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const width = 'calc(50% - 4px)'; const regex = /^calc\((\d{1,3})%.+$/;  const getPercentageFromCalc = (w) => {   const matches = regex.exec(width);      return matches[1]; };  console.log(getPercentageFromCalc(width));</code></pre>  </div>  </div>  </p> <p>Remember to add checks to make sure your regular expression matched something, this is just an example!</p>",,,false
"{'account_id': 4663157, 'reputation': 17069, 'user_id': 3776927, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/f97178932f070cb24d06de16a905b196?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'derpirscher', 'link': 'https://stackoverflow.com/users/3776927/derpirscher'}",True,3,1669748702,1669748299,74619008,74618748,CC BY-SA 4.0,"<p><code>!user && res.status(401).json('Wrong User Name');</code></p> <p>as a statement is IMHO quite bad style. And as you see, it leads to errors, because your code doesn't step out of this handler after having sent the headers. It just continues with the next statment and eventually reaches another <code>res.status(...)</code>. This will try to set some headers again, which isn't allowed. And that's what the error message is telling you.</p> <p>Use</p> <pre><code>if (!user) {   return res.status(401).json('Wrong User Name'); } </code></pre> <p>instead. This will return from handler and not execute the remaining code in your function ... Same of course for all other instances where you use this pattern.</p>",1669748702.0,,false
"{'account_id': 21889, 'reputation': 32101, 'user_id': 53538, 'user_type': 'registered', 'accept_rate': 88, 'profile_image': 'https://www.gravatar.com/avatar/21a10c379a9dfc3284a4a75edb933745?s=256&d=identicon&r=PG', 'display_name': 'Guss', 'link': 'https://stackoverflow.com/users/53538/guss'}",False,1,1669747218,1669747218,74618808,74618748,CC BY-SA 4.0,"<p>I see that you use the <code>res.status(code).json(content)</code> command multiple times in your code, but you never exit the function after sending the response. As a result, after one such command - the code will continue in the function and will try to send another response, and this is where you get the error: the server is trying to send multiple responses for one request.</p>",,,false
"{'account_id': 24155298, 'reputation': 101, 'user_id': 18119616, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJxWSA2OL0rObZ7ndqwWqz7AN5bVzCfUsZliOLb6=k-s256', 'display_name': 'Fox Desert', 'link': 'https://stackoverflow.com/users/18119616/fox-desert'}",False,0,1715231847,1715231847,78452404,74618720,CC BY-SA 4.0,"<p>'react-device-detect' does get error when page refreshed.</p> <p>use 'getServerSideProps' described here.</p> <p><a href=""https://stackoverflow.com/questions/59494037/how-to-detect-the-device-on-react-ssr-app-with-next-js"">How to detect the device on React SSR App with Next.js?</a></p>",,,false
"{'account_id': 14886474, 'reputation': 68, 'user_id': 10749510, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/02a7ac83cd2c991042c8e133a30062d3?s=256&d=identicon&r=PG', 'display_name': 'Ravenwits', 'link': 'https://stackoverflow.com/users/10749510/ravenwits'}",False,0,1678599678,1678599678,75711252,74618720,CC BY-SA 4.0,"<p>you can use <a href=""https://www.npmjs.com/package/react-device-detect"" rel=""nofollow noreferrer"">react-device-detect</a> package. which is also fairly easy to use and has great options like spesific view elemets which addresses your issue. I've tested this on Next 13.2 and can confirm that it works.</p>",,,false
"{'account_id': 19127838, 'reputation': 1964, 'user_id': 13970434, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/703c368efe660688de4b10d24e3984fb?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Andr&#233;', 'link': 'https://stackoverflow.com/users/13970434/andr%c3%a9'}",False,0,1669793828,1669793828,74624273,74618715,CC BY-SA 4.0,"<p>If you are using react the usual way of importing <code>css</code> is in your <code>javascript</code> files. If they apply to all components you can import in the <code>index.js</code> file.<br /> For example if you have a file <code>index.css</code> in the same folder you add this line on top of your file: <code>import './index.css';</code></p> <p>Some style packages for react, like bootstrap, also need to be installed with npm, you can check more here: <a href=""https://react-bootstrap.github.io/getting-started/introduction/"" rel=""nofollow noreferrer"">https://react-bootstrap.github.io/getting-started/introduction/</a></p>",,,false
"{'account_id': 22443986, 'reputation': 2480, 'user_id': 16648127, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gi1fxsGw6v1p1_YJWSGK8SFP46IivbTxW0kvmbl=k-s256', 'display_name': 'Enfield Li', 'link': 'https://stackoverflow.com/users/16648127/enfield-li'}",False,0,1669750059,1669750059,74619291,74618686,CC BY-SA 4.0,<p>You need a <code>return</code> for arrow function if you add <code>{}</code>:</p> <pre><code>{tracks.length > 0 && tracks.map(track => {   return <Track songName={track.title} artistName={track.subtitle} coverUrl=''></Track> })} </code></pre> <p>or implicit return (with no <code>{}</code>):</p> <pre><code>{tracks.length > 0 && tracks.map(track =>   <Track songName={track.title} artistName={track.subtitle} coverUrl=''></Track> )} </code></pre>,,,false
"{'account_id': 30558803, 'reputation': 1, 'user_id': 23422463, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b6194c199962bf99564a08f11ea90099?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'spman', 'link': 'https://stackoverflow.com/users/23422463/spman'}",False,0,1708093353,1708093353,78008011,74618638,CC BY-SA 4.0,"<pre><code>onUpdate: ({ editor }) => {     formHook.setValue(""body"", editor.getHTML()) }, </code></pre>",,,false
"{'account_id': 15519980, 'reputation': 1584, 'user_id': 11196441, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c97a5db1d6ddca883b712f94af110d25?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Disco', 'link': 'https://stackoverflow.com/users/11196441/disco'}",True,1,1669797530,1669797530,74624890,74618638,CC BY-SA 4.0,"<p>I would recommend using the  component or useController hook from RHF.</p> <pre class=""lang-js prettyprint-override""><code>const DocumentController: React.FC<DocumentControllerProps> = ({   name,   required = false,   readOnly = false, }) => {   const {     field: { onChange, value, ref },   } = useController({     name,     rules: { required },   });   return (     <TipTapComponent       initialValue={value}       readOnly={readOnly}       onChange={onChange}     />   ); }; </code></pre> <p>and in your tiptap component,</p> <pre class=""lang-js prettyprint-override""><code>const TipTap = ({ initialValue, onChange }) => {   const tipTapEditor = useEditor({     extensions: [StarterKit],     content: initialValue,     onUpdate: ({ editor }) => {       const html = editor.getHTML();       onChange(html);     },   });    return (     <div>       <MenuBar editor={tipTapEditor} />       <EditorContent editor={tipTapEditor} />     </div>   ); }; </code></pre>",,,false
"{'account_id': 15220874, 'reputation': 135, 'user_id': 10982789, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/a1b733ef21d32f3e2aa19f009325fca5?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Mtullis', 'link': 'https://stackoverflow.com/users/10982789/mtullis'}",False,0,1669825175,1669825175,74630971,74618594,CC BY-SA 4.0,"<p>The code has been updated with a solution to this issue.  I created a display value for the input that I passed to state, which was set to a blank string when the reset is pressed as well as passing an unfiltered data set.</p>",,,false
"{'account_id': 24313399, 'reputation': 11, 'user_id': 18255038, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3eefd66c431e8c821f5b0d1de62c0599?s=256&d=identicon&r=PG', 'display_name': 'donaldchen34', 'link': 'https://stackoverflow.com/users/18255038/donaldchen34'}",False,1,1669787763,1669787763,74623427,74618594,CC BY-SA 4.0,"<p>You need to pass the value to <code>InputSearch</code></p> <p>Heres an example: <a href=""https://codesandbox.io/s/morning-brook-durbvd?file=/demo.tsx"" rel=""nofollow noreferrer"">https://codesandbox.io/s/morning-brook-durbvd?file=/demo.tsx</a></p> <p>React has a pretty good introduction on its site. <a href=""https://reactjs.org/docs/components-and-props.html"" rel=""nofollow noreferrer"">https://reactjs.org/docs/components-and-props.html</a></p>",,,false
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",True,0,1669828401,1669745546,74618508,74618402,CC BY-SA 4.0,"<p>First issue is that the <code>Form</code> component is passed an <code>onChange</code> prop but is destructuring a <code>HandleChange</code> prop.</p> <pre><code><Route   path=""/""   element={<Form form={form} HandleChange={handleChange} />} /> </code></pre> <p>Fix this to pass a consistently named prop.</p> <pre><code><Route   path=""/""   element={<Form form={form} onChange={handleChange} />} /> </code></pre> <p>The second issue from what I can see of the code it seems the <code>button</code> element is submitting the form and since the default form action is not prevented the page/app is reloading. HTML <code>button</code> elements have <code>type=""submit""</code> by default if not specified.</p> <p>Make sure that the <code>name</code> attribute for the ""name"" field matches the React state key. In other words, ensure it is <code>name=""name""</code> instead of <code>name=""isim""</code>.</p> <p>Additionally, all these form fields should <em>technically</em> be <em><strong>controlled</strong></em> inputs since you are attaching an <code>onChange</code> handler to each. Controlled inputs use the <code>value</code> prop instead of the <code>defaultValue</code> prop.</p> <p>You've a couple options:</p> <ol> <li><p>Declare the button to <em><strong>not</strong></em> be a form submit button.</p> <pre><code>function Form({ form, onChange }) {   return (     <div>       <form>         <input           type=""text""           name=""name""           value={form.name}           onChange={onChange}           placeholder=""Enter your name""         />         <select name=""city"" value={form.city} onChange={onChange}>           <option disabled value="""">Enter your city</option>           <option value=""Ankara"">Ankara</option>           <option value=""Ä°stanbul"">Ä°stanbul</option>           <option value=""Ä°zmir"">Ä°zmir</option>         </select>         <input           type=""date""           name=""birth""           value={form.birth}           onChange={onChange}         />         <input           type=""color""           name=""color""           value={form.color}           onChange={onChange}         />         <textarea           name=""address""           placeholder=""Enter your address""           cols=""20""           rows=""5""           value={form.adsress}           onChange={onChange}         ></textarea>         <Link to=""/info"">           <button type=""button"">Send</button>         </Link>       </form>     </div>   ); } </code></pre> </li> <li><p>Declare a form submit handler and prevent the default form action and issue the imperative navigation action.</p> <pre><code>import { useNavigate } from 'react-router-dom';  function Form({ form, onChange }) {   const navigate = useNavigate();    const submitHandler = (e) => {     e.preventDefault();     navigate(""/info"");   };    return (     <div>       <form onSubmit={submitHandler}>         <input           type=""text""           name=""name""           value={form.name}           onChange={onChange}           placeholder=""Enter your name""         />         <select name=""city"" value={form.city} onChange={onChange}>           <option disabled value="""">Enter your city</option>           <option value=""Ankara"">Ankara</option>           <option value=""Ä°stanbul"">Ä°stanbul</option>           <option value=""Ä°zmir"">Ä°zmir</option>         </select>         <input           type=""date""           name=""birth""           value={form.birth}           onChange={onChange}         />         <input           type=""color""           name=""color""           value={form.color}           onChange={onChange}         />         <textarea           name=""address""           placeholder=""Enter your address""           cols=""20""           rows=""5""           value={form.adsress}           onChange={onChange}         ></textarea>         <button type=""submit"">Send</button>       </form>     </div>   ); } </code></pre> </li> </ol> <p>In either case you'll still want to be explicit about the button type for readability and maintainability reasons.</p> <p>Demo</p> <p><a href=""https://codesandbox.io/s/awesome-villani-ntowm7?fontsize=14&hidenavigation=1&module=%2Fsrc%2FApp.js&theme=dark"" rel=""nofollow noreferrer""><img src=""https://codesandbox.io/static/img/play-codesandbox.svg"" alt=""Edit react-router-dom-i-cant-printing-the-default-value-from-the-form-to-another-pag"" /></a></p>",1669828401.0,,false
"{'account_id': 2562953, 'reputation': 4346, 'user_id': 2223706, 'user_type': 'registered', 'accept_rate': 73, 'profile_image': 'https://i.sstatic.net/ksG4X.jpg?s=256', 'display_name': 'Garrett', 'link': 'https://stackoverflow.com/users/2223706/garrett'}",False,0,1669910496,1669910496,74644800,74618397,CC BY-SA 4.0,"<p>I found a way, you can use your own <a href=""https://react-hook-form.com/advanced-usage/#CustomHookwithResolver"" rel=""nofollow noreferrer"">custom resolver</a>.</p> <p>It looks like this:</p> <pre><code>function myHook() {   const [mySchema, setMySchema] = useState<AnyObjectSchema | null>(null);    useEffect(() => {     // setMySchema is called in here when backend responds   });    const resolver = useYupValidationResolver(mySchema);    const {     handleSubmit,     register,   } = useForm({     resolver   });    if (!mySchema) {     return <SkeletonForm />;   }    return <TheFormGoesHere />; }   function useYupValidationResolver(   validationSchema: AnyObjectSchema | null ): any {   // This hook is taken from here:    // https://react-hook-form.com/advanced-usage/#CustomHookwithResolver   // just updated to handle a null validationSchema.   return useCallback(     async (data: any) => {       if (validationSchema === null) {         return {           values: {},           errors: {},         };       }       try {         const values = await validationSchema.validate(data, {           abortEarly: false,         });          return {           values,           errors: {},         };       } catch (errors: any) {         return {           values: {},           errors: errors.inner.reduce(             (allErrors: any, currentError: any) => ({               ...allErrors,               [currentError.path]: {                 type: currentError.type ?? ""validation"",                 message: currentError.message,               },             }),             {}           ),         };       }     },     [validationSchema]   ); } </code></pre>",,,false
"{'account_id': 6859767, 'reputation': 6613, 'user_id': 5274205, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d3a281a1418dbceeda34cc93d3744554?s=256&d=identicon&r=PG', 'display_name': 'Chad S.', 'link': 'https://stackoverflow.com/users/5274205/chad-s'}",True,2,1669770035,1669770035,74621820,74618150,CC BY-SA 4.0,"<p>You can import your router instance directly then use it to configure the query client.</p> <pre class=""lang-js prettyprint-override""><code>import Router from 'next/router' // ...  export const queryClient = new QueryClient({   defaultOptions: {     queries: {       onError: () => Router.push('/login'),     }   } }) </code></pre> <p>This is discussed here: <a href=""https://github.com/vercel/next.js/discussions/17046"" rel=""nofollow noreferrer"">Using next/router outside of components</a></p>",,,false
"{'account_id': 23576459, 'reputation': 83, 'user_id': 17616067, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/7a6a45bb5b2455086678ea277718664b?s=256&d=identicon&r=PG', 'display_name': 'kkkjjj', 'link': 'https://stackoverflow.com/users/17616067/kkkjjj'}",False,0,1669791749,1669791749,74623931,74618042,CC BY-SA 4.0,<p>Simply had to pass the state as the second param in complete service and other functions that handle complete action.</p>,,,false
"{'account_id': 10590864, 'reputation': 833, 'user_id': 7801492, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/532c36c316cb0d7eba16963a71e5d4de?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Urska Krivc', 'link': 'https://stackoverflow.com/users/7801492/urska-krivc'}",False,0,1669801432,1669801432,74625615,74617968,CC BY-SA 4.0,"<p>One of the problems should be solved by adding <code>typeof</code> to <code>ViewBy</code>:</p> <pre><code>const [viewBy, setViewBy] = useState<typeof ViewBy>(ViewBy.Alphabetical); </code></pre> <p>Other could probably be solved by adding type <code>: any</code> to <code>ViewBy</code>:</p> <pre><code>const [viewBy, setViewBy] = useState<typeof ViewBy>(ViewBy.Alphabetical: any); </code></pre>",,,false
"{'account_id': 6471466, 'reputation': 6448, 'user_id': 5011469, 'user_type': 'registered', 'accept_rate': 67, 'profile_image': 'https://i.sstatic.net/wK7Xt.jpg?s=256', 'display_name': 'OliverRadini', 'link': 'https://stackoverflow.com/users/5011469/oliverradini'}",True,0,1669762948,1669762948,74621181,74617932,CC BY-SA 4.0,"<p>Here's an attempt at a minimal example that hopefully gives a clear overview of how it's possible to filter elements. You can use your state to control how the elements are filtered out of the list, and then render those that remain:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const App = () => {     const [showingBs, setShowingBs] = React.useState(true);      return (<div>       <input         type = ""checkbox""         checked = {showingBs}         onChange = {           () => setShowingBs(!showingBs)         }       />         {           ['a', 'b', 'a', 'b', 'b', 'a', 'b']             .filter(x => showingBs || x !== 'b')             .map(x => <p>{x}</p>)         }       </div>)     }      ReactDOM.render( < App / > , document.getElementById(""mount""))</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdnjs.cloudflare.com/ajax/libs/react/16.8.3/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.8.3/umd/react-dom.production.min.js""></script>  <div id=""mount""></div></code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 2279594, 'reputation': 7202, 'user_id': 2005038, 'user_type': 'registered', 'accept_rate': 53, 'profile_image': 'https://i.sstatic.net/Pq0mX.png?s=256', 'display_name': 'Marco', 'link': 'https://stackoverflow.com/users/2005038/marco'}",True,1,1669742790,1669742484,74617864,74617762,CC BY-SA 4.0,"<pre><code>async function ChangePassword(data) {   const auth = getAuth();   let res = false;   const credential = EmailAuthProvider.credential(     auth.currentUser.email,     data.oldPassword   );   reauthenticateWithCredential(auth.currentUser, credential)     .then(() => {       updatePassword(auth.currentUser, data.password)         .then(() => {           toast.success(""Password changed successfully"");           res = true;           console.log(""res "",res);         })         .catch((error) => {           toast.error(error.message);         });     })     .catch((error) => {       toast.error(error.message);     });   return res; } </code></pre> <p>Has many logical errors in it.</p> <p>First you should decide whether you're going to use <code>async</code> and its feature <code>await</code> or classical Promise <code>.then</code>able -style. Please do not use both, it will only confuse you and the reader.</p> <p>Let's ditch the async (since you don't even use <code>await</code>), and <code>Promise</code>s are chainable, you do not (and MUST not) nest <code>.then</code> blocks, use this instead:</p> <pre><code>function ChangePassword(data) {   const auth = getAuth();   const credential = EmailAuthProvider.credential(auth.currentUser.email, data.oldPassword);    return reauthenticateWithCredential(auth.currentUser, credential)   .then(() => {       return updatePassword(auth.currentUser, data.password)   })   .then(() => {       toast.success(""Password changed successfully"");        return true;   })   .catch((error) => {       toast.error(error.message);        return false;   }) } </code></pre> <p>The key here is that <code>ChangePassword</code> <em>itself</em> returns a Promise.*</p> <p>The caller is then responsible to call it with <code>.then</code> or use <code>async</code> in combination with <code>await</code>:</p> <pre><code>ChangePassword({/* data */}).then((result) => {     console.log(""ChangePassword done"", result) }) </code></pre> <p>The same code looks a lot cleaner if you use <code>async</code>:</p> <pre><code>async function ChangePassword(data) {   const auth = getAuth();   const credential = EmailAuthProvider.credential(auth.currentUser.email, data.oldPassword);    try {     await reauthenticateWithCredential(auth.currentUser, credential);     await updatePassword(auth.currentUser, data.password);     toast.success(""Password changed successfully"");      return true;   } catch (error) {     toast.error(error.message);      return false;   } } </code></pre> <p>(If you were wondering how that would look like).</p> <p>*a function tagged as <code>async</code> <strong>ALWAYS</strong> returns a promise, by the way.</p>",1669742790.0,,false
"{'account_id': 11544641, 'reputation': 91, 'user_id': 8459143, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/a1db6699ebc5fa49cf817e8f50d71aec?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'W. Adlan', 'link': 'https://stackoverflow.com/users/8459143/w-adlan'}",True,2,1669743242,1669743242,74618032,74617702,CC BY-SA 4.0,"<p>Yes, it is possible to achieve this. The AxiosError object passed to the error interceptor function contains a response property which contains the response data from the API. You can use this to get the user friendly error message and display it in the dialog.</p> <p>For example:</p> <pre><code>const responseErrorInterceptor = async (error: AxiosError): ServiceResult<AxiosError> => {   if (error.response) {     const userFriendlyErrorMessage = error.response.data.errorMessage;     store.dispatch(setErrorDialog(undefined, userFriendlyErrorMessage));   }   return Promise.reject(error); }; </code></pre>",,,false
"{'account_id': 25319708, 'reputation': 1, 'user_id': 19141170, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/196557ecf8291d96c2a907e6d9b7a156?s=256&d=identicon&r=PG', 'display_name': 'akd', 'link': 'https://stackoverflow.com/users/19141170/akd'}",False,0,1675446438,1675446438,75339335,74617491,CC BY-SA 4.0,"<p>Seems to be an issue (maybe intended) with React:</p> <p><a href=""https://github.com/facebook/react/issues/11387"" rel=""nofollow noreferrer"">https://github.com/facebook/react/issues/11387</a></p>",,,false
"{'account_id': 18545837, 'reputation': 1, 'user_id': 13513241, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gh5MeOrZ6rF_81A69FZisUYxb086L7bFuERS0LqRA=k-s256', 'display_name': 'Suleyman Dadashov', 'link': 'https://stackoverflow.com/users/13513241/suleyman-dadashov'}",False,0,1669748819,1669746911,74618760,74617476,CC BY-SA 4.0,"<p>You cannot use getServerSideProps in non-page components. You should use this method on the page on which you use this component.</p> <p><a href=""https://nextjs.org/docs/basic-features/data-fetching#only-allowed-in-a-page-2"" rel=""nofollow noreferrer"">https://nextjs.org/docs/basic-features/data-fetching#only-allowed-in-a-page-2</a></p>",1669748819.0,,false
"{'account_id': 22805546, 'reputation': 1, 'user_id': 16957642, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/931e8076a3b6b779633e13ec7b2585ca?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Thalya St&#233;ffany', 'link': 'https://stackoverflow.com/users/16957642/thalya-st%c3%a9ffany'}",False,0,1710116411,1710115019,78137869,74617454,CC BY-SA 4.0,"<p>I solved this error adding the extension <code>css</code> into <code>moduleNameMapper</code>. My Jest configuration:</p> <pre><code>export default {  preset: 'ts-jest',  testEnvironment: 'jest-environment-jsdom',  transform: {   '^.+\\.tsx?$': 'ts-jest',   // process `*.tsx` files with `ts-jest`  },  moduleNameMapper: {   '\\.(gif|ttf|eot|svg|png|css)$':    '<rootDir>/.test/mocks/fileMock.ts',  }, }; </code></pre>",1710116411.0,,false
"{'account_id': 23305386, 'reputation': 16, 'user_id': 17385424, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gimlf03GYnDeawD8OnggvhQjPAXm2y_mXYkCTzL=k-s256', 'display_name': 'jdluis.com', 'link': 'https://stackoverflow.com/users/17385424/jdluis-com'}",False,0,1681118057,1681118057,75975765,74617454,CC BY-SA 4.0,"<p>Ey! I discover the solution right now:</p> <p>Ok, I have the same problem with my webpack app for learn jest, so at final, I discover the mocks.</p> <p>Well that's my solution:</p> <pre><code>//jest.config.js   module.exports = {   //....   moduleNameMapper: {     ""\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$"":       ""<rootDir>/mocks/fileMock.js"",     ""\\.(css|less)$"": ""<rootDir>/mocks/styleMock.js"",   }, }; </code></pre> <p>In your mocks folder you need to create 2 files:</p> <pre><code>//styleMocks.js  module.exports = {};   //fileMock.js  module.exports = 'test-file-stub'; </code></pre> <p>This moduleNameMapper will set in all your test a ""fake data"" when you try to import some imports with the extension selected in there, like videos, img, CSS, etc.. you can modify of course.</p> <p>With that, the error will disappear.</p> <p>My full project is here: <a href=""https://github.com/jdluis/cart-shop-with-tests/tree/master"" rel=""nofollow noreferrer"">Github</a></p> <p>Refers: <a href=""https://jestjs.io/docs/tutorial-react-native#modulenamemapper"" rel=""nofollow noreferrer"">modulenamemapper</a> <a href=""https://jestjs.io/docs/next/webpack"" rel=""nofollow noreferrer"">Where I Found?</a></p>",,,false
"{'account_id': 24312491, 'reputation': 97, 'user_id': 19865339, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/499172bda52f5d608528fced6609b6a4?s=256&d=identicon&r=PG', 'display_name': 'userWantsToCode', 'link': 'https://stackoverflow.com/users/19865339/userwantstocode'}",True,0,1670335938,1670335938,74703967,74617454,CC BY-SA 4.0,<p>I fixed this issue. It was to do with manually configuring Jest and the babelrc file. So I deleted the manual configuration and instead installed the correct packages and used the setupTests.js file that comes when you use CRA.</p> <p>I also had to wrap my components in Router and the Context API Provider and Store.</p>,,,false
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",True,4,1669800137,1669800137,74625364,74617287,CC BY-SA 4.0,"<h1>Issue</h1> <p>From what I can tell of your code examples the issue is that the <code>Layout</code> component is being rendered in two places. Once correctly as a layout route where the nested routes can render their <code>element</code> into the <code>Outlet</code> rendered by <code>Layout</code>, and again in the <code>App</code> component wrapping the <code>RouterProvider</code> component. The issue is that <code>Layout</code> doesn't consume and render any <code>children</code> prop, so the wrapped <code>RouterProvider</code> isn't rendered.</p> <p>Layout</p> <pre><code>const Layout = () => { // <-- no children prop   return (     <Container       sx={{ height: '100%' }}       maxWidth={false}       disableGutters={true}     >       <Header />       <Box ....>         <Outlet />       </Box>       <Footer />     </Container>   ) } </code></pre> <p>App</p> <pre><code>const router = createBrowserRouter(routesConfig);  const App = () => {   return (     <ThemeProvider theme={theme}>       <CssBaseline />       <UserProvider>         <Layout>           <RouterProvider router={router} /> // <-- child of Layout         </Layout>       </UserProvider>     </ThemeProvider>   ); }; </code></pre> <h1>Solution</h1> <p>The <code>BrowswerRouter</code> data router is already rendering the <code>Layout</code> component, so it's completely unnecessary in the <code>App</code> component and should be removed.</p> <p>App</p> <pre><code>const router = createBrowserRouter(routesConfig);  const App = () => {   return (     <ThemeProvider theme={theme}>       <CssBaseline />       <UserProvider>         <RouterProvider router={router} />       </UserProvider>     </ThemeProvider>   ); }; </code></pre>",,,false
"{'account_id': 25232826, 'reputation': 1760, 'user_id': 19067773, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/gj1RO.jpg?s=256', 'display_name': 'Shahed', 'link': 'https://stackoverflow.com/users/19067773/shahed'}",False,-1,1669743086,1669743086,74618006,74617266,CC BY-SA 4.0,"<p>Yes, It is not good practice to access <code>dom</code> elements directly through <code>document API</code>.</p> <p>Because in react</p> <ol> <li><p><code>virtual dom</code> is <strong>responsible</strong> for painting/ <strong>re-rendering</strong> the UI.</p> </li> <li><p><strong><em>State updation</em></strong> is the proper way to tell react to trigger re-render.</p> </li> <li><p>The flow is state updation -> calculate differences -> find who over is using that state -> grab those <code>components</code> -> re-render only those components.</p> </li> <li><p><code>virtual dom</code> is the <strong>source of truth</strong> for react to render and update actual <code>DOM</code>.</p> </li> </ol> <p>Now, If you directly access some dom elements and do some operation on it, like updating, react will never know that some change has happened and it will basically break the flow of the react, in which case there will be no reason to use <code>react.js</code></p> <p>The flow would be accessing some dom element -> updating -> displaying.</p> <p>The problem with this approach if react encounters that later what i have in virtual dom is not actual presentation in the actual dom, which will create mess. That is the reason there is <code>useRef</code> hook to <a href=""https://beta.reactjs.org/apis/react/useRef#manipulating-the-dom-with-a-ref"" rel=""nofollow noreferrer"">manipulate dom.</a></p>",,,false
"{'account_id': 14713561, 'reputation': 1422, 'user_id': 10626207, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/611c5e694ee433fdb6424569985ebc29?s=256&d=identicon&r=PG', 'display_name': 'Mattia Rasulo', 'link': 'https://stackoverflow.com/users/10626207/mattia-rasulo'}",True,0,1669739043,1669739043,74617157,74617046,CC BY-SA 4.0,"<p><code>FormData</code> is a browser API, it's available in Node only from v18.</p> <p>Files need to be sent as <code>multipart/form-data</code>and you won't be able to read these off the body as if it was JSON.</p> <p>To parse <code>multipart</code> objects the common approach is to use <a href=""https://www.npmjs.com/package/multer"" rel=""nofollow noreferrer"">multer</a>.</p>",,,false
"{'account_id': 25179763, 'reputation': 11, 'user_id': 19021403, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/2c54c995e1d96e7c31bd8ce0360a9eb4?s=256&d=identicon&r=PG', 'display_name': 'Abdulkarim', 'link': 'https://stackoverflow.com/users/19021403/abdulkarim'}",False,1,1686861309,1686861309,76485344,74616820,CC BY-SA 4.0,<p>You need to registerCallBack before calling adobeDCView.previewFile</p> <pre><code>this.adobeDCView = new window.AdobeDC.View(config);  this.registerUserProfile(profile);  const previewFilePromise = this.adobeDCView.previewFile(... ` </code></pre>,,,false
"{'account_id': 20697089, 'reputation': 121, 'user_id': 15197074, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-p9QbY64031U/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuck8nFlQV62IrMslnLbvxIh8kDsNAw/s96-c/photo.jpg?sz=256', 'display_name': 'Tejashree Surve', 'link': 'https://stackoverflow.com/users/15197074/tejashree-surve'}",True,0,1669794309,1669794309,74624345,74616691,CC BY-SA 4.0,"<p>Can you Please share Profile Reducer Code also because as per my observation Profile is like an object</p> <pre><code>export const initialState = {     profile:{fullName:""""}; } export const profileReducer =(state = initialState,action={})=>{ .. } </code></pre> <p>and you want to get only profileReducer Data then get only profileReducer data by state.profileReducer an get the value as const {profile}</p> <pre><code> const {profile} = useSelector((state) => state.profileReducer); </code></pre> <p>for testing check if are you able to getting proflie data by</p> <pre><code>useState(()=>{console.log(""profile"",profile)},[profile]) </code></pre>",,,false
"{'account_id': 25283505, 'reputation': 11, 'user_id': 19110960, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJx9lhk0CyKMFzWPEZJtVXWweZhcTDnySS2Jxhnu=k-s256', 'display_name': 'SSS', 'link': 'https://stackoverflow.com/users/19110960/sss'}",False,0,1671200870,1671200870,74825796,74616571,CC BY-SA 4.0,<p>Antwort: Name of field must be actions</p>,,,false
"{'account_id': 9047051, 'reputation': 938, 'user_id': 6738911, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/m6z29.png?s=256', 'display_name': 'Marek Rozmus', 'link': 'https://stackoverflow.com/users/6738911/marek-rozmus'}",False,0,1669770180,1669770180,74621835,74616427,CC BY-SA 4.0,"<p>You are missing <code>await</code> in this line:</p> <pre class=""lang-js prettyprint-override""><code>userEvent.click(startTimerButton); </code></pre> <p>So try:</p> <pre class=""lang-js prettyprint-override""><code>await userEvent.click(startTimerButton); </code></pre> <p>the <code>userEvent</code> API is async since version 14.</p>",,,false
"{'account_id': 20747118, 'reputation': 1436, 'user_id': 15235482, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/4Tiso.jpg?s=256', 'display_name': 'mahooresorkh', 'link': 'https://stackoverflow.com/users/15235482/mahooresorkh'}",False,0,1669788917,1669739735,74617301,74616410,CC BY-SA 4.0,"<p>First you need to define a state to determine at which level the component is.</p> <pre><code>const [levelIndex, setLevelIndex] = useState(0); </code></pre> <p>Then create an array for execution time at each level (<em>This is For the case that you are looking for, it can be changed depending on what time spans are needed or which pattern a user wants</em>).</p> <pre><code>const intevalExecutionTime = [100,100,100,1000]; </code></pre> <p>Next create a <code>useEffect</code> hook like this:</p> <pre><code>useEffect(() => {   const timer = setInterval(() => {   //**write the task that you want to be done.**     if(levelIndex === 3){       setLevelIndex(0);       console.log(`one second paused`);     }     else{       setLevelIndex(levelIndex+1);       console.log('task is done.');     }     clearInterval(timer);   }, intevalExecutionTime[levelIndex]) }, [levelIndex]); </code></pre> <p>This hook callback will set an interval based on the <strong>interval execution time level</strong>. Every time the <code>setInterval</code> callback is triggered the older interval object will be removed and it changes the <code>levelIndex</code> and the <code>useEffect</code> callback will be called once again.</p>",1669788917.0,,false
"{'account_id': 19606175, 'reputation': 12940, 'user_id': 14349808, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/02c137f14e06f30c2d66a3b93ae1191f?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'lissettdm', 'link': 'https://stackoverflow.com/users/14349808/lissettdm'}",True,1,1669758785,1669757169,74620414,74616410,CC BY-SA 4.0,"<p>You can use a <code>recursive</code> function within <code>useEffect</code> hook:</p> <pre><code>useEffect(() => {   function start(i = 1) {     const reset = i > 3;     const time = reset ? 1000 : 100;      const timeout = setTimeout(() => {       task(i, time); // -> run your task       start(reset ? 1 : i + 1); recursive call to schedule next task       clearTimeout(timeout); // -> clear      }, time);   }    start(); }, []);  function task(i, time) {   console.log('task is running: ', i, time); }  </code></pre> <p><strong>Working example:</strong> <a href=""https://stackblitz.com/edit/react-jenzmw?file=src%2FApp.js"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/react-jenzmw?file=src%2FApp.js</a></p>",1669758785.0,,false
"{'account_id': 18282742, 'reputation': 3093, 'user_id': 13311273, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GhDN1-9fMTc1eWRay_inGJFCldR3IfJHW1I5ixIiQ=k-s256', 'display_name': 'Oki', 'link': 'https://stackoverflow.com/users/13311273/oki'}",False,0,1669737246,1669737246,74616771,74616410,CC BY-SA 4.0,"<p>You can achieve this via setTimeout.</p> <pre><code>useEffect(() => {   let i = 0   let incrementTimer   function increment() {     if (i === 3) {       // i = 0       // restart timer?       // return?     }     i++     console.log(i)      incrementTimer = setTimeout(increment, 100)   }    increment()    setInterval(() => {     clearInterval(incrementTimer)   }, 1000) }, []) </code></pre>",,,false
"{'account_id': 28382665, 'reputation': 1, 'user_id': 21709691, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/4eef6da4dbfdc9a1ddff98ba035a7e3e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Anthony Angelos', 'link': 'https://stackoverflow.com/users/21709691/anthony-angelos'}",False,0,1682650430,1682197434,76081922,74616388,CC BY-SA 4.0,"<pre class=""lang-js prettyprint-override""><code>import React, { useEffect, useRef } from ""react""; import TagCloud from ""TagCloud""; import ""./TextSphere.css"";  const TextSphere = () => {   const containerRef = useRef(null);    useEffect(() => {     const container = containerRef.current;     const texts = [       ""HTML"",       ""CSS"",       ""JavaScript"",       ""NodeJs"",       ""React"",       ""MongoDb"",       ""MySql"",       ""Git"",       ""MUI"",       ""Express"",       ""GitHub"",       ""AI"",     ];     const options = {       radius: 300,       maxSpeed: ""normal"",       initSpeed: ""normal"",       keep: true,       loop: true,       lockX: true,       lockY: true,     };      TagCloud(container, texts, options);      return () => {       TagCloud(container, [], {});     };   }, []);    return (     <div className=""text-sphere"">       <span className=""tagcloud"" ref={containerRef}></span>     </div>   ); };  export default TextSphere; </code></pre>",1682650430.0,,false
"{'account_id': 4663157, 'reputation': 17069, 'user_id': 3776927, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/f97178932f070cb24d06de16a905b196?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'derpirscher', 'link': 'https://stackoverflow.com/users/3776927/derpirscher'}",False,1,1669753737,1669735150,74616298,74616125,CC BY-SA 4.0,"<p>MongoDB supports <a href=""https://www.mongodb.com/docs/manual/core/index-ttl/"" rel=""nofollow noreferrer"">TTL Indexes</a> So I'd suggest the following</p> <ol> <li>In your schema add an optional field <code>verificationTimeout</code>. For each newly created user set this value to the current timestamp</li> <li>Create a TLL index on this field with an <code>expireAfterSeconds</code> of your own choice (btw 2 minutes is really short, I'd suggest like 15 minutes or so ...)</li> <li>Once the user is verified, <em>remove</em>  the <code>verificationTimeout</code> field from the document</li> </ol> <p>Alternatively, you can also set the <code>verificationTimeout</code> to a timestamp where you want your unverified user to be removed and use the <code>expireAfterSeconds: 1</code> to remove the user at set defined timestamp.</p> <p>So, if the user didn't verify within the given timeslot, the mongodb server will invalidate the document and remove it from the collection. But as specified in the docs, documents <em>won't</em> be invalidated if the don't contain the specified field. So if you remove the <code>verificationTimeout</code> upon verification, the user won't be removed from the collection.</p> <p>And the nice thing about this: You don't need to care about removing unverfied users in your own code. The only thing you need to do is create the index and set/remove the value. Ie no extra worker that scans through the elements and checks if they already expired ...</p>",1669753737.0,,false
"{'account_id': 20431753, 'reputation': 215, 'user_id': 14990516, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jcIP1.png?s=256', 'display_name': 'Asmeeta Rathod', 'link': 'https://stackoverflow.com/users/14990516/asmeeta-rathod'}",False,0,1669791952,1669791952,74623970,74616085,CC BY-SA 4.0,"<p>You may try this, pass your array in <code>convertToDecimal</code></p> <pre><code>const convertToDecimal = (arr)  =>{     let newArr=[];     arr.map(item =>         newArr.push(item.value*100));     return newArr; }  convertToDecimal(marks) </code></pre>",,,false
"{'account_id': 20519211, 'reputation': 1, 'user_id': 15059201, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/98a0d1df79802cfba60dd83c029ef6e9?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Nihal MP', 'link': 'https://stackoverflow.com/users/15059201/nihal-mp'}",False,0,1669734875,1669734875,74616220,74616071,CC BY-SA 4.0,<p>Set position of element to fixed so that it always remain there as it is!</p>,,,false
"{'account_id': 6025946, 'reputation': 2935, 'user_id': 5645583, 'user_type': 'registered', 'accept_rate': 98, 'profile_image': 'https://i.sstatic.net/MDY20.png?s=256', 'display_name': 'Cameron', 'link': 'https://stackoverflow.com/users/5645583/cameron'}",False,0,1712690241,1712689601,78300615,74616066,CC BY-SA 4.0,"<p>I was having a similar issue. I think the primary problem is that by setting isOptionEqualValue to true on an empty string, you're essentially saying that every option matches with the empty string value (not confirming this, just my intuition).</p> <p>The way I got around this was by getting rid of the isOptionEqualValue checker, and simply setting the empty string value (the default) as null. Typescript throws an intellisense warning about this, since it doesn't seem to accept multiple types for the value prop, but it doesn't seem to cause any real errors so I just added a tsignore above the <code>value</code> prop</p>",1712690241.0,,false
"{'account_id': 18692731, 'reputation': 13, 'user_id': 13626719, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c09a9aeaf969fb1bef1b9bcc93acb835?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': '8Irbis8', 'link': 'https://stackoverflow.com/users/13626719/8irbis8'}",True,0,1669888122,1669888122,74639880,74615925,CC BY-SA 4.0,<pre><code>npm install graceful-fs </code></pre> <p>It resolve my problem.</p>,,,false
"{'account_id': 17959224, 'reputation': 1679, 'user_id': 13050564, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/KA27N.jpg?s=256', 'display_name': 'fuziion_dev', 'link': 'https://stackoverflow.com/users/13050564/fuziion-dev'}",False,0,1669734426,1669734426,74616124,74615925,CC BY-SA 4.0,<p>Judging of your filepath's it seems like you are using MacOS. I have experienced this issue a few times on my macbook m1 silicone and was able to resolve this issue by installing Watchman. You can simply do that with the help of brew.</p> <p>First update brew;</p> <pre><code>brew update </code></pre> <p>then execute this command;</p> <pre><code>brew install watchman </code></pre> <p>Let me know if this solved your issue.</p>,,,false
"{'account_id': 24192403, 'reputation': 77, 'user_id': 18151453, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJwK9w7aWvfMEKpHbAOXVRh-XYkyJ1hqpyzNe3vy=k-s256', 'display_name': 'Intra Preneur', 'link': 'https://stackoverflow.com/users/18151453/intra-preneur'}",True,0,1669735016,1669735016,74616266,74615875,CC BY-SA 4.0,"<p>I solved in in the router itself:</p> <pre><code>        <Route           path={`${LocalRoutes.summary}/:id`}           element={<Summary/>}         />         <Route path={LocalRoutes.summary} element={<Navigate to=""/home"" />} /> </code></pre>",,,false
"{'account_id': 22393683, 'reputation': 130, 'user_id': 16605279, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GhKwkuVMdthu5tth3tZKXk012VrUxygyWSYpP_7Wg=k-s256', 'display_name': 'Pankaj Shrivastava', 'link': 'https://stackoverflow.com/users/16605279/pankaj-shrivastava'}",False,0,1669733654,1669733654,74615959,74615875,CC BY-SA 4.0,"<pre><code>import {Redirect} from ""react-router-dom""  if(!id){ return <Redirect to=""/"" /> } </code></pre>",,,false
"{'account_id': 27054753, 'reputation': 1, 'user_id': 20607633, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0LkLtIN0_2ccZhy2Uv0XV1DUi9NEzj0B6uXSNV=k-s256', 'display_name': 'saurav Bhooriya 041', 'link': 'https://stackoverflow.com/users/20607633/saurav-bhooriya-041'}",False,0,1669891084,1669774396,74622165,74615680,CC BY-SA 4.0,"<p>I simply initialized using <code>myCriteria</code> and put three objects in it, in form of an array</p> <pre><code> var myFieldStatusDropdown = [     {         code: 'Select',         value: 'Select'     }, {         code: 'AA',         value: 'A 1'     }, {         code: 'BB',         value: 'B 1'     } ]   const [myCriteria, setMyCriteria] = useState({     myFieldStatusDropdown: myFieldStatusDropdown,     selectedMyFieldStatus: myFieldStatusDropdown[1] }); </code></pre> <p>then I use <code>setMyCriteria</code> to update the <code>myCriteria</code></p> <pre><code> setMyCriteria({     ...myCriteria,     selectedMyFieldStatus: myFieldStatusDropdown[0] },[myCriteria]); </code></pre>",1669891084.0,,false
"{'account_id': 7142980, 'reputation': 344827, 'user_id': 5459839, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/lUUgh.png?s=256', 'display_name': 'trincot', 'link': 'https://stackoverflow.com/users/5459839/trincot'}",True,0,1669736924,1669736924,74616708,74615665,CC BY-SA 4.0,"<p>You could use a recursive function. First create a map keyed by the data for the first key, associating a group object with <code>nodes</code> and <code>hours</code> properties, and then populate the nodes and sum up the hours.</p> <p>Then repeat in recursion for those (smaller) node arrays. The recursion stops when there are no more keys to group by.</p> <p>Here is an implementation:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function groupAndSum(data, [key, ...keys]) {     if (key === undefined) return data;     const groups = new Map(data.map(o => [o[key], { name: o[key], hours: 0, nodes: [] }]));     for (const o of data) {         const parent = groups.get(o[key]);         parent.nodes.push(o);         parent.hours += o.hours;     }     for (const o of groups.values()) o.nodes = groupAndSum(o.nodes, keys);     return [...groups.values()]; }  // Your example data const data = [{id: 1,activity: 'Activity 1',workplace: 'Workplace 1',machine: 'Machine 1',error: 'Error 1',number: 'Doc number 1',hours: 4,}, {id: 2,activity: 'Activity 1',workplace: 'Workplace 1',machine: 'Machine 2',error: 'Error 2',number: 'Doc number 2',hours: 3,}, {id: 3,activity: 'Activity 2',workplace: 'Workplace 2',machine: 'Machine 3',error: 'Error 3',number: 'Doc number 3',hours: 3,}, {id: 4,activity: 'Activity 2',workplace: 'Workplace 3',machine: 'Machine 4',error: 'Error 4',number: 'Doc number 4',hours: 6,}];  const result = groupAndSum(data, [""activity"", ""workplace""]); console.log(result);</code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 13468738, 'reputation': 7423, 'user_id': 9718056, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ee99b210db5777e5e0a69aaa025cd461?s=256&d=identicon&r=PG', 'display_name': 'Arkellys', 'link': 'https://stackoverflow.com/users/9718056/arkellys'}",True,8,1669962280,1669962280,74651669,74615631,CC BY-SA 4.0,"<p>I will make a guess here. According to the discussions on <a href=""https://github.com/nodejs/node/issues/40702"" rel=""noreferrer"">this issue</a> on GitHub, Node 17 introduced a breaking change that might trigger the error you get:</p> <pre><code>Error connecting to TCP host:localhost port:3000 Error: connect ECONNREFUSED ::1:3000 </code></pre> <p>Adding <code>127.0.0.1</code> to your script should work:</p> <pre><code>""electron:start"": ""wait-on tcp:127.0.0.1:3000 && electron ."" </code></pre>",,,false
"{'account_id': 2364698, 'reputation': 1, 'user_id': 5133575, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/290e5e04dc12e8191bf561ea9e1bf4a6?s=256&d=identicon&r=PG', 'display_name': 'lawrensm', 'link': 'https://stackoverflow.com/users/5133575/lawrensm'}",False,0,1679604015,1679604015,75827800,74615629,CC BY-SA 4.0,<p>Upgrade to the latest version of the library (1.3.0 or greater) and this is fixed.</p>,,,false
"{'account_id': 240809, 'reputation': 3337, 'user_id': 511250, 'user_type': 'registered', 'accept_rate': 57, 'profile_image': 'https://i.sstatic.net/AIeWn.jpg?s=256', 'display_name': 'Todd Sharp', 'link': 'https://stackoverflow.com/users/511250/todd-sharp'}",False,0,1670853878,1670853878,74772266,74615629,CC BY-SA 4.0,"<p>I'm assuming that you are using React for this application (since I have seen this issue myself with React). If so, for now, you'll have to produce your production build with the following command:</p> <p><code>npm run build -- --profile</code></p> <p>To workaround an issue with the way function names are minified.</p>",,,false
"{'account_id': 43711, 'reputation': 10383, 'user_id': 127888, 'user_type': 'registered', 'accept_rate': 87, 'profile_image': 'https://i.sstatic.net/K3GiK.png?s=256', 'display_name': 'Scott Baker', 'link': 'https://stackoverflow.com/users/127888/scott-baker'}",True,1,1669735568,1669734085,74616048,74615622,CC BY-SA 4.0,"<p>I found that I need to use the ""previous state"" overload of <code>setState</code>, and use it to populate the ""missing"" properties:</p> <pre><code>parameterizedFunc(name: string, value: Moment){   if (condition){     this.setState(prevState => {...prevState, [name]:value});   } else {     this.setState(prevState => {...prevState, [name]:undefined});   } } </code></pre>",1669735568.0,,false
"{'account_id': 11735486, 'reputation': 644, 'user_id': 8589377, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/WAeIi.jpg?s=256', 'display_name': 'Lucas Arcanjo', 'link': 'https://stackoverflow.com/users/8589377/lucas-arcanjo'}",False,0,1669740115,1669740115,74617373,74615539,CC BY-SA 4.0,"<p>In browser environments, you can work with COM Ports using the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Web_Serial_API"" rel=""nofollow noreferrer"">Web Serial API</a>, but you can notice that API is experimental (not working for all browsers). If you need something more solid, maybe a web application won't meet your needs.</p> <p>The React choice itself does not change much for using the Serial API. You can check <a href=""https://stackoverflow.com/questions/68806607/using-web-serial-with-reactjs"">this question</a> to get more info about the specific API with React.</p>",,,false
"{'account_id': 1405688, 'reputation': 7305, 'user_id': 1333479, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/8ad62a25686796c42fedbe3ddedce1f1?s=256&d=identicon&r=PG', 'display_name': 'Fran&#231;ois Zaninotto', 'link': 'https://stackoverflow.com/users/1333479/fran%c3%a7ois-zaninotto'}",True,1,1669916064,1669916064,74645951,74615394,CC BY-SA 4.0,"<p>You have to watch for the actual form data using <a href=""https://react-hook-form.com/api/usewatch"" rel=""nofollow noreferrer"">react-hook-form's <code>useWatch</code> </a> or <a href=""https://marmelab.com/react-admin/Inputs.html#hiding-inputs-based-on-other-inputs"" rel=""nofollow noreferrer"">react-admin's <code><FormDataConsumer></code></a>, and use that data in your <code>disableAdd</code> prop.</p> <p>Something like (not tested):</p> <pre><code>const SetsEdit = (props:any) => (     <EditGuesser {...props}>         <InputGuesser source=""name"" />         <FormDataConsumer>              {({ formData }) => (                 <ArrayInput source=""field"">                     <SimpleFormIterator inline disableAdd={disableAdd(formData)}>                         <TextInput source=""name"" helperText={false} />                         <TextInput source=""value"" helperText={false} />                     </SimpleFormIterator>                 </ArrayInput>              )}         </FormDataConsumer>     </EditGuesser> ); </code></pre>",,,false
"{'account_id': 27093211, 'reputation': 1, 'user_id': 20640709, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/ZAdGF.png?s=256', 'display_name': 'TeamEasyManage', 'link': 'https://stackoverflow.com/users/20640709/teameasymanage'}",False,0,1669783792,1669783458,74622988,74615380,CC BY-SA 4.0,"<p>Option 1) Use some Graphql server: Apollo Layering GraphQL on top of REST Details here <a href=""https://www.apollographql.com/blog/backend/layering-graphql-on-top-of-rest/"" rel=""nofollow noreferrer"">https://www.apollographql.com/blog/backend/layering-graphql-on-top-of-rest/</a> Or Hasura has ability to setup GraphQL to fetch data from REST APIs</p> <p>Option 2) For coding yourself, Use EasyManage (Free Plan) to generate Free GraphQL APIs and REST APIs on required schema and internally customize graphql resolver to fetch data from REST API: example here:</p> <p>GrpahQL Resolver:</p> <pre><code>    @QueryMapping public List<DgproductinventoryviewTblRec> DgproductinventoryviewTblRecViewAll()       throws Exception      {        List<DgproductinventoryviewTblRec> DgproductinventoryviewTblRecList = new ArrayList<DgproductinventoryviewTblRec>();      try {            DgproductinventoryviewTblRec1Repository.findAll().forEach(DgproductinventoryviewTblRecList::add);                  } catch (Exception e) {          System.out.println(""Error: Exception:  ""+e.getMessage());          //e.printStackTrace(System.out);          throw new Exception(e.getMessage());      }      return DgproductinventoryviewTblRecList;  }  </code></pre> <p>Customize above resolver as per below to fetch from REST API (Note: Class names are different, this is code suggestion only):</p> <pre><code>        //Get from 1st Db         InventoryTblRec1Repository.findAll().forEach(InventoryTblRecList::add);          //InventoryTblRec1Repository.findByColumnName(columnVal).forEach(InventoryTblRecList::add);           //----------------------------------------------------------------------------         //Get from 2nd Db         String get_state = ""http://127.0.0.1:9085/emdbrest/inventory/ViewAll"";         WebClient webClient1 = WebClient.builder().baseUrl(get_state)         .defaultHeader(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE).build();           Mono<List<InventoryTblRec>> response =         webClient1.get()         .header(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE).retrieve()         .bodyToMono(new ParameterizedTypeReference<List<InventoryTblRec>>() {});                  List<InventoryTblRec> getListInventoryTblRec = response.block();          getListInventoryTblRec.forEach(InventoryTblRecList::add);         //---------------------------------------------------------------------------- </code></pre> <p>The code can be downloaded then customized and packaged/run as jar graphql service.</p>",1669783792.0,,false
"{'account_id': 26711879, 'reputation': 391, 'user_id': 20317091, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/237cf7e5a4431380b79f62dd97e35d97?s=256&d=identicon&r=PG', 'display_name': 'Tim', 'link': 'https://stackoverflow.com/users/20317091/tim'}",False,1,1669749848,1669749848,74619262,74615380,CC BY-SA 4.0,"<p>Generally, it is easier to make queries to a REST API in the traditional RESTful manner and GraphQl only to GraphQL. However, I'm going to assume that in your case, you have a GraphQL server running and you are trying to query a public API that is only available using REST.  There are a few different ways to do this, but both require some knowledge of the data schema which you are querying.</p> <p>If you want to do this client-side, you can make a typical REST query using axios, fetch, got, or whatever other HTTP agent you prefer and incorporate that data in the UI with your GraphQL data. <a href=""https://www.apollographql.com/docs/react/local-state/local-resolvers#querying-local-state"" rel=""nofollow noreferrer"">Apollo Client</a> offers an option to distinguish data not from the GraphQL API by including <code>@client</code> on specific fields in your query. This helps maintain the cache and keep your global schema in sync.</p> <p>If you already have a GraphQL server running, you need to define a custom schema and resolvers to match the data fetched from the REST API. Here is a very small example using <code>express-graphql</code> to create a GraphQL endpoint using the SpaceX REST API.</p> <pre><code>const {   GraphQLObjectType,   GraphQLInt,   GraphQLString,   GraphQLBoolean,   GraphQLList,   GraphQLSchema } = require('graphql');  // Launch Type const LaunchType = new GraphQLObjectType({   name: 'Launch',   fields: () => ({     flight_number: { type: GraphQLInt },     mission_name: { type: GraphQLString },     launch_year: { type: GraphQLString },     launch_date_local: { type: GraphQLString },     launch_success: { type: GraphQLBoolean }   }) });  const LaunchQuery = new GraphQLObjectType({  name: 'LaunchQueryType',  fields: {   launches: {    type: new GraphQLList(LaunchType),     resolve(parent, args) {      return axios      .get('https://api.spacexdata.com/v4/launches')      .then(res => res.data);      }     }    } });  module.exports = new GraphQLSchema({query: LaunchQuery}); </code></pre> <p>You could then incorporate this with your other resolvers to complete your GraphQL endpoint.</p>",,,false
"{'account_id': 2432151, 'reputation': 1731, 'user_id': 2122822, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RNpbU.jpg?s=256', 'display_name': 'Azzy', 'link': 'https://stackoverflow.com/users/2122822/azzy'}",False,1,1669732303,1669731426,74615478,74615375,CC BY-SA 4.0,"<p>You can try using debounce from lodash</p> <pre><code>import { debounce, filter, get, join, map } from 'lodash'; </code></pre> <p>Simpler version which uses on the setter</p> <pre><code>  const debouncedOnChange = useCallback(          debounce((event: React.ChangeEvent<HTMLInputElement>) => {             event.preventDefault();              setSearchParams(                { country: event.target.value }             );           }, 300), []); </code></pre> <p>If you need to refer other varaibles in handle search, you can useRef</p> <pre><code>const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {     event.preventDefault();      setSearchParams(       { country: event.target.value }     ); };    const searchRef = useRef(handleOnChange);   searchRef.current = handleOnChange;    const debouncedOnChange = useCallback(debounce(searchRef.current, 300), []); </code></pre> <p>you can try use <code>debouncedOnChange</code> in place of handleOnChange</p> <p>Hope it helps you</p>",1669732303.0,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",True,0,1669730815,1669730815,74615349,74615213,CC BY-SA 4.0,"<p>It's because <strong>div</strong> element does not have any of these attributes (padding or gap or etc).</p> <p>You should remove {...props} part in your code. So it would be like this:</p> <pre class=""lang-js prettyprint-override""><code>function Box (props: BoxProps) {     return <div className={clsx(         'flexbox',         props.column && 'column',         props.stretch && 'stretch',         props.padding && 'padding',         props.flex && 'flex',         props.clickable && 'clickable',         props.gap && 'gap',         props.className     )} /> } </code></pre>",,,false
"{'account_id': 1308874, 'reputation': 66, 'user_id': 1257303, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3826893e2b18a6a45b74d849a7620b7a?s=256&d=identicon&r=PG', 'display_name': 'lawrence', 'link': 'https://stackoverflow.com/users/1257303/lawrence'}",False,2,1669815185,1669733746,74615980,74615093,CC BY-SA 4.0,"<p>i found a mistake in your code ,you should pass type:success this way:</p> <pre><code>toast.show(""Hello World"",{type:""success""}) </code></pre>",1669815185.0,,false
"{'account_id': 2432151, 'reputation': 1731, 'user_id': 2122822, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RNpbU.jpg?s=256', 'display_name': 'Azzy', 'link': 'https://stackoverflow.com/users/2122822/azzy'}",False,0,1669730550,1669730550,74615301,74615028,CC BY-SA 4.0,"<p>you might want to use a ref to mouseEvent function to refer the lastest values</p> <pre><code>const onMouseDown = (e) => {     const pos = e.target.getStage().getPointerPosition();     // use functional updater     setLines(l => [       ...l,       {         tool: activeTool,         color: toolOptions.brush.color,         size: toolOptions.brush.size,         points: [pos.x, pos.y],       },     ]);   };  const onMouseDownRef = useRef(onMouseDown) onMouseDownRef.current = onMouseDown;  useImperativeHandle(     ref,     () => ({       onMouseDown: (e) => { onMouseDownRef.current(e) },     }),     [lines]   ); </code></pre> <p>If this wroks, I will provide some explanation</p>",,,false
"{'account_id': 17938727, 'reputation': 125, 'user_id': 13034524, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/0CVxM.jpg?s=256', 'display_name': 'Joca', 'link': 'https://stackoverflow.com/users/13034524/joca'}",True,0,1670332746,1670330251,74702648,74614925,CC BY-SA 4.0,<p>So I finally resolved the error. I noticed it was an error relating to typescript so I had to tackle the lines of codes pointing to the error</p> <p>Below is the correct version</p> <pre><code>function setPrinterFriendly(api) { const eGridDiv = document.querySelector<HTMLElement>('#myGrid'); eGridDiv.style.height = ''; api.setDomLayout('print'); } function setNormal(api) { const eGridDiv = document.querySelector<HTMLElement>('#myGrid'); eGridDiv.style.width = '1100px'; eGridDiv.style.height = '500px'; api.setDomLayout(null); } </code></pre>,1670332746.0,,false
"{'account_id': 24131183, 'reputation': 171, 'user_id': 18098772, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/l5uR7.jpg?s=256', 'display_name': 'Aliirezaesm921', 'link': 'https://stackoverflow.com/users/18098772/aliirezaesm921'}",False,3,1700315091,1700314384,77507114,74614922,CC BY-SA 4.0,"<p>With 'use client' whole your file become CSR If you don't want that, Use this solution:</p> <p>1.Create file named by : Carousel.tsx</p> <p>2.Write this code below:</p> <pre><code>'use client' import { Carousel } from ""react-responsive-carousel"";  export default Carousel; </code></pre> <p>3.Then in your file:</p> <pre><code> import Carousel from ./Carousel; </code></pre> <p>Now it's work on server-side and only Carousel is in CSR</p>",1700315091.0,,false
"{'account_id': 17314494, 'reputation': 1053, 'user_id': 12541301, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AAuE7mB37E13a1SzSY2JYvooBADgYREY2IcC8bw1PEaZug=k-s256', 'display_name': 'Shakil- The Coding monster', 'link': 'https://stackoverflow.com/users/12541301/shakil-the-coding-monster'}",False,0,1689810549,1689810549,76725846,74614922,CC BY-SA 4.0,"<p>For react-responsive-carousel use ""use client""</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>""use client"" import React from 'react' import { Carousel } from 'react-responsive-carousel'; import sliderImg_1 from '../images/slider/sliderImg_1.jpg'; import sliderImg_2 from '../images/slider/sliderImg_2.jpg'; import sliderImg_3 from '../images/slider/sliderImg_3.jpg'; import sliderImg_4 from '../images/slider/sliderImg_4.jpg' import Image from 'next/image';  const Banner = () => {   return (     <Carousel>                 <div>                     <Image src={sliderImg_1} alt=""slider-1"" />                     <p className=""legend"">Legend 1</p>                 </div>                 <div>                     <Image src={sliderImg_2} alt=""slider-2"" />                     <p className=""legend"">Legend 2</p>                 </div>                 <div>                     <Image src={sliderImg_3} alt=""slider-3""/>                     <p className=""legend"">Legend 3</p>                 </div>                 <div>                     <Image src={sliderImg_4} alt=""slider-4""/>                     <p className=""legend"">Legend 3</p>                 </div>             </Carousel>   ) }  export default Banner</code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 29003494, 'reputation': 1, 'user_id': 22216598, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AAcHTtc7p2B94CiudA2B_YG8k7lT0MgGv8CK0YFk_c3bk9q-=k-s256', 'display_name': 'usama ijaz', 'link': 'https://stackoverflow.com/users/22216598/usama-ijaz'}",False,-1,1689174339,1689174255,76672016,74614922,CC BY-SA 4.0,"<p>this same issue faces me so in Next Js 13 the of components write ""use Client"" word into String solve this problem</p> <p>""use client""</p> <pre><code>""use client""     import Image from 'next/image'     import ReactPlayer from 'react-player'     import { Carousel } from 'react-responsive-carousel';     import 'react-responsive-carousel/lib/styles/carousel.min.css';          export default function Home() {       return (         <main className=""flex min-h-screen flex-col items-center justify-between p-24"">         <Carousel           autoPlay           infiniteLoop           showStatus={false}                   interval={5000}         >           <div>             <Image src='/image1.jpg' width={20} height={30} />           </div>           <div>             <Image src='/image2.jpg' width={20} height={30}/>           </div>         </Carousel>    </main>       )     } </code></pre>",1689174339.0,,false
"{'account_id': 17727156, 'reputation': 1162, 'user_id': 12870601, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/2728145277262555/picture?type=large', 'display_name': 'Fu Nian Wong', 'link': 'https://stackoverflow.com/users/12870601/fu-nian-wong'}",False,3,1685080299,1685079688,76337935,74614922,CC BY-SA 4.0,"<p>Starting from Next.js 13, all the pages inside <code>app</code> directory by default will be <code>Server Component</code>.</p> <p><code>Server Component</code> does not allow the interactive and event listener (<code>onClick</code>, <code>onChange</code> and so on) & use state and lifecycle effect (<code>useState</code>, <code>useEffect</code> and so on).</p> <p>The reason why <code>react-responsive-carousel</code> cannot be used might be the library using <code>useState</code> or <code>useEffect</code> internally or onClick and onChange event listener.</p> <p>Next.js official <a href=""https://nextjs.org/docs/getting-started/react-essentials#when-to-use-server-and-client-components"" rel=""nofollow noreferrer"">documentation</a> have indicated when to use <code>Server Component</code> and <code>Client Component</code></p>",1685080299.0,,false
"{'account_id': 3808797, 'reputation': 3614, 'user_id': 3160397, 'user_type': 'registered', 'accept_rate': 33, 'profile_image': 'https://www.gravatar.com/avatar/c65ff8754c5b98b1415cb6759970c16c?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'RC_02', 'link': 'https://stackoverflow.com/users/3160397/rc-02'}",False,46,1684519007,1684519007,76291462,74614922,CC BY-SA 4.0,"<p>Adding <code>use client</code> worked for me. Here is code snippet. I am using Next.js 13 and Typescript</p> <pre><code>'use client' import React from 'react' import { Carousel } from 'react-responsive-carousel'  type Props = {}  function Banner({}: Props) {   return (     <div className='relative'>         <Carousel             autoPlay             infiniteLoop             showStatus={false}             showThumbs={false}             interval={5000}         >             <div>                 <img loading='lazy' src="""" alt='' />             </div>             <div>                 <img loading='lazy' src="""" alt='' />             </div>             <div>                 <img loading='lazy' src="""" alt='' />             </div>          </Carousel>     </div>   )  } export default Banner </code></pre>",,,false
"{'account_id': 26472564, 'reputation': 21, 'user_id': 21311008, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/ACNPEu_oa36aCYM_WTabZJVyAulIFi-TiZvCvIUkJhuV=k-s256', 'display_name': 'Rodrigo Sakae', 'link': 'https://stackoverflow.com/users/21311008/rodrigo-sakae'}",False,2,1684002828,1684002828,76244330,74614922,CC BY-SA 4.0,"<p>I just got Next.js and react-responsive-carousel to work together by inserting ""use client"" on the top of your carousel component.</p> <p>This is what yours should look like to get to work:</p> <pre><code>'use client'; import React from 'react'; import Image from 'next/image'; import { Carousel } from 'react-responsive-carousel'; import 'react-responsive-carousel/lib/styles/carousel.min.css';  export default function MyCarousel() {   return (     <Carousel       autoPlay       infiniteLoop       showStatus={false}       showIndicators={false}       showThumbs={false}       interval={5000}     >       <div>         <img src='/image1.jpg' />       </div>       <div>         <img src='/image2.jpg' />       </div>     </Carousel>   ); } </code></pre>",,,false
"{'account_id': 7571482, 'reputation': 156, 'user_id': 5745222, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ba56233c16d2d513c852da6e28a6deef?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Jimmy Nsenga', 'link': 'https://stackoverflow.com/users/5745222/jimmy-nsenga'}",False,10,1674941244,1674941244,75271013,74614922,CC BY-SA 4.0,"<p>It seems that the react component in which the Carousel component is being used should be a client component and not a server component. This is done using the directive ""use client"". In React 18, components inside in the app directory are by default server components.</p> <p>It is not clear why it is not working from a server component. Probably best create an issue on their github project <a href=""https://github.com/leandrowd/react-responsive-carousel/issues"" rel=""noreferrer"">https://github.com/leandrowd/react-responsive-carousel/issues</a></p>",,,false
"{'account_id': 3836295, 'reputation': 13172, 'user_id': 3180489, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/wUvWV.jpg?s=256', 'display_name': 'Steve G', 'link': 'https://stackoverflow.com/users/3180489/steve-g'}",True,1,1669750037,1669749324,74619165,74614890,CC BY-SA 4.0,"<p>Assuming you want to use <code>styled</code> components, you can just override the selectors. For example:</p> <pre><code>const StyledMenuItem = styled(MenuItem)<MenuItemProps>(({ theme }) => ({   ""&:hover"": {     backgroundColor: ""green"" // Hovered, non-selected item   },   ""&:first-of-type"": {     backgroundColor: ""aqua"" // Wasn't clear -- is this what you're looking to do when you say ""first""?   },   ""&.Mui-selected"": {     backgroundColor: ""red"", // Selected, but not-hovered item     ""&:hover"": {       backgroundColor: ""yellow"" // Selected and hovered item     },   } })); </code></pre> <p><em>(The question was a bit unclear to me, so I just styled all basic options.)</em></p> <p>Which produces:</p> <p><a href=""https://i.sstatic.net/frASN.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/frASN.png"" alt=""No items selected but first item is styled"" /></a></p> <p>Working CodeSandbox: <a href=""https://codesandbox.io/s/beautiful-swartz-9k6nnx?file=/demo.tsx"" rel=""nofollow noreferrer"">https://codesandbox.io/s/beautiful-swartz-9k6nnx?file=/demo.tsx</a></p> <p>As for inspecting the element to see the applied classes, in Chrome:</p> <ol> <li>Open the Select on mui.com's site.</li> <li>Right-click on the element that you want to inspect and choose ""Inspect"".</li> <li>In Chrome Dev Tools, right-click on the element and choose ""Force State"" > "":hover"" (or whatever other state you want to force).</li> </ol> <p>For example: <a href=""https://i.sstatic.net/IEtl8.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/IEtl8.jpg"" alt=""enter image description here"" /></a></p>",1669750037.0,,false
"{'account_id': 26006899, 'reputation': 15, 'user_id': 19716489, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ffa6cf8c81fd99e08798d49eace7ae02?s=256&d=identicon&r=PG', 'display_name': 'VVSC', 'link': 'https://stackoverflow.com/users/19716489/vvsc'}",False,0,1669830893,1669830893,74632163,74614886,CC BY-SA 4.0,<p>the solution  that did it for  me was downgrading to swiper@6.8.0</p>,,,false
"{'account_id': 27085076, 'reputation': 126, 'user_id': 20633709, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu2xQwpIoEUgfcUpeStF7j5okk3dbc1zCvu_YBIM=k-s256', 'display_name': 'Emre YÄ±lmaz', 'link': 'https://stackoverflow.com/users/20633709/emre-y%c4%b1lmaz'}",True,0,1669776100,1669732015,74615604,74614807,CC BY-SA 4.0,"<p>cors should be added to the backend:</p> <pre><code>npm install cors  var express = require('express') var cors = require(""cors"") var app = express() app.use(cors()) </code></pre>",1669776100.0,,false
"{'account_id': 19913716, 'reputation': 51, 'user_id': 14591228, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GhAPINJth245OAJrsCRek7PFNc-fIyFsaPGEuBHow=k-s256', 'display_name': 'Ninad Ambade', 'link': 'https://stackoverflow.com/users/14591228/ninad-ambade'}",False,0,1679466903,1679350169,75795770,74614704,CC BY-SA 4.0,"<p>I don't believe Panel is the right component to be used in that case. If you want a non-full height panel, it could be a <a href=""https://developer.microsoft.com/en-us/fabric#/controls/web/callout"" rel=""nofollow noreferrer"">Callout</a> or a <a href=""https://developer.microsoft.com/en-us/fabric#/controls/web/modal"" rel=""nofollow noreferrer"">Modal</a>.</p>",1679466903.0,,false
"{'account_id': 2432151, 'reputation': 1731, 'user_id': 2122822, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RNpbU.jpg?s=256', 'display_name': 'Azzy', 'link': 'https://stackoverflow.com/users/2122822/azzy'}",False,0,1669728213,1669728213,74614772,74614494,CC BY-SA 4.0,"<p>Few pointers</p> <p>Move this outside of the component for performance reasons, and React components should start with Capital letter interface childrenProps { children: JSX.Element; }</p> <pre><code>  //  change from index to Index   const Index = ({ children }: childrenProps) => {     return (         <>             <DesignForm />             {children}         </>     );   }; </code></pre> <p>If this is static move it outside the component, as it will be recreated in every render</p> <pre><code> const tabs = [     {       id: 'all-customers-4',       content: 'All',       accessibilityLabel: 'All customers',       panelID: 'all-customers-content-4',     },     {       id: 'accepts-marketing-4',       content: 'Accepts marketing',       panelID: 'accepts-marketing-content-4',     },     {       id: 'repeat-customers-4',       content: 'Repeat customers',       panelID: 'repeat-customers-content-4',     },     {       id: 'prospects-4',       content: 'Prospects',       panelID: 'prospects-content-4',     },   ];  </code></pre> <p>Create a component map, or something similar to this</p> <pre><code>const componentMap = {   ['all-customers-4']: DesignForm,   // ... more components can be added in the future }  const EmptyComponent = () => null;  export function NavTabs() {    const [selected, setSelected] = useState(0);      const handleTabChange = useCallback(     (selectedTabIndex) => setSelected(selectedTabIndex),     [],   );    const ChildComponent = useMemo(() => {       return componentMap[selected] ?? EmptyComponent    }, [selected])      return (     <Card>       <Tabs         tabs={tabs}         selected={selected}         onSelect={handleTabChange}         disclosureText=""More views""       >         <Card.Section title={tabs[selected].content}>           <p>Tab {selected} selected</p>           <ChildComponent />         </Card.Section>         <Card.Section children={tabs[selected].children}></Card.Section>       </Tabs>     </Card>   ); } </code></pre> <p>Hope this helps you in some way to find a good solution</p> <p>Cheers</p>",,,false
"{'account_id': 14348425, 'reputation': 52, 'user_id': 10364675, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-1CMN-q1ACJo/AAAAAAAAAAI/AAAAAAAABhc/M6RmJDjob3c/photo.jpg?sz=256', 'display_name': 'Benjamin Maine', 'link': 'https://stackoverflow.com/users/10364675/benjamin-maine'}",True,0,1669727300,1669727300,74614581,74614494,CC BY-SA 4.0,"<p>in</p> <pre><code>{       id: 'all-customers-4',       content: 'All',       accessibilityLabel: 'All customers',       panelID: 'all-customers-content-4',       children: DesignForm,     } </code></pre> <p>Your children (i.e DesignForm) is a function here you should set the children to your component instead</p> <pre><code>{       id: 'all-customers-4',       content: 'All',       accessibilityLabel: 'All customers',       panelID: 'all-customers-content-4',       children: <DesignForm/>,     } </code></pre> <p>You also could replace</p> <pre><code><Card.Section children={tabs[selected].children}></Card.Section> </code></pre> <p>by</p> <pre><code><Card.Section> {tabs[selected].children} </Card.Section> </code></pre>",,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",True,5,1669726909,1669726909,74614507,74614458,CC BY-SA 4.0,"<p>can add <code>FieldValues</code> type</p> <pre><code>import { Control, FieldValues } from ""react-hook-form"";   interface ICreateFormProps {      control:?: Control<FieldValues, CreateFaceInput>; </code></pre>",,,false
"{'account_id': 30475977, 'reputation': 1, 'user_id': 23354705, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/aa1aecb2cd76b7d7dc78baf9be1314c8?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Workata', 'link': 'https://stackoverflow.com/users/23354705/workata'}",False,0,1707222494,1707222494,77947685,74614202,CC BY-SA 4.0,"<pre><code>  const modalIsClosed = document.getElementsByClassName(""MuiDialog-root"").length === 0;   useEffect(() => {      if (modalIsClosed === true) {        // do something if closed      }    }, [modalIsClosed]); </code></pre>",,,false
"{'account_id': 27085076, 'reputation': 126, 'user_id': 20633709, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu2xQwpIoEUgfcUpeStF7j5okk3dbc1zCvu_YBIM=k-s256', 'display_name': 'Emre YÄ±lmaz', 'link': 'https://stackoverflow.com/users/20633709/emre-y%c4%b1lmaz'}",False,0,1670231795,1669729157,74614998,74614202,CC BY-SA 4.0,"<p>You can try this way:</p> <pre class=""lang-js prettyprint-override""><code>const handleClose = () => setOpen(false);  --- const handleClose = () => {     //...some process     setOpen(false) }; </code></pre>",1670231795.0,,false
"{'account_id': 24297219, 'reputation': 144, 'user_id': 18241250, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJxj92fWskb92mCr8IaNUcLYngg9g0uj8qfJTzP4=k-s256', 'display_name': 'Hardik prajapati', 'link': 'https://stackoverflow.com/users/18241250/hardik-prajapati'}",False,1,1669727576,1669727576,74614644,74614092,CC BY-SA 4.0,"<p>post your use effect code incase you forgot to add empty array dependancy inside useEffect so that time useEffect code re reRender every time when state change E.g</p> <p>useEffect(() => {</p> <p>},[])</p> <p>//inside your code only call one time when component first time rendered</p>",,,false
"{'account_id': 13960732, 'reputation': 1034, 'user_id': 12003966, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/1717498508364537/picture?type=large', 'display_name': 'Alexandru DuDu', 'link': 'https://stackoverflow.com/users/12003966/alexandru-dudu'}",False,0,1669726904,1669726904,74614505,74614087,CC BY-SA 4.0,"<pre><code>req.body.list.pop() res.status(200).json({""id"":new Date(),""toDo"":req.body.list,""status"":false}) </code></pre> <p>This will remove the last element in the list</p>",,,false
"{'account_id': 16566797, 'reputation': 101, 'user_id': 11971137, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/7551dc48a18f04a29f51f14b484af120?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'arvir', 'link': 'https://stackoverflow.com/users/11971137/arvir'}",True,2,1669725447,1669725447,74614214,74614063,CC BY-SA 4.0,"<p>This is because your login function is a curried function and hence if you wish to execute it directly you would need to do <code>login(email, password)()</code></p> <p>Your login function (defined in auth.tsx) <em>seems to</em> look like a thunk/saga in which case you should be dispatching the login function call from the <code>Login</code> component (defined in Login.tsx) using the MapDispatchToProps callback for the connect HOC.</p>",,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",True,0,1669726427,1669726427,74614412,74614060,CC BY-SA 4.0,"<p>store the additive id in a state and use it in the modal</p> <pre><code> const [additiveId, setAdditiveId] = useState()    <button      onClick={() => {         setShowModal(!showModal);         setAdditiveId(additive._id)         console.log(additive._id);     }}        >         Delete   </button>    <button       className='bg-red-500 text-white active:bg-red-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150'       type='button'       onClick={() => {          deleteAdditive(additiveId);          setShowModal(!showModal);          console.log(additiveId);        }}      >         Confirm      </button> </code></pre>",,,false
"{'account_id': 13802219, 'reputation': 193, 'user_id': 20293448, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/7250da99d8c9399abfd5b1dca37fef1c?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'J&#233;r&#233;my Rippert', 'link': 'https://stackoverflow.com/users/20293448/j%c3%a9r%c3%a9my-rippert'}",True,1,1669733869,1669733869,74616002,74614052,CC BY-SA 4.0,"<p>I will try to answer your questions in order:</p> <h3>How can I use nested states</h3> <p>If I understand correctly, your question can be reworded as ""How can I use nested properties in state?"", so that you have an object which can contain arrays and other objects. You can use objects in state without doing anything special, like <code>const [obj, setObj] = useState(whatever)</code>. For instance, let's say you have a todo list app, you can simply do</p> <pre><code>const [obj, setObj] = useState({ todos: [] });  return <button onClick={() => setObj({ todos: [...obj.todos, obj.todos.lentgh] }) /> </code></pre> <p>With this, everytime you click on the button, the length of the current <code>obj.todos</code> will be appended to <code>todos</code>, so <code>obj</code> will become <code>{  todos: [0] }</code>, then <code>{ todos: [0, 1] }</code> etc...</p> <p>The key here is to destructure some properties of the object you're updating.</p> <h3>Can this be done with functions in classes</h3> <p>Absolutely</p> <h3>Are you on the right track</h3> <p>Probably. Basically, to make <code>useState</code> work with an array (let's call it <code>myArray</code>, that would be initialize as <code>const [myArray, setMyArray] = useState([])</code>, you will generally need a combination of:</p> <ul> <li>to display content, <code>myArray.map(el => <ComponentWithElementAsProps el={el} /></code></li> <li>to remove elements, <code>setMyArray(myArray.filter(el => condition(el))</code>, where the condition allows you to know what to remove</li> <li>to append to the array, <code>setMyArray([...myArray, newElement])</code></li> <li>to edit the array <code>setMyArray(myArray.map(el => condition(el) ? transformation(el) : el))</code> where <code>condition</code> allows you to look up the element to update and <code>transformation</code> is the transformation applied to it</li> </ul>",,,false
"{'account_id': 27085076, 'reputation': 126, 'user_id': 20633709, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu2xQwpIoEUgfcUpeStF7j5okk3dbc1zCvu_YBIM=k-s256', 'display_name': 'Emre YÄ±lmaz', 'link': 'https://stackoverflow.com/users/20633709/emre-y%c4%b1lmaz'}",True,0,1669736251,1669734144,74616063,74613995,CC BY-SA 4.0,<p>try it like this <code>title={data?.title}</code></p>,1669736251.0,,false
"{'account_id': 12678161, 'reputation': 366, 'user_id': 9212995, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/tl0Dm.jpg?s=256', 'display_name': 'Namwanza Ronald', 'link': 'https://stackoverflow.com/users/9212995/namwanza-ronald'}",False,0,1669725386,1669724987,74614123,74613951,CC BY-SA 4.0,<p>The problem could easily be you are being blocked to that website by your ISP's or Company's firewall/proxy. Using the above method is quicker and easier but it's also insecure as it doesnt verify you are connected to the right website. To check if you are being blocked simply go to registry.npmjs.org in your browser. You should get some text back.</p> <p><strong>Option 1</strong></p> <p>Try this:</p> <pre><code>npm config set registry http://registry.npmjs.org/ </code></pre> <p>so that npm requests for http url instead of https.</p> <p>and then try the same <code>npx create-react-app my-app</code> command.</p> <p><strong>Option 2</strong></p> <p>You may also want to check your NPM proxy settings and perhaps remove it.</p> <pre><code>npm config get proxy npm config rm proxy npm config rm https-proxy </code></pre>,1669725386.0,,false
"{'account_id': 25319667, 'reputation': 15, 'user_id': 19141133, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/901ead18d24086871dc3af8ebfce921c?s=256&d=identicon&r=PG', 'display_name': 'Nishant', 'link': 'https://stackoverflow.com/users/19141133/nishant'}",False,1,1669724787,1669724753,74614067,74613951,CC BY-SA 4.0,<p>Firstly  Check your network  connection and then</p> <pre><code>npm cache clean --force  npm create react-app  </code></pre>,1669724787.0,,false
"{'account_id': 22559340, 'reputation': 16, 'user_id': 16747185, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJz8fZkCKmc57rOduvKlejDnT9qcW1WXoghbv-bUKQ=k-s256', 'display_name': 'Gaurav Nepal', 'link': 'https://stackoverflow.com/users/16747185/gaurav-nepal'}",True,0,1669724925,1669724925,74614106,74613933,CC BY-SA 4.0,"<p>Firstly, if I undestand your question, you want a side navbar which allows you to navigate to different pages with your react app. If so:</p> <pre><code> <div className=""nav-menu"">                     {menuItems.map(({ text, icon }) => (                         <a                  <--- The problem is here                             className={  ""menu-item""}                             href=""#""                         >                             <img className=""menu-item-icon"" src={icon} alt="""" srcset="""" />                             { <p>{text}</p>}                         </a>                     ))}                 </div> </code></pre> <p>You are using anchor tag which will redirect you out of react router. You should use Link tag which allows to redirect to different pages within your react app.</p> <pre><code> const menuItems = [     {         text: ""Dashboard"",         icon: ""icons/grid.svg"",         navLink:'/dashboard'     },     {         text: ""Admin Profile"",         icon: ""icons/user.svg"",         navLink:'/admin'     },...]     <div className=""nav-menu"">        {menuItems.map(({ text, icon, navlink }) => (              <Link                              className={  ""menu-item""}              to={navlink}              >                   <img className=""menu-item-icon"" src={icon} alt=""""                     srcset=""""                      />                    { <p>{text}</p>}              </Link>             ))}      </div> </code></pre> <p>Likewise you need to step up your App.js with BrowserRouter, Routes and Route to move between pages.</p>",,,false
"{'account_id': 5000660, 'reputation': 709, 'user_id': 4019804, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/f2h9C.jpg?s=256', 'display_name': 'WiXSL', 'link': 'https://stackoverflow.com/users/4019804/wixsl'}",True,1,1669817200,1669817200,74629111,74613843,CC BY-SA 4.0,"<p><code>SimpleFormIterator</code> is meant to be used as an iterator of a parent input, such as the <code>ArrayInput</code>.</p> <p>Then you should set the <code>defaultValue</code> of the parent input to have a record on mount.</p> <pre><code>const backlinksDefaultValue = [     {         date: '2012-08-22T00:00:00.000Z',         url: 'https://foo.bar.com/lorem/ipsum',     }, ];  <ArrayInput     source=""backlinks""     defaultValue={backlinksDefaultValue} >     <SimpleFormIterator>         <DateInput source=""date"" />         <TextInput source=""url"" />     </SimpleFormIterator> </ArrayInput> </code></pre> <p>You can check the usage of the <code>ArrayInput</code> in combination with the <code>SimpleFormIterator</code> in the simple project demo: <a href=""https://stackblitz.com/github/marmelab/react-admin/tree/master/examples/simple?file=README.md"" rel=""nofollow noreferrer"">https://stackblitz.com/github/marmelab/react-admin/tree/master/examples/simple?file=README.md</a></p>",,,false
"{'account_id': 1838668, 'reputation': 41, 'user_id': 1668535, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/51dc65ddbfe55bd952ea8e54073f7e5c?s=256&d=identicon&r=PG', 'display_name': 'user1668535', 'link': 'https://stackoverflow.com/users/1668535/user1668535'}",False,1,1679740846,1679740429,75841086,74613683,CC BY-SA 4.0,"<p>I suggest you code <code>set</code> in <code>useEffect</code>. that works for my case... I added my test code below.</p> <pre><code>    import { set, get } from 'idb-keyval';     import { useEffect, useState } from 'react';      export default function Main() {          const [member, setMember] = useState([]);         const [member2, setMember2] = useState([]);           useEffect(() => {              set('member', {                 ""spec"": [                     { name: 'bar', age: 20 },                     { name: 'dall', age: 32 },                     { name: 'hong', age: 47 },                 ],                 ""spec2"": [                     { name: 'bar2', age: 20 },                     { name: 'dall2', age: 32 },                     { name: 'hong2', age: 47 },                 ],             }).then(() => {                 get('member').then(user => {                      setMember(user.spec)                      setMember2(user.spec2)                  });              });         }, []);          return (             <div>                 <h1>IdbTest</h1>                 {member.map((item, index) => {                     return <div key={index}>                         <p>{item.name}</p>                         <p>{item.age}</p>                     </div>                 })}                 {member2.map((item, index) => {                     return <div key={index}>                         <p>{item.name}</p>                         <p>{item.age}</p>                     </div>                 })}             </div>         )     } </code></pre>",1679740846.0,,false
"{'account_id': 21400615, 'reputation': 41, 'user_id': 15762829, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/353ec2594214cb18c08bb43d68a00195?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'smilerz', 'link': 'https://stackoverflow.com/users/15762829/smilerz'}",False,1,1696865847,1696865847,77260143,74613541,CC BY-SA 4.0,"<p>You can make the context for docker builds always be the current project by updating your VS settings.</p> <p>In your your VisualStudio settings (C:\Users<username>\AppData\Roaming\Code\User\settings.json by default) you can change the default:</p> <pre><code>""docker.commands.build"": ""${containerCommand} build --pull --rm -f \""${dockerfile}\"" -t ${tag} \""${context}\"""", </code></pre> <p>to</p> <pre><code>""docker.commands.build"": ""${containerCommand} build --pull --rm -f \""${dockerfile}\"" -t ${tag} \""${workspaceFolder}\"""", </code></pre>",,,false
"{'account_id': 6305094, 'reputation': 863, 'user_id': 4898395, 'user_type': 'registered', 'accept_rate': 85, 'profile_image': 'https://lh6.googleusercontent.com/-MLV5ViPfSbI/AAAAAAAAAAI/AAAAAAAAAL8/2h5bfWhym-M/photo.jpg?sz=256', 'display_name': 'Niranjan godbole', 'link': 'https://stackoverflow.com/users/4898395/niranjan-godbole'}",False,1,1669722731,1669722731,74613672,74613541,CC BY-SA 4.0,<p>I changed to COPY ./my-app/package.json /my-app and it worked fine.</p>,,,false
"{'account_id': 26877426, 'reputation': 361, 'user_id': 20458458, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/QTyWi.jpg?s=256', 'display_name': 'kuuhak-u', 'link': 'https://stackoverflow.com/users/20458458/kuuhak-u'}",False,0,1669723490,1669723490,74613808,74613510,CC BY-SA 4.0,"<p>You can use cutom tooltips to write your own logic to show percentage Working example if u want to take a look - <a href=""https://codesandbox.io/s/epic-cache-kx8ze2?file=/src/App.js"" rel=""nofollow noreferrer"">https://codesandbox.io/s/epic-cache-kx8ze2?file=/src/App.js</a></p> <pre><code> <BarChart   width={500}   height={300}   data={data}   margin={{     top: 5,     right: 30,     left: 20,     bottom: 5   }} >   <CartesianGrid strokeDasharray=""3 3"" />   <XAxis dataKey=""name"" />   <YAxis />   <Tooltip content={<CustomTooltip />} />   <Legend />   <Bar dataKey=""amt"" barSize={20} fill=""#8884d8"" /> </BarChart> </code></pre> <p>Custom tooltip</p> <pre><code>const CustomTooltip = ({ active, payload, label }: any) => {    if (active && payload && payload.length) {     return (       <div className=""custom-tooltip"">         <p className=""label"">{`${label} : ${payload[0].value}`}</p>     <p> percentage :  {percentage (payload)}</p>       </div>     );   }    return null; }; </code></pre> <p>the function to calculate the percentage</p> <pre><code>const percentage = (data)=>{   console.log(data[0].value);              const total = 10000        const calcualtion = (data[0].value/total) * 100 // total to be replaced by the totla value       return calcualtion       } </code></pre> <p>hope it helps</p>",,,false
"{'account_id': 21732783, 'reputation': 29, 'user_id': 16041272, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Leflq.jpg?s=256', 'display_name': 'rehan.ankalgi', 'link': 'https://stackoverflow.com/users/16041272/rehan-ankalgi'}",False,1,1669722863,1669722863,74613697,74613484,CC BY-SA 4.0,<p>check these lines of code in backend/router.js</p> <pre><code>const nftIds = require('../controller/nftIds'); const nftData = require('../controller/nftIds'); </code></pre> <p>you are requiring the same controllers for two different purposes i guess</p>,,,false
"{'account_id': 21732783, 'reputation': 29, 'user_id': 16041272, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Leflq.jpg?s=256', 'display_name': 'rehan.ankalgi', 'link': 'https://stackoverflow.com/users/16041272/rehan-ankalgi'}",False,0,1669722529,1669722529,74613633,74613484,CC BY-SA 4.0,"<p>You need to add the backend url ""http://localhost:4040"" as a proxy to the 'package.json' file in frontend folder i.e. React project folder</p> <pre><code>// package.json proxy: ""http://localhost:4040"" </code></pre>",,,false
"{'account_id': 25270187, 'reputation': 705, 'user_id': 19099618, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/4fGwT.jpg?s=256', 'display_name': 'todevv', 'link': 'https://stackoverflow.com/users/19099618/todevv'}",False,0,1669721784,1669721784,74613487,74613414,CC BY-SA 4.0,"<p>From the MUI <a href=""https://mui.com/material-ui/getting-started/installation/"" rel=""nofollow noreferrer"">docs</a> they use Emotion as its default styling engine. If you want you can configure as default styling engine <code>styled-components</code>, but i think is not possible to use it without <code>emotion</code> or <code>styled-components</code></p>",,,false
"{'account_id': 7813389, 'reputation': 46, 'user_id': 5908910, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-1A8CPcrPG0o/AAAAAAAAAAI/AAAAAAAAAMk/MbETDzf8nYI/photo.jpg?sz=256', 'display_name': 'Joshua  Morales', 'link': 'https://stackoverflow.com/users/5908910/joshua-morales'}",False,0,1727801667,1727800562,79044013,74613349,CC BY-SA 4.0,<p>You donât need to use useMemo unless there are massive amount of operations that take at least half a second to finish. useSelector performs a shallow equality check on what is returned by the selector function and will only trigger a component re-render when there is a difference in the compared primitive values or object references.</p>,1727801667.0,,false
"{'account_id': 23083483, 'reputation': 13, 'user_id': 17214432, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gi6gJrcau_vbFE2oomxDwsblFYZwl5FsULfWFHa=k-s256', 'display_name': 'Doge Fromage', 'link': 'https://stackoverflow.com/users/17214432/doge-fromage'}",False,0,1673893989,1673893989,75138330,74613349,CC BY-SA 4.0,"<p>I think @Wraithys answer is not correct here. I'm pretty sure, React will not compute the component with the useSelector if the state of the selector didn't change <strong>and the selector also didn't change.</strong> This means that you must memoize the selector too, otherwise React and Redux will not be able to optimize the rendering. I think you may have to also memoize the component using React.memo() for it to work fully. Also, it may be best to always state your selectors in a file so you don't have to memoize them, since they are constant.</p>",,,false
"{'account_id': 21820209, 'reputation': 2045, 'user_id': 16116506, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/E1zGO.png?s=256', 'display_name': 'Wraithy', 'link': 'https://stackoverflow.com/users/16116506/wraithy'}",True,1,1669724558,1669724558,74614018,74613349,CC BY-SA 4.0,"<p><code>useMemo</code> is for high cost computation, you dont want to run each render. Like</p> <pre><code>const something = useMemo(()=> megaBigArray.reduce((acc,i)=>acc*i,0), [megaBigArray]) </code></pre> <p>or something like that. You only calculate that variable, if <code>megaBigArray</code>change.</p> <p>In your case, that code will be run every render anyways, but <code>useSelector</code> should trigger render only, when part of store you are selecting change. So you should be good without it.</p>",,,false
"{'account_id': 5163961, 'reputation': 318, 'user_id': 4134662, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/WKvA8.jpg?s=256', 'display_name': 'Alvin', 'link': 'https://stackoverflow.com/users/4134662/alvin'}",False,1,1669724515,1669724515,74614008,74613349,CC BY-SA 4.0,"<p>Let me talk about the conclusion first, it's totally  useless.</p> <p>why? because <code>metricsState.myMetrics</code> is just a <code>value-taking</code> process and does not involve expensive calculations.</p> <p>but <code>useMemo</code> itself consumes a certain amount of calculation.</p> <p>so I think that belongs to premature optimization</p>",,,false
"{'account_id': 24109555, 'reputation': 190, 'user_id': 18080318, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/006cf1e62220eba7b1685ace4a26907f?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'oykn', 'link': 'https://stackoverflow.com/users/18080318/oykn'}",True,0,1669721629,1669721629,74613459,74613290,CC BY-SA 4.0,"<p>you can check console.log(typeof element.icon)</p> <blockquote> <p>const quickOptions = [ { title: ""Jouw consulent"", icon: 'personOutline'  }, ];</p> </blockquote> <pre><code><IonIcon icon={element.icon} size=""large"" /> </code></pre> <p>if the icon type here is {string}, that's why it doesn't work <br/> try it in quickOptions ,  icon: personOutline or icon: 'personOutline'</p>",,,false
"{'account_id': 938249, 'reputation': 1704, 'user_id': 966787, 'user_type': 'registered', 'accept_rate': 88, 'profile_image': 'https://i.sstatic.net/XOTCi.jpg?s=256', 'display_name': 'NavinRaj Pandey', 'link': 'https://stackoverflow.com/users/966787/navinraj-pandey'}",False,0,1671446120,1671446120,74849296,74613220,CC BY-SA 4.0,<p>I uninstalled the existing react-sortablejs npm package and installed it exaclty of version 6.0.0.  That fixed the issue</p>,,,false
"{'account_id': 23353132, 'reputation': 159, 'user_id': 17426448, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/yhqe4.jpg?s=256', 'display_name': 'rafiulah', 'link': 'https://stackoverflow.com/users/17426448/rafiulah'}",False,1,1669725704,1669725704,74614273,74613167,CC BY-SA 4.0,"<p>I am using <code>yarn add react-native-autocomplete-dropdown</code> view complete Docs on <a href=""https://www.npmjs.com/package/react-native-autocomplete-dropdown"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/react-native-autocomplete-dropdown</a> <br>Example <br>https://snack.expo.dev/@onmotion/react-native-autocomplete-dropdown</p>",,,false
"{'account_id': 21058673, 'reputation': 72, 'user_id': 15477500, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/WowFj.jpg?s=256', 'display_name': 'korayaggul', 'link': 'https://stackoverflow.com/users/15477500/korayaggul'}",False,0,1669721342,1669721342,74613390,74613081,CC BY-SA 4.0,"<p>Does <code>playsinline</code> attribute help?</p> <p>Here's what I have:</p> <pre><code><video autoplay loop muted playsinline class=""video-background "">   <source src=""videos/intro-video3.mp4"" type=""video/mp4""> </video> </code></pre>",,,false
"{'account_id': 25270187, 'reputation': 705, 'user_id': 19099618, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/4fGwT.jpg?s=256', 'display_name': 'todevv', 'link': 'https://stackoverflow.com/users/19099618/todevv'}",True,1,1669721859,1669720791,74613256,74613034,CC BY-SA 4.0,"<p>Using the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set"" rel=""nofollow noreferrer"">Set</a> constructor and the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax"" rel=""nofollow noreferrer"">spread syntax</a>:</p> <pre><code>uniq = [...new Set(array)]; </code></pre> <pre class=""lang-js prettyprint-override""><code> useEffect(() => {         const recentlyMovies = [...new Set(JSON.parse(localStorage.getItem('react-movie-app-favourites')))];                  if (recentlyMovies) {             setRecentlyViewed(recentlyMovies.slice(0,5));         }     }, []);  </code></pre>",1669721859.0,,false
"{'account_id': 7426710, 'reputation': 49809, 'user_id': 5648954, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2noo3.jpg?s=256', 'display_name': 'Nick Parsons', 'link': 'https://stackoverflow.com/users/5648954/nick-parsons'}",True,1,1669722359,1669722359,74613593,74612892,CC BY-SA 4.0,"<p>To access <code>setAgentData</code> within <code>Toggle</code>, you need to pass it through as a prop. ag-grid allows you to specify the additional parameters to pass through in the <code>columnDefs</code> array of objects by adding the <code>cellRendererParams</code> property to your objects. As <code>setAgentData</code> is only available to you within your <code>Grid</code> component and not ""Column Definition Component"" file, you can <code>.map()</code> your array of objects like so to add the <code>cellRendererParams</code> to pass through the function:</p> <pre class=""lang-js prettyprint-override""><code>const Grid = (props) => {   const columnDefsWithProps = useMemo(() =>  {     return columnDefs.map(col => col.cellRendererFramework === Toggle       ? {...col, cellRendererParams: {setAgentData: props.setAgentData}}       : col     );   }, [props.setAgentData]);      return (     <Grid       columnDefs={columnDefsWithProps}       records={props.agentData}     />   ); };  export default Grid; </code></pre> <p>I've wrapped the above in a <code>useMemo()</code> to avoid rerunning the map on each rerender of <code>Grid</code>. If you have many grid items that you need to pass this to you can change the condition in the <code>.map()</code>. You may also need to pass through other props such as <code>agentData</code> if that is not available currently.</p>",,,false
"{'account_id': 5784105, 'reputation': 440, 'user_id': 4563919, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/u7UoX.jpg?s=256', 'display_name': 'Taimoor Tahir', 'link': 'https://stackoverflow.com/users/4563919/taimoor-tahir'}",False,0,1669722727,1669722727,74613671,74612853,CC BY-SA 4.0,<p>Try updating the library package. Its current version is: v9.32.4</p> <pre><code>npm update @react-three/drei npm install </code></pre>,,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",True,0,1669721343,1669721343,74613391,74612787,CC BY-SA 4.0,"<p>Hope it helps:</p> <pre class=""lang-js prettyprint-override""><code>const onChangeFile = (e) => {     var new_zip = new JSZip();     let folderName = """";     new_zip.loadAsync(e.target.files[0]).then(function (zip) {       zip?.forEach((entry) => {         const entryParts = entry.split(""/"");         if(entryParts[entryParts.length - 1] === ""__init__.py"") {           folderName = entryParts.slice(0, entryParts.length - 1).join(""/"");         }       });       zip?.folder(folderName)?.file(""__init__.py"")?.async(""string"").then(function (data) {         let newData = `{${data}}`.replaceAll(""="", "":"");         newData = newData.replace(/([{,])(\s*)([A-Za-z0-9_\-]+?)\s*:/g, '$1""$3"":');         const jsonData = JSON.parse(newData)         console.log(jsonData);       });     });   }; </code></pre>",,,false
"{'account_id': 26506001, 'reputation': 2845, 'user_id': 20142156, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/HTDRV.jpg?s=256', 'display_name': 'Dhaval Gajjar', 'link': 'https://stackoverflow.com/users/20142156/dhaval-gajjar'}",False,1,1669971906,1669971906,74653221,74612710,CC BY-SA 4.0,"<p>2 Issues with your code.</p> <ol> <li>As @Nick said you are using the variable as an array and from useMemo, you returning a single element not an array [].</li> <li>Also Don't use document.querySelector in React. You should be using <code>useRef</code>.</li> </ol> <p>Following is the sample code which solves 2 issues and it works.</p> <pre><code>import { useMemo, useRef, useState } from ""react"";  export default function App() {   const ref = useRef();   const [nameList, setNameList] = useState([""a"", ""b"", ""r"", ""e""]);    const sortedList = useMemo(() => {     console.log([...nameList].sort());     return [...nameList].sort();   }, [nameList]);    function addLetter(e) {     const letter = ref.current.value;     setNameList([...nameList, letter]);   }    return (     <>       <div>Unsorted: {nameList.join("", "")}</div>       <div>Unsorted: {sortedList.join("", "")}</div>       <input ref={ref} type=""text"" id=""letter"" />       <button onClick={addLetter}>Add Name</button>     </>   ); } </code></pre>",,,false
"{'account_id': 24109555, 'reputation': 190, 'user_id': 18080318, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/006cf1e62220eba7b1685ace4a26907f?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'oykn', 'link': 'https://stackoverflow.com/users/18080318/oykn'}",False,0,1669720662,1669720662,74613231,74612681,CC BY-SA 4.0,"<p>you have a layout. Here you will use the flex structure. I'm using tailwind, you can edit your css from here</p> <pre><code>return ( <div className=""flex""> <SideNav/> <div className='w-full flex-col'> <Header/> <Routes> <Route path=""/"" element = {<homePage/>} /> <Route path=""/"" element = {<Page2/>} /> .... </Routes> </div> </div> </code></pre> <p>and Sidenav</p> <pre><code> return (     <div className='h-screen'> Sidebar </div>   ) </code></pre> <p>App</p> <pre><code>return (   <div>     <Layout/>   </div> ); </code></pre> <p>You can get the layout you want in this way. ( tailwind is the css equivalent, you can create and add the corresponding css yourself )</p>",,,false
"{'account_id': 8632300, 'reputation': 100700, 'user_id': 6463558, 'user_type': 'registered', 'accept_rate': 48, 'profile_image': 'https://i.sstatic.net/g22sX.jpg?s=256', 'display_name': 'Lin Du', 'link': 'https://stackoverflow.com/users/6463558/lin-du'}",True,1,1669795617,1669795617,74624581,74612677,CC BY-SA 4.0,"<p>You should use <code>ItemsManagerPageHome</code> component as a descendant component of the <code>ItemProvider</code> component. So that you can <code>useContext(ItemContext)</code> to get the context value from <code>ItemContext.Provider</code>.</p> <p>Besides, I saw you validate that <code>useItems</code> must be used in <code>ItemsProvider</code>,  but the if condition always is <code>false</code> because the <code>defaultContext</code> is an array and it's always a truth value. So, your validation doesn't work. You can use a <code>null</code> value as the default context.</p> <p>The correct way is:</p> <p><code>context.tsx</code>:</p> <pre><code>import { createContext, useMemo, useReducer } from 'react'; import * as React from 'react';  type ItemProviderProps = any; type ItemsActionTypes = any; type ItemsState = any;  export const GET_ITEMS = 'GET_ITEMS';  export const itemsInitialState: ItemsState = {   items: [], };  export const itemsReducer = (state: ItemsState, action: ItemsActionTypes) => {   const { type, payload } = action;    switch (type) {     case GET_ITEMS:       return {         ...state,         items: payload.items,       };      default:       throw new Error(`Unsupported action type: ${type}`);   } };  const ItemContext = createContext(null);  const ItemProvider = ({ children }: ItemProviderProps) => {   const [state, dispatch] = useReducer(itemsReducer, itemsInitialState);   const store = useMemo(() => [state, dispatch], [state]);   return <ItemContext.Provider value={store}>{children}</ItemContext.Provider>; };  export { ItemContext, ItemProvider }; </code></pre> <p><code>hooks.ts</code>:</p> <pre><code>import { useCallback, useContext, useState } from 'react'; import { GET_ITEMS, ItemContext } from './context';  type ItemType = any;  const fetchItemsBatch = (): Promise<{ items: ItemType[] }> =>   new Promise((resolve) =>     setTimeout(() => resolve({ items: [1, 2, 3] }), 1_000)   );  export const useItems = () => {   const context = useContext(ItemContext);   if (!context) {     throw new Error(`useItems must be used within a ItemsProvider`);   }   const [state, dispatch] = context;    const handleSearch = useCallback(async (event: React.SyntheticEvent) => {     event.preventDefault();     const { items } = await fetchItemsBatch();     if (items) {       if (typeof dispatch === 'function') {         dispatch({ type: GET_ITEMS, payload: { items } });       }     }   }, []);    return {     state,     dispatch,     handleSearch,   }; }; </code></pre> <p><code>ItemsManagerPageHome.tsx</code>:</p> <pre><code>import React = require('react'); import { useItems } from './hooks';  export function ItemsManagerPageHome() {   const { handleSearch, state } = useItems();   console.log('state: ', state);    return <input onClick={handleSearch} type=""button"" value=""search"" />; } </code></pre> <p><code>App.tsx</code>:</p> <pre><code>import * as React from 'react'; import { ItemProvider } from './context'; import { ItemsManagerPageHome } from './ItemsManagerPageHome'; import './style.css';  export default function App() {   return (     <div>       <ItemProvider>         <ItemsManagerPageHome />       </ItemProvider>     </div>   ); } </code></pre> <p>Demo: <a href=""https://stackblitz.com/edit/react-ts-tjlo7e?file=App.tsx"" rel=""nofollow noreferrer"">stackblitz</a></p> <p>Click the ""search"" button and see the logs in the console.</p>",,,false
"{'account_id': 9306921, 'reputation': 8387, 'user_id': 6910253, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/iVLF2ukj.png?s=256', 'display_name': 'Badacadabra', 'link': 'https://stackoverflow.com/users/6910253/badacadabra'}",False,2,1672352837,1672352837,74956573,74612665,CC BY-SA 4.0,"<p>By default, gradients are horizontal. If you want a vertical gradient instead, you have to set <code>fill.gradient.type</code> like so:</p> <pre class=""lang-js prettyprint-override""><code>fill: {   gradient: {     type: 'vertical'   } } </code></pre> <p>Then you have to play with <code>fill.gradient.colorStops</code>, knowing that <strong>these stops do not correspond to actual values</strong>: <a href=""https://github.com/apexcharts/apexcharts.js/issues/2125"" rel=""nofollow noreferrer"">How create chart of temperature with gradient? Â· Issue #2125 Â· apexcharts/apexcharts.js Â· GitHub</a></p> <p>It seems the best thing you can do for now is something like that:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>let options = {   chart: {     type: 'line',     height: 350   },   series: [     {       name: 'Series',       data: [5, 30, 60, 100, 60, 30, 5]     }   ],   xaxis: {     categories: ['01 Jan', '02 Jan', '03 Jan', '04 Jan', '05 Jan', '06 Jan', '07 Jan']   },   stroke: {     curve: 'smooth'   },   fill: {     type: 'gradient',     gradient: {       type: 'vertical',       colorStops: [         {           offset: 0,           color: 'red'         },         {           offset: 25,           color: 'yellow'         },         {           offset: 50,           color: 'blue'         }       ]     }   },   tooltip: {     enabled: false   } };  let chart = new ApexCharts(document.querySelector('#chart'), options); chart.render();</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdn.jsdelivr.net/npm/apexcharts""></script>  <div id=""chart""></div></code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 27178368, 'reputation': 64, 'user_id': 20714031, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AEdFTp6L7xFY97T1h6OuJc-Xnuf2hNNybCetvzq9alasdA=k-s256', 'display_name': 'Shlok Jadeja', 'link': 'https://stackoverflow.com/users/20714031/shlok-jadeja'}",False,0,1670504928,1670504928,74730789,74612650,CC BY-SA 4.0,"<p>In GridView.js file Instead Of this ,</p> <pre><code> const rowKeyGetter = (row) => {     console.log(""DataGet: "", row);      return row.id; }  return <DataGrid columns={columns} rows={countries} rowKeyGetter={rowKeyGetter} />; </code></pre> <p>You should try this:</p> <pre><code> const [rows, setRows] = useState(initialRows);  return <DataGrid columns={columns} rows={rows} onRowsChange={setRows} />; </code></pre>",,,false
"{'account_id': 25270187, 'reputation': 705, 'user_id': 19099618, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/4fGwT.jpg?s=256', 'display_name': 'todevv', 'link': 'https://stackoverflow.com/users/19099618/todevv'}",False,0,1669721542,1669721542,74613435,74612515,CC BY-SA 4.0,"<p>If you receive your items list from an <code>api</code>, instead of <code>window.location.reload()</code>, fetch the item list again.</p>",,,false
"{'account_id': 18508059, 'reputation': 923, 'user_id': 13483939, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/3WOJz.jpg?s=256', 'display_name': 'Shubham Waje', 'link': 'https://stackoverflow.com/users/13483939/shubham-waje'}",False,0,1669717975,1669717493,74612548,74612380,CC BY-SA 4.0,"<p>On line <code>113</code> of your <code>post-slice.js</code> file, inside the <code>selectPostById</code> function, you are doing <code>state.posts.posts.find()</code>. You are accessing <code>posts</code> twice, I believe.</p> <pre class=""lang-js prettyprint-override""><code>export const selectPostById = (state, postId) =>{     // only access state.posts     state.posts.find(post => post.id === postId)     } </code></pre> <p>Also above that function you are accessing state via <code>stat.post.posts</code> it should be <code>state.posts</code>.</p> <pre class=""lang-js prettyprint-override""><code>// above selectPostById function  export const selectAllPosts = (state) =>state.posts; export const getPostStatus = (state) =>state.status; export const getPostError = (state) =>state.error; </code></pre> <p>See if this is the issue :)</p>",1669717975.0,,false
"{'account_id': 16197637, 'reputation': 21, 'user_id': 11694829, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/2301151233254377/picture?type=large', 'display_name': 'Gustavo M&#233;ndez', 'link': 'https://stackoverflow.com/users/11694829/gustavo-m%c3%a9ndez'}",False,0,1671232931,1671232931,74830692,74612379,CC BY-SA 4.0,"<p>Install <strong>url</strong> with <code>yarn add url -D</code>, that solved the problem.</p>",,,false
"{'account_id': 9316680, 'reputation': 29, 'user_id': 6916815, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-Pgr9LIgFXMg/AAAAAAAAAAI/AAAAAAAAARs/mMN6hmTt87o/photo.jpg?sz=256', 'display_name': 'Mayank Gupta', 'link': 'https://stackoverflow.com/users/6916815/mayank-gupta'}",False,1,1669992632,1669992632,74657587,74612246,CC BY-SA 4.0,<p>So i figured that snapToOffsets was creating problem(because it was overriding pagingEnabled) so i removed it and it worked.</p>,,,false
"{'account_id': 25270187, 'reputation': 705, 'user_id': 19099618, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/4fGwT.jpg?s=256', 'display_name': 'todevv', 'link': 'https://stackoverflow.com/users/19099618/todevv'}",False,0,1669720363,1669720363,74613162,74612244,CC BY-SA 4.0,"<p>you can use <code>getOptionLabel</code></p> <pre class=""lang-js prettyprint-override""><code> export const Input = ({label,type,param,validation,list,register}) => ( <FormControl>     <FormLabel>         {label}     </FormLabel>     <Autocomplete           options={list}           getOptionLabel={(option) => option.label} // this will show label in the dropdown           {...register(param, validation)} // react-hook-form register       />  </FormControl>); </code></pre>",,,false
"{'account_id': 27083115, 'reputation': 1, 'user_id': 20632023, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/98aba2e12d4a3f94aea0160db95a6e3d?s=256&d=identicon&r=PG', 'display_name': 'Prasad N', 'link': 'https://stackoverflow.com/users/20632023/prasad-n'}",False,0,1669716466,1669716466,74612321,74612209,CC BY-SA 4.0,"<p>First push the first element to an array and then push the search results then to the array Eg:</p> <pre><code>const animals = ['zebra','monkey','ant', 'bison', 'camel', 'duck', 'elephant']; const search=[];  search.push(animals[0]);  animals.slice(1); // search operation search.push(...animals.slice(1).sort()) console.log(search) </code></pre>",,,false
"{'account_id': 20336792, 'reputation': 629, 'user_id': 14917277, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2SnhA.jpg?s=256', 'display_name': 'anurag-dhamala', 'link': 'https://stackoverflow.com/users/14917277/anurag-dhamala'}",True,1,1669716547,1669716547,74612338,74612067,CC BY-SA 4.0,"<p>You can change the sub menu trigger option using the <strong>""triggerSubMenuAction""</strong> param. Add this param in you Menu component.</p> <pre class=""lang-js prettyprint-override""><code><Menu     style={{ width: 256 }}     mode={this.state.mode}     theme={this.state.theme}     triggerSubMenuAction={""click""} >  ..... </code></pre> <p><a href=""https://codesandbox.io/s/awesome-waterfall-ml8vyj?file=/src/index.js"" rel=""nofollow noreferrer"">https://codesandbox.io/s/awesome-waterfall-ml8vyj?file=/src/index.js</a></p>",,,false
"{'account_id': 12155954, 'reputation': 219, 'user_id': 8874900, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/376547867a02695d765a328f6c64e591?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': '5c4r10', 'link': 'https://stackoverflow.com/users/8874900/5c4r10'}",False,0,1669717952,1669717952,74612640,74611883,CC BY-SA 4.0,"<p>If i understand correctly, the Container styled div need to be in relative position, so his child can be in position absolute for him.</p> <pre><code>const Container = styled.div`   //display: flex;   position: relative;   width: 100%;   height: 100%; `; </code></pre> <p>Than I think you can remove the div inside the Container component e change the Wrapper inside EnterpriseCoverBackground like this:</p> <pre><code>const Wrapper = styled.div`   background: linear-gradient(316.08deg, #2a1beb 3.44%, #0984f7 100%);   overflow: clip;   width: 100%;   height: 100%;   overflow: clip;   position: absolute;   top: 0;   left: 0;   right: 0;   bottom: 0;   z-index: -1; `; </code></pre>",,,false
"{'account_id': 21309, 'reputation': 166982, 'user_id': 51685, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/vVhK5.jpg?s=256', 'display_name': 'AKX', 'link': 'https://stackoverflow.com/users/51685/akx'}",True,1,1669714736,1669714736,74611891,74611849,CC BY-SA 4.0,"<p>Don't mix and match <code>async</code> with <code>new Promise</code> and <code>then</code> â all you need is</p> <pre><code>async function redirectToFinish() {   const registrationID = this.registrationID;    const uploadPromises = this.props.assets.map(async (asset) => {     const api_image = new api_image();     api_image.filename = asset.filename;     api_image.uploadOwnerType = ""registration"";     api_image.uploadOwnerID = registrationID;     const response = await api_image.post();     if (response.status !== 201) {       throw new Error(""Error uploading image"");     }   });    try {     await Promise.all(uploadPromises);   } catch (err) {     console.log(err);     return;   }   console.log(""redirectToFinish""); } </code></pre>",,,false
"{'account_id': 18062094, 'reputation': 296, 'user_id': 13265113, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/bZuH3lQU.png?s=256', 'display_name': 'Shilpe Saxena', 'link': 'https://stackoverflow.com/users/13265113/shilpe-saxena'}",False,-1,1669714574,1669714574,74611860,74611807,CC BY-SA 4.0,"<p>The first thing <code>BrowseRoute</code> is inside index.js file.</p> <pre><code><BrowserRouter> <App /> </BrowserRouter> </code></pre> <p>And Second is that</p> <pre><code><Routes> <Route path=""/"" element={<Component />} /> </Routes> </code></pre>",,,false
"{'account_id': 43788, 'reputation': 195458, 'user_id': 128165, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/cdef5bd2099545a776ee86fb8049bdc6?s=256&d=identicon&r=PG', 'display_name': 'Gabriele Petrioli', 'link': 'https://stackoverflow.com/users/128165/gabriele-petrioli'}",False,0,1669727630,1669727630,74614661,74611717,CC BY-SA 4.0,"<p>If you want to re-use the html created from Jodit to display it, you will have to use the <a href=""https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml"" rel=""nofollow noreferrer""><code>dangerouslySetInnerHTML</code></a> keeping in mind the  relevant warnings.</p> <pre><code><div dangerouslySetInnerHTML={{__html: content}} /> </code></pre> <hr /> <p>If you want to extract the plain text from the returned html, you can use one if the helpers they provide, namely the <a href=""https://xdsoft.net/jodit/docs/functions/helpers_html.stripTags-1.html"" rel=""nofollow noreferrer""><code>stripTags</code></a></p> <p>So somthing like <code>const plaintext = Jodit.modules.Helpers.stripTags(content);</code></p> <p>But you will have to import the <code>Jodit</code> as well, when you import the editor.</p> <p>So <code>import JoditEditor, { Jodit } from 'jodit-react';</code></p>",,,false
"{'account_id': 1085276, 'reputation': 247, 'user_id': 1285614, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/0b9f285a11adea2c963d285267168fcc?s=256&d=identicon&r=PG', 'display_name': 'Mikael Kindborg', 'link': 'https://stackoverflow.com/users/1285614/mikael-kindborg'}",True,1,1692020605,1692020605,76899462,74611683,CC BY-SA 4.0,"<p>The danger is that one may overlook a dependency that is needed for the code to work as expected. That is, a value changes, but the hook does not run, which may result in a bug.</p> <p>In your case, you know your code well, so intentionally disabling the warning should be considered good practice.</p> <p>The linter message even says that you can disable the warning with a code comment, so it should not be considered bad practice to disable warnings intentionally. And you can always add a comment to clarify why a warning is disabled.</p> <p>I know you are already aware of how to disable linter warnings, but for clarity, this is how I do it:</p> <pre><code>useEffect(() =>  {     api.send(someUrl, somePayload); },  // Disabled warning about missing dependency since  // this code is designed to use a single dependency // eslint-disable-next-line [changeMe]); </code></pre> <p>I view the linter as a useful tool, but if I want to use a construct that results in a warning, I disable the warning.</p>",,,false
"{'account_id': 5777214, 'reputation': 9, 'user_id': 4558963, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/974da5a31c37f858750a4b14ff1b5693?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'robertofantasy', 'link': 'https://stackoverflow.com/users/4558963/robertofantasy'}",True,0,1671202758,1671202758,74826155,74611594,CC BY-SA 4.0,"<p>at last i find the solution the ""ESLint"" extension need to be installed</p>",,,false
"{'account_id': 24494688, 'reputation': 129, 'user_id': 18411181, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GjPj02UFHxSXI3T_A02estQhz-T8J_bmzqE4wwqMA=k-s256', 'display_name': 'Sam Levine', 'link': 'https://stackoverflow.com/users/18411181/sam-levine'}",False,0,1670253931,1670253931,74690513,74611355,CC BY-SA 4.0,"<p>According to the docs you should be passing the auth as the first prop in createUserWithEmailAndPassword(auth, email, password): <a href=""https://firebase.google.com/docs/auth/web/password-auth#create_a_password-based_account:%7E:text=createUserWithEmailAndPassword(auth%2C%20email%2C%20password)"" rel=""nofollow noreferrer"">https://firebase.google.com/docs/auth/web/password-auth#create_a_password-based_account:~:text=createUserWithEmailAndPassword(auth%2C%20email%2C%20password)</a></p> <p>Also, make sure your email and password contain values and are not undefined.</p> <pre><code>try {     setError("""");     setLoading(true);     const auth = getAuth();     await auth.createUserWithEmailAndPassword(     auth,     emailRef.current!.value,     passwordRef.current!.value     );   } catch {     setError(""Failed to create an account"");   } </code></pre>",,,false
"{'account_id': 18603085, 'reputation': 405, 'user_id': 13557443, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Nl5y1.png?s=256', 'display_name': 'Harsh', 'link': 'https://stackoverflow.com/users/13557443/harsh'}",False,0,1669716279,1669716279,74612282,74611136,CC BY-SA 4.0,"<p>I believe it's an import issue. You probably meant to use the following:</p> <pre><code>import { ProductContext } from '../context/ProductContext'; </code></pre> <p>Right now, your <code>ProductContext</code> is actually <code>ProuductContextProvider</code>, which is the default export as per your code.</p>",,,false
"{'account_id': 18550562, 'reputation': 51, 'user_id': 13516889, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/a6eeada0ef6108cebd5d4ee8e40a612f?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Sin', 'link': 'https://stackoverflow.com/users/13516889/sin'}",False,0,1669712420,1669712420,74611449,74611096,CC BY-SA 4.0,"<p>I'm not sure if I understand your question properly because you DID code the function when you wrote:</p> <pre><code>prevState => {   return {     counter: prevState.counter + 1   }; } </code></pre> <p>This is an arrow function definition. You can store it in a variable and call it later or pass it as an argument to another function without storing it; as you did with <code>this.setState</code>. You can read more about js arrow functions <a href=""https://www.w3schools.com/js/js_arrow_function.asp"" rel=""nofollow noreferrer"">here</a>. Also, this is a recursive function that calls itself, and you can read about it <a href=""https://www.freecodecamp.org/news/what-is-recursion-in-javascript/"" rel=""nofollow noreferrer"">here</a>.</p>",,,false
"{'account_id': 27082338, 'reputation': 1, 'user_id': 20631335, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/9a8a667a920dd9a760dc9fc98cc56466?s=256&d=identicon&r=PG', 'display_name': 'Louie', 'link': 'https://stackoverflow.com/users/20631335/louie'}",False,0,1669711536,1669711536,74611270,74611096,CC BY-SA 4.0,"<p>How about using ""React Hook"" like ""useState, useEffect()"". it's can checked your value, and you can start function and setState also.</p>",,,false
"{'account_id': 23215199, 'reputation': 1583, 'user_id': 17308201, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Ec3Le.jpg?s=256', 'display_name': 'Layhout', 'link': 'https://stackoverflow.com/users/17308201/layhout'}",True,4,1676344126,1669712346,74611438,74611054,CC BY-SA 4.0,"<p>this should do it.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const { useState, useEffect } = React;  const texts = [""Your Business"", ""Your Brand"", ""Your Content"", ""Your Portfolio"", ""You.""]; const time_between_text = 2; // text show for 2s before fade out. const transition_duration = 0.5;  const App = () => {   const [show, setShow] = useState(0);      useEffect(() => {     const timerId = setInterval(() => {       setShow(p => {         if(p === texts.length - 1) p = -transition_duration;         else p = p + transition_duration;         return p;       });     }, time_between_text * 1000)          return () => clearInterval(timerId);   }, [])    return <div className=""pContainer"">     {texts.map((t, i) => <p key={i} style={{ opacity: `${show === i ? 1 : 0}`, transitionDuration: `${time_between_text + transition_duration}s` }}>{t}</p>)} </div> }  ReactDOM.createRoot(     document.getElementById(""root"") ).render(     <App /> );</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.pContainer {   position: relative; }  .pContainer p {   font-size: 36px;   font-weight: bold;   position: absolute;   top: 0;   left: 0;   opacity: 0;   transition-property: opacity;   transition-timing-function: ease-in-out; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div id=""root""></div> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.1.0/umd/react.development.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.1.0/umd/react-dom.development.js""></script></code></pre>  </div>  </div>  </p>",1676344126.0,,false
"{'account_id': 27082537, 'reputation': 46, 'user_id': 20631516, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu1GAHCdsk4NdAwd4bCCnXtNA3vLDgh-dceC0VoW=k-s256', 'display_name': 'Smit Sohagiya', 'link': 'https://stackoverflow.com/users/20631516/smit-sohagiya'}",False,1,1669733208,1669716016,74612222,74610861,CC BY-SA 4.0,"<p>Try this in your: <a href=""https://github.com/socketio/socket.io-fiddle"" rel=""nofollow noreferrer"">https://github.com/socketio/socket.io-fiddle</a></p> <p><strong>client.js</strong></p> <pre class=""lang-js prettyprint-override""><code>var io = require('socket.io-client'); var socket = io.connect('http://localhost:3000', {reconnect: true});  socket.on(""connect"", () => {   console.log(`connect ${socket.id}`); });  socket.on(""connect_error"", (err) => {   console.log(`connect_error due to ${err.message}`); });  // add listening event socket.on(""test"", (data) => {   console.log(data); });  socket.on(""disconnect"", (reason) => {   console.log(`disconnect due to ${reason}`); }); </code></pre> <p><strong>server.js</strong></p> <pre class=""lang-js prettyprint-override""><code>import { default as express } from ""express""; import { createServer } from ""http""; import { Server } from ""socket.io"";  const app = express(); const httpServer = createServer(app); const io = new Server(httpServer, {});   const port = process.env.PORT || 3000;  app.use(express.static(""public""));  io.on(""connection"", (socket) => {   console.log(`connect ${socket.id}`);    // to send message to cliente   socket.emit('test', {message: ""hello""})    socket.on(""disconnect"", (reason) => {     console.log(`disconnect ${socket.id} due to ${reason}`);   }); });  httpServer.listen(port, () => {   console.log(`server listening at http://localhost:${port}`); }); </code></pre>",1669733208.0,,false
"{'account_id': 27034262, 'reputation': 168, 'user_id': 20590130, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Z5wBu.jpg?s=256', 'display_name': 'saumyajain125', 'link': 'https://stackoverflow.com/users/20590130/saumyajain125'}",False,1,1669984879,1669984879,74655940,74610820,CC BY-SA 4.0,"<p>A concise way to do this:</p> <pre><code> const groupBy = (data) => {   return _.chain(data)     .groupBy(""group_by"")     .map((value, key) => ({       key: key,       usage_date: value[0].usage_date,       total_cost: _.sumBy(value, ""total_cost""),     }))     .value(); }; </code></pre>",,,false
"{'account_id': 19255761, 'reputation': 907, 'user_id': 15119024, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/LyxLa.png?s=256', 'display_name': 'ClusterH', 'link': 'https://stackoverflow.com/users/15119024/clusterh'}",False,0,1669711425,1669711425,74611247,74610747,CC BY-SA 4.0,"<pre><code>import React, { Suspense, lazy } from 'react' import { BrowserRouter as Router, Route, Routes } from 'react-router-dom'  const Home = lazy(() => import('./pages/Home'))  const App = () => {   return (     <Router>       <Suspense>         <Routes>           <Route path=""/"" element={<Home myProps={'hello'} />} />           // Your routes more here         </Routes>       </Suspense>     </Router>   ) }  export default App </code></pre>",,,false
"{'account_id': 16566797, 'reputation': 101, 'user_id': 11971137, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/7551dc48a18f04a29f51f14b484af120?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'arvir', 'link': 'https://stackoverflow.com/users/11971137/arvir'}",False,0,1669711287,1669711287,74611222,74610747,CC BY-SA 4.0,"<p>You can just assign the lazy loaded component to a variable and then pass the required props into the config object so the inside the router file you do something like this</p> <pre><code>import React, { lazy } from 'react';  const LazyLoadedComponent = lazy(()=> import('/path-to-component'))  const routes = [   ...   {     path: '/test/testComponent',     component:()=>(<LazyLoadedComponent myProps='required-prop-value'  />),   },   ... ] </code></pre>",,,false
"{'account_id': 23215199, 'reputation': 1583, 'user_id': 17308201, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Ec3Le.jpg?s=256', 'display_name': 'Layhout', 'link': 'https://stackoverflow.com/users/17308201/layhout'}",True,1,1669708936,1669708936,74610809,74610662,CC BY-SA 4.0,"<p>you could do something like this:</p> <pre class=""lang-js prettyprint-override""><code>export default function Landing(props) {     return props.arr.map((a, i) => {         if (a.whatEver === ""Whatever"")             return <p key={i}>whatever</p>;         if (a.whichEver === ""WhichEver"")             return <p key={i}>whichEver</p>;         if (a.another === ""Another"")             return <p key={i}>another</p>;         return <p key={i}>whoever</p>;     }) } </code></pre> <p>or if there's only one key you need to check in the array, use <code>switch...case</code> (my personal favorite):</p> <pre class=""lang-js prettyprint-override""><code>export default function Landing(props) {     return props.arr.map((a, i) => {         switch (a.importantKey) {             case ""Whatever"":                 return <p key={i}>whatever</p>;             case ""WhichEver"":                 return <p key={i}>whichEver</p>;             case ""Another"":                 return <p key={i}>another</p>;             default: return <p key={i}>whoever</p>;         }     }) } </code></pre>",,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",False,1,1669707740,1669707740,74610596,74610552,CC BY-SA 4.0,"<p>use the spred operator</p> <pre><code>    selectId : ( element ) => {... element, bookId: uuid()} /  </code></pre>",,,false
"{'account_id': 19210076, 'reputation': 79, 'user_id': 14036048, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-LHUL_EbH1ww/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucnK01PZBbt-EsuCZReA20i0j0yVIw/photo.jpg?sz=256', 'display_name': 'Ha Tai', 'link': 'https://stackoverflow.com/users/14036048/ha-tai'}",True,0,1669707666,1669707666,74610577,74610515,CC BY-SA 4.0,<p>toFixed(0) convert a Number to String type. Number prototype don't have replace method when String jas</p>,,,false
"{'account_id': 27286887, 'reputation': 1, 'user_id': 20805916, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AEdFTp6vR17d9iZH66VXQXRQubmUaAjH1ErfTJLpM_nw=k-s256', 'display_name': 'hellovg', 'link': 'https://stackoverflow.com/users/20805916/hellovg'}",False,0,1680807168,1680807168,75952844,74610494,CC BY-SA 4.0,"<p>You are exporting as <code>noteContext</code> in Notecontext file, but importing as <code>NoteContext</code> in NoteState file.</p>",,,false
"{'account_id': 16566797, 'reputation': 101, 'user_id': 11971137, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/7551dc48a18f04a29f51f14b484af120?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'arvir', 'link': 'https://stackoverflow.com/users/11971137/arvir'}",True,1,1669708148,1669708148,74610670,74610494,CC BY-SA 4.0,"<p>There seems to be a typo in your NoteState component. It should be <code>props.children</code> and not <code>childern</code>. When I made that change and ran your sandbox, it was working fine.</p>",,,false
"{'account_id': 309603, 'reputation': 2915, 'user_id': 622145, 'user_type': 'registered', 'accept_rate': 95, 'profile_image': 'https://i.sstatic.net/eHcgv.png?s=256', 'display_name': 'Twistleton', 'link': 'https://stackoverflow.com/users/622145/twistleton'}",False,0,1669707320,1669706955,74610469,74610399,CC BY-SA 4.0,<p>Try the element specification:</p> <pre><code>    <Router>         <Routes>                 <Route exact path='/' element={                     <>                         <TextForm />                     </>                 }                 ></Route>                 <Route path='/about' element={ <AboutPage />}/>             </Routes>     </Router> </code></pre>,1669707320.0,,false
"{'account_id': 23952197, 'reputation': 106, 'user_id': 17943583, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/4125c1af230242f0e38a553261290e44?s=256&d=identicon&r=PG', 'display_name': 'JimmyFl0', 'link': 'https://stackoverflow.com/users/17943583/jimmyfl0'}",True,1,1669739825,1669739825,74617318,74610370,CC BY-SA 4.0,"<p>Django assigns 'AnonymousUser' to request.user whenever the user isn't logged in, if you logged into you Django admin, you're logged in to the site. So that would be why you're getting the correct user in that instance.</p>",,,false
"{'account_id': 25977649, 'reputation': 52, 'user_id': 19691884, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/5Pyv4.jpg?s=256', 'display_name': 'Aathishithan G', 'link': 'https://stackoverflow.com/users/19691884/aathishithan-g'}",False,0,1669713984,1669713984,74611731,74610316,CC BY-SA 4.0,<p>Instead of increasing width for <strong>box react-resizable</strong> class container. Increase the width for <strong>inner</strong> container. It will work</p>,,,false
"{'account_id': 8632300, 'reputation': 100700, 'user_id': 6463558, 'user_type': 'registered', 'accept_rate': 48, 'profile_image': 'https://i.sstatic.net/g22sX.jpg?s=256', 'display_name': 'Lin Du', 'link': 'https://stackoverflow.com/users/6463558/lin-du'}",True,1,1669707108,1669707108,74610493,74610245,CC BY-SA 4.0,"<p>You can use your <code>matches</code> state to make your <code>shops</code> data depend on the match query result.</p> <pre><code>const shopsToBeRendered = matches ? shops.slice(0, 2) : shops;  return (     <div className=""shopsHomeFeedImgsCont"">       {shopsToBeRendered.map((shop) => (         <img className=""shopsHomeFeedImgs"" src={shop.shopPic} />       ))}     </div> ); </code></pre>",,,false
"{'account_id': 19154859, 'reputation': 228, 'user_id': 13991896, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/91e190be0cf56ae9d20945b803e7d881?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Thomas', 'link': 'https://stackoverflow.com/users/13991896/thomas'}",False,0,1669705490,1669705490,74610209,74610013,CC BY-SA 4.0,"<p>I am using react hook form btw. This is how I solve it.</p> <pre><code>    <ModalBody display=""flex"" flexDirection=""column"">       <form onSubmit={onSubmit}>         {children}         <input hidden type=""submit"" />       </form>     </ModalBody> </code></pre> <p>I still need to edit all files but for future usage, I no need to include a hidden input for all files.</p> <p>The only thing I worry is the FormProvider now is nested inside the form. By default the <code><FormProvider></code> should be the parent of the <code><form></code>.</p>",,,false
"{'account_id': 2432151, 'reputation': 1731, 'user_id': 2122822, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RNpbU.jpg?s=256', 'display_name': 'Azzy', 'link': 'https://stackoverflow.com/users/2122822/azzy'}",False,0,1669704437,1669704437,74610060,74609962,CC BY-SA 4.0,"<p>You can try this</p> <pre><code> const fetchConfer = async (datePrensence, idInsurance, timePrensence) => {     try {       const response = await axios({         method: ""post"",         url: `${process.env.REACT_APP_API_URL_API_GET_ERJASERVICE_LIST}`,         headers: {          Authorization: `Bearer ${token}`,          ""Content-Type"": ""application/json"",         },         data: JSON.stringify({          datePrensence,          idInsurance,          Idperson,          searchfield: """",          timePrensence: parseInt(timePrensence) * 60,         }),      })       setResponse(response.data.Data);      // need to return data      return response.data.Data      } catch(error) {       alert(""NetworkError"")     }   }; </code></pre> <p>use the function in another async function</p> <pre><code>const someAsyncFunc = async () => {    // try catch     const r = fetchConfer(Date, Time, Id)    if (search !== """") {         window.sessionStorage.setItem(           ""searchList"",           JSON.stringify(              r.data           )         );    }   ... </code></pre> <p>or use it how you are currently using it</p> <p>Hope it helps</p>",,,false
"{'account_id': 21993289, 'reputation': 80, 'user_id': 16266278, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GhInYpDOLaURxwc1QZKfHfWlJFP9f6TgfMav9XNTA=k-s256', 'display_name': 'tech unveiled', 'link': 'https://stackoverflow.com/users/16266278/tech-unveiled'}",True,0,1669714416,1669714416,74611820,74609923,CC BY-SA 4.0,"<p>You can try this once</p> <pre><code>import {useNavigation} from '@react-navigation/native';  const navigation = useNavigation(); navigation.navigate('Login',{name:""John""}); </code></pre> <p>and to get this data you can use</p> <pre><code>import { useRoute } from '@react-navigation/native'; const route = useRoute();  console.log(route.params.name) </code></pre>",,,false
"{'account_id': 25282973, 'reputation': 3, 'user_id': 19110527, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/3GV8H.png?s=256', 'display_name': 'oalpaslan', 'link': 'https://stackoverflow.com/users/19110527/oalpaslan'}",False,0,1669713144,1669713144,74611563,74609923,CC BY-SA 4.0,"<p>It is better (and easier) to use <code>useNavigation()</code> hook of React Navigation than <code>navigation</code> prop. It helps you to access the <code>navigation</code> prop inside every component. Passing the <code>navigation</code> prop can be complicated with child components since you should pass it through the parent.</p> <p>You can do it like:</p> <pre><code>import { useNavigation } from '@react-navigation/native';  const BottomTabCard=({props})=> {  const navigation = useNavigation(); ...  <TouchableOpacity onPress={() => setIsActive('credit-card'),{navigation.navigate(ROUTE_NAME.ORDER)}}>  ... }; </code></pre> <p>For more information, you can refer to React Navigation documentation about <code>useNavigation()</code>:</p> <p><a href=""https://reactnavigation.org/docs/use-navigation/"" rel=""nofollow noreferrer"">React Navigation: useNavigation()</a></p>",,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",False,1,1669711853,1669709657,74610929,74609867,CC BY-SA 4.0,"<p>It's not good to call a function directly inside of the component body in <a href=""https://beta.nextjs.org/docs/rendering/server-and-client-components#client-components"" rel=""nofollow noreferrer"">client components</a> because every time with re-rendering of the component, your function gets executed.</p> <p>It's better to write them in useEffect with dependencies.</p> <p>If you want to run the function only once, you should use an empty array as the dependency:</p> <pre class=""lang-js prettyprint-override""><code>useEffect(() => {   // your code }, []); </code></pre> <p>And if you want to run them whenever one or more states change, you should do this:</p> <pre class=""lang-js prettyprint-override""><code>useEffect(() => {   // your code }, [/* list of the dependencies */]); </code></pre> <p>So in your case, it would be like this:</p> <pre class=""lang-js prettyprint-override""><code>useEffect(() => {   const getProfileData = async () =>  {     await getData();   }    getProfileData(); }, []); </code></pre>",1669711853.0,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",False,1,1669708784,1669703095,74609881,74609867,CC BY-SA 4.0,"<p>Move the async in useEffect</p> <pre><code>export default function Page() {              useEffect(() => {                 const getAll= async () => {         const profileData = await getData();         console.log(profileData);       };       getAll(); // run it, run it     }, []);        return(<div><p>Hello</p></div>) } </code></pre>",1669708784.0,,false
"{'account_id': 19210076, 'reputation': 79, 'user_id': 14036048, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-LHUL_EbH1ww/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucnK01PZBbt-EsuCZReA20i0j0yVIw/photo.jpg?sz=256', 'display_name': 'Ha Tai', 'link': 'https://stackoverflow.com/users/14036048/ha-tai'}",False,2,1669704541,1669704541,74610082,74609867,CC BY-SA 4.0,"<p>Could try the idea as the below code.</p> <pre><code>import { useState } from ""react"";  export default async function Page() {     const [profileData, setProfileData] = useState([]);     async function initDate() {         const response = await getData();         setProfileData(response);     }     useEffect(() => {         initDate();         console.log(profileData);     }, []);     return (<div><p>Hello</p></div>) } </code></pre>",,,false
"{'account_id': 6615307, 'reputation': 52364, 'user_id': 5108796, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5792d442b2c7e1ecd6b4efa8c10e6c11?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'ghybs', 'link': 'https://stackoverflow.com/users/5108796/ghybs'}",True,0,1669706728,1669706728,74610423,74609861,CC BY-SA 4.0,"<p>This is because you apply a <code>margin-bottom: 12px;</code> on your <code><input type=""checkbox""/></code> element (through <code>.container</code> class):</p> <pre><code>        <input           type=""checkbox""           id={label}           className = ""container""         />    </code></pre> <pre class=""lang-css prettyprint-override""><code>.container {     margin-bottom: 12px; </code></pre> <p>You can simply not apply this margin on the <code><input></code> only (see label1 in below screenshot), or apply it on the containing div (that wraps both the <code><input></code> and the <code><label></code>, see label2 in below screenshot):</p> <p><a href=""https://i.sstatic.net/Hv6pQ.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/Hv6pQ.png"" alt=""result"" /></a></p> <pre><code>  <div className=""flex"">     <div class=""container2"">       <input type=""checkbox"" id=""label2"" class=""container1"" />       <label for=""label2"" class=""label"">{label2 margin-bottom on containing div (both input and label)}</label>     </div>   </div> </code></pre> <pre class=""lang-css prettyprint-override""><code>.container1 {   /*margin-bottom: 12px;*/ }  .container2 {   margin-bottom: 12px; } </code></pre> <p>Demo: <a href=""https://jsfiddle.net/sabr7xw0/2/"" rel=""nofollow noreferrer"">https://jsfiddle.net/sabr7xw0/2/</a></p>",,,false
"{'account_id': 8933464, 'reputation': 26, 'user_id': 6665185, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-CV3jhsAxUZE/AAAAAAAAAAI/AAAAAAAAAAA/2vzjhK2Wt0M/photo.jpg?sz=256', 'display_name': 'farshidb', 'link': 'https://stackoverflow.com/users/6665185/farshidb'}",True,1,1669703684,1669703684,74609963,74609821,CC BY-SA 4.0,"<pre class=""lang-js prettyprint-override""><code>import defaultImage from '../assets/img/biero-bouteil.svg';  render(){  return (   bieres.map(item => ( <img src=""{item.image || defaultImage}"" />))  ); } </code></pre>",,,false
"{'account_id': 25789701, 'reputation': 749, 'user_id': 19533962, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d26cf8380452d546870c10cdec32d397?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'RKataria', 'link': 'https://stackoverflow.com/users/19533962/rkataria'}",False,0,1669702686,1669702686,74609839,74609755,CC BY-SA 4.0,"<p>You can use <a href=""https://docs.aws.amazon.com/codeartifact/latest/ug/welcome.html"" rel=""nofollow noreferrer"">AWS CodeArtifacts</a> to publish your packages. You can have npm as your upstream registry, so that any package which is not present in codeArtifacts will be resolved from npm registry.</p>",,,false
"{'account_id': 18062094, 'reputation': 296, 'user_id': 13265113, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/bZuH3lQU.png?s=256', 'display_name': 'Shilpe Saxena', 'link': 'https://stackoverflow.com/users/13265113/shilpe-saxena'}",False,0,1669702539,1669702539,74609813,74609741,CC BY-SA 4.0,<pre><code>https://stackoverflow.com/questions/3024745/cross-browser-bookmark-add-to-favorites-javascript </code></pre> <p>refer to this link this might help you.</p>,,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",False,0,1669702086,1669702086,74609761,74609736,CC BY-SA 4.0,"<p>try <code>useLocation</code> hook to detect route changes</p> <pre><code>const location = useLocation();  useEffect(() => {   console.log('Location changed'); }, [location]); </code></pre>",,,false
"{'account_id': 2432151, 'reputation': 1731, 'user_id': 2122822, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RNpbU.jpg?s=256', 'display_name': 'Azzy', 'link': 'https://stackoverflow.com/users/2122822/azzy'}",True,3,1672338809,1669700840,74609626,74609575,CC BY-SA 4.0,"<p>It's in the documentation</p> <pre><code>//option 1: for static options const reporTypes = [   { value: 'one', label: 'One' },   { value: 'two', label: 'Two', className: 'myOptionClassName' }, ]  //option 2: mapping from selector const reporTypes = useSelector((state: RootState) => state.report.options.types?.map(type => ({ ...type, className: 'myOptionClassName'  }));   // Option 3: mapping use useMemo  const reporTypes = useSelector((state: RootState) => state.report.options.types);    const mappedReportTypes = useMemo(() => {       return reporTypes?.map(type => ({ ...type, className: 'myOptionClassName'  }))    }, [reporTypes ])  function App() {   return (     <div className=""App"">       <Dropdown  options={reporTypes} placeholder=""Select an option"" className='mh-class' controlClassName='myControlClassName' menuClassName='myMenuClassName' arrowClassName='myarrow'/>     </div>   ); } </code></pre> <p>But I would suggest using the <a href=""https://github.com/JedWatson/react-select"" rel=""nofollow noreferrer"">library with more rating</a> as it could have lesser bugs and will handle more use cases</p>",1672338809.0,,false
"{'account_id': 26877426, 'reputation': 361, 'user_id': 20458458, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/QTyWi.jpg?s=256', 'display_name': 'kuuhak-u', 'link': 'https://stackoverflow.com/users/20458458/kuuhak-u'}",True,0,1669701646,1669701646,74609716,74609472,CC BY-SA 4.0,"<p>Hey not sure but i think its happenig because  <code>import { Store } from '@decky.fx/react-native-essentials'</code> is looking for <code>store</code> in the <code>react-native-essentials</code> but its not in that file its in the sub-folder of it  <code>react-native-essentials/lib/index</code> not in the root  and so that's why you not able to destructure it from the <code>react-native-essentials</code> and as for  why this is working <code>import All from '@decky.fx/react-native-essentials';</code> its because you importing everything from the file even its subfiles/folders .</p> <p>And in this case <code>react, {useState} from ""react""</code> react have everything in the ""react"" file so that's why this works <code>import{useSatte} from  react</code></p>",,,false
"{'account_id': 18508059, 'reputation': 923, 'user_id': 13483939, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/3WOJz.jpg?s=256', 'display_name': 'Shubham Waje', 'link': 'https://stackoverflow.com/users/13483939/shubham-waje'}",True,0,1669789519,1669717032,74612447,74609451,CC BY-SA 4.0,"<p>Seems like user agent is not aware that the form event is getting handled.</p> <p>To resolve this, modify your <code>onSubmit</code> function as follows:</p> <pre class=""lang-js prettyprint-override""><code>async function onSubmit(event) {     event?.preventDefault();      // ... rest of       // ... of the     // ... code          }  </code></pre> <p>See if it works :)</p> <p>EDIT: more info on above topic.</p> <pre class=""lang-js prettyprint-override""><code>import ""./styles.css"";  export default function App() {   const onSubmit = (formEvent) => {     // if you comment this line     // you will see that console.log(""Line got executed""); will print and the window will get reloaded and console.log is gone     formEvent.preventDefault();     // The above line with prevent reloading of the window     console.log(""Line got executed"");   };    const onButtonClick = (buttonEvent) => {     // if we comment this out the button will SUMBIT the form     buttonEvent.preventDefault();     // The above line with prevent submission of the form     // because this button is of type submit and it's default action is to submit the form     // so by adding above line we are disabling its default behavior     console.log(""Button is clicked not for submission"");   };    return (     <div className=""App"">       <form onSubmit={onSubmit}>         <input id=""form-input"" />         <button type=""submit"" onClick={onButtonClick}>           Submit or click         </button>       </form>     </div>   ); }   </code></pre> <p>Codesandbox link to play around: <a href=""https://codesandbox.io/s/react-preventdefault-udx49m?file=/src/App.js:0-1053"" rel=""nofollow noreferrer"">https://codesandbox.io/s/react-preventdefault-udx49m?file=/src/App.js:0-1053</a></p>",1669789519.0,,false
"{'account_id': 3282993, 'reputation': 3096, 'user_id': 9822763, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-hj0f8WYwCAE/AAAAAAAAAAI/AAAAAAAAABc/EApMs4HFcwo/photo.jpg?sz=256', 'display_name': 'MING WU', 'link': 'https://stackoverflow.com/users/9822763/ming-wu'}",False,1,1669704359,1669704359,74610054,74609355,CC BY-SA 4.0,"<p>I created a codesandbox link: <a href=""https://codesandbox.io/s/recursing-bash-hkmqrc?file=/src/App.js"" rel=""nofollow noreferrer"">https://codesandbox.io/s/recursing-bash-hkmqrc?file=/src/App.js</a></p> <p>This is done by rxjs as you are dealing with time related actions. rxjs is the best tool. After you reload the page, it will start to log values as you expect in 1s.</p> <p>Can you please let me know if the result is what you want? Thanks.</p>",,,false
"{'account_id': 21086968, 'reputation': 101, 'user_id': 15499863, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/f786ba40d40611fc591c88e20d447ca4?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'ovct', 'link': 'https://stackoverflow.com/users/15499863/ovct'}",False,10,1670319695,1670035485,74663605,74609346,CC BY-SA 4.0,"<p>Changes the name of the <code>route.ts</code> file to <code>route.tsx</code>, now you can will set components in the <code>element</code> object property, this works for me.</p>",1670319695.0,,false
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,1,1669698418,1669698418,74609374,74609346,CC BY-SA 4.0,"<p>The <code>element</code> prop expects a <code>React.ReactNode</code>, you are directly calling a React function instead of passing it as JSX.</p> <p>Example:</p> <pre><code>const routes: RouteObject[] = [   {     path: '/',     element: <MainLayout />,     children: [       {         index: true,         element: <Home />,       },     ],   },   {     path: '*',     element: <ChangeRoute redirect='/404' />,   },   {     path: '/404',     element: <ErrorPage />,   }, ] </code></pre>",,,false
"{'account_id': 261101, 'reputation': 5394, 'user_id': 545064, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Jnf3l.png?s=256', 'display_name': 'Danny Remington - OMS', 'link': 'https://stackoverflow.com/users/545064/danny-remington-oms'}",False,0,1687551975,1687551975,76543287,74609284,CC BY-SA 4.0,"<p>I had a similar issue with the android emulator.  Doing something similar might fix your problem.</p> <p>I discovered that my old app was installed in my android emulator.  This fixed it for me:</p> <ol> <li>I uninstalled both the app and the new app from the emulator.</li> <li>I killed both Metro and the emulator.</li> <li>I restarted both Metro and the emulator.</li> </ol> <p>It turns out the emulator retains each app it installs instead of starting out as a blank slate each time as I expected. When it starts up, it tries to load the app with the earliest install time. So, it kept trying to run my old app and contact the old Metro server instead of running my new app.</p>",,,false
"{'account_id': 20066672, 'reputation': 421, 'user_id': 14712252, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RktL0.jpg?s=256', 'display_name': 'Farbod Shabani', 'link': 'https://stackoverflow.com/users/14712252/farbod-shabani'}",False,0,1669698248,1669698248,74609359,74609257,CC BY-SA 4.0,"<p>You need to pass the id from your back end to your front end. then add a border based on the ids you pass to the <code>selectInsurance</code>, in that way you will know if the element change the border will be gone. I think for your second problem you can add a new state that will reserve the whole object of the insurance and you first render from that array so every time you re-render your search array your selected insurance array will stay the same so they will remain in your page</p>",,,false
"{'account_id': 18508059, 'reputation': 923, 'user_id': 13483939, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/3WOJz.jpg?s=256', 'display_name': 'Shubham Waje', 'link': 'https://stackoverflow.com/users/13483939/shubham-waje'}",False,0,1669699084,1669699084,74609439,74609247,CC BY-SA 4.0,"<p>There are two options.</p> <p>Option 1. Wrap your <code>get_total_by_status</code> call in an async function and await your <code>get_total_by_status</code> to get resolved value as follows:</p> <pre class=""lang-js prettyprint-override""><code>async function get_total_by_status(status) {   const total = imports.index(status).then(     (d) => {       return d.total;     }   );   return total; }  async function getPromiseValue() {   let status_published = await get_total_by_status(""My status"");   console.log(status_published); }  getPromiseValue(); // prints ""My status"" </code></pre> <p>Option 2. Another option would be pass callback to your <code>get_total_by_status</code> function as an argument and call that callback in <code>.then()</code> block as follows:</p> <pre class=""lang-js prettyprint-override""><code>function get_total_by_status(status, onSuccess) {   // you don't need to store any return value in this case   imports.index(status).then(     (d) => {       onSuccess(d.total);     }   ); }  get_total_by_status(""My status"", (response) => {   console.log(response); // prints ""My status"" });  </code></pre> <p>Let me know if you have any kind of query or doubt regarding above code snippets :)</p>",,,false
"{'account_id': 13173718, 'reputation': 368762, 'user_id': 9515207, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3d5ccb4452ea5093f95c1da37acc764b?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'CertainPerformance', 'link': 'https://stackoverflow.com/users/9515207/certainperformance'}",True,3,1669697219,1669697078,74609264,74609238,CC BY-SA 4.0,"<p>The best way would be to integrate the non-React code into the App, so that setting state as a result of a keypress is natural and trivial.</p> <pre><code>function App() {     const [keys, setKeys] = React.useState<string[]>([]);     useEffect(() => {         function handleKeypress(event: KeyboardEvent) {             setKeys([...keys, event.key]);             // There will be more code here that's unrelated to React.         }         document.addEventListener(""keypress"", handleKeypress);         return () => {             document.removeEventListener(""keypress"", handleKeypress);         };     }, []); </code></pre> <p>Then you can drop your current <code>React.useEffect</code> (and its infinite loop) entirely.</p> <p>If that's not an option, you'd have to trigger the React state setter from outside of React - any way you look at it, that'll be pretty ugly. I suppose you could assign it to an outside variable:</p> <pre><code>let setKeysOuter;  function handleKeypress(event: KeyboardEvent) {   setKeysOuter?.(keys => [...keys, event.key]);   // There will be more code here that's unrelated to React. }  function App() {   const [keys, setKeys] = React.useState<string[]>([]);   setKeysOuter = setKeys; </code></pre>",1669697219.0,,false
"{'account_id': 27437600, 'reputation': 1, 'user_id': 20933129, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AEdFTp5EQBvwKCNJoPZGpIf96BkWP9R1CssRqW9XP7-m=k-s256', 'display_name': 'Chiro', 'link': 'https://stackoverflow.com/users/20933129/chiro'}",False,0,1707490752,1706631831,77907882,74609097,CC BY-SA 4.0,"<p>Don't worry, it's not a serious issue, and can be fixed easily:</p> <ol> <li>Delete the <code>.parcel-cache</code> folder.<br /> This folder contains only auto generated files that are safe to delete. Just don't touch other files - as it's a cache issue, just delete the cache.</li> <li>Run your build command, e.g. <code>npm run build</code> (This will auto-(re)generate the necessary files)</li> <li>Run your start command, e.g. <code>npm run start</code></li> </ol>",1707490752.0,,false
"{'account_id': 27229674, 'reputation': 41, 'user_id': 20757602, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AEdFTp4iW_h_e0tL_0ZcxulRvzsnULgP6pHsLsjCQyL3=k-s256', 'display_name': 'Aniket Subhash Patil', 'link': 'https://stackoverflow.com/users/20757602/aniket-subhash-patil'}",False,4,1689516648,1689516648,76698708,74609097,CC BY-SA 4.0,<p>You can <strong>just delete .parcel-cache folder</strong> and now you can run build command.</p> <p>Its totally safe to delete .parcel-cache folder</p>,,,false
"{'account_id': 18390397, 'reputation': 36, 'user_id': 13396218, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/--CkgWYo9AsA/AAAAAAAAAAI/AAAAAAAAAAA/AAKWJJNpIpHU82CuPtWgWcPL6aaVdrEHlQ/photo.jpg?sz=256', 'display_name': 'Mayank Joshi', 'link': 'https://stackoverflow.com/users/13396218/mayank-joshi'}",False,0,1686378164,1686378164,76444985,74609097,CC BY-SA 4.0,"<p><strong>Error : [Error: Key 216aea59fec25090 not found in cache]</strong> is a content caching issue related to parcel. Delete folder .parcel-cache once deleted then re-run <npx parcel ""your file""> Hope it helps.</p>",,,false
"{'account_id': 24947499, 'reputation': 23, 'user_id': 18812676, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJzPJ-SEqESD2xTMdjCiuJXOY-0Yo2GLNi-8wIh5=k-s256', 'display_name': 'Suraj Patil', 'link': 'https://stackoverflow.com/users/18812676/suraj-patil'}",False,0,1685963469,1685963469,76405848,74609097,CC BY-SA 4.0,"<p>I ran into this exact same cache error, and it turned out that Parcel seemingly can't create the cache if it can't find when i was working on project.</p> <ol> <li>You have to first stops the execution of program by <code>ctrl + c</code>.</li> <li>then you have to delete the <code>.parcel-cache</code> from the project.</li> <li>then build the project. <code>npx parcel index.html</code></li> </ol>",,,false
"{'account_id': 1178888, 'reputation': 633, 'user_id': 1154304, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/67be5c635ce279979139daba90111c4d?s=256&d=identicon&r=PG', 'display_name': 'landonepps', 'link': 'https://stackoverflow.com/users/1154304/landonepps'}",False,7,1680917497,1680917497,75962888,74609097,CC BY-SA 4.0,"<p>I ran into this exact same cache error, and it turned out that Parcel seemingly can't create the cache if it can't find Python.</p> <p>After ensuring python was correctly added to my path, updating Parcel, and deleting the <code>.parcel-cache</code> folder, it built successfully.</p>",,,false
"{'account_id': 27014985, 'reputation': 41, 'user_id': 20573995, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu3x3PPWwPFxMHLE_3IEBQ7usqep9wjxxW9SDLBu=k-s256', 'display_name': 'Utkarsh Kumar', 'link': 'https://stackoverflow.com/users/20573995/utkarsh-kumar'}",False,2,1679673114,1679673114,75835748,74609097,CC BY-SA 4.0,"<p>First stop the program ,then delete "" .parcel-cache "" folder. And then start the program again. It fixed the error in my case. Thanks</p>",,,false
"{'account_id': 8632300, 'reputation': 100700, 'user_id': 6463558, 'user_type': 'registered', 'accept_rate': 48, 'profile_image': 'https://i.sstatic.net/g22sX.jpg?s=256', 'display_name': 'Lin Du', 'link': 'https://stackoverflow.com/users/6463558/lin-du'}",True,1,1669697547,1669697547,74609295,74609078,CC BY-SA 4.0,"<p>You can export and import the data from the <code>App.tsx</code>. And import types from <code>Apptype.ts</code> using</p> <p><code>App.tsx</code>:</p> <pre><code>import type { IOption, IState } from ""./Apptype""; // ... </code></pre> <p><code>Apptype.ts</code></p> <pre><code>import { data } from ""./App"";  export interface IState {   [key: string]: number; }  export type Valid = keyof typeof data.games;  export interface IOption {   id: number;   value: string;   valid: Record<Valid, number[]>; } </code></pre> <p><a href=""https://codesandbox.io/s/disable-dependent-dropdown-option-in-reactjs-forked-hphzm0?file=/src/App.tsx:96-145"" rel=""nofollow noreferrer"">codesandbox</a></p>",,,false
"{'account_id': 27079897, 'reputation': 1, 'user_id': 20629180, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu09rvueA0kGAC3o_VlUqifHsjfF8vLHNITonzzX=k-s256', 'display_name': 'eto touka', 'link': 'https://stackoverflow.com/users/20629180/eto-touka'}",True,0,1669867446,1669867446,74636830,74609000,CC BY-SA 4.0,"<p>After wasting many hours on this, it looks like there is a bug in antd Forms. See this SO thread: <a href=""https://stackoverflow.com/questions/61028795/react-ant-design-select-value-not-setting"">React | Ant design select value not setting</a></p> <p>In short, removed the Form.Item and everything works fine.</p>",,,false
"{'account_id': 16862109, 'reputation': 151, 'user_id': 12192653, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c625c1d1ac420a14af8dc9d2cda1f61c?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'asep hidayat', 'link': 'https://stackoverflow.com/users/12192653/asep-hidayat'}",False,0,1669712625,1669712625,74611479,74609000,CC BY-SA 4.0,"<p>I think you have to custom return to default Editable Cells like the following example <a href=""https://codesandbox.io/s/custom-editable-antd-hpenj0?file=/demo.tsx"" rel=""nofollow noreferrer"">url example</a></p>",,,false
"{'account_id': 20907575, 'reputation': 6260, 'user_id': 15359157, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d82e9c986bd14027251dd29c7dc6478f?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'code', 'link': 'https://stackoverflow.com/users/15359157/code'}",False,1,1669699929,1669699929,74609521,74608976,CC BY-SA 4.0,"<p>Babel standalone <a href=""https://babeljs.io/docs/en/babel-standalone#script-tags"" rel=""nofollow noreferrer"">added support for browser-native modules in v7.10.0</a> (including the <code>data-type=""module""</code> attribute), while you're using v6. Removing the version number in the CDN or defining a specific one >= 7.10.0 fixes the transform-to-require issue.</p> <p>However, you have two other issues.</p> <p>The first one is trivial: ES6 native modules don't automatically resolve the file extension, so you need to do <code>import { Drawing } from ""./drawing.js""</code> instead of <code>import { Drawing } from ""./drawing""</code>.</p> <p>Secondly though, Babel won't transform the files that you import, so that JSX would be considered invalid. This leaves you with two options.</p> <ol> <li>Create your own import function, and manually import like this (<a href=""https://codesandbox.io/s/nervous-flower-irk4k3?file=/index.html"" rel=""nofollow noreferrer"">working example</a>)</li> </ol> <pre class=""lang-js prettyprint-override""><code>async function imp(path, requestOrigin) {   const { href } = new URL(path,     requestOrigin     ? requestOrigin.slice(0, requestOrigin.lastIndexOf(""/""))     : location.href   ); // so the paths won't be messed up   const res = await fetch(href);   const text = await res.text();   const { code } = Babel.transform(text, { presets: [""react""] });   return await import(`data:application/javascript,${encodeURIComponent(code)}`); } </code></pre> <p>Usage:</p> <pre class=""lang-js prettyprint-override""><code>const { Drawing } = await imp(""./drawing.js"");  // if you're in a ""nested"" route, e.g. ""/components/Button.js"", you need to provide the file const { OtherComponent } = await imp(""./hello.js"", import.meta.url); </code></pre> <ol start=""2""> <li><s><sup>okay, okay, WHY though wouldn't you use a bundler?? This is how the world works and always will (for the forseeable furture, i.e.)... I mean, just install <a href=""https://parceljs.org"" rel=""nofollow noreferrer"">parcel</a> globally and you're like, done in two seconds with just a single command</sup></s></li> </ol>",,,false
"{'account_id': 9275452, 'reputation': 2417, 'user_id': 6888239, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/lXTOp.jpg?s=256', 'display_name': 'Mehul Thakkar', 'link': 'https://stackoverflow.com/users/6888239/mehul-thakkar'}",True,2,1669697235,1669697235,74609275,74608948,CC BY-SA 4.0,"<p>There are multiple ways. You can use Grid, Box, and Styled components.</p> <p>Here are two examples using <code>Grid</code> and <code>Box with styled</code> components.</p> <p>A working example on <a href=""https://codesandbox.io/s/mui-5-forked-j2c9j8?file=/src/App.js:0-763"" rel=""nofollow noreferrer"">Codesandbox</a></p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>import * as React from ""react""; import Box from ""@mui/material/Box""; import Grid from ""@mui/material/Grid""; import { styled } from ""@mui/material/styles""; import { Container } from ""@mui/material"";  const Wrapper = styled(Box)({   display: ""grid"",   gridTemplateColumns: ""repeat(2, 1fr)"",   gridGap: 8,   marginTop: 16 });  export default function App() {   return (     <Container>       <Grid xs={12} sx={{ border: ""1px solid #ccc"" }} container>         <Grid xs={6} sx={{ border: ""1px solid #ccc"" }} item>           div one         </Grid>         <Grid xs={6} sx={{ border: ""1px solid #ccc"" }} item>           div two         </Grid>       </Grid>       <Wrapper>         <Box>div one</Box>         <Box>div two</Box>       </Wrapper>     </Container>   ); }</code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 4126965, 'reputation': 425, 'user_id': 3385851, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/45c6b540908e643f880902fc0f280e0c?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'rodix', 'link': 'https://stackoverflow.com/users/3385851/rodix'}",True,0,1669753313,1669753313,74619868,74608881,CC BY-SA 4.0,"<p>Assuming that <code>name</code> is declared using <code>useState</code>.</p> <p>Try this input field using <code>value</code> instead of <code>defaultValue</code>.</p> <pre><code>  <input     className={`${handles.inputOne}`}     type=""text""     value={name}     onChange={handleNameChange}   /> </code></pre> <p>And if you need to init it to some default value use the useState first argument.</p> <p>recommended read <a href=""https://reactjs.org/docs/uncontrolled-components.html"" rel=""nofollow noreferrer"">uncontrolled</a> vs <a href=""https://reactjs.org/docs/forms.html#controlled-components"" rel=""nofollow noreferrer"">controlled</a> components. Hope this helps.</p>",,,false
"{'account_id': 19549928, 'reputation': 173, 'user_id': 18478430, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/203ad76945c83c8071563efbbf76afed?s=256&d=identicon&r=PG', 'display_name': 'Zurcemozz', 'link': 'https://stackoverflow.com/users/18478430/zurcemozz'}",False,0,1669693908,1669693908,74608996,74608861,CC BY-SA 4.0,<p>I just forgot to include the value.</p> <pre><code> {Itemtype ? (     Itemtype.map((el) => <MenuItem value={el} key={el}>{el}</MenuItem>)   ): null} </code></pre>,,,false
"{'account_id': 19225695, 'reputation': 9, 'user_id': 14048642, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/6ab0a95ab651fb53b393023a21f07f27?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'ItecStudent', 'link': 'https://stackoverflow.com/users/14048642/itecstudent'}",False,0,1669696985,1669696985,74609251,74608731,CC BY-SA 4.0,"<p>Your ngonNgu state is an object. You can try:</p> <pre><code> const [ngonNgu, setNgonNgu] = useState([])  useEffect(() => {        if (selectedOption.value) {            console.log(selectedOption)            setNgonNgu([ ...ngonNgu, translate_list: selectedOption.value ])        }  }, [selectedOption]) </code></pre>",,,false
"{'account_id': 12086834, 'reputation': 331, 'user_id': 8835272, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/C0yeC.jpg?s=256', 'display_name': 'chenc', 'link': 'https://stackoverflow.com/users/8835272/chenc'}",True,1,1669691659,1669691460,74608769,74608722,CC BY-SA 4.0,"<p>I think you want expression is</p> <pre class=""lang-typescript prettyprint-override""><code>type Valid = keyof typeof data.games </code></pre>",1669691659.0,,false
"{'account_id': 12035092, 'reputation': 137, 'user_id': 8803932, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-C1UfKMiNaxk/AAAAAAAAAAI/AAAAAAAAACw/4KZD1PTliqI/photo.jpg?sz=256', 'display_name': 'Ryan Schafer', 'link': 'https://stackoverflow.com/users/8803932/ryan-schafer'}",False,0,1669692848,1669692848,74608889,74608704,CC BY-SA 4.0,"<p>If I understand the question right, you want to render either a <code><Card1/></code> or a <code><Card2/></code> for each field depending on whether or not it has been filled. To do this you can call the <code>.map()</code> function on the array of fields and pass in a function to check whether each field has been filled and conditionally return the appropriate card. Store the value returned by the <code>.map()</code> function in a constant, then include the constant in your render method.</p> <p>For example:</p> <pre><code>const fields = [a, b, c, d, e]; const cards = fields.map(field => {filled ? <Card2/> : <Card1/> });  render(   <div>     {cards};   </div> ) </code></pre> <p><a href=""https://reactjs.org/docs/lists-and-keys.html#rendering-multiple-components"" rel=""nofollow noreferrer"">Here</a> is the relevant documentation from the React website</p>",,,false
"{'account_id': 1276759, 'reputation': 1758, 'user_id': 1231844, 'user_type': 'registered', 'accept_rate': 74, 'profile_image': 'https://www.gravatar.com/avatar/a1f78abe1dde383bf35c0f06e505af72?s=256&d=identicon&r=PG', 'display_name': 'OFRBG', 'link': 'https://stackoverflow.com/users/1231844/ofrbg'}",True,1,1669687106,1669687106,74608373,74608297,CC BY-SA 4.0,"<p>This creates a new component reference on ever render, which causes the full subtree to remount. Define it so that it is statically available, outside of the render, or in this case outside <code>ProcedureServicesRowHeader</code>.</p>",,,false
"{'account_id': 24075279, 'reputation': 11, 'user_id': 18050712, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/027ebaac6221598415ef6238e68f6317?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Hudson Basso', 'link': 'https://stackoverflow.com/users/18050712/hudson-basso'}",False,0,1669691081,1669691081,74608735,74608258,CC BY-SA 4.0,"<p>I ended up solving this by adding a .nojekyll file and following some of the instructions here <a href=""https://jiafulow.github.io/blog/2020/07/09/create-gh-pages-branch-in-existing-repo/"" rel=""nofollow noreferrer"">https://jiafulow.github.io/blog/2020/07/09/create-gh-pages-branch-in-existing-repo/</a> to create an empty branch called 'gh-pages' and then my <code>yarn deploy</code> worked!</p>",,,false
"{'account_id': 2371392, 'reputation': 43243, 'user_id': 2075944, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/CGDE9.png?s=256', 'display_name': 'phry', 'link': 'https://stackoverflow.com/users/2075944/phry'}",False,1,1669707777,1669707777,74610603,74608226,CC BY-SA 4.0,"<p>Your reducer does not seem to be handling <code>API_REQUEST_FILTERED_COURSES</code>, so of course, nothing will happen with your state.</p> <p>Generally, just so you are aware: you are using an <strong>extremely</strong> outdated style of Redux here. Since 2019, we recommend using the official Redux Toolkit, which does not have ACTION_TYPES, switch..case reducers, hand-written action creators or immutable reducer logic with spread anymore. It is only 1/4 of the code. We also do not recommend using Redux-Saga anymore for most use cases - instead, you should be using RTK Query, <code>createAsyncThunk</code>, thunks, or the <code>listenerMiddlware</code>.<br /> I would highly recommend you to read <a href=""https://redux.js.org/introduction/why-rtk-is-redux-today"" rel=""nofollow noreferrer"">Why Redux Toolkit is how to use Redux today</a> and then to take <a href=""https://redux.js.org/tutorials/essentials/part-1-overview-concepts"" rel=""nofollow noreferrer"">the official Redux tutorial</a>. That old style of Redux you are using here is a pain and there is really no good reason to use that nowadays.</p>",,,false
"{'account_id': 13173718, 'reputation': 368762, 'user_id': 9515207, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3d5ccb4452ea5093f95c1da37acc764b?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'CertainPerformance', 'link': 'https://stackoverflow.com/users/9515207/certainperformance'}",True,0,1669684862,1669684862,74608172,74608155,CC BY-SA 4.0,"<p>A key being unique to a particular returned <code>.map</code> is enough. Your current code is fine - <em>in that sense</em>.</p> <p>But it would be better not to use the index as the key, in general - if the <code>books</code> or <code>movies</code> arrays ever have items removed or shifted around, the index will not be reliable as a key, because the same ""movie"" would then have a different index. Better to pick something unique from those objects - if no two movies will have the same <code>movie.label</code>, for example, that could be a good choice for a key. (or if you have anything like a unique <code>.movieId</code> property, that'd work too)</p>",,,false
"{'account_id': 27031397, 'reputation': 1186, 'user_id': 20587701, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/aHg04.jpg?s=256', 'display_name': 'NAZIR HUSSAIN', 'link': 'https://stackoverflow.com/users/20587701/nazir-hussain'}",False,0,1669700564,1669694934,74609073,74608065,CC BY-SA 4.0,"<p>you should define the <code>Register()</code> inside the <code>RegisterScreen</code> component like following..</p> <pre><code>function RegisterScreen({navigation}) {   const [username, setUsername] = useState('');   const [password, setPassword] = useState('');  function Register(username, password){   const user = new User(username, password);   //const navigation = useNavigation();   user_array.push(user)   console.log(user_array[0].username)   Alert.alert(""All Done!"", ""You have successfully registered."", [{text: ""OK"", onPress: () => {navigation.navigate('Home')}}]) }    return (     <View style={styles.container}>       <Text style={styles.label}>Registration</Text>       <TextInput          style={styles.input}          placeholder=""Username""         onChangeText={(text) => setUsername(text)}       />       <TextInput          style={styles.input}          placeholder=""Password""         onChangeText={(text) => setPassword(text)}       />       <Button         title=""Register""         onPress = {() => Register(username, password)}       />     </View>   ) } </code></pre> <p>or you can pass the navigation in Register function params like this</p> <pre><code>Register(username, password, navigation)      function Register(username, password, navigation){   const user = new User(username, password);   user_array.push(user)   console.log(user_array[0].username)   Alert.alert(""All Done!"", ""You have successfully registered."", [{text: ""OK"", onPress: () => {navigation.navigate('Home')}}]) } </code></pre> <p>and you can see <code>user_array</code> is not defined here and what is the meaning of this line <code>const user = new User(username, password);</code></p>",1669700564.0,,false
"{'account_id': 27071084, 'reputation': 67, 'user_id': 20621722, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e4b16e9edaf5fdc4f2ff1175b9f81a70?s=256&d=identicon&r=PG', 'display_name': 'Kriss_Vector', 'link': 'https://stackoverflow.com/users/20621722/kriss-vector'}",True,1,1669697917,1669685628,74608232,74608065,CC BY-SA 4.0,"<p>try put <code>Register</code> function inside <code>RegisterScreen</code></p> <p>edit: The third prop of Alert.alert is an object array, i wonder why you didn't get an error there</p> <pre><code>Alert.alert(""All Done!"", ""You have successfully registered."", [{text: ""OK"", onPress: () => {navigation.navigate('Home')}}]) </code></pre>",1669697917.0,,false
"{'account_id': 5258007, 'reputation': 404, 'user_id': 4200334, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/ZgwRi.jpg?s=256', 'display_name': 'dbonev', 'link': 'https://stackoverflow.com/users/4200334/dbonev'}",False,2,1669683508,1669683508,74608056,74608025,CC BY-SA 4.0,<pre><code>import React from 'react';  function App(){     return (         <div>             <button>-</button>             <span>0</span>             <button>+</button>         </div>     ) } </code></pre> <p>React component should return single element. In the current situation <strong>div</strong></p>,,,false
"{'account_id': 13173718, 'reputation': 368762, 'user_id': 9515207, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3d5ccb4452ea5093f95c1da37acc764b?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'CertainPerformance', 'link': 'https://stackoverflow.com/users/9515207/certainperformance'}",True,0,1669683340,1669683340,74608045,74608020,CC BY-SA 4.0,"<p>Webpack should be part of the frontend repository, so it should go into the <code>frontend/package.json</code>. Similarly, just like <code>frontend/eslintrc.json</code> is your linting settings for your frontend, you should create a <code>frontend/webpack.config.js</code> for your frontend webpack config.</p> <p>Since you're in VSCode, it looks like, when dealing with just the frontend, you could consider making things easier on yourself by going to File -> Open Folder -> select the Frontend folder, and then you can easily operate on it, its package, and everything it contains (without getting mixed up with the backend at all).</p> <p>Where your frontend folder goes is up to you, but your current approach is fine - organizing to have a <code>/frontend</code> and a separate <code>/backend</code> folder in the same parent directory if you wish.</p>",,,false
"{'account_id': 27071084, 'reputation': 67, 'user_id': 20621722, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e4b16e9edaf5fdc4f2ff1175b9f81a70?s=256&d=identicon&r=PG', 'display_name': 'Kriss_Vector', 'link': 'https://stackoverflow.com/users/20621722/kriss-vector'}",False,-2,1669795028,1669686060,74608271,74607730,CC BY-SA 4.0,"<p>maybe you should convert your function into <code>Class Component</code></p> <p>try change <code><img src={file} /></code> to <code><img src={this.state.file} /> </code></p> <p><code> <input type=""file"" onChange={handleChange} /></code> to <code><input type=""file"" onChange={this.handleChange} /></code></p>",1669795028.0,,false
"{'account_id': 15760814, 'reputation': 74536, 'user_id': 11372593, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-FQBr5NRaPHA/AAAAAAAAAAI/AAAAAAAABb0/XuGqOq18jyg/photo.jpg?sz=256', 'display_name': 'guillaume blaquiere', 'link': 'https://stackoverflow.com/users/11372593/guillaume-blaquiere'}",True,0,1669710509,1669710509,74611072,74607655,CC BY-SA 4.0,"<p>It's a common misunderstanding of how a website works. Take 2 sec and think about it: What are doing your frontend part?</p> <p>Let me help</p> <pre><code>handlers:   - url: /(.*\..+)$     static_files: build/\1     upload: build/(.*\..+)$   - url: /.*     static_files: build/index.html     upload: build/index.html </code></pre> <p>It serves only static files. Therefore, only static file means no processing, no instances, no variable definition in the runtime context because only static files are served.</p> <p>The runtime is on the client browser that run the JS code.</p> <p><em>Note: the counterpart great advantage, that the static page serving is free (in term of resource usage because there is no instance up and running to serve your files; the egress is billed)</em></p> <hr /> <p>So now, how to solve this?</p> <p>Simply build your static files with the API_LINK value INSIDE the static code.</p>",,"[{'tags': ['google-cloud-vision', 'google-cloud-run', 'firebase-in-app-messaging', 'google-cloud-instance-template', 'google-cloud-translate', 'cordova-plugin-firebasex', 'google-cloud-spanner', 'google-cloud-data-transfer', 'google-cloud-storage-r', 'firebase-security', 'firebase-realtime-database', 'google-cloud-sdk', 'google-cloud-launcher', 'firebase-admin', 'google-kubernetes-engine', 'recaptcha-enterprise', 'google-anthos', 'google-cloud-webrisk', 'google-app-engine-php', 'google-cloud-memorystore', 'jib', 'firebase-analytics', 'google-cloud-datastore', 'firebasesimplelogin', 'apigee', 'firebase-hosting', 'google-cloud-healthcare', 'google-cloud-transcoder', 'firebase-app-distribution', 'google-cloud-kms', 'google-cloud-test-lab', 'google-cloud-code', 'firebase-test-lab', 'firebase-ab-testing', 'google-cloud-debugger', 'google-cloud-stackdriver', 'google-app-engine', 'google-cloud-url-maps', 'google-cloud-endpoints-v2', 'google-cloud-ml', 'google-compute-engine', 'google-cloud-storage', 'react-redux-firebase', 'google-cloud-api-gateway', 'firebase-dynamic-links', 'firebase-predictions', 'react-native-firebase', 'redux-saga-firebase', 'google-cloud-dataprep', 'google-cloud-automl', 'google-migrate-for-compute-engine', 'google-cloud-logging', 'firebase-invites', 'cloud-document-ai', 'google-cloud-python', 'google-cloud-node', 'google-cloud-tools', 'firebase-extensions', 'google-app-engine-golang', 'rest-firebase', 'google-cloud-armor', 'firebase-polymer', 'nativescript-firebase', 'google-app-engine-deploy', 'firebase-cloud-messaging', 'dialogflow-cx', 'google-cloud-spanner-emulator', 'google-cloud-search', 'looker', 'firebase-crash-reporting', 'google-cloud-build', 'google-cloud-identity-aware-proxy', 'google-cloud-instances', 'google-cloud-repository', 'dialogflow-es', 'vertex-ai-search', 'google-cloud-tasks', 'google-analytics-firebase', 'google-cloud-datalab', 'firebase-storage', 'google-cloud-iot', 'google-cloud-source-repos', 'firebase-assistant', 'google-cloud-messaging', 'google-cloud-pubsublite', 'google-cloud-firestore', 'google-cloud-networking', 'google-container-optimized-os', 'google-cloud-iam', 'google-cloud-save', 'google-cloud-nl', 'google-translate', 'firebase-mlkit', 'firebase-admob', 'google-cloud-internal-load-balancer', 'firebase-notifications', 'google-cloud-cpp', 'google-cloud-filestore', 'firebase-app-check', 'google-cloud-print-privet', 'google-cloud-intellij', 'google-cloud-router', 'google-cloud-profiler', 'google-cloud-identity', 'google-app-engine-python', 'google-cloud-ai', 'google-cloud-bigtable', 'google-cloud-billing', 'gcloud', 'google-cloud-metrics', 'firebase-database', 'firebase', 'google-cloud-dataflow', 'firebase-tools', 'google-cloud-console', 'google-cloud-vertex-ai', 'firebase-cli', 'google-cloud-print', 'google-app-engine-go', 'google-cloud-talent-solution', 'google-cloud-dataproc-metastore', 'google-cloud-speech', 'google-cloud-visualstudio', 'google-container-os', 'google-container-builder', 'google-cloud-monitoring', 'google-cloud-error-reporting', 'google-cloud-ai-platform-pipelines', 'stackdriver', 'google-cloud-asset-inventory', 'google-cloud-robotics', 'google-cloud-ml-engine', 'google-cloud-dns', 'google-cloud-pubsub', 'google-bigquery', 'google-app-engine-launch', 'google-cloud-workstations', 'firebase-performance', 'google-cloud-ops-agent', 'firebase-job-dispatcher', 'google-cloud-platform', 'google-cloud-vpn', 'google-cloud-resource-manager', 'google-cloud-deploy', 'firebaseui', 'google-cloud-shell', 'google-cloud-dataproc', 'firebase-machine-learning', 'firebase-util', 'firebase-app-indexing', 'google-dataflow', 'google-cloud-scheduler', 'google-cloud-sql', 'apigee-baas', 'firebase-queue', 'google-cloud-data-fusion', 'google-cloud-network-load-balancer', 'bigtable', 'google-prediction', 'firebase-remote-config', 'looker-studio', 'google-cloud-proxy', 'google-cloud-composer', 'google-container-registry', 'google-cloud-automl-nl', 'firebase-authentication', 'google-cloud-php-client', 'google-cloud-endpoints', 'google-cloud-powershell', 'google-cloud-http-load-balancer', 'google-cloud-interconnect', 'google-cloud-language', 'google-fusion-tables', 'google-cloud-recommendation', 'google-cloud-tpu', 'google-cloud-shell-editor', 'google-cloud-cdn', 'google-cloud-load-balancer', 'google-cloud-dlp', 'google-app-engine-patch', 'google-cloud-marketplace', 'maven-jib', 'google-cloud-trace', 'google-cloud-functions', 'google-cloud-registry', 'dialogflow-es-fulfillment', 'firebase-console'], 'external_links': [{'type': 'support', 'link': 'https://stackoverflow.com/contact?topic=15'}], 'description': 'A collective for developers who utilize Google Cloudâs infrastructure and platform capabilities. This collective is organized and managed by the Stack Overflow community.', 'link': '/collectives/google-cloud', 'name': 'Google Cloud', 'slug': 'google-cloud'}]",false
"{'account_id': 9655650, 'reputation': 1489, 'user_id': 7165303, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-QzN9GsYrT-8/AAAAAAAAAAI/AAAAAAAAAIQ/dt-bAbLoh7E/photo.jpg?sz=256', 'display_name': 'Donovan Hiland', 'link': 'https://stackoverflow.com/users/7165303/donovan-hiland'}",False,2,1669679721,1669679721,74607732,74607650,CC BY-SA 4.0,"<p>You can find the solution here: <a href=""https://stackoverflow.com/questions/57798793/how-do-i-configure-absolute-paths-for-imports-in-typescript-based-react-native-a"">How do I configure absolute paths for imports in TypeScript based React Native apps?</a></p> <p>You either need to configure a babel plugin or put a package.json in your <code>src/</code> directory that looks like <code>{ name: 'src' }</code>. The name value in the package.json isn't important.</p>",,,false
"{'account_id': 15519980, 'reputation': 1584, 'user_id': 11196441, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c97a5db1d6ddca883b712f94af110d25?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Disco', 'link': 'https://stackoverflow.com/users/11196441/disco'}",True,1,1669710256,1669710256,74611031,74607479,CC BY-SA 4.0,"<p>Looks like you use a package made for leaflet. Which should for the most parts be okay. However the way you add the control is not really the <code>react-leaflet</code> way, where we want to add add components rather than add ""stuff"" directly to the map.</p> <p>Below you can see how easy it is to implement a location component that you simply just can add as component within your MapContainer.</p> <pre class=""lang-js prettyprint-override""><code>import { ActionIcon } from ""@mantine/core""; import React, { useState } from ""react""; import { useMapEvents } from ""react-leaflet""; import { CurrentLocation } from ""tabler-icons-react""; import LeafletControl from ""./LeafletControl"";  interface LeafletMyPositionProps {   zoom?: number; }  const LeafletMyPosition: React.FC<LeafletMyPositionProps> = ({ zoom = 17 }) => {   const [loading, setLoading] = useState<boolean>(false);   const map = useMapEvents({     locationfound(e) {       map.flyTo(e.latlng, zoom);       setLoading(false);     },   });    return (     <LeafletControl position={""bottomright""}>       <ActionIcon         onClick={() => {           setLoading(true);           map.locate();         }}         loading={loading}         variant={""transparent""}       >         <CurrentLocation />       </ActionIcon>     </LeafletControl>   ); };  export default LeafletMyPosition; </code></pre> <p>And for LeafletControl I just have this reusable component:</p> <pre class=""lang-js prettyprint-override""><code>import L from ""leaflet""; import React, { useEffect, useRef } from ""react"";  const ControlClasses = {   bottomleft: ""leaflet-bottom leaflet-left"",   bottomright: ""leaflet-bottom leaflet-right"",   topleft: ""leaflet-top leaflet-left"",   topright: ""leaflet-top leaflet-right"", };  type ControlPosition = keyof typeof ControlClasses; export interface LeafLetControlProps {   position?: ControlPosition;   children?: React.ReactNode; }  const LeafletControl: React.FC<LeafLetControlProps> = ({   position,   children, }) => {   const divRef = useRef(null);    useEffect(() => {     if (divRef.current) {       L.DomEvent.disableClickPropagation(divRef.current);       L.DomEvent.disableScrollPropagation(divRef.current);     }   });    return (     <div ref={divRef} className={position && ControlClasses[position]}>       <div className={""leaflet-control""}>{children}</div>     </div>   ); };  export default LeafletControl;  </code></pre>",,,false
"{'account_id': 22163035, 'reputation': 61, 'user_id': 16409721, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GgpFs3KSLY7sWR8sCXPBA1VlggyRMO2wQd7jvY0Lew=k-s256', 'display_name': 'Dave Gray', 'link': 'https://stackoverflow.com/users/16409721/dave-gray'}",False,0,1669681092,1669681092,74607853,74607479,CC BY-SA 4.0,<p>I would do some debugging to that useEffect to see if it's only happening once. It's possible the entire component is mounted multiple times.</p>,,,false
"{'account_id': 24696229, 'reputation': 136, 'user_id': 18588172, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJzYOzP3GDRxBiiMctJGP1zBVILsGR-tTunVU6GO=k-s256', 'display_name': 'EvanrobbyMacharia', 'link': 'https://stackoverflow.com/users/18588172/evanrobbymacharia'}",False,2,1705917670,1705917670,77858984,74607419,CC BY-SA 4.0,"<p>I had a similar issue and adding and the solutions above did not work for my use case since my markdown contained some HTML tags like <code><u> </u></code> etc in it. so I resulted to adding rehype-raw plugin to my ReactMarkdown. <code>npm install rehype-raw</code></p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>import rehypeRaw from 'rehype-raw'; import ReactMarkdown from 'react-markdown';  <ReactMarkdown   rehypePlugins={[rehypeRaw]}>         {description}  </ReactMarkdown></code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 23518650, 'reputation': 41, 'user_id': 17566149, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/f9bd3db169e21f48983ed1e60ba10cad?s=256&d=identicon&r=PG', 'display_name': 'M1do', 'link': 'https://stackoverflow.com/users/17566149/m1do'}",False,3,1681854436,1681374034,76003213,74607419,CC BY-SA 4.0,"<p>I see that you are using tailwindcss to style HTML that you don't control. With tailwindcss, you can use <a href=""https://tailwindcss.com/docs/typography-plugin"" rel=""nofollow noreferrer"">@tailwindcss/typography</a>.</p> <p>It allows you to style it however you like using the <code>prose</code> class.</p>",1681854436.0,,false
"{'account_id': 8010915, 'reputation': 337, 'user_id': 6042653, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-vHfBFBFLhb0/AAAAAAAAAAI/AAAAAAAAACk/VTC-awbJ-WQ/photo.jpg?sz=256', 'display_name': 'Jose Manuel Barrios Lacruz', 'link': 'https://stackoverflow.com/users/6042653/jose-manuel-barrios-lacruz'}",False,1,1675804426,1675804426,75379059,74607419,CC BY-SA 4.0,"<p>You can try this:</p> <p>First you have install</p> <pre><code>$ yarn add remark-gfm </code></pre> <p>then</p> <pre><code><ReactMarkdown   className={styles.markdown}   remarkPlugins={[remarkGfm]} >   {content} </ReactMarkdown> </code></pre> <p>where style.markdown is</p> <pre class=""lang-css prettyprint-override""><code>@import 'mixins';  .markdown {   table {     border-collapse: collapse;   }    th,   td {     padding: 6px 13px;     border: 1px solid black;   }    p {     line-height: 1.5;   } } </code></pre> <p>The result:</p> <p><a href=""https://i.sstatic.net/XDkSM.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/XDkSM.png"" alt=""enter image description here"" /></a></p>",,,false
"{'account_id': 24302288, 'reputation': 601, 'user_id': 20617445, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e8a8c24676ef4c47cd70dbe84d5dacd8?s=256&d=identicon&r=PG', 'display_name': 'Viktor Marinho', 'link': 'https://stackoverflow.com/users/20617445/viktor-marinho'}",True,46,1669677175,1669677175,74607475,74607419,CC BY-SA 4.0,"<p>The problem here is that React-markdown map the markdown text to real html elements, and you're using tailwindcss.</p> <p>Tailwind takes out all default styles applied to html elements. Luckily there is a really easy workaround:</p> <pre><code>.markdown > * {   all: revert; } </code></pre> <p>Create a class like this in your ""<code>index.css</code>""  file that contains your tailwind directives. After that, just put ""<code>markdown</code>"" in the ReactMarkdown component classes and you're good to go.</p>",,,false
"{'account_id': 106364, 'reputation': 164098, 'user_id': 283366, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/9ad213d8adabe4b64c2d53c5e0e3cab4?s=256&d=identicon&r=PG', 'display_name': 'Phil', 'link': 'https://stackoverflow.com/users/283366/phil'}",True,2,1676517795,1669677004,74607449,74607186,CC BY-SA 4.0,"<p>Browsers cannot currently send GET requests with a request body. <code>XMLHttpRequest</code> (which Axios uses) will ignore it and <code>fetch()</code> will trigger an error.</p> <p>See also <a href=""https://stackoverflow.com/q/978061/283366"">HTTP GET with request body</a> for extra discussion on why trying this might be a bad idea.</p> <p>You should instead pass everything required in the query string, preferably via the <code>params</code> option so it is correctly encoded...</p> <pre class=""lang-js prettyprint-override""><code>export const getPostsByKeyword = (keyword, page) =>   API.get(""/post/getPostsByKey"", { params: { page, keyword } }); </code></pre> <p>and grab the data via <code>req.query</code> server-side.</p> <pre class=""lang-js prettyprint-override""><code>const { page, keyword } = req.query; </code></pre> <p>With vanilla JS, you can use <a href=""https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams"" rel=""nofollow noreferrer"">URLSearchParams</a> to construct the query string...</p> <pre class=""lang-js prettyprint-override""><code>const params = new URLSearchParams({ page, keyword });  // XHR const xhr = new XMLHttpRequest(); xhr.open(""GET"", `/post/getPostsByKey?${params}`);  // Fetch fetch(`/post/getPostsByKey?${params}`); // GET is the default method </code></pre> <hr /> <p>Your Axios instance creation could also be a lot simpler...</p> <ol> <li>Axios is usually quite good at setting the correct <code>content-type</code> header, you don't have to</li> <li>Your Express app isn't doing any content-negotiation so you don't need to set the <code>accept</code> header</li> <li>Unless you're actually using cookies (which it doesn't look like), you don't need credential support</li> </ol> <pre class=""lang-js prettyprint-override""><code>const API = axios.create({ baseURL }); </code></pre>",1676517795.0,,false
"{'account_id': 6572740, 'reputation': 1006, 'user_id': 5080069, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c42a83a58ff07b4c86dccae938eb805e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'callOfCode', 'link': 'https://stackoverflow.com/users/5080069/callofcode'}",False,0,1669675966,1669675529,74607278,74607123,CC BY-SA 4.0,"<p>Instead of keeping value in Context or State of parent component, keep there callback from ChildComponentA and call it from ChildComponentB.</p> <p>This way only sibling component will be rerendered.</p> <p>Example:</p> <pre><code>const ChildComponentA = () => {    const context = useContext(SomeContextToStoreCallback)    useEffect(() => {       context.callback = (value) => {          // Do something expensive       }       return () => {         context.callback = undefined;       }    }, [])    // rest of the code.... }  const ChildComponentB = () => {    const context = useContext(SomeContextToStoreCallback)        const handleSomeEvent = (value) => {      context.callback?.(value)    }    // rest of code..... } </code></pre> <p>This is only a pseudo code, but you've got an idea. Something similar is used in large libraries like mui-x</p>",1669675966.0,,false
"{'account_id': 16272621, 'reputation': 474, 'user_id': 11750723, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-RUwJ7E0s520/AAAAAAAAAAI/AAAAAAAAD3I/oeoHEtAJK0I/photo.jpg?sz=256', 'display_name': 'Alexey Zalyotov', 'link': 'https://stackoverflow.com/users/11750723/alexey-zalyotov'}",False,1,1669675344,1669675344,74607250,74607071,CC BY-SA 4.0,"<p>Did you follow all the steps from the <a href=""https://fontawesome.com/docs/web/use-with/react/#_3-add-the-react-component"" rel=""nofollow noreferrer"">documentation</a>? The third step is to add the <code>FontAwesomeIcon</code> component and use it the following way:</p> <pre><code><FontAwesomeIcon icon={faBars} /> </code></pre> <p>Check the <a href=""https://fontawesome.com/docs/web/use-with/react/add-icons#alternative-ways-to-add-icons"" rel=""nofollow noreferrer"">docs</a> about how to use icons</p> <p>PS: do not forget to import the component and the icon:</p> <pre><code>import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; import { faBars } from '@fortawesome/free-solid-svg-icons';  </code></pre>",,,false
"{'account_id': 26931715, 'reputation': 314, 'user_id': 20504019, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0yY2nT897Da6A7uTBchebCNCVHp_XeZiKIS2y3=k-s256', 'display_name': 'Jay F.', 'link': 'https://stackoverflow.com/users/20504019/jay-f'}",True,2,1669674317,1669674317,74607109,74607071,CC BY-SA 4.0,"<p>Based on Font Awesome docs, it should be used like the following:</p> <pre><code>import { FontAwesomeIcon } from '@fortawesome/react-fontawesome' import { faCoffee } from '@fortawesome/free-solid-svg-icons'  const App = () => {    return (<div><FontAwesomeIcon icon={faCoffee} /></div>) }  export default App </code></pre>",,,false
"{'account_id': 1590067, 'reputation': 1106, 'user_id': 1473593, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/10e63d41ae1d5ec5f7dd0ebbe88f07e4?s=256&d=identicon&r=PG', 'display_name': 'Anas Naguib', 'link': 'https://stackoverflow.com/users/1473593/anas-naguib'}",False,0,1691618510,1691618510,76871547,74607048,CC BY-SA 4.0,"<p>You can use Keycloak custom theme. Please refer to the documentation in the following link.</p> <p><a href=""https://www.keycloak.org/docs/latest/server_development/#_themes"" rel=""nofollow noreferrer"">https://www.keycloak.org/docs/latest/server_development/#_themes</a></p>",,,false
"{'account_id': 27145118, 'reputation': 91, 'user_id': 20685460, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/qHO8W.jpg?s=256', 'display_name': 'WILTKn', 'link': 'https://stackoverflow.com/users/20685460/wiltkn'}",False,9,1683554920,1670193089,74681533,74607048,CC BY-SA 4.0,"<p>In Keycloak, one of the ways you can change the Keycloak logo is by overriding a theme.  The benefit of doing it this way over forking and building the entire keycloak-admin-ui repo is you can control and focus only on customizing the components you want, cutting down the size of your new theme and reducing unnecessary duplication.</p> <p>For your specific use-case (tested in Keycloak 20.0.1), I did the following to change the Keycloak Logo on the Admin Console Page:</p> <ol> <li><p>Per the <a href=""https://www.keycloak.org/docs/latest/server_development/#_themes"" rel=""noreferrer"">Theme Guide for Keycloak</a>, custom themes can be added to keycloak by placing them into <code>/opt/keycloak/themes</code>. After Keycloak starts the theme can then be selected in the <strong>Realm Settings</strong>. Therefore, I created a new folder in <code>/opt/keycloak/themes</code> for my custom theme, called <code>myCustomTheme</code>.</p> </li> <li><p>The new folder will contain the theme definition for different parts of Keycloak.  Since we only care about changing the logo in the Admin Console, we create a folder in <code>/opt/keycloak/themes/myCustomTheme</code> for overriding the Admin Console Theme.  Per the <a href=""https://www.keycloak.org/docs/latest/server_development/#theme-types"" rel=""noreferrer"">defined set of theme types</a>, this folder should be called <code>admin</code>.  This is so that when you are selecting themes in <strong>Realm Settings</strong> within the <strong>Admin Console</strong>, the <strong>MyCustomTheme</strong> option will be listed under the <strong>Admin Console</strong> section (see images below).</p> </li> <li><p>Inside of <code>/opt/keycloak/themes/myCustomTheme/admin</code> is where the theme overriding begins. A configuration file called <code>theme.properties</code> should be created. This file is the first thing read by Keycloak when loading your theme and contains information about the theme environment. For more detailed information, see the description of <a href=""https://www.keycloak.org/docs/latest/server_development/#theme-properties"" rel=""noreferrer"">Theme Properties</a>.</p> <ul> <li><p>Since we are overriding the <strong>keycloak.v2</strong> theme, we add the <code>parent</code> field to the properties file, specifying the base theme we are inheriting from. We set it to <code>keycloak.v2</code>, so that <strong>myCustomTheme</strong> will inherit the <strong>keycloak.v2</strong> theme for all of its components unless we are overriding something specific.</p> <p><code>parent=keycloak.v2</code></p> </li> </ul> </li> <li><p>This next step required a bit of exploration and trial-and-error of how the default <strong>keycloak.v2</strong> theme is structured, but I found that the place where the Keycloak logo is defined for keycloak.v2 is in <code>keycloak.v2/admin/resources/logo.svg</code>. Therefore, for <strong>myCustomTheme</strong>, all one would have to do to use a custom logo that overrides the default <code>keycloak.v2</code> one is add a <code>resources</code> folder to <code>/opt/keycloak/themes/myCustomTheme/admin</code> and add the custom SVG image as a file called <code>logo.svg</code>.</p> <ul> <li>Note that this is different than what the <a href=""https://www.keycloak.org/docs/latest/server_development/#adding-an-image-to-a-theme"" rel=""noreferrer"">Keycloak Docs suggest</a>, which has you creating the same <code>resources</code> folder but also an <code>img</code> folder inside of it which would contain your images. I suspect this has to do with the fact that we are overriding an image instead of adding one, and the <strong>keycloak.v2</strong> theme code does not follow its own guide and instead places its logo in <code>resources</code> instead of <code>resources/img</code>.</li> </ul> </li> <li><p>Start Keycloak, go to the Admin Console, sign in and go to <strong>Realm Settings > Themes > Admin Console theme</strong>, and select <strong>myCustomTheme</strong>.  Refresh and you should see your icon change now.</p> </li> </ol> <p>Below is the results of doing the above, showing my resulting folder structure and the Before/After of replacing the Keycloak logo with <a href=""https://publicdomainvectors.org/en/free-clipart/Vector-image-of-green-thumbs-up-hand/22727.html"" rel=""noreferrer"">some random SVG I got from public domain</a>:</p> <ul> <li><strong>Folder structure</strong>: <a href=""https://ibb.co/h9kZqb3"" rel=""noreferrer"">https://ibb.co/h9kZqb3</a></li> <li><strong>Before/After</strong>: <a href=""https://ibb.co/cJ6t434"" rel=""noreferrer"">https://ibb.co/cJ6t434</a></li> </ul>",1683554920.0,,false
"{'account_id': 5112931, 'reputation': 181, 'user_id': 4582691, 'user_type': 'registered', 'accept_rate': 25, 'profile_image': 'https://lh3.googleusercontent.com/-O3xwLRw9dnQ/AAAAAAAAAAI/AAAAAAAADTI/bwd6gMBJ4g0/photo.jpg?sz=256', 'display_name': 'aravind pogu', 'link': 'https://stackoverflow.com/users/4582691/aravind-pogu'}",False,2,1669950595,1669950595,74650472,74607048,CC BY-SA 4.0,"<p>The new admin UI (starting from keycloak 19) has been delivered through keycloak-admin-ui.jar. In order to customize any UI components, it has to be done by forking this <a href=""https://github.com/keycloak/keycloak-ui"" rel=""nofollow noreferrer"">repo</a> and build on your own.</p>",,,false
"{'account_id': 1291641, 'reputation': 50531, 'user_id': 1243641, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/a70aa9d494bf438c8b56aced999e897f?s=256&d=identicon&r=PG', 'display_name': 'Scott Sauyet', 'link': 'https://stackoverflow.com/users/1243641/scott-sauyet'}",True,0,1669730280,1669730280,74615252,74606917,CC BY-SA 4.0,"<p>I <em>think</em> this is what you want.  I had to change your input data as it seems that your input was the same as the output you wanted, so the change wasn't visible.  It should run before the <code>activeHeros .map</code> call in <code>render</code>, I believe.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const countBy = (fn) => (xs) =>    xs .reduce ((a, x, _, __, k = fn (x)) => ((a [k] = (a [k] || 0) + 1), a), {})  const sortCounters = (   heros,    index = countBy (c => c .name) (heros .flatMap (h => h .counters)) ) => heros .map (   hero => ({     ... hero,      counters: [...hero .counters] .sort (       (a, b) => index [b .name] - index [a .name]     )    }) )  const heros = [   {counters: [{name: ""a""}, {name: ""k""}, {name: ""q""}]},   {counters: [{name: ""k""}, {name: ""q""}, {name: ""y""}]},   {counters: [{name: ""k""}, {name: ""q""}, {name: ""w""}]},   {counters: [{name: ""b""}, {name: ""p""}, {name: ""q""}]},   {counters: [{name: ""d""}, {name: ""e""}, {name: ""f""}]} ]  console .log (sortCounters (heros)) /* => [   {counters: [{name: ""q""}, {name: ""k""}, {name: ""a""}]},    {counters: [{name: ""q""}, {name: ""k""}, {name: ""y""}]},    {counters: [{name: ""q""}, {name: ""k""}, {name: ""w""}]},    {counters: [{name: ""q""}, {name: ""b""}, {name: ""p""}]},    {counters: [{name: ""d""}, {name: ""e""}, {name: ""f""}]} ]  */</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.as-console-wrapper {max-height: 100% !important; top: 0}</code></pre>  </div>  </div>  </p> <p>Here we have a function <code>sortCounters</code> that takes an array of heros (?), objects with <code>counters</code> array properties containing items that have a <code>name</code> property.  We use a <code>countBy</code> helper to create an index, something like:</p> <pre class=""lang-js prettyprint-override""><code>{a: 1, k: 3, q: 4, y: 1, w: 1, b: 1, p: 1, d: 1, e: 1, f: 1} </code></pre> <p>Then we copy each hero, sorting its counters according to the counts in that list.  If they are the same, we don't care, but most (all?) modern JS engines implement a stable sort, meaning they won't get reordered if they are all the same.  We could easily add a secondary sort by name or something else if desired.</p>",,,false
"{'account_id': 13595670, 'reputation': 177, 'user_id': 9807805, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=256', 'display_name': 'Levi Yoder', 'link': 'https://stackoverflow.com/users/9807805/levi-yoder'}",False,0,1669677159,1669677159,74607474,74606637,CC BY-SA 4.0,<p>Uninstalling both dependencies and then running npm update resolved my issues</p>,,,false
"{'account_id': 2371392, 'reputation': 43243, 'user_id': 2075944, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/CGDE9.png?s=256', 'display_name': 'phry', 'link': 'https://stackoverflow.com/users/2075944/phry'}",False,3,1669676831,1669676831,74607430,74606621,CC BY-SA 4.0,"<p>You are not allowed to trigger any side effect in a Redux Reducer, ever. You will need to find another place to do something like this - if you want to tie it to the Redux action being dispatched, you could look into the <a href=""https://redux-toolkit.js.org/api/createListenerMiddleware"" rel=""nofollow noreferrer"">listener middleware</a>.</p>",,,false
"{'account_id': 22771197, 'reputation': 11, 'user_id': 16928596, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/a29cebcd87f47a473126db05ecb632cb?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'WhiteOwl', 'link': 'https://stackoverflow.com/users/16928596/whiteowl'}",True,1,1670779716,1670779716,74763000,74606530,CC BY-SA 4.0,"<p>In the meantime I found a solution for the problem. There already exists <a href=""https://github.com/inovua/reactdatagrid/issues/300"" rel=""nofollow noreferrer"">an issue</a> in the reactdatagrid Github repository which describes the problem I had and which is solved in reactdatagrid 5.x.x. As I used reactdatagrid 4.x the problem arosed to me. I simply updated to the current version 5.8.0 and the problem was gone.</p>",,,false
"{'account_id': 27102221, 'reputation': 21, 'user_id': 20648574, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0xM_28LVxAtXRnFEWXl5rQ-TFwEmWFLmNBv1kR=k-s256', 'display_name': 'Michal Jankowski', 'link': 'https://stackoverflow.com/users/20648574/michal-jankowski'}",False,2,1669832150,1669832150,74632429,74606440,CC BY-SA 4.0,<p>sanity-plugin-media@1.4.13 use >5. 1.4.10 works</p>,,,false
"{'account_id': 14110607, 'reputation': 529, 'user_id': 10193563, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-plHCuHi5daQ/AAAAAAAAAAI/AAAAAAAAADo/78Gbe1dIKoY/photo.jpg?sz=256', 'display_name': 'Aidan Marshall', 'link': 'https://stackoverflow.com/users/10193563/aidan-marshall'}",True,4,1669814704,1669814704,74628538,74606440,CC BY-SA 4.0,"<p>I ran into this issue just now and after doing some digging, it seems like Sanity v2 doesn't play well with <code>react-select@^5</code>. I had a look at some Sanity plugins that have upgraded <code>react-select@^5</code> recently and all packages trigger this error message. You should bind the following packages to the latest version that has <code>react-select</code> smaller than 5.</p> <p><code>yarn add</code> or <code>npm install</code></p> <ul> <li><code>sanity-plugin-autocomplete-tags@1.0.0</code></li> <li><code>sanity-plugin-media@1.4.13</code></li> <li><code>sanity-plugin-order-documents@0.0.19</code></li> </ul>",,,false
"{'account_id': 25688093, 'reputation': 41, 'user_id': 19449873, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/LOIDT.jpg?s=256', 'display_name': 'larovski', 'link': 'https://stackoverflow.com/users/19449873/larovski'}",False,4,1669707999,1669707999,74610650,74606440,CC BY-SA 4.0,"<p>If you are using the sanity-plugin-media package, then you should update it to the newest version. This should resolve your issue!</p>",,,false
"{'account_id': 17784410, 'reputation': 10856, 'user_id': 12914833, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/mNLi2.jpg?s=256', 'display_name': 'Chris Hamilton', 'link': 'https://stackoverflow.com/users/12914833/chris-hamilton'}",True,1,1669674013,1669671441,74606720,74606408,CC BY-SA 4.0,"<p>You should hold the circles in a state variable</p> <pre><code>  const [circles] = useState(renderCircles(15));    return (     <div className=""App"">       <div className=""App-game"">{circles}</div>       <div className=""App-currency"" style={{ color: 'black', fontSize: 80 }}>         {count}       </div>     </div>   ); </code></pre> <hr /> <p>You also have an issue with the size of the svg wrapping the circles - it's much bigger, so the click event can be fired without actually clicking on the circle. You need to set the display to none to prevent the circle from being clicked on again as well.</p> <pre><code>  function renderCircle(xPos, yPos, color, value) {     const id = (ctr++).toString();     function handleClick() {       setCount((prev) => prev + value);       const el = document.getElementById(id);       el.style.display = 'none';     }     return (       <svg         className=""circle""         id={id}         onClick={handleClick}         style={{           left: `calc(${xPos}vw - 60px)`,           top: `calc(${yPos}vw - 60px)`,           width: 60,           height: 60,           position: 'absolute',         }}       >         <circle cx={'50%'} cy={'50%'} r={'50%'} fill={color} />       </svg>     );   } </code></pre> <p>Stackblitz: <a href=""https://stackblitz.com/edit/react-ts-b6jddu?file=App.tsx"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/react-ts-b6jddu?file=App.tsx</a></p> <hr /> <p>Notice when incrementing the count I also changed the <code>setCount</code> parameter to a callback function. You should make a habit of doing that when the new value relies on the previous value. Otherwise you may run into bugs down the line.</p> <p>For example:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const {useState} = React;  function App() {   // count is a local variable, which the value of the state gets copied onto here   const [count, setCount] = useState(0);      function incrementThreeTimesWrong() {     // count is 0 here     setCount(count + 1); // sets to 0 + 1     setCount(count + 1); // sets to 0 + 1     setCount(count + 1); // sets to 0 + 1     // count is still 0 here - setCount does not mutate the local variable     // However setCount triggers a rerender, which will update the local variable to 1   }    function incrementThreeTimesRight() {     setCount(prev => prev + 1); // sets to 0 + 1     setCount(prev => prev + 1); // sets to 1 + 1     setCount(prev => prev + 1); // sets to 2 + 1   }      return (     <div>       <p>{count}</p>       <button onClick={incrementThreeTimesWrong}>Increment three times the wrong way</button>       <br/>       <button onClick={incrementThreeTimesRight}>Increment three times the right way</button>     </div>); }  ReactDOM.createRoot(     document.getElementById(""root"") ).render(     <App /> );</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div id=""root""></div> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.1.0/umd/react.development.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.1.0/umd/react-dom.development.js""></script></code></pre>  </div>  </div>  </p>",1669674013.0,,false
"{'account_id': 24302288, 'reputation': 601, 'user_id': 20617445, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e8a8c24676ef4c47cd70dbe84d5dacd8?s=256&d=identicon&r=PG', 'display_name': 'Viktor Marinho', 'link': 'https://stackoverflow.com/users/20617445/viktor-marinho'}",False,0,1669676208,1669676208,74607362,74606323,CC BY-SA 4.0,"<p>Instead of thinking how to render your django model in react, i think it is easier to understand when you think in the server-client model.</p> <p>Basically you want to get you data from your django server and then show it in the client, using react.</p> <p>To do this with Django rest framework, the best way is to make HTTP requests from the client to the server. You could use the browser built-in <code>fetch</code> api from javascript or a http library like axios.</p> <p>You can read more about fetch <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch"" rel=""nofollow noreferrer"">here</a></p>",,,false
"{'account_id': 21608458, 'reputation': 11, 'user_id': 15935474, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/37dd0211044bd45248a210622ae15e39?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Jeigue', 'link': 'https://stackoverflow.com/users/15935474/jeigue'}",False,0,1719165129,1719165129,78659448,74606316,CC BY-SA 4.0,"<p>I just ran into this error. The solution that worked for me was to rename the parent directory excluding any special characters.</p> <p>Initially, my parent directory was named: ""Build apps using NextJS v14 grider"". I renamed the directory to: ""Build_apps_using_NextJS_v14_grider"". Now, <code>npm run dev</code> works.</p> <p>The spaces were read as special characters which apparently cause an issue with module resolution in Node.js</p> <p>For reference, here is the error that I received:</p> <pre><code>The module 'react-dom' was not found. Next.js requires that you include it in 'dependencies' of your 'package.json'. To add it, run 'npm install react-dom' node:internal/modules/esm/resolve:238     throw new ERR_INVALID_MODULE_SPECIFIER(           ^  TypeError [ERR_INVALID_MODULE_SPECIFIER]: Invalid module ""/Users/user1/Documents/Udemy/Build%5C%20apps%5C%20using%5C%20NextJS%5C%20v14%5C%20grider/corp/node_modules/next/dist/cli/next-dev.js"" must not include encoded ""/"" or ""\"" characters imported from /Users/user1/Documents/Udemy/Build\ apps\ using\ NextJS\ v14\ grider/corp/node_modules/next/dist/bin/next     at finalizeResolution (node:internal/modules/esm/resolve:238:11)     at moduleResolve (node:internal/modules/esm/resolve:924:10)     at defaultResolve (node:internal/modules/esm/resolve:1148:11)     at ModuleLoader.defaultResolve (node:internal/modules/esm/loader:528:12)     at ModuleLoader.resolve (node:internal/modules/esm/loader:497:25)     at ModuleLoader.getModuleJob (node:internal/modules/esm/loader:231:38)     at ModuleLoader.import (node:internal/modules/esm/loader:460:34)     at defaultImportModuleDynamicallyForScript (node:internal/modules/esm/utils:227:31)     at importModuleDynamicallyCallback (node:internal/modules/esm/utils:249:12)     at Command.<anonymous> (/Users/user1/Documents/Udemy/Build\ apps\ using\ NextJS\ v14\ grider/corp/node_modules/next/dist/bin/next:85:5) {   code: 'ERR_INVALID_MODULE_SPECIFIER' }``` </code></pre>",,,false
"{'account_id': 17567156, 'reputation': 3020, 'user_id': 12743692, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jG5eJ.png?s=256', 'display_name': 'dreambold', 'link': 'https://stackoverflow.com/users/12743692/dreambold'}",False,1,1669830515,1669668846,74606371,74606316,CC BY-SA 4.0,"<p>Please check your <code>package.json</code> and add  <code>react ^18.2.0 </code> to the <code>dependencies</code> list and run <code>npm i</code> again. You'll need to delete the <code>package-lock.json</code> file first.</p> <p>Or just run:</p> <pre><code>npm i react react-dom @types/react @types/react-dom </code></pre> <p>You can Try to delete your package-lock file and <code>run rm -rf node_modules</code>, <code>npm cache clean --force</code>, and then run <code>npm i</code> again. Hope it helps!</p>",1669830515.0,,false
"{'account_id': 13120098, 'reputation': 274, 'user_id': 9477805, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-jTwkjtgtU9s/AAAAAAAAAAI/AAAAAAAAACo/n36QCHYO2lw/photo.jpg?sz=256', 'display_name': 'Ram Kishore', 'link': 'https://stackoverflow.com/users/9477805/ram-kishore'}",False,0,1669669471,1669669471,74606450,74606292,CC BY-SA 4.0,"<pre><code> const {loadedPlaces, setLoadedPlaces} = useState(); </code></pre> <p>change the above line to</p> <pre><code>  const [loadedPlaces, setLoadedPlaces] = useState(); </code></pre>",,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",True,1,1669760385,1669668211,74606269,74606242,CC BY-SA 4.0,"<p>You have one <code>open</code> prop for all of the menus. Try to store opened menu name or id and then in menu check if current menu name\id is equal to one that you store in state.</p> <p><strong>UPDATE</strong></p> <p>I'll add here a basic explanation, this wouldn't be with your actual code, just a minimal example to get you some better understanding</p> <pre><code>const menus = [""profile"", ""items"", ""cart""];  const Menu = () => {   const [openedItem, setOpenedItem] = useState("""") // here you can set some menu item so it can be opened by default    const handleMenuItemOpen = (itemId) => {     setOpenedItem(itemId)   }    return (     <Menu>        {menus.map(menuItem => (           <MenuItemComponent              isOpened={openedItem === menuItem}              handleOpen={() => setOpenedItem(menuItem)}           >             {menuItem}           </MenuItemComponent>        ))}     </Menu>   ) } </code></pre> <p>(Menu and MenuItemComponent are just some abstract components, in your case you should use what you are currently use, I used them just to get rid of a lot of code and make more focus on main part)</p> <p>This is just a basic example. Here is what happened here, when you click on some item, you set its id (any unique property that you have, in case of predefined static list of menus you can use even index of menu item, it will not affect your app behavior, but I do not recommend using indexes just because you can develop a bad habit), and when you render your menu items components, it will check for each component is it's id equal to id that is currently set as opened. So only one component will have an isOpened={true} in case if you have unique menu items list.</p> <p>In your case, you have one boolean prop ""open"" that you use for all of your menu items, so when it became true, each of your menu items became opened.</p> <p>Hope it helped!</p>",1669760385.0,,false
"{'account_id': 15884057, 'reputation': 1130, 'user_id': 19027584, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2byRd.jpg?s=256', 'display_name': 'Martinez', 'link': 'https://stackoverflow.com/users/19027584/martinez'}",True,1,1669668313,1669668313,74606282,74606231,CC BY-SA 4.0,"<p>To get the desired output you could do the following:</p> <pre><code>`(${data_start.replaceAll('-', ', ')})` </code></pre>",,,false
"{'account_id': 24302288, 'reputation': 601, 'user_id': 20617445, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e8a8c24676ef4c47cd70dbe84d5dacd8?s=256&d=identicon&r=PG', 'display_name': 'Viktor Marinho', 'link': 'https://stackoverflow.com/users/20617445/viktor-marinho'}",False,0,1669676783,1669676783,74607425,74606193,CC BY-SA 4.0,"<p>You can do the csv file upload via a HTTP POST request with the <code>{""Content-Type"": ""multipart/form-data""}</code> header. After that, you can read the file with some python library that handles datasets like pandas, process everything you want about it and then send it back to the client. After that you can delete your file.</p> <p>Depending of the time of this operation this request can become really slow, though.</p> <p>I also think there is probably a cleaner solution where you dont even need to utilize the filesystem, just manipulate the file in-memory that came from the request, but i never tried to do something like that in django.</p>",,,false
"{'account_id': 24289808, 'reputation': 167, 'user_id': 18235030, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/2dd7a348515cbb3dd5abad5b193c1bc3?s=256&d=identicon&r=PG', 'display_name': 'JonD', 'link': 'https://stackoverflow.com/users/18235030/jond'}",True,0,1669709457,1669709155,74610854,74606142,CC BY-SA 4.0,"<p>I ended up using <a href=""https://www.npmjs.com/package/react-select"" rel=""nofollow noreferrer"">React Select</a>, which appears to be working much more in my favor now. I have a demo below, and I will provide more updates here if I run into any issues.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from 'react'; import ReactDOM from 'react-dom'; import Select from 'react-select'; import './Filterbar.css'  const propertyTypeOptions = [   { value: 'All', label: 'All' },   { value: 'Single Family Home', label: 'Single Family Home' },   { value: 'Multi Family Home', label: 'Multi Family Home' }, ]; const propertyPriceOptions = [   { value: 0, label: 'All' },   { value: 500, label: '500' },   { value: 1000, label: '1,000' },   { value: 1500, label: '1,500' },   { value: 2000, label: '2,000' },   { value: 2500, label: '2,500' },   { value: 3000, label: '3,000' },   { value: 3500, label: '3,500' }, ]; const propertyBedroomOptions = [   { value: 0, label: 'All' },   { value: 1, label: '1' },   { value: 2, label: '2' },   { value: 3, label: '3' },   { value: 4, label: '4' },   { value: 5, label: '5' },   { value: 6, label: '6' },   { value: 7, label: '7' },   { value: 8, label: '8' },   { value: 9, label: '9' }, ]; const propertyBathroomOptions = [   { value: 0, label: 'All' },   { value: 1, label: '1' },   { value: 2, label: '2' },   { value: 3, label: '3' },   { value: 4, label: '4' },   { value: 5, label: '5' },   { value: 6, label: '6' },   { value: 7, label: '7' },   { value: 8, label: '8' },   { value: 9, label: '9' }, ]; const propertyCityOptions = [   { value: 'All', label: 'All' },   { value: 'Cape Coral', label: 'Cape Coral' },   { value: 'Fort Myers', label: 'Fort Myers' },   { value: 'Lehigh Acres', label: 'Lehigh Acres' }, ]; class RentalFilterbar extends React.Component {   state = {     selectedPropertyTypeOptions: null,     selectedPriceOptions: null,   };   handleChangePropertyTypeOptions = (selectedPropertyTypeOptions) => {     this.setState({ selectedPropertyTypeOptions }, () =>       console.log(`propertyTypeOptions selected:`, this.state.selectedPropertyTypeOptions)       );   };   handleChangePropertyPriceOptions = (selectedPropertyPriceOptions) => {     this.setState({ selectedPropertyPriceOptions }, () =>       console.log(`selectedPropertyPriceOptions selected:`, this.state.selectedPropertyPriceOptions)       );   };   handleChangePropertyBedroomOptions = (selectedPropertyBedroomOptions) => {     this.setState({ selectedPropertyBedroomOptions }, () =>       console.log(`selectedPropertyBedroomOptions selected:`, this.state.selectedPropertyBedroomOptions)       );   };   handleChangePropertyBathroomOptions = (selectedPropertyBathroomOptions) => {     this.setState({ selectedPropertyBathroomOptions }, () =>       console.log(`selectedPropertyBathroomOptions selected:`, this.state.selectedPropertyBathroomOptions)       );   };   handleChangePropertyCityOptions = (selectedPropertyCityOptions) => {     this.setState({ selectedPropertyCityOptions }, () =>       console.log(`selectedPropertyCityOptions selected:`, this.state.selectedPropertyCityOptions)       );   };   render() {     const { selectedPropertyTypeOptions, selectedPropertyPriceOptions, selectedPropertyBedroomOptions, selectedPropertyBathroomOptions, selectedPropertyCityOptions } = this.state;     return (         <>         <form onChange={this.handleSubmit}>             <label>Property Type:                 <Select                     value={selectedPropertyTypeOptions}                     onChange={this.handleChangePropertyTypeOptions}                     options={propertyTypeOptions}                 />             </label>             <label>Max Price:                 <Select                     value={selectedPropertyPriceOptions}                     onChange={this.handleChangePropertyPriceOptions}                     options={propertyPriceOptions}                 />             </label>             <label>Min Bed:                 <Select                     value={selectedPropertyBedroomOptions}                     onChange={this.handleChangePropertyBedroomOptions}                     options={propertyBedroomOptions}                 />             </label>             <label>Min Bath:                 <Select                     value={selectedPropertyBathroomOptions}                     onChange={this.handleChangePropertyBathroomOptions}                     options={propertyBathroomOptions}                 />             </label>             <label>City:                 <Select                     value={selectedPropertyCityOptions}                     onChange={this.handleChangePropertyCityOptions}                     options={propertyCityOptions}                 />             </label>         </form>         </>     );   } } ReactDOM.render(   <RentalFilterbar />,   document.getElementById('root') );</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>form {     margin-left: auto;     margin-right: auto;     width: 70em; } form > label {     display: inline-block;     font-family: 'sans-serif';     font-size: 1.15em; } form > label > .css-b62m3t-container {     display: inline-block;     margin-left: 0.25em;     margin-right: 0.75em;     width: 7.1255em;     font-family: 'sans-serif';     size: 2em; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div id=""root""></div></code></pre>  </div>  </div>  </p>",1669709457.0,,false
"{'account_id': 25935217, 'reputation': 21550, 'user_id': 19655631, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Qbm7w.png?s=256', 'display_name': 'Wongjn', 'link': 'https://stackoverflow.com/users/19655631/wongjn'}",True,1,1669669343,1669669343,74606437,74606120,CC BY-SA 4.0,"<p>You are missing closing parentheses in your <code>keyframes</code> values, so when you add in the <code>animation</code> configuration, it also adds the <code>@keyframes</code> definition and breaks the rest of the CSS. Try the following modification:</p> <pre class=""lang-js prettyprint-override""><code>slideInOut: {   ""0%"": { transform: ""translateX(calc(100% + 30px))"" },   ""10%"": { transform: ""translateX(0)"" },   ""90%"": { transform: ""translateX(0)"" },   ""100%"": { transform: ""translateX(calc(100% + 30px))"" }, }, </code></pre>",,,false
"{'account_id': 15537534, 'reputation': 363, 'user_id': 11209337, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-LQgOlyFPQrA/AAAAAAAAAAI/AAAAAAAAAAk/5mSg0xIU2Ek/photo.jpg?sz=256', 'display_name': 'CodeoftheWarrior', 'link': 'https://stackoverflow.com/users/11209337/codeofthewarrior'}",False,0,1669666639,1669666639,74606039,74605815,CC BY-SA 4.0,"<p>While both the above answers work in so far as they use useEffect to recalculate totalHours when either startTime or endTime changes, you should recognize that totalHours is a derived state from the startTime and endTime components. You should not store derived state in a separate stateHook variable, it should be derived from existing state.</p> <p>If you just move the calculateTotalHours function outside of your callbacks and put it in the body of your component, have it return the total hours,  everything will work fine and you won't find yourself with totalHours state diverging from the other two state hooks.</p> <pre><code>    const calculateTotalHours = () => {         let startTimeValue = parseInt(startTime.split("":"")[0]);         let endTimeValue = parseInt(endTime.split("":"")[0]);          // if either time is 12, remove 12 hours         if (startTimeValue === 12) {             startTimeValue -= 12;         }         if (endTimeValue === 12) {             endTimeValue -= 12;         }          // if either time has PM, add 12 hours respectively         if (startTime.includes(""PM"")) {             startTimeValue += 12;         }         if (endTime.includes(""PM"")) {             endTimeValue += 12;         }          // calculate time between start and end times         const total = endTimeValue - startTimeValue;         return Math.max(total, 0);              } </code></pre> <p>and then render the result of that function</p> <pre><code>// In your component before return statement const totalHours = calculateTotalHours(): // Wherever you want to print totalHours <label> totalHours: ${totalHours} </label> </code></pre>",,,false
"{'account_id': 20727844, 'reputation': 632, 'user_id': 15220748, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ef479e5f497f0b0b6c281a577cbe3490?s=256&d=identicon&r=PG', 'display_name': 'Rohit Khandelwal', 'link': 'https://stackoverflow.com/users/15220748/rohit-khandelwal'}",False,1,1669666221,1669666221,74605980,74605815,CC BY-SA 4.0,"<p>The thing that is happening in your code overall is that. You are not aware of the asynchronous behaviour of <code>setState or setter functions</code>. The updated value in the state variable will be available in the next iteration.</p> <p>The function <code>calculateTotalHours</code> is called on the same level as the <code>setState</code> part. The <code>state</code> value from history will always be one back of the current level.</p> <pre><code>const handleStartTimeChange = (time: string) => {     setStartTime(time);     calculateTotalHours(); }  const handleEndTimeChange = (time: string) => {     setEndTime(time);     calculateTotalHours(); } </code></pre> <p>The time in args of both above functions will always carry the updated value at the current level. You can do either of the two things. You can pass time as an argument in these functions to the <code>calculateTotalHours</code> function or you can call <code>calculateTotalHours</code> inside <code>useEffect or useLayoutEffect</code> hook with dependency of <code>startTime, endTime</code>, like below. These hooks will trigger a callback whenever there is a change in the value of any of the dependencies.</p> <pre><code>useEffect(() => {   calculateTotalHours(); }, [startTime, endTime]); </code></pre>",,,false
"{'account_id': 7795979, 'reputation': 55, 'user_id': 7377810, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/206aa497cc4181358ae38ebf4db91868?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Chingiz Batirbaev', 'link': 'https://stackoverflow.com/users/7377810/chingiz-batirbaev'}",False,0,1669665397,1669665397,74605868,74605815,CC BY-SA 4.0,"<p>you should do your calculations on <code>useEffect</code> hook:</p> <pre><code>useEffect(() => {     calculateTotalHours() }, [startTime, endTime]) </code></pre> <p>Call useEffect at the top level of your component to declare an Effect. See more on <a href=""https://beta.reactjs.org/apis/react/useEffect#useeffect"" rel=""nofollow noreferrer"">https://beta.reactjs.org/apis/react/useEffect#useeffect</a></p>",,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",True,0,1669665300,1669665300,74605854,74605815,CC BY-SA 4.0,"<blockquote> <p>My understanding is that the setter functions for the useState hook, e.g. setStartTime() and setEndTime(), run asynchronously and cause this error.</p> </blockquote> <p>That's completely true.</p> <p>You should write an useEffect on your startTime and endTime and then run your calculateTotalHours functions in it:</p> <pre class=""lang-js prettyprint-override""><code>const handleStartTimeChange = (time: string) => {   setStartTime(time); }  const handleEndTimeChange = (time: string) => {   setEndTime(time); }  useEffect(() => {   calculateTotalHours(); }, [startTime, endTime]); </code></pre>",,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",False,1,1669709100,1669665635,74605905,74605750,CC BY-SA 4.0,"<p>You should pass your setState function to your children and then update the state there:</p> <p>In parent (AdvancedSearch):</p> <pre class=""lang-js prettyprint-override""><code>const [validInput, setValidInput] = useState(true); </code></pre> <pre class=""lang-js prettyprint-override""><code>return (   <TextSearch setValidInput={setValidInput} /> ) </code></pre> <p>In child (TextSearch):</p> <pre class=""lang-js prettyprint-override""><code>const onTextChange = (e: React.FormEvent<HTMLInputElement>) => {   const input = e.currentTarget.value   if(input && !checkNumericOnly(input)) {     setValidationMessage('Only numbers allowed');     props.setValidInput(false);   } else {     setValidationMessage('');     props.setValidInput(true);   } } </code></pre> <pre class=""lang-js prettyprint-override""><code>return (   <div className={classes.textSearch}>     <InputText       className={validationMessage ? 'p-invalid' : ''}       onChange={onTextChange}     />     <div className={classes.invalid}>{validationMessage}</div>   </div> ) </code></pre>",1669709100.0,,false
"{'account_id': 17857704, 'reputation': 1888, 'user_id': 12971921, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/6905294997662fbefdafbdc5a835f8d8?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'FD3', 'link': 'https://stackoverflow.com/users/12971921/fd3'}",False,0,1669666124,1669666124,74605968,74605644,CC BY-SA 4.0,"<p>You can do like this.</p> <pre><code>className={`nav__item ${active ? styles.axtive : """"}`} </code></pre>",,,false
"{'account_id': 15537534, 'reputation': 363, 'user_id': 11209337, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-LQgOlyFPQrA/AAAAAAAAAAI/AAAAAAAAAAk/5mSg0xIU2Ek/photo.jpg?sz=256', 'display_name': 'CodeoftheWarrior', 'link': 'https://stackoverflow.com/users/11209337/codeofthewarrior'}",True,0,1669665412,1669665412,74605871,74605575,CC BY-SA 4.0,"<p>So the discount amount is going to be calculated from the mystery function and then from what I presume is the destructured state value, percentage. The problem you are likely having is that percentage doesn't update immediately in the closure formed from your response callback. As a matter of fact, the value doesn't change until the component re-renders. The value for percentage from state will be the value used to render the component and will remain so until the end of your callback function completes, the component re-renders and a new callback function with the new closure values will be created. There is a great blog about this that changed how I think of hooks and functional components. If you want to read more, Dan Abramov's blog: <a href=""https://overreacted.io/a-complete-guide-to-useeffect/"" rel=""nofollow noreferrer"">https://overreacted.io/a-complete-guide-to-useeffect/</a> is absolutely perfect in explaining what is going on here.</p> <p>To fix your issue, use the percentage from your response object to perform your calculation not the one in the closure which assumes getOrderTotal() doesn't depend on anything in state that changed.</p> <pre><code>const discountAmount = getOrderTotal() * response.data[0].percentage; </code></pre> <p>Alternatively, think of discountAmount in terms of declarative values. Let it be the result of the aforementioned calculation, but put it in the body of your component not in your callback and let the re-render drive the result.</p>",,,false
"{'account_id': 19928425, 'reputation': 111, 'user_id': 14602565, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GjpaChmi7G4IvuaP_ZGfKcXgkgJCNF5A1k5TLyLOA=k-s256', 'display_name': 'Parker Hall', 'link': 'https://stackoverflow.com/users/14602565/parker-hall'}",True,4,1669705676,1669705676,74610243,74605572,CC BY-SA 4.0,"<p>Alright I managed to figure it out after a little more docs reading: <a href=""https://www.framer.com/docs/layout-animations/"" rel=""nofollow noreferrer"">https://www.framer.com/docs/layout-animations/</a>. If you want a div to interpolate it's scale after a child re-renders, just add the word layout as a prop to the parent motion.div</p> <p>In the code above it would look something like this:</p> <pre><code><motion.div style={{ height: 'fit-content', backgroundColor: 'black' }} layout> </code></pre>",,,false
"{'account_id': 10551370, 'reputation': 126, 'user_id': 7773975, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/ERH2L.jpg?s=256', 'display_name': 'Beatriz Infante', 'link': 'https://stackoverflow.com/users/7773975/beatriz-infante'}",False,0,1669666731,1669666731,74606056,74605547,CC BY-SA 4.0,"<p><code>display: none</code> and <code>visibility: hidden</code> have no impact on page load time. If you want to wait to load the content until it's needed, don't include the video HTML component at all until you know the width the width of the device is bigger than 940</p> <pre><code>const renderVideo = () => {       const {innerWidth} = window;     return (innerWidth > 940 && <video ..../> } </code></pre>",,,false
"{'account_id': 20727844, 'reputation': 632, 'user_id': 15220748, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ef479e5f497f0b0b6c281a577cbe3490?s=256&d=identicon&r=PG', 'display_name': 'Rohit Khandelwal', 'link': 'https://stackoverflow.com/users/15220748/rohit-khandelwal'}",False,1,1669666608,1669666608,74606037,74605547,CC BY-SA 4.0,"<p>You can directly apply the <code>CSS</code> to that particular <code>HTML</code> element using <code>@media</code> queries on the screen width, like below.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-css lang-css prettyprint-override""><code>@media screen and (max-width: 480px) {   body {     background-color: red;   } }</code></pre>  </div>  </div>  </p> <p>For reference - <a href=""https://www.w3schools.com/css/css3_mediaqueries.asp"" rel=""nofollow noreferrer"">Media Queries</a></p> <p>For stopping actions in the React code, you can use <code>innerWidth</code> property from the <code>window</code> object.</p>",,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",False,0,1669665729,1669665729,74605921,74605547,CC BY-SA 4.0,"<p>You can try to <a href=""https://bobbyhadz.com/blog/react-get-window-width-height"" rel=""nofollow noreferrer"">track the width of device</a>, and depending on it just conditionally render component with video.</p>",,,false
"{'account_id': 2088729, 'reputation': 3073, 'user_id': 1859027, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/8bd9919f4d104ebb917c13ee44655553?s=256&d=identicon&r=PG', 'display_name': 'adrai', 'link': 'https://stackoverflow.com/users/1859027/adrai'}",False,0,1669738472,1669738472,74617044,74605471,CC BY-SA 4.0,"<p>Depending on the used i18next backend, it is not only detecting the language, it is also loading (fetching) the appropriate translation resources. Without an i18next backend (all in memory) you'll see it takes way less time: <a href=""https://www.i18next.com/how-to/add-or-load-translations#add-on-init"" rel=""nofollow noreferrer"">https://www.i18next.com/how-to/add-or-load-translations#add-on-init</a></p>",,,false
"{'account_id': 25926474, 'reputation': 6931, 'user_id': 19648279, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/6a35557429b2edb736be4418ffc772a2?s=256&d=identicon&r=PG', 'display_name': 'Harshitha', 'link': 'https://stackoverflow.com/users/19648279/harshitha'}",False,0,1669713388,1669712405,74611447,74605249,CC BY-SA 4.0,"<p>Check the below steps to deploy <code>React app</code> to <code>Azure Static Web App</code></p> <ul> <li>In file explorer create a folder with name <code>reactstatic</code>.</li> <li>In <code>VSCode</code>, open the <code>new terminal</code> and run the below command to create a new react app.</li> </ul> <pre class=""lang-cs prettyprint-override""><code>npx create-react-app ./ </code></pre> <p><img src=""https://i.sstatic.net/4n8lr.png"" alt=""enter image description here"" /></p> <p>Thanks @Christian Glessner for the <a href=""https://github.com/ltwlf/react-static-web-app"" rel=""nofollow noreferrer"">Git Repo</a></p> <ul> <li>In GitHub, create a new repository.</li> <li>From VS Code, push the newly created app to GitHub</li> <li>In Azure Portal, create a Static Web App using <code>GitHubAccount</code> with the below given values.</li> </ul> <p><img src=""https://i.sstatic.net/jx0R5.png"" alt=""enter image description here"" /></p> <ul> <li>In GitHub,<code>workflows </code>folder will be created.</li> </ul> <p><img src=""https://i.sstatic.net/AMgFP.png"" alt=""enter image description here"" /></p> <ul> <li>Check whether the build is success or not in GitHub - <code>https://github.com/Organization/YourAppName</code> Click on <code>Actions</code> => <code>Build and Deploy Job</code></li> </ul> <p><img src=""https://i.sstatic.net/Ygxp1.png"" alt=""enter image description here"" /></p> <ul> <li>Now we can Open the <code>Static Web App</code> in Portal and access the <code>Url</code>.</li> </ul> <p><img src=""https://i.sstatic.net/hYz4Y.png"" alt=""enter image description here"" /></p> <blockquote> <p>Fix the upstream dependency conflict, or retry npm ERR! this command with --force, or --legacy-peer-deps</p> </blockquote> <p>To fix the error, as mentioned in the error itself run the below command</p> <pre class=""lang-js prettyprint-override""><code>npm config set legacy-peer-deps true npm i </code></pre> <p>To fix the error, as mentioned in the error itself run the below command</p> <pre class=""lang-js prettyprint-override""><code>npm config set legacy-peer-deps true npm i </code></pre> <ul> <li>If you still face the issue, delete the <code>node_modules</code> folder ,<code>package-json.lock</code> file and run the above command again.</li> </ul>",1669713388.0,,false
"{'account_id': 19429215, 'reputation': 129, 'user_id': 14210052, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d446d8db1870517a9bce9e03a963e17e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'OrrinPants', 'link': 'https://stackoverflow.com/users/14210052/orrinpants'}",False,0,1676992455,1669663859,74605640,74605248,CC BY-SA 4.0,"<p>Make sure your <code><title></code> tag is in the <code><head></code> tag. Then, you just need to be patient.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-html lang-html prettyprint-override""><code><!DOCTYPE html> <HTML>     <head>         <title>Ton Redutores</title>     </head>     <body>         <!-- Content goes here -->     </body> </HTML></code></pre>  </div>  </div>  </p>",1676992455.0,,false
"{'account_id': 195407, 'reputation': 33177, 'user_id': 438273, 'user_type': 'registered', 'accept_rate': 70, 'profile_image': 'https://www.gravatar.com/avatar/88ad8bc15f1a9e787531e9b20340973a?s=256&d=identicon&r=PG', 'display_name': 'jsejcksn', 'link': 'https://stackoverflow.com/users/438273/jsejcksn'}",False,1,1669661811,1669661811,74605329,74605248,CC BY-SA 4.0,"<p>See the first-party Google article, <a href=""https://developers.google.com/search/docs/appearance/title-link"" rel=""nofollow noreferrer"">Influencing your title links in search results</a>. A snippet from the article:</p> <blockquote> <p><a href=""https://i.sstatic.net/60VBH.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/60VBH.png"" alt=""enter image description here"" /></a></p> <p>Google Search uses the following sources to automatically determine title links:</p> <ul> <li>Content in <code><title></code> elements</li> <li>Main visual title shown on the page</li> <li>Heading elements, such as <code><h1></code> elements</li> <li>Other content that's large and prominent through the use of style treatments</li> <li>Other text contained in the page</li> <li>Anchor text on the page</li> <li>Text within links that point to the page</li> </ul> </blockquote> <p>Specific to your <code>create-react-app</code> project: be sure to edit the actual <code><title></title></code> element text to include the desired title (e.g. <code>Ton Redutores</code>) in the file <code>public/index.html</code> in your project repository (see <a href=""https://create-react-app.dev/docs/folder-structure/"" rel=""nofollow noreferrer"">folder structure</a>), then re-build and re-publish your site, and keep in mind that search result updates are not instantaneous: it takes time to re-index your site.</p>",,,false
"{'account_id': 10164332, 'reputation': 421, 'user_id': 11119684, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-PasmsiINODU/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3retq0AXmgUC5sxcfAPWBHl5IwwmNQ/mo/photo.jpg?sz=256', 'display_name': 'bvdl', 'link': 'https://stackoverflow.com/users/11119684/bvdl'}",False,0,1669661553,1669661553,74605277,74605248,CC BY-SA 4.0,<p>Hey you might need to change/add the <code><title></code> Your Title <code></title></code> to the index.html file in the <code>public</code> folder.</p> <p>Keep in mind it has to be located between the <code><head></code>...<code></head></code> tags.</p>,,,false
"{'account_id': 39280, 'reputation': 82594, 'user_id': 113195, 'user_type': 'registered', 'accept_rate': 89, 'profile_image': 'https://www.gravatar.com/avatar/4257476fe3d948aaf89658db890d0236?s=256&d=identicon&r=PG', 'display_name': 'Boldewyn', 'link': 'https://stackoverflow.com/users/113195/boldewyn'}",False,1,1669735238,1669705665,74610241,74605220,CC BY-SA 4.0,"<p>You re-format the parsed start date right again and use the formatted string for the comparison. Remove the <code>.format(...)</code> calls altogether or move formatting to the latest possible place, if you need to print the time:</p> <pre><code>// set the current date in the IST timezone (+05:30) let currentDate = moment().utcOffset(5*60 + 30);  // set the start date for comparison, also in IST timezone let startDate = moment(""2022-11-29T11:30:00Z"").utcOffset(5*60 + 30);  // get the difference between the two as number in hours let diffTime = startDate.diff(currentDate, ""hours"");  console.log(`There are ${diffTime} hours between ${startDate.format()} and ${currentDate.format()}.`); </code></pre>",1669735238.0,,false
"{'account_id': 24945024, 'reputation': 37, 'user_id': 18811868, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/nG63E.jpg?s=256', 'display_name': 'Gui', 'link': 'https://stackoverflow.com/users/18811868/gui'}",False,-2,1698804477,1669733033,74615805,74605154,CC BY-SA 4.0,<p>With the app rendered in App.js maybe your url img src should be something like <code>src='./components/assets/</code> because it would start from the src folder l? (i know if it's an import it works as expected but here it's a src ..)</p>,1698804477.0,,false
"{'account_id': 16567662, 'reputation': 133, 'user_id': 11971765, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c3800f1ef40536b17f30cff3b9af58d6?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Tom_Ra', 'link': 'https://stackoverflow.com/users/11971765/tom-ra'}",False,0,1669662298,1669662298,74605406,74605109,CC BY-SA 4.0,"<p>Not really, when the elements are removed from the DOM, it pushes the posts up as your elements probably have position: relative. you can use position: absolute to keep them in specific location, but that will not remove the empty new space created after removing the elements. and doesn't seem to be a good option.</p> <p>What i can suggest as having some kind of a div that takes let's say 80vh and inside this div all the posts with some kind of overflow scroll. and then you are not scrolling the page but the div.</p>",,,false
"{'account_id': 17857704, 'reputation': 1888, 'user_id': 12971921, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/6905294997662fbefdafbdc5a835f8d8?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'FD3', 'link': 'https://stackoverflow.com/users/12971921/fd3'}",False,0,1669754221,1669735801,74616452,74605083,CC BY-SA 4.0,"<p>I updated your <a href=""https://codesandbox.io/s/angry-bardeen-brkzf5?file=/src/App.js"" rel=""nofollow noreferrer"">sandbox link</a>. <br> Instead of hard coded data, now your table is populated with the data from <code>overallResult</code> object. It is not perfect, but at least you can see how to loop through a data and display on the screen. <br></p> <p><a href=""https://codesandbox.io/s/angry-bardeen-brkzf5?file=/src/App.js"" rel=""nofollow noreferrer"">https://codesandbox.io/s/angry-bardeen-brkzf5?file=/src/App.js</a></p>",1669754221.0,,false
"{'account_id': 16739475, 'reputation': 105, 'user_id': 17042215, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AAuE7mBvusxOROwM31NW9RDlXyLD8SexKrDMoadm5aue=k-s256', 'display_name': 'Dan G', 'link': 'https://stackoverflow.com/users/17042215/dan-g'}",False,0,1676294899,1676294899,75436511,74604873,CC BY-SA 4.0,"<p>Ok this answer is probably late, but I had the same issue myself and I found what what was causing the problem. By only specifying the height, the chart will for some reason automatically have width 0. If you also specify a width prop you should see the chart appear.</p> <p>So for your innermost Box element:</p> <pre><code><Box heigth=""500px"" width=""500px"">   <SunbursrChart /> </Box> </code></pre>",,,false
"{'account_id': 4388616, 'reputation': 17365, 'user_id': 3577849, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/a4056c0581eca0c2f051c28b4e630eed?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'jme11', 'link': 'https://stackoverflow.com/users/3577849/jme11'}",False,0,1669736438,1669660893,74605146,74604763,CC BY-SA 4.0,"<p>EDITED:</p> <p>I actually learned something new here too.  You can use nth-child now with Tailwind.</p> <pre><code>const Partners = () => {   return (     <div className=""grid md:grid-cols-4 grid-cols-2 gap-y-10 justify-between"">       {ourPartners.map((item, index) => {         return (           <div             key={item.id}             className=""odd:justify-self-start even:justify-self-end md:[&:nth-child(4n+2)]:justify-self-center md:[&:nth-child(4n+3)]:justify-self-center""           >             <div className=""w-32"">               <img alt=""partner"" width=""auto"" height=""auto"" src={item.pic} />             </div>           </div>         );       })}     </div>   ); };  export default Partners;  </code></pre>",1669736438.0,,false
"{'account_id': 27076259, 'reputation': 48, 'user_id': 20626144, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5b5b615ba74590b81a1c56863b5ed443?s=256&d=identicon&r=PG', 'display_name': 'jorgepelcastre', 'link': 'https://stackoverflow.com/users/20626144/jorgepelcastre'}",False,0,1669660990,1669660990,74605168,74604653,CC BY-SA 4.0,"<p>you only have to map the array and create a new object;</p> <pre><code>import fileData from ""../path/to/json"";  const people = fileData.arrayName.map(person => ({     firstName: person.userFirstName1,     lastName: person.userLastName1,     ID: person.userID,     location: person.userLocation.city, })); </code></pre>",,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",True,1,1669658931,1669658931,74604787,74604653,CC BY-SA 4.0,"<p>If I understand you correctly, <code>location.city</code> is a path to some value in object.</p> <p>There are some libraries for this like lodash, which have inbuilt functions that can resolve that, but if you want to do it in vanilla js, you can do it by splitting this string by dot and going through that array to get a value.</p> <pre><code>const getByPath = (path, obj) => {   const splittedPath = path.split(""."");   return splittedPath.reduce((acc, curr) => {       acc = obj[curr];       return acc;   }, obj) } </code></pre> <p>So in this case if you have object like</p> <pre><code>const testObj = {   location: {city: ""Kyiv""},   firstName: ""Oleg"" } </code></pre> <p>It will return you ""Kyiv"" if you will pass into <code>getByPath</code> ""location.city"" as path. And it will also work in case if there is no nesting, so</p> <pre><code>getByPath(""firstName"", testObj) </code></pre> <p>will return you ""Oleg""</p>",,,false
"{'account_id': 9047051, 'reputation': 938, 'user_id': 6738911, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/m6z29.png?s=256', 'display_name': 'Marek Rozmus', 'link': 'https://stackoverflow.com/users/6738911/marek-rozmus'}",True,1,1669772198,1669772198,74622001,74604513,CC BY-SA 4.0,"<p>The <code>act</code> error is saying that you are trying to access the component when it is not in stable state. Your <code>onFocus</code> is changing internal state of the component so the test needs to wait until it is <code>rerendered</code>.</p> <p>Try to do the following, replace this:</p> <pre class=""lang-js prettyprint-override""><code>inputemail.focus(); fireEvent.input(inputemail, { target: { value: textVariable } }); expect(inputemail).toHaveFocus(); //passing now </code></pre> <p>with this:</p> <pre class=""lang-js prettyprint-override""><code>inputemail.focus(); await waitFor(() => expect(inputemail).toHaveFocus()); fireEvent.input(inputemail, { target: { value: textVariable } }); </code></pre> <p>or instead of using <code>fireEvent</code> use the <a href=""https://github.com/testing-library/user-event"" rel=""nofollow noreferrer"">@testing-library/user-event</a> library which <a href=""https://github.com/testing-library/user-event/blob/main/src/utility/type.ts"" rel=""nofollow noreferrer"">should focus</a> the field when using the <code>type</code> method.</p> <pre class=""lang-js prettyprint-override""><code>await userEvent.type(inputemail, textVariable); </code></pre> <p>Just remember that <code>user event</code> lib API is async.</p>",,,false
"{'account_id': 169693, 'reputation': 65673, 'user_id': 395910, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/59c1bcdff2510bdb021b3afe1eb69677?s=256&d=identicon&r=PG', 'display_name': 'Terry', 'link': 'https://stackoverflow.com/users/395910/terry'}",False,0,1669718384,1669718384,74612728,74604380,CC BY-SA 4.0,"<p>As @Bergi has pointed out, you are provided a two-dimensional array to <code>Promise.all</code>. You can either <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax#spread_in_array_literals"" rel=""nofollow noreferrer"">spread</a> the nested arrays:</p> <pre><code>return Promise.all([...outlinePromises, ...pagePromises]) </code></pre> <p>...or unpack them use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat"" rel=""nofollow noreferrer""><code>Array.prototype.flat</code></a>:</p> <pre><code>return Promise.all([outlinePromises, pagePromises].flat()) </code></pre>",,,false
"{'account_id': 1042959, 'reputation': 660218, 'user_id': 1048572, 'user_type': 'registered', 'accept_rate': 77, 'profile_image': 'https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=256&d=identicon&r=PG', 'display_name': 'Bergi', 'link': 'https://stackoverflow.com/users/1048572/bergi'}",False,0,1669658253,1669658253,74604681,74604380,CC BY-SA 4.0,"<p><code>Promise.all</code> takes an array of promises, not an array of arrays of promises. You'll have to write</p> <pre><code>return Promise.all([Promise.all(outlinePromises), Promise.all(pagePromises])) </code></pre>",,,false
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",True,2,1669657647,1669657647,74604571,74604294,CC BY-SA 4.0,"<p>With the current routes config:</p> <pre><code>{   path: '/',   element: <Home />, }, {   path: 'catalogue',   element: <Catalogue />,   children: [     {       path: '/catalogue/:bookId', // <-- or simply "":bookId""       element: <BookDetails />     }   ] }, </code></pre> <p>A <em><strong>nested</strong></em> route on <code>path=""/catalogue/:bookId""</code> is rendered.</p> <blockquote> <p>Should I use the <code><Outlet /></code> and which is the correct flow for this?</p> </blockquote> <p>Yes, in this configuration the <code>Catalogue</code> component necessarily should render an <code>Outlet</code> component for nested routes to render their content into. This is the use case where you want to render the <code>Catalogue</code> <em><strong>and</strong></em> <code>BookDetails</code> simultaneously.</p> <p>Catalogue Example:</p> <pre><code>{list.map((book, i) => {   return (     <BookCard       book={book}       key={`book-${i}`} />     )   }) } ...  <Outlet /> </code></pre> <p>If this isn't the case and you want <code>Catalogue</code> and <code>BookDetails</code> to render each on their own independent pages then the routes should be unnested.</p> <p>Example:</p> <pre><code>{   path: '/',   element: <Home />, }, {   path: 'catalogue',   element: <Catalogue />, }, {   path: '/catalogue/:bookId',   element: <BookDetails /> } </code></pre> <p>or</p> <pre><code>{   path: '/',   element: <Home />, }, {   path: 'catalogue',   children: [     {       index: true,       element: <Catalogue />     },     {       path: ':bookId',       element: <BookDetails />     }   ] }, </code></pre> <blockquote> <p>When the user arrives on the details of the book, the url should be something like <code>""/catalogue/o23ifo2eifj8249g2g24g""</code>. Iif the user, write by hand the url and inserts a random id, the page will render nevertheless the content. How can I prevent the rendering of the content? My simple solution would be, make a search in the database using the hook <code>useParams()</code> for the written id: if exist, the corresponding book is rendered, if doesn't exist, a 404 page is rendered. Is there a better simpler solution?</p> </blockquote> <p>This is a standard practice to validate dynamic route path parameters and either redirect a user to a 404 page or to conditionally render some fallback UI by the <code>BookDetails</code> page when consuming an invalid <code>bookId</code> value.</p>",,,false
"{'account_id': 23084199, 'reputation': 4003, 'user_id': 17195992, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jwZTv.jpg?s=256', 'display_name': 'ivanatias', 'link': 'https://stackoverflow.com/users/17195992/ivanatias'}",False,1,1670177294,1669792470,74624048,74604249,CC BY-SA 4.0,"<p>I think you're misunderstanding what a stale and inactive query means.</p> <p><code>staleTime</code> is the time in milliseconds that determines for how long the query is considered as ""fresh"". This means that as long as the query is marked as fresh, no network requests will be made after the first successful one and the data will always be read from the cache when needed. If the query is marked as ""stale"", then a background refetch can happen under certain conditions such as window focus (if enabled) for example.</p> <p>A query is considered inactive when there are no observers registered. In more simple words, when all the components that use the query are unmounted.</p> <p>A query's cached data can <strong>only</strong> be garbage-collected when it's marked as <strong>inactive</strong> for as long as the established <code>cacheTime</code>.</p> <p>From what you explain, you configured the <code>cacheTime</code> to be 0. This means that as soon as all the components that use the query are unmounted, the cache for that query will be garbage-collected. If this is not happening, it's because one or more components that use this query remain mounted (the query is still <strong>active</strong>).</p>",1670177294.0,,false
"{'account_id': 2517501, 'reputation': 6166, 'user_id': 2188587, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/940bf038f4b0aab6c8de6ec122249466?s=256&d=identicon&r=PG', 'display_name': 'Jakub Kotrs', 'link': 'https://stackoverflow.com/users/2188587/jakub-kotrs'}",False,2,1669676030,1669676030,74607332,74604195,CC BY-SA 4.0,"<p>An option is to split the component into two. One is responsible for fetching (<code>useQuery</code>) and one for form editing (<code>useState</code>) so that the parent component provides initial state. A downside to this approach is that until the query loads, you don't see the form (unless you make ""a form placeholder"").</p> <p>Example:</p> <pre><code>function Fetcher() {   const {data, isError, isLoading} = useQuery(...)    if (isLoading) {     return <Loader />  Â }    if (isError) {     return <p>Oops, failed to load</p>  Â }    return <Form initialState={data} /> }  function Form({ initialState }) {   const [state, setState] = useState(initialState)    return <form>...</form> } </code></pre> <p>Now you have a local copy of the data in Form's state and no longer have any async issue. Form simply doesn't render until you have data. If you want a better visual, you can replace Loader with anything!</p> <p>In case you need to propagate changes (meaning that if the query re-runs and fetches fresh data), you can use a <code>key</code> to reset the Form as well. Use this with caution because background sync would clear the form even if the user was just typing something, so you need to play with the options of such query.</p> <pre><code>  const {data, isLoading, isError, dataUpdatedAt} = useQuery(...)     ...    return <Form key={dataUpdatedAt} initialState={data} /> </code></pre>",,,false
"{'account_id': 9869929, 'reputation': 2957, 'user_id': 7309962, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/lnXjh.png?s=256', 'display_name': 'Evgeny K', 'link': 'https://stackoverflow.com/users/7309962/evgeny-k'}",True,2,1669658088,1669658088,74604646,74604195,CC BY-SA 4.0,"<p>It because:</p> <ol> <li><code>setParticipant</code> change state asynchronously,</li> <li><code>useEffect</code> invokes after render actually happend</li> </ol> <p>so even if <code>data.participant</code> is not empty, <code>participant</code> is, until next render phase</p> <p>You could change to this:</p> <pre class=""lang-js prettyprint-override""><code>const ProfilePage = ({ id }) => {     //...      if (loading || !participant) {         return <div>Loading</div>;     }      //... } </code></pre>",,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",True,1,1669658046,1669658046,74604639,74604185,CC BY-SA 4.0,"<p>The reason of this behavior, is that upper bar shown his top value, which is 1, so this is the sum of all bars stacked.</p> <p>To avoid this situation I used valueAccessor and some formatting to get value of bar and count its percentage.</p> <p><a href=""https://codesandbox.io/s/bar-chart-with-positive-negative-forked-i24xxh"" rel=""nofollow noreferrer"">Here is a link to working codesandbox</a> where you can see final result</p>",,,false
"{'account_id': 11467508, 'reputation': 27624, 'user_id': 8405310, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/oTdtMh9A.jpg?s=256', 'display_name': 'TkDodo', 'link': 'https://stackoverflow.com/users/8405310/tkdodo'}",False,0,1670150860,1670150860,74674792,74603819,CC BY-SA 4.0,"<p><code>fetchQuery</code> will always fetch <em>unless</em> there is data in the cache that is considered <code>fresh</code>. This is determined by the <code>staleTime</code> setting.</p> <p><code>staleTime</code> defaults to <code>0</code> - which means ""immediately stale"". So the code you are showing that is calling <code>fetchQuery</code> should <em>always</em> fetch - unless you have a global <code>staleTime</code> set. You're not showing this in your code, but I guess this must be the reason. Note that <code>fetchQuery</code> doesn't know about <code>staleTime</code> being set by other observers (created by useQuery).</p> <p>Now if you have a globally set <code>staleTime</code> and that is affecting <code>fetchQuery</code>, but you still want to always fetch, the best thing you can do is pass <code>staleTime: 0</code> directly to <code>fetchQuery</code>. Again, this is the default behaviour, so it's only necessary if you have a global staleTime set:</p> <pre><code>await queryClient.fetchQuery(   ['getSelf'],   async () => { ... },   { staleTime: 0 } ) </code></pre>",,,false
"{'account_id': 6859767, 'reputation': 6613, 'user_id': 5274205, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d3a281a1418dbceeda34cc93d3744554?s=256&d=identicon&r=PG', 'display_name': 'Chad S.', 'link': 'https://stackoverflow.com/users/5274205/chad-s'}",True,1,1669654259,1669654259,74603930,74603819,CC BY-SA 4.0,"<p>A slight modification to your function will allow you to first invalidate the query (which will remove it from the cache).</p> <pre class=""lang-js prettyprint-override""><code>export const getSelf = async (skipCache = false) => {     if(skipCache) { queryClient.invalidateQueries(['getSelf']); }          return queryClient.fetchQuery(['getSelf'], async () => {         try {             const { data } = await request.get('/users/me');              // @todo: This sideloads a bunch of stuff, that we could cache             return data;         } catch (error) {             throw new Error('Failed to fetch user information');         }     }); } </code></pre>",,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",False,1,1669654053,1669654053,74603888,74603819,CC BY-SA 4.0,"<p>In case of using fetchQuery, you can set cacheTime to 0 in query options, so every time you call it, it will suggest that cache is outdated and fetch fresh data, but I'd suggest you to use useQuery.</p> <p><a href=""https://stackoverflow.com/questions/70548117/usequery-hook-vs-queryclient-fetchquery-when-to-prefer-one-over-the-other"">Here you can read about difference between useQuery and fetchQuery</a></p> <p>The best way is to use useQuery hook and invalidate that query.</p> <pre><code>import { useQueryClient } from '@tanstack/react-query'  // Get QueryClient from the context const queryClient = useQueryClient()  queryClient.invalidateQueries({ queryKey: ['getSelf'] }) </code></pre> <p>After invalidation, it will immediately fetch fresh data.</p>",,,false
"{'account_id': 18508059, 'reputation': 923, 'user_id': 13483939, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/3WOJz.jpg?s=256', 'display_name': 'Shubham Waje', 'link': 'https://stackoverflow.com/users/13483939/shubham-waje'}",False,1,1669654712,1669654712,74604019,74603695,CC BY-SA 4.0,"<p>You can type it as follows:</p> <pre><code>interface ButtonProps {   children: ReactNode;   className?: string;   as?: string;   [key: string]: unknown; }  const Button = forwardRef<HTMLDivElement, ButtonProps>(   (props, ref) => {     return (       <Component ref={ref}>         {props.children}       </Component>     );   } );  export default Button; </code></pre> <p>First type argument is for <code>ref</code> and other type argument is for <code>props</code> that's a bit confusing.</p>",,,false
"{'account_id': 14261870, 'reputation': 361, 'user_id': 10302358, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d50a4427ed4187fd564e292dfbccad54?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Queens Coder', 'link': 'https://stackoverflow.com/users/10302358/queens-coder'}",False,0,1669653095,1669653095,74603692,74603648,CC BY-SA 4.0,"<p>According to the screenshot, the deleteHandler method accepts the event as an argument, to pass the data.at(-1).name you need to call it like so</p> <pre><code>onClick={() => deleteHandler(data.at(-1).name} </code></pre>",,,false
"{'account_id': 26877426, 'reputation': 361, 'user_id': 20458458, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/QTyWi.jpg?s=256', 'display_name': 'kuuhak-u', 'link': 'https://stackoverflow.com/users/20458458/kuuhak-u'}",True,0,1669656135,1669655682,74604205,74603626,CC BY-SA 4.0,"<p>You can do something like this , it will give something similar to the given image and also its dynamic table will change if data changes</p> <pre><code> return (     <div className=""App"">       <table>         <td>           {locationList.map((location) => {             return (               <tr>                 {"" ""}                 <th>{location}</th>                 <td>                   {jsonData.rooms.map((room) => {                     return (                       <tr>                         <td>                           {room.room_location === location && room.room_name}                         </td>                       </tr>                     );                   })}{"" ""}                 </td>               </tr>             );           })}         </td>       </table>     </div>   ); </code></pre> <p>Also some tip use <code>useState</code> hook instead of pushing your data into empty array</p>",1669656135.0,,false
"{'account_id': 8632300, 'reputation': 100700, 'user_id': 6463558, 'user_type': 'registered', 'accept_rate': 48, 'profile_image': 'https://i.sstatic.net/g22sX.jpg?s=256', 'display_name': 'Lin Du', 'link': 'https://stackoverflow.com/users/6463558/lin-du'}",False,0,1669864583,1669864583,74636587,74603600,CC BY-SA 4.0,"<p>It should be possible. The component can have its own redux store. Keep it as a complete black box.</p> <p>Here is a demo, consider the package directory is your npm package and we install the <code>redux</code>, <code>react-redux</code> packages in the npm package, not your host or main project.</p> <p><code>package/combobox.tsx</code>:</p> <pre><code>import * as React from 'react'; import { useSelector } from 'react-redux';  export const Combobox = () => {   const state = useSelector((state) => state);   console.log('state: ', state);   return <div>combobox</div>; }; </code></pre> <p>we can wrap it in a special component that initializes the store in the constructor:</p> <p><code>package/index.tsx</code>:</p> <pre><code>import { Component } from 'react'; import * as React from 'react'; import { Provider } from 'react-redux'; import { createStore } from 'redux'; import { Combobox } from './combobox';  const reducer = (state = { counter: 1 }) => {   return state; };  export default class ComboboxConnected extends Component {   store: ReturnType<typeof createStore>;   constructor(props) {     super(props);     this.store = createStore(reducer);   }    render() {     return (       <Provider store={this.store}>         <Combobox />       </Provider>     );   } } </code></pre> <p>Now, each <code>Combobox</code> component instance has its own redux store and state.</p> <p>Consumer side <code>App.tsx</code>:</p> <pre><code>import * as React from 'react'; import Combobox from './package/index'; import './style.css';  export default function App() {   return (     <div>       <Combobox />     </div>   ); } </code></pre> <p>See <a href=""https://redux.js.org/usage/isolating-redux-sub-apps"" rel=""nofollow noreferrer"">Isolating Redux Sub-Apps</a></p> <p><a href=""https://stackblitz.com/edit/react-ts-yi6crm?file=App.tsx"" rel=""nofollow noreferrer"">stackblitz</a></p>",,,false
"{'account_id': 15483264, 'reputation': 341, 'user_id': 11169942, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/dff8349f101b0db816bde1ae3926adcc?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Mario', 'link': 'https://stackoverflow.com/users/11169942/mario'}",False,1,1669654099,1669654099,74603895,74603443,CC BY-SA 4.0,"<p>To not disappear when you place a text and click add use <code>e.preventDefault()</code> Like this:</p> <pre><code>function App() {   const [text1, setText1] = useState("""");   const [does, setDoes] = useState([]);    const addTodo = (e) => {     e.preventDefault();      return setDoes([...does, text1]);   };    return (     <div>       <h1>To do List!</h1>       <form onSubmit={(e) => addTodo(e)}>         <input           type=""text""           name=""text1""           id=""text1""           placeholder=""To do""           onChange={(e) => setText1(e.target.value)}         />         <button           type=""submit""           className=""submitButton""         >           Add         </button>       </form>        <ul className=""todoo"">         {does.map((item) => (           <li key={item.toString()}>{item}</li>         ))}       </ul>     </div>   ); } export default App; </code></pre> <p>and if you want to keep the data in the page when you refresh it you can either use an api to store the data to a database or to use <code>localStorage</code>. <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage</a></p>",,,false
"{'account_id': 17567156, 'reputation': 3020, 'user_id': 12743692, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jG5eJ.png?s=256', 'display_name': 'dreambold', 'link': 'https://stackoverflow.com/users/12743692/dreambold'}",True,0,1669653810,1669653810,74603840,74603443,CC BY-SA 4.0,"<p>As you have used the form, the page refreshed when you click the submit button. Instead of a form, you can use a <code>div</code> and handle the event with the click of the submit button. So you can do it this way:</p> <pre><code>    ...           <h1>To do List!</h1>           <div>             <input               type=""text""               name=""text1""               id=""text1""               placeholder=""To do""               onChange={(e) => setText1(e.target.value)}             />             <button type=""submit"" className=""submitButton"" onClick={addTodo}>               Add             </button>           </div>      ... </code></pre> <p><a href=""https://i.sstatic.net/9Cv8n.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/9Cv8n.png"" alt=""enter image description here"" /></a></p>",,,false
"{'account_id': 309404, 'reputation': 5805, 'user_id': 621827, 'user_type': 'registered', 'accept_rate': 94, 'profile_image': 'https://i.sstatic.net/rNwpq.jpg?s=256', 'display_name': 'Stephen Gilboy', 'link': 'https://stackoverflow.com/users/621827/stephen-gilboy'}",True,1,1669826312,1669652952,74603665,74603367,CC BY-SA 4.0,"<p>Your API calls should be in a <a href=""https://redux.js.org/usage/writing-logic-thunks"" rel=""nofollow noreferrer"">Redux Thunk</a> which then dispatch to the store to update the list of movies setting whether or not it is favorited.</p> <pre><code>export const removeFavouriteMovie = (request) => {     return async (dispatch) => {         const response = await fetch('http://localhost:8082/favouritemovie/', {         method: 'POST',         body: JSON.stringify(request),         headers: {             'Content-type': 'application/json; charset=UTF-8',         },       });       if (response.status === 200) {         // New reducer to unfavorite the movie         dispatch(unfavoriteMovie(request.movie));       } else {         // New reduce to notify the user of the error         const res = await response.json();         dispatch(setErrorMessage(`There was a problem saving the movie: ${res.errorMsg}`);       }     }; }  </code></pre> <p>Then this function should be updated to use dispatch to call the thunk.</p> <pre><code>const changeIsMovieFavourite = () => {   isMovieFaved ?   dispatch(removeFavouriteMovie({ userName: currentUser, movie: card.id }) :   dispatch(favouriteMovie({userName: currentUser, movie: card.id}); }; </code></pre> <p>Just know that if the API call takes a while the user may think they didn't un-favorite the movie so you might want to toggle the Heart fill in the component and then if it succeeds the heart fill stays empty but if an error shows up the user gets the error message and the heart fill goes back to solid.</p>",1669826312.0,,false
"{'account_id': 29100648, 'reputation': 11, 'user_id': 22292532, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AAcHTtd_Du3w3oQuRDnFNhGGNc3kD33uR23BCN-r84GojO-9=k-s256', 'display_name': 'Vishwas', 'link': 'https://stackoverflow.com/users/22292532/vishwas'}",False,0,1699282484,1699282484,77432051,74603272,CC BY-SA 4.0,<p>Just change .gltf to .json and in yaml file also</p>,,,false
"{'account_id': 23444018, 'reputation': 1, 'user_id': 17501102, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/98a2814b4c976f16416f47fb1b341972?s=256&d=identicon&r=PG', 'display_name': 'Silverio Rodriguez', 'link': 'https://stackoverflow.com/users/17501102/silverio-rodriguez'}",False,0,1693359084,1693359084,77004472,74603272,CC BY-SA 4.0,"<p>I was experiencing similar issue and I found another solution, in the GLTFLoader load function I changed the extension from the filename of my model from scene.gltf to scene.json, and that made the trick for me, hosting it in React with AWS Amplify hosting.</p> <p>That tricks the amplify server into thinking this is just another binary file, threated the same way a JPEG will be threated (not confused with some kind of HTML webpage), and it will just resolve the path, and load the GLTF file normally.  I still don't know what exactly is causing a .GLTF file to behave differently than a JSON or JPEG, but the server is definitively resolving it as something else, some kind of script.  I you look into the Browser Developer Tools go to Network try to access the GLTF file direction with the URL for example: ""https://YOURDOMAIN.SUBDOMAIN.com/images/scene.gltf  it will try to download other files like all.min.css, and others that have nothing to do with the GLTF.  But if you try to download just a 1.jpg from the public folder, it will download only that file.  That gave me the idea to change the extension to json, and then only the json file is downloaded and the contents of the GLTF file are now displayed as JSON.  At the end, the GLTF file seems to be a JSON file so it makes sense to change it to JSON, and it worked.</p>",,,false
"{'account_id': 24991083, 'reputation': 46, 'user_id': 18852261, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GiP8AkR977rp60xPafbjNA-DuMWjfaoxOX4lK10=k-s256', 'display_name': 'Falcon Eight', 'link': 'https://stackoverflow.com/users/18852261/falcon-eight'}",False,1,1669659257,1669659257,74604848,74603272,CC BY-SA 4.0,"<p>If you want to host an application on aws amplify you have to create a build version of your app (assuming that it works already without any start issues meaning that you have a functional react app created with the command npx create-react-app).</p> <p>Usually your react app runs on local host and it's basically like a test/development version of your app.  When you take it into aws it really wants a build version of your app.  The build command will generate everything you need for this.  Navigate to your react application folder and</p> <p>Run the command</p> <pre><code>npm run build </code></pre> <p>This will create a folder that you can send to aws amplify. When you go to the aws amplify site it'll ask you if you would like to build a website or host a website.</p> <p>Select host and then it'll ask if you would like to push it from a repository like github.  For now lets just skip it and keep the deployment as simple as possible.  Deploy without git for now.</p> <p><a href=""https://i.sstatic.net/v9ANQ.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/v9ANQ.png"" alt=""enter image description here"" /></a></p> <p>Next, we want to click on drag and drop so that you can manually select the file build folder that your npm run build command generated.</p> <p><a href=""https://i.sstatic.net/FAVOL.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/FAVOL.png"" alt=""enter image description here"" /></a></p> <p>Look for the build folder that was generated and drag that folder into the aws area.  You don't actually have to click the 'choose files button'.  Sometimes the box glitches and won't let you drag anything outside of the box.  So what you can do is just open up your directories and manually find that build file in your folders.  Drag it from there to the aws zone at the bottom of the screen.</p> <p>Give your AWS app a name and env name.</p> <p>From there you can deploy.  Once you deploy it'll give you a site address.  Also before you make your build, be sure that all of the packages you need are installed.  I had an issue where my axiom commands were not working because I had not installed it prior to pushing my build.</p> <p>So if your project depends on a certain npm package to run your .gltf files make sure that it is installed on your application.  You should see it inside the node modules folder (in your apps local directory not the aws one).</p> <p>I think AWS uses the node modules folder to generate everything your project needs (But I am not 100% sure of this).  But it didn't work prior to me installing the package and pushing the build folder again to aws via drag and drop.</p> <p>There are better ways to do this but this is what worked for me! Hope this helps to at least get your site up and running.  Also hope it helps with any package issues that might have been happening with your 3d models.  This is about as far as I can take you.  Good luck!</p>",,,false
"{'account_id': 26685775, 'reputation': 1, 'user_id': 20295118, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e8a879af10dcd7f672aa886f76eead62?s=256&d=identicon&r=PG', 'display_name': 'user20295118', 'link': 'https://stackoverflow.com/users/20295118/user20295118'}",True,0,1669651766,1669651766,74603417,74603238,CC BY-SA 4.0,"<p>As commented from @Pete, it was a margin collapsing problem. Adding</p> <blockquote> <p>overflow:auto</p> </blockquote> <p>to the elements involved with the collapse seems to have fixed it.</p>",,,false
"{'account_id': 18834505, 'reputation': 1, 'user_id': 13737495, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-8V6vUrVZfmU/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucn9xFa87kPNhz1m2gkUmVjxUFwtLQ/photo.jpg?sz=256', 'display_name': 'Matthew Rikard', 'link': 'https://stackoverflow.com/users/13737495/matthew-rikard'}",False,0,1669959869,1669651261,74603299,74603106,CC BY-SA 4.0,"<p>I'm currently using <code>html-react-parser</code>. Once it is installed and imported to your app, it's a simple as inserting <code>parse(myDataVariable)</code> into your jsx. Check out the documentation. It's a pretty easy setup.</p> <p><a href=""https://www.npmjs.com/package/html-react-parser"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/html-react-parser</a></p>",1669959869.0,,false
"{'account_id': 1092869, 'reputation': 21274, 'user_id': 1087119, 'user_type': 'registered', 'accept_rate': 50, 'profile_image': 'https://i.sstatic.net/CMEVE.png?s=256', 'display_name': 'Christian Fritz', 'link': 'https://stackoverflow.com/users/1087119/christian-fritz'}",False,0,1669652740,1669652740,74603620,74602990,CC BY-SA 4.0,"<p>As Liam was saying, MQTT is not a web protocol, which means that browsers cannot create native MQTT connections. You can, however, use MQTT over WebSockets if your MQTT broker supports it and has it enabled -- most brokers, incl. mosquitto, do. If you want to go that route, you can use <a href=""https://www.npmjs.com/package/mqtt-browser"" rel=""nofollow noreferrer"">mqtt-browser</a>, which is essentially a browserified version of the mqtt.js package you were trying to use.</p> <p>You'd connect to mqtt just as before using the connect method, just using a web socket url, e.g.:</p> <pre><code>const client = mqtt.connect('ws://localhost:8080') </code></pre>",,,false
"{'account_id': 26444292, 'reputation': 4552, 'user_id': 20088324, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/X5ysV.jpg?s=256', 'display_name': 'RubenSmn', 'link': 'https://stackoverflow.com/users/20088324/rubensmn'}",True,1,1669651724,1669651405,74603335,74602843,CC BY-SA 4.0,"<p>A simple way to do it is with <code>React.cloneElement</code></p> <pre class=""lang-js prettyprint-override""><code>const CustomDialog = ({ children, someCustomComponent }) => {   const handleClickOpen = () => {     setOpen(true);   };    const handleClose = () => {     setOpen(false);   };    // clone the component and add the onClick handler   const customComponentClone = React.cloneElement(someCustomComponent, {     onClick: handleClickOpen   });    return (     <>       {customComponentClone}       <Dialog>         <DialogTitle>         <DialogTItle>         <DialogContent>{children}</DialogContent>         <DialogActions>...</DialogActions>       </Dialog>     </>   ); } </code></pre> <p>This way you can use it like you mentioned</p> <pre class=""lang-js prettyprint-override""><code><CustomDialog someCustomComponent={<h1>open</h1>}>   {myDialogContent} </CustomDialog> </code></pre> <p>Check here a <a href=""https://codesandbox.io/s/happy-goldwasser-eoz9of"" rel=""nofollow noreferrer"">live version</a></p>",1669651724.0,,false
"{'account_id': 22148070, 'reputation': 168, 'user_id': 16397008, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJzedWCPu4a-gur396z7QkCk-fjLix1whsnLp-LK=k-s256', 'display_name': 'Raz Levy', 'link': 'https://stackoverflow.com/users/16397008/raz-levy'}",True,2,1669649305,1669649305,74602884,74602791,CC BY-SA 4.0,"<p><code>useState</code> by default simply does one thing, it sets the new state and cause a re-render to the function.</p> <p>It is asynchronous in nature so by default, methods running after it usually <strong>run</strong>.</p> <p>When you call <code>setKeys</code>, you trigger a re-render of your component, which will call again this function. However, the <code>console.log(keys)</code> inside the function still references the first value returned by <code>useState</code>, which is your original value (or the last one).</p> <p>If you want to print it, you can do it by using the <code>console.log</code> outside of the <code>useEffect</code>.</p>",,,false
"{'account_id': 8632300, 'reputation': 100700, 'user_id': 6463558, 'user_type': 'registered', 'accept_rate': 48, 'profile_image': 'https://i.sstatic.net/g22sX.jpg?s=256', 'display_name': 'Lin Du', 'link': 'https://stackoverflow.com/users/6463558/lin-du'}",True,1,1669713677,1669713677,74611678,74602762,CC BY-SA 4.0,"<p>You should create a <code>RubroContext1Provider</code> component and declare the context value as its local state. So that the children of the <code>RubroContext1Provider</code> component and share the context value(stored in its state).</p> <p>E.g.</p> <p><code>RubroContext.tsx</code>:</p> <pre><code>import {   createContext,   Dispatch,   SetStateAction,   useContext,   useState, } from 'react'; import * as React from 'react';  type itemRubro = any;  export type RubroType1 = {   rubrosItem1: itemRubro;   setItemRubro1: Dispatch<SetStateAction<itemRubro>>; };  export type RubroType2 = {   rubrosItem2: itemRubro;   setItemRubro2: Dispatch<SetStateAction<itemRubro>>; };  export const RubroContext1 = createContext<Partial<RubroType1>>({}); export const RubroContext2 = createContext<Partial<RubroType2>>({});  export const useRubroContext1 = () => useContext(RubroContext1); export const useRubroContext2 = () => useContext(RubroContext2);  export const RubroContext1Provider = ({ children }) => {   const [value, setValue] = useState();   return (     <RubroContext1.Provider       value={{         rubrosItem1: value,         setItemRubro1: setValue,       }}     >       {children}     </RubroContext1.Provider>   ); }; </code></pre> <p><code>CompletarRubros.tsx</code>:</p> <pre><code>import { useEffect, useRef } from 'react'; import { useRubroContext1 } from './RubroContext';  export const CompletarRubros = () => {   const { rubrosItem1, setItemRubro1 } = useRubroContext1();    const rubro = useRef('first');   const radius = useRef(1);   const description = useRef('test');    useEffect(() => {     setItemRubro1({       rubro: rubro.current,       radius: String(radius),       description: description.current,       calificacion: 0,     });   }, []);    return null; }; </code></pre> <p><code>Test.tsx</code>:</p> <pre><code>import { useRubroContext1 } from './RubroContext';  export const Test = () => {   const { rubrosItem1 } = useRubroContext1();   console.log('[Test]:', rubrosItem1?.rubro);   return null; }; </code></pre> <p><code>App.tsx</code>:</p> <pre><code>import * as React from 'react'; import { CompletarRubros } from './CompletarRubros'; import { RubroContext1Provider } from './RubroContext'; import './style.css'; import { Test } from './Test';  export default function App() {   return (     <div>       <RubroContext1Provider>         <CompletarRubros />         <Test />       </RubroContext1Provider>     </div>   ); } </code></pre> <p>The console logs:</p> <pre class=""lang-bash prettyprint-override""><code>[Test]:undefined [Test]:undefined [Test]:first [Test]:first </code></pre> <p><a href=""https://stackblitz.com/edit/react-ts-vjfzlg?file=App.tsx"" rel=""nofollow noreferrer"">stackblitz</a></p>",,,false
"{'account_id': 20815847, 'reputation': 153, 'user_id': 15288663, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/cdaa5a141197787d5e4d64f199de31f4?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Leul Ayalew', 'link': 'https://stackoverflow.com/users/15288663/leul-ayalew'}",True,1,1669657607,1669651106,74603263,74602741,CC BY-SA 4.0,"<p>The problem is typically caused by the custome style to the bottom tab. You may fix it by adding the footer component prop to the last flatList.</p> <pre><code>//The total height including the bottom tab height and the space    let bottomMargin = 110   <SafeAreaView style={{flex:1}}/> //Top FLatList <View>   <FlatList      showsHorizontalScrollIndicator={false}      horizontal      data={articles}      ...   />  </View> //Middle FLatList <View>   <FlatList      showsHorizontalScrollIndicator={false}      horizontal      data={options}      ...   />  </View>  //Bottom FLatList  <View>   <FlatList      data={articles}      ListFooterComponent={()=>(       <FooterComponent/>      )}      ...   />  </View> </SafeAreaView>     const FooterComponent = () => {      return (         <View style={{marginBottom: bottomMargin}} />     )   } </code></pre> <p><strong>To scroll the whole page</strong></p> <p>To scroll the entire page, pass the above code from the third flatlist as the Header component to the third flatlist like the following:</p> <pre><code> <SafeAreaView style={{flex:1}}/> //Top FLatList   //Bottom FLatList  <View>   <FlatList      data={articles}      ListHeaderComponent={()=>(       <HeaderComponent/>      )}      ...   />  </View> </SafeAreaView>     const HeaderComponent= () => {     return (       <View>         <FlatList          showsHorizontalScrollIndicator={false}          horizontal          data={articles}           />           <FlatList          showsHorizontalScrollIndicator={false}          horizontal          data={options}          />      </View>     )   } </code></pre>",1669657607.0,,false
"{'account_id': 22148070, 'reputation': 168, 'user_id': 16397008, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJzedWCPu4a-gur396z7QkCk-fjLix1whsnLp-LK=k-s256', 'display_name': 'Raz Levy', 'link': 'https://stackoverflow.com/users/16397008/raz-levy'}",False,0,1669648912,1669648912,74602802,74602712,CC BY-SA 4.0,"<p>You can create a custom hook that will detect the click outside your component.</p> <p>To achieve it, you have to use useRef in React.</p> <p>Here's an implementation of the hook:</p> <pre><code>import { RefObject, useEffect } from 'react';  const useClickOutside = (ref: RefObject<HTMLDivElement>, handler: (e: Event) => void) => {   useEffect(() => {     let isStartedInside = false;     let isStartedWhenMounted = false;      const listener = (event: Event) => {       // Do nothing if `mousedown` or `touchstart` started inside ref element       if (isStartedInside || !isStartedWhenMounted) return;       // Do nothing if clicking ref's element or descendent elements       if (!ref.current || ref.current.contains(event.target as HTMLElement)) return;        handler(event);     };      const validateEventStart = (event: Event) => {       isStartedWhenMounted = Boolean(ref.current);       isStartedInside = Boolean(ref.current && ref.current.contains(event.target as HTMLElement));       listener(event);     };      document.addEventListener('mousedown', validateEventStart);     document.addEventListener('touchstart', validateEventStart);     return () => {       document.removeEventListener('mousedown', validateEventStart);       document.removeEventListener('touchstart', validateEventStart);     };   }, [ref, handler]); };  export default useClickOutside;  </code></pre>",,,false
"{'account_id': 19255761, 'reputation': 907, 'user_id': 15119024, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/LyxLa.png?s=256', 'display_name': 'ClusterH', 'link': 'https://stackoverflow.com/users/15119024/clusterh'}",True,1,1669650373,1669650373,74603100,74602701,CC BY-SA 4.0,"<p>Here is the <a href=""https://codesandbox.io/s/stupefied-mestorf-8dlg9n?file=/src/App.tsx"" rel=""nofollow noreferrer"">improved way</a> you may need.</p>",,,false
"{'account_id': 26543632, 'reputation': 64, 'user_id': 20822203, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/505730e15af7636bc86cf7018d3af655?s=256&d=identicon&r=PG', 'display_name': 'Oleksandr', 'link': 'https://stackoverflow.com/users/20822203/oleksandr'}",True,1,1671539417,1671538615,74862969,74602582,CC BY-SA 4.0,"<p>If you use TypeScript you always should set return type and arguments for your asyncThunk in genric</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>export const UserLogin = createAsyncThunk<return type, arguments>(""/users/authentication"", async (user) => {   try{     const res = await axios.post(""/users/authentication"", user)     ...   } catch(err){     ...   } })</code></pre>  </div>  </div>  </p> <p>And also you should create custom hook useDispatch and useSelector</p> <hr /> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>import { useSelector, useDispatch, TypedUseSelectorHook } from ""react-redux"";  import type { RootState, AppDispatch } from ""../redux/store"";  export const useAppDispatch = () => useDispatch<AppDispatch>();  export const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;</code></pre>  </div>  </div>  </p> <hr /> <p>And main reducer file should have such look:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>import { configureStore } from ""@reduxjs/toolkit"";  import userleSlice from ""./slice/userSlice"";  export const store = configureStore({   reducer: {     user: userSlice,   }, });  export type RootState = ReturnType<typeof store.getState>; export type AppDispatch = typeof store.dispatch;</code></pre>  </div>  </div>  </p>",1671539417.0,,false
"{'account_id': 8754424, 'reputation': 6712, 'user_id': 6546440, 'user_type': 'registered', 'accept_rate': 82, 'profile_image': 'https://www.gravatar.com/avatar/3b04be7f991730c65b76c7e0ad09bba6?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Rashomon', 'link': 'https://stackoverflow.com/users/6546440/rashomon'}",False,0,1669648821,1669648821,74602774,74602582,CC BY-SA 4.0,"<p>Try passing the type of the args to <code>createAsyncThunk</code>:</p> <pre><code>type ReturnedType = any // The type of the return of the thunk type ThunkArg = { email:string, password:string }   export const UserLogin = createAsyncThunk<ReturnedType, ThunkArg>(""/users/authentication"", async (user) => {   try{     const res = await axios.post(""/users/authentication"", user)     ...   } catch(err){     ...   } })  </code></pre>",,,false
"{'account_id': 18877508, 'reputation': 401, 'user_id': 20539156, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b59d54dc3d0f3a0f6dcaeabdece9ec96?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'AbsoluteZero', 'link': 'https://stackoverflow.com/users/20539156/absolutezero'}",True,2,1669647685,1669647685,74602521,74602447,CC BY-SA 4.0,"<p>You can access the key by variable by using <code>[]</code> around the key. Here I'm also returning all previous data unchanged because in your current example all other boxes would get overwritten.</p> <pre><code>const handleMouseOver = (e,box_id) => {     setIsHovering((v) => ({ ...v, [box_id]: true })); }; </code></pre>",,,false
"{'account_id': 29198649, 'reputation': 1, 'user_id': 22369237, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AAcHTtcCG2Ml1KNWQmq01tpqNEtRvXY73zgoi3_jrAFDHFUG=k-s256', 'display_name': 'Matthew Kayode', 'link': 'https://stackoverflow.com/users/22369237/matthew-kayode'}",False,0,1691665209,1691663771,76874929,74602415,CC BY-SA 4.0,"<p>I quite had a similar problem, after some toggle I came about a better syntax:</p> <pre><code>const timePeriod = formatDistanceToNow(Date.now(date)); </code></pre> <p>this definitely solved the problem.</p>",1691665209.0,,false
"{'account_id': 25099921, 'reputation': 93, 'user_id': 18950754, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/OpX1x.jpg?s=256', 'display_name': 'Ali&#233;nor', 'link': 'https://stackoverflow.com/users/18950754/ali%c3%a9nor'}",True,1,1669720282,1669720282,74613144,74602326,CC BY-SA 4.0,"<p>Thanks to an adapatation of the validating answer of [this question][1], I solved my probleme, by adding a loading state.</p> <p>I add in the code with the API :</p> <pre class=""lang-js prettyprint-override""><code>function RisquesRdt() {   const { state } = useLocation();   const { idExploit } = state;   const [loading, setLoading] = React.useState(true);   ...    useEffect ( () => {    ...       .then(response =>{         setDataReg(response.data)         setDataReg(prev => {           setLoading(false);           return prev;         })       })      })   }, [idExploit]) ...           {(TypeRisque==='Courant' && Echelle==='REG') ? (<CarteRisquesREGCour data={dataReg} loading={loading}/>)}       </div>       <OADMenu idExploit={idExploit}/>     </div>   ); }  export default RisquesRdt; </code></pre> <p>And in the map file :</p> <pre><code>import React from 'react'; import { MapContainer, TileLayer, GeoJSON } from 'react-leaflet' import 'leaflet/dist/leaflet.css';   function CarteRisquesREGCour({data, loading}) {   const bbox = require('geojson-bbox');   const extent = bbox(data);      ...     return (       <div className=""totalCarte"">       {!loading && (           <div className="""">           ...             {data && !loading && (               <GeoJSON data={data}                style={style}                onEachFeature={onEachFeature} />             )}           </MapContainer>         </div>       )}       </div>     );   }  export default CarteRisquesREGCour; ```  And with everything run works like a charm (except the highlight)    [1]: https://stackoverflow.com/questions/73432932/api-is-not-working-inside-oneachfeature-react-leaflet-function </code></pre>",,,false
"{'account_id': 19617779, 'reputation': 21, 'user_id': 14358868, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Jb7YK.jpg?s=256', 'display_name': 'Azizul Qusyairin', 'link': 'https://stackoverflow.com/users/14358868/azizul-qusyairin'}",False,0,1723795345,1723795345,78878162,74602256,CC BY-SA 4.0,"<p>Apparently this is a known issue for <code>google-map-react</code>:</p> <ul> <li><a href=""https://github.com/google-map-react/google-map-react/issues/1189"" rel=""nofollow noreferrer"">https://github.com/google-map-react/google-map-react/issues/1189</a></li> <li><a href=""https://github.com/google-map-react/google-map-react/issues/1193"" rel=""nofollow noreferrer"">https://github.com/google-map-react/google-map-react/issues/1193</a></li> </ul> <p>I ended up using <a href=""https://github.com/giorgiabosello/google-maps-react-markers"" rel=""nofollow noreferrer"">google-map-react-markers</a> library. Sample implementation:</p> <pre><code>import ""../style.css""; import React from ""react""; import { useState, useRef } from ""react""; import GoogleMap from 'google-maps-react-markers'  function Home() {     const mapRef = useRef(null)     const [mapReady, setMapReady] = useState(false)        /**      * @description This function is called when the map is ready      * @param {Object} map - reference to the map instance      * @param {Object} maps - reference to the maps library      */     const onGoogleApiLoaded = ({ map, maps }) => {       mapRef.current = map       setMapReady(true)     }      const Marker = ({ text }) => (             <div               style={{                 position: ""absolute"",                 transform: ""translate(-50%, -100%)"", // Center the marker horizontally and move it up above the coordinate point                 color: ""black"",                 textAlign: ""center"",                 width: ""120px"",               }}             >               <div                 style={{                   background: ""white"",                   padding: ""10px"",                   borderRadius: ""8px"",                   boxShadow: ""0px 0px 10px rgba(0, 0, 0, 0.2)"",                   fontSize: ""14px"",                   fontWeight: ""bold"",                   display: ""flex"",                   flexDirection: ""column"",                 }}               >                 {text}                 <span style={{ fontWeight: ""normal"" }}>View Model > </span>               </div>               <div                 style={{                   width: 0,                   height: 0,                   borderLeft: ""10px solid transparent"",                   borderRight: ""10px solid transparent"",                   borderTop: ""10px solid white"",                   position: ""absolute"",                   left: ""50%"",                   transform: ""translateX(-50%)"",                   top: ""100%"",                   boxShadow: ""0px 2px 4px rgba(0, 0, 0, 0.2)"",                 }}               />             </div>           );    return (     <div style={{ height: ""100vh"", width: ""100%"" }}>       <GoogleMap         apiKey=""""         defaultCenter={{ lat: 3.166, lng: 101.7 }}         defaultZoom={5}         mapMinHeight=""100vh""         onGoogleApiLoaded={onGoogleApiLoaded}         onChange={(map) => console.log('Map moved', map)}       >           <Marker             text={'Kebun 500'}             lat={3.166}             lng={101.7}             // onClick={onMarkerClick('hello', 3.166, 101.7)} // you need to manage this prop on your Marker component!             // draggable={true}             // onDragStart={(e, { latLng }) => {}}             // onDrag={(e, { latLng }) => {}}             // onDragEnd={(e, { latLng }) => {}}           >HELLO</Marker>       </GoogleMap>     </div>   ); }  export default Home; </code></pre>",,,false
"{'account_id': 9304645, 'reputation': 61, 'user_id': 6908832, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/dd9166eb3328f8eed85008983caac1c7?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'ganam', 'link': 'https://stackoverflow.com/users/6908832/ganam'}",False,0,1679224094,1679224094,75781548,74602256,CC BY-SA 4.0,"<p>For me, the issue was that For some reason, the marker object was rendered so that its top left corner is fixed at the specified location. This is different from the convention that the bottom middle of the marker is fixed at the location. The result is that when you zoom out, all the marker corners seems to change location on the map except for the top left corner. Solved it by adding :</p> <pre><code>style={{   width: ""50px"",   height: ""50px"",   position: ""relative"",   top: ""-50px"",   left: ""-25px"", }} </code></pre> <p>to my marker JSX to make it's bottom middle fixed instead</p>",,,false
"{'account_id': 3473898, 'reputation': 3052, 'user_id': 2907606, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/4cbfc259f764c19589410069fae1a933?s=256&d=identicon&r=PG', 'display_name': 'spirift', 'link': 'https://stackoverflow.com/users/2907606/spirift'}",True,0,1669645253,1669645253,74601989,74601941,CC BY-SA 4.0,"<p>I think you're using create-react-app. If that is the case you need to add the .env file to the root of your project, not the src folder.</p> <p>See the docs for more info on env vars in create react app <a href=""https://create-react-app.dev/docs/adding-custom-environment-variables/#adding-development-environment-variables-in-env"" rel=""nofollow noreferrer"">https://create-react-app.dev/docs/adding-custom-environment-variables/#adding-development-environment-variables-in-env</a></p>",,,false
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",True,4,1669652884,1669652884,74603651,74601877,CC BY-SA 4.0,"<p>Regular expressions were removed from route paths in <code>react-router-dom@6</code>. See  <a href=""https://reactrouter.com/en/main/start/faq#what-happened-to-regexp-routes-paths"" rel=""nofollow noreferrer"">""What Happened to Regexp Routes Paths?""</a> for details.</p> <p>You've a couple options:</p> <ol> <li><p>Explicitly render the routes you want to match. For this you map the categories in the same way as you did the links.</p> <pre><code><Routes>     <Route path=""*"" element={<Navigate to=""/"" />} />   <Route path=""/"" element={<HomePage />} />   <Route path=""/shop"">     <Route index element={<ShopPage />} />     {categories.map(category => (       <Route         key={category}         path={category} // <-- ""/shop/shoes"", ""/shop/jeans"", ""/shop/sweaters""         element={<CategoryPage />}       />     ))}   </Route> </Routes> </code></pre> </li> <li><p>Validate the <code>category</code> route path parameter in a matched component. I'd suggest creating a category wrapper component that reads and validates the <code>category</code> path parameter and bounces a user off the route if the category isn't valid.</p> <pre><code>import { Navigate, useParams } from 'react-router-dom';  const CategoryWrapper = ({ categories = [], children }) => {   const { category } = useParams();    const isValid = !categories.length || categories.includes(category);    return isValid ? children : <Navigate to=""/"" replace />; }; </code></pre> <pre><code><Routes>     <Route path=""*"" element={<Navigate to=""/"" />} />   <Route path=""/"" element={<HomePage />} />   <Route path=""/shop"">     <Route index element={<ShopPage />} />     <Route       path="":category""       element={(         <CategoryWrapper categories={categories}>           <CategoryPage />         <CategoryWrapper>       )}     />   </Route> </Routes> </code></pre> </li> </ol>",,,false
"{'account_id': 18877508, 'reputation': 401, 'user_id': 20539156, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b59d54dc3d0f3a0f6dcaeabdece9ec96?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'AbsoluteZero', 'link': 'https://stackoverflow.com/users/20539156/absolutezero'}",True,2,1669645388,1669645388,74602032,74601790,CC BY-SA 4.0,"<p>Again, not sure if this is what you needed so let me know.</p> <pre><code>import React, { useState, useCallback } from 'react';  export function App() {   const [card, setCard] = useState({     name: """",     questions: [       {         id: 'question-1',         question: ""Question 1"",         answer: """",       },       {         id: 'question-2',         question: ""Question 2"",         answer: """",       },       {         id: 'question-3',         question: ""Question 3"",         answer: """",       },     ]   });    const handleCardNameChange = useCallback((ev) => {     setCard((c) => ({ ...c, name: ev.target.value }))   }, [setCard]);    const handleAnswerChange = useCallback((cardId, value) => {     const updatedQuestions = card.questions.map((c) => {               if (c.id !== cardId) {         return c;       }        return {         ...c,         answer: value,       }     });      setCard({       ...card,       questions: updatedQuestions,     })   }, [card, setCard]);    return (     <div>       <input placeholder=""Card Title"" value={card.name} onChange={handleCardNameChange} />       {card.questions.map((c) => (         <div key={c.id}>           <p>Q: {c.question}</p>           <input placeholder=""Answer"" value={c.answer} onChange={(ev) => handleAnswerChange(c.id, ev.target.value)} />         </div>       ))}     </div>   ); }  </code></pre> <p>This handles answer change per question and card title change separately. I wrote this in a some weird editor online so it might not be perfect but it should work.</p>",,,false
"{'account_id': 24051093, 'reputation': 1, 'user_id': 18029579, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GgodB_8ICD9-UkzB0R3fkTk-yPQXuU2GevUzLEedQ=k-s256', 'display_name': 'Guilherme Nascimento', 'link': 'https://stackoverflow.com/users/18029579/guilherme-nascimento'}",False,0,1669645368,1669645368,74602027,74601790,CC BY-SA 4.0,"<p>You have a few approaches to do this.</p> <pre class=""lang-js prettyprint-override""><code>     const [ card, setCard ] = useState( {       name: """",       questions: {         1: {           statement: """",           answer: """",         },         2: {           statement: """",           answer: """",         },         //...       }     } );      // To set an especifique answer or question, you can set the state like this:     setCard( prev => ( {       ...prev,       questions: {         ...prev.questions,         1: {           ...prev.questions[ 1 ],           answer: ""New answer""         }       }     } ) );      // To add a new question, you can set the state like this:     setCard( prev => ( {       ...prev,       questions: {         ...prev.questions,         [ Object.keys( prev.questions ).length + 1 ]: {           statement: """",           answer: """",         }       }     } ) );      // To remove a question, you can set the state like this:     setCard( prev => {       const questions = { ...prev.questions };       delete questions[ 1 ];       return {         ...prev,         questions       };     } );  </code></pre> <p>But if you wanna use with array, you can do like this:</p> <pre class=""lang-js prettyprint-override""><code>     // Solution with array     const [card, setCard] = useState({       name: """",       questions: [         {           question: """",           answer: """",         },         {           question: """",           answer: """",         },         //...       ],     } );      // To set an especifique answer or question, you will need the index of the question, or null to set a new question.      const setCardQuestions = ( index, question, answer ) => {       setCard( ( prev ) => {         const questions = [...prev.questions];         if ( index === null ) {           questions.push( {             question,             answer,           } );         } else {           questions[ index ] = {             question,             answer,           };         }         return {           ...prev,           questions,         };       });     };      // To remove a question, you will need the index of the question.     const removeCardQuestion = ( index ) => {       setCard( ( prev ) => {         const questions = [...prev.questions];         questions.splice( index, 1 );         return {           ...prev,           questions,         };       });     }  </code></pre>",,,false
"{'account_id': 9283741, 'reputation': 159, 'user_id': 6894272, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/N7VQw.jpg?s=256', 'display_name': 'Tarmah', 'link': 'https://stackoverflow.com/users/6894272/tarmah'}",False,1,1669644656,1669644656,74601855,74601790,CC BY-SA 4.0,"<p>it should be</p> <pre><code>setCard((card) => { ...card , name: event.target.value }); </code></pre>",,,false
"{'account_id': 19418971, 'reputation': 124, 'user_id': 14201841, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GjDx5dNeMffGYsdYxvt6NsHZLhhHdxNdigepMnEnw=k-s256', 'display_name': 'aron shuvax', 'link': 'https://stackoverflow.com/users/14201841/aron-shuvax'}",False,0,1669645615,1669645615,74602077,74601757,CC BY-SA 4.0,<p>Add to the Main.js:</p> <pre><code>import './index.css'; </code></pre>,,,false
"{'account_id': 14429076, 'reputation': 562, 'user_id': 10422933, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ab5495eb8b7b322414de345748af3c7b?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Tigran Petrosyan', 'link': 'https://stackoverflow.com/users/10422933/tigran-petrosyan'}",True,0,1669646776,1669646776,74602328,74601659,CC BY-SA 4.0,"<ol> <li>Initially you set id as ''</li> <li>Then you map over Employees, trying to find the item with indexOf(id)</li> <li>Since it is '', it will probably return -1, since not found</li> <li>let a = Employees[index] // Employees[-1] is undefined</li> <li>a.Name  = name;   //undefined.Name a.Address = address; //undefined.Address</li> </ol>",,,false
"{'account_id': 3995909, 'reputation': 1397, 'user_id': 3293481, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/150385b546db7721b9e8619071a4a760?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Nikhil bhatia', 'link': 'https://stackoverflow.com/users/3293481/nikhil-bhatia'}",True,1,1669738783,1669645366,74602025,74601623,CC BY-SA 4.0,"<p>you can refractor TopNav like this</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-html lang-html prettyprint-override""><code>export default function TopNav(props) {     const { data } = props      return (       <StyledDiv>         <nav>           <ul>             {data.map(item => <StyledLi key={item.name} >               <Link href={item.href}>{item.name}</Link>             </StyledLi> )}           </ul>         </nav>       </StyledDiv>     ); }</code></pre>  </div>  </div>  </p> <p>now you can use it like <TopNav data={[{href: ""/abc"", name: ""ABC""}, {href: ""/xyz"", name: ""XYZ""}]} /></p> <p>you can either use it on every page with different props,</p> <p>or</p> <p>you can use it on top level _app.jsx and give conditional data props to TopNav, you can get pathname from useRouter and depending upon the path name change data prop</p> <p>example</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-html lang-html prettyprint-override""><code>const App = () => {  const { asPath } = useRouter()  const getData = () => {    if (asPath === ""/url1"") {      return [{href: ""/abc"", name: ""ABC"" }]    }    if (asPath === ""/url2"") {      return [{href: ""/xyz"", name: ""XYZ"" }]    }    return [{href: ""/wsad"", name: ""WSAD"" }]  }   return(    <>     <TapNav data={getData()} />         {otherComp}    </>   ) }</code></pre>  </div>  </div>  </p>",1669738783.0,,false
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",True,2,1669654024,1669654024,74603875,74601591,CC BY-SA 4.0,"<blockquote> <p>are react router 6.4 loaders called on the server, client or both?</p> </blockquote> <p>The loaders are called on the client. <code>react-router-dom</code> mainly handles client-side routing. If you are using server-side-rendering then the suggestion from RRD is to use <a href=""https://remix.run/"" rel=""nofollow noreferrer"">Remix</a>.</p> <blockquote> <p>I'm trying to understand loaders in react router 6.4+. How and why is a browserRouter doing a DB call?</p> </blockquote> <p>The ""how"" is trivial, the <code>loader</code> functions are callback functions that are run prior rendering the routed element. The ""why"" is so the app can fetch data, validate a user, submit analytics/metrics, etc, when a route is being loaded/accessed. <em><strong>What</strong></em> you want or need to do prior to loading the routed component is really up to your specific use cases.</p> <blockquote> <pre><code>createBrowserRouter([   {     element: <Teams />,     path: ""teams"",     loader: async () => {       return fakeDb.from(""teams"").select(""*"");     },     children: [       {         element: <Team />,         path: "":teamId"",         loader: async ({ params }) => {           return fetch(`/api/teams/${params.teamId}.json`);         },       },     ],   }, ]); </code></pre> <p>Is this just a contrived example and this is meant to be a client db call for illustration purposes or a there some undocumented server activity taking place here?</p> </blockquote> <p>Yes, this is a completely contrived code example for illustration purposes, no undocumented activity. ""fakeDb"" is <em>some</em> client-side database client that is selecting <em><strong>all</strong></em> the tuples from a ""teams"" collection and returning it to the <code>Teams</code> component, accessible via the <a href=""https://reactrouter.com/en/main/hooks/use-loader-data"" rel=""nofollow noreferrer""><code>useLoaderData</code></a> hook. <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch"" rel=""nofollow noreferrer""><code>fetch</code></a> is a standard Javascript API to asynchronously fetch data.</p>",,,false
"{'account_id': 10164332, 'reputation': 421, 'user_id': 11119684, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-PasmsiINODU/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3retq0AXmgUC5sxcfAPWBHl5IwwmNQ/mo/photo.jpg?sz=256', 'display_name': 'bvdl', 'link': 'https://stackoverflow.com/users/11119684/bvdl'}",False,2,1669653185,1669643875,74601689,74601591,CC BY-SA 4.0,"<p>In your example both async functions are making calls to some backend. fakeDb seems to target some sort of SQL server via library/sdk. Fetch is a typical method to call a backend api endpoint (on some server).</p> <p>The router itself may make calls to the server to get the page content, but it may also be cached in the browser if recently access.</p> <p>All the code in the snippet is executed in the browser, but as mentioned it does ask a server to do something. But what the server does, that code is somewhere else.</p>",1669653185.0,,false
"{'account_id': 17918941, 'reputation': 760, 'user_id': 13019276, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/560cb83d2b277e3e7088c1b416f6f447?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'David', 'link': 'https://stackoverflow.com/users/13019276/david'}",False,1,1669645297,1669645297,74602001,74601537,CC BY-SA 4.0,"<p>There isn't a direct way to pass between sibling components. One option is to pass from sibling 1 -> parent component -> sibling 2. So with your ""NavBar"" and ""Login"" components you can lift state up from Navbar to the App (parent) component and then down to the Login component.</p> <p>Option 2 would be setting up something like a <a href=""https://reactjs.org/docs/context.html"" rel=""nofollow noreferrer"">useContext</a> hook. Context is for setting global state variables to avoid unnecessary prop drilling.</p>",,,false
"{'account_id': 195407, 'reputation': 33177, 'user_id': 438273, 'user_type': 'registered', 'accept_rate': 70, 'profile_image': 'https://www.gravatar.com/avatar/88ad8bc15f1a9e787531e9b20340973a?s=256&d=identicon&r=PG', 'display_name': 'jsejcksn', 'link': 'https://stackoverflow.com/users/438273/jsejcksn'}",False,0,1669660059,1669652446,74603559,74601362,CC BY-SA 4.0,"<p>Any time you render a list in React, you must provide a stable (deterministic) value for the <code>key</code> attribute of each item. Not doing so is a bug because â otherwise â React has no idea which data belongs with which item in the series.</p> <blockquote> <p>Keys help React identify which items have changed, are added, or are removed. Keys should be given to the elements inside the array to give the elements a stable identity.</p> </blockquote> <p>This behavior is covered in detail in the documentation section titled <a href=""https://reactjs.org/docs/lists-and-keys.html#keys"" rel=""nofollow noreferrer"">Lists and Keys</a>.</p> <p>If you need to manage a collection of items with independently editable keys and values âÂ and <strong>especially</strong> if it's a possibility for the collection's keys to contain duplicates (as is suggested in your question code) âÂ then the keys in the collection are not necessarily unique identifiers, and are not appropriate for use as <em>React keys</em> in a list of rendered nodes.</p> <p>You can use a unique string (e.g. a UUIDv4 generated from <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Crypto/randomUUID"" rel=""nofollow noreferrer""><code>Crypto.randomUUID()</code></a>) as the actual, internal and unique key for each of your key-value entries.</p> <p>In context of the information above, a <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"" rel=""nofollow noreferrer""><code>Map</code></a> is probably a better data structure for your environment data: not only can you store a key and value as a tuple in each entry âÂ a <code>Map</code> also gives you stronger control over the order of its entries: unlike an object, whose keys are deterministically ordered with some restrictions (see <a href=""https://stackoverflow.com/q/5525795/438273"">Does JavaScript guarantee object property order?</a>), a Map's entries are always ordered according to insertion.</p> <p>Below I've created a self-contained example of using a <code>Map</code> as state to store a collection of editable key-value entries, including a component for visualizing the state.</p> <blockquote> <p>Select ""Full page"" after running the code snippet to get an expanded viewport for the demo.</p> </blockquote> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-css lang-css prettyprint-override""><code>* { box-sizing: border-box; } body { font-family: sans-serif; } button, input[type=""text""] { font-size: 1rem; padding: 0.5rem; } .entry-list { list-style: none; padding: 0; } .entry-row { display: flex; gap: 0.5rem; } pre.visual { background-color: hsla(0, 0%, 50%, 0.1); font-size: 1rem; padding: 1rem; } pre.visual > code { font-family: monospace; line-height: 1.5; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div id=""root""></div><script src=""https://cdn.jsdelivr.net/npm/react@18.2.0/umd/react.development.js""></script><script src=""https://cdn.jsdelivr.net/npm/react-dom@18.2.0/umd/react-dom.development.js""></script><script src=""https://cdn.jsdelivr.net/npm/@babel/standalone@7.20.6/babel.min.js""></script> <script type=""text/babel"" data-type=""module"" data-presets=""env,react"">  const {useCallback, useState} = React;  function VisualizeState ({serializable}) {   return (     <pre className=""visual"">       <code>{JSON.stringify(serializable, null, 2)}</code>     </pre>   ); }  function TextInput ({placeholder, value, setValue}) {   return (     <input       type=""text""       onChange={ev => setValue(ev.target.value)}       {...{placeholder, value}}     />   ); }  // The default values for a new key-value entry in the environment: const createDefaultEnvEntry = () => ['', ''];  function App () {   const [environmentMap, setEnvironmentMap] = useState(new Map());    const setEnvKey = useCallback(     (uuid, key) => setEnvironmentMap(m => {       const map = new Map([...m.entries()]);       const entry = map.get(uuid) ?? createDefaultEnvEntry();       entry[0] = key;       map.set(uuid, entry);       return map;     }),     [setEnvironmentMap],   );    const setEnvValue = useCallback(     (uuid, value) => setEnvironmentMap(m => {       const map = new Map([...m.entries()]);       const entry = map.get(uuid) ?? createDefaultEnvEntry();       entry[1] = value;       map.set(uuid, entry);       return map;     }),     [setEnvironmentMap],   );    const createEnvEntry = useCallback(     () => setEnvironmentMap(m => new Map([       ...m.entries(),       [crypto.randomUUID(), createDefaultEnvEntry()],     ])),     [setEnvironmentMap],   );    const deleteEnvEntry = useCallback(     (uuid) => setEnvironmentMap(m => {       const map = new Map([...m.entries()]);       map.delete(uuid);       return map;     }),     [setEnvironmentMap],   );    return (     <div>       <ul className=""entry-list"">         {           [...environmentMap.entries()].map(([uuid, [key, value]]) => (             // Note the use of the ""key"" attribute with the mapped node child:             <li className=""entry-row"" key={uuid}>               <TextInput                 placeholder=""key""                 value={key}                 setValue={key => setEnvKey(uuid, key)}               />               <TextInput                 placeholder=""value""                 value={value}                 setValue={value => setEnvValue(uuid, value)}               />               <button onClick={() => deleteEnvEntry(uuid)}>Delete entry</button>             </li>           ))         }       </ul>       <button onClick={() => createEnvEntry()}>Create new entry</button>       <div>         <p>Visulization of state:</p>         <VisualizeState           serializable={Object.fromEntries([...environmentMap.entries()])}         />       </div>     </div>   ); }  const reactRoot = ReactDOM.createRoot(document.getElementById('root'));  reactRoot.render(<App />);  </script></code></pre>  </div>  </div>  </p>",1669660059.0,,false
"{'account_id': 6642644, 'reputation': 6778, 'user_id': 5127888, 'user_type': 'registered', 'accept_rate': 57, 'profile_image': 'https://i.sstatic.net/ThTUsMJj.jpg?s=256', 'display_name': 'parwatcodes', 'link': 'https://stackoverflow.com/users/5127888/parwatcodes'}",True,0,1669651192,1669642467,74601399,74601315,CC BY-SA 4.0,"<p>You need to make a conditional check.</p> <p>First, check whether the search text matches the name; if it fits, return the list. If not, then check whether it matches the platform.</p> <pre><code>const filteredData = PRODUCT_LIST.filter(el => {        const findByName = el?.name?.toLowerCase().includes(inputText);       const findByPlatform = el?.platform?.toLowerCase().includes(inputText);          if (inputText === '') {             return         } else {             return findByName || findByPlatform         } }) </code></pre>",1669651192.0,,false
"{'account_id': 15789737, 'reputation': 485, 'user_id': 11393322, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/HCLOD.jpg?s=256', 'display_name': 'Azeez', 'link': 'https://stackoverflow.com/users/11393322/azeez'}",False,0,1669642598,1669642598,74601418,74601315,CC BY-SA 4.0,<p>You should do something like this just return true when you are getting empty string. Let me know if it works.</p> <pre><code>const filteredData = PRODUCT_LIST.filter(el => {     if (inputText === '') {         return true;     } else {         return (el.name.toLowerCase().includes(inputText.toLowerCase()) || el.platform.toLowerCase().includes(inputText.toLowerCase()))     } }) </code></pre>,,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",True,2,1669799335,1669734343,74616110,74601172,CC BY-SA 4.0,"<p>You should return your data after filter:</p> <pre class=""lang-js prettyprint-override""><code>const deleteItem = ({ currentTarget }) => {     setListOfDocs((prev) => {         return prev.filter((item, index) => index != currentTarget.id);     }); }; </code></pre> <p><strong>Update:</strong></p> <p>There is a problem with your first try. The <strong>currentTarget.id</strong> field is string but in your filter method, you're comparing it with the index (which is number) with <strong>!==</strong> which also checks types of the 2 variables.</p> <p>So you can fix it by replacing !== with != or converting string to number.</p>",1669799335.0,,false
"{'account_id': 13802219, 'reputation': 193, 'user_id': 20293448, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/7250da99d8c9399abfd5b1dca37fef1c?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'J&#233;r&#233;my Rippert', 'link': 'https://stackoverflow.com/users/20293448/j%c3%a9r%c3%a9my-rippert'}",False,0,1669642795,1669642795,74601463,74601172,CC BY-SA 4.0,"<p>I believe that you made a small mistake in your filtering function: you are comparing item <strong>index</strong> with <strong>deletedId</strong>, where you should compare <strong>item</strong> with <strong>deletedId</strong></p> <p>This should be correct:</p> <pre><code>const deleteItem = ({ currentTarget }) => {         const deletedId = currentTarget.id;         const result = listOfDocs.filter((item, index) => item !== deletedId);          setListOfDocs(result)     }; </code></pre>",,,false
"{'account_id': 16862109, 'reputation': 151, 'user_id': 12192653, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c625c1d1ac420a14af8dc9d2cda1f61c?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'asep hidayat', 'link': 'https://stackoverflow.com/users/12192653/asep-hidayat'}",False,2,1669716961,1669716961,74612425,74601002,CC BY-SA 4.0,"<p>You can try to custom like the one I made in the following link <a href=""https://codesandbox.io/s/antd-table-custom-page-xxn0ck?file=/src/App.tsx"" rel=""nofollow noreferrer"">example</a></p>",,,false
"{'account_id': 3830865, 'reputation': 13496, 'user_id': 3176419, 'user_type': 'registered', 'accept_rate': 50, 'profile_image': 'https://www.gravatar.com/avatar/466729f27456b80a1d22d82e5c676c79?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'flyingfox', 'link': 'https://stackoverflow.com/users/3176419/flyingfox'}",True,1,1669640767,1669640767,74601030,74600976,CC BY-SA 4.0,"<p>Your code is working,but in order to get all the results that meets the requirements,you need to use <code>Array.filter()</code> instead of <code>Array.find()</code></p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>let temp = [{     ""title"": ""Student Details"",     ""education"": ""under graduate"",     ""studentId"": ""xyz202267"" }, {     ""title"": ""Student details"",     ""education"": ""under graduate"",     ""studentId"": ""xyz202234"" }]   let input = 'studentdetails' const ans = temp.filter(obj => obj.title.replace(/ /g,'').toLowerCase() === input) console.log(ans)</code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 26931715, 'reputation': 314, 'user_id': 20504019, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0yY2nT897Da6A7uTBchebCNCVHp_XeZiKIS2y3=k-s256', 'display_name': 'Jay F.', 'link': 'https://stackoverflow.com/users/20504019/jay-f'}",False,0,1669663850,1669663850,74605638,74600833,CC BY-SA 4.0,"<p>This recursive function would do the same and can be used when the <code>array</code> structure is not predictable:</p> <pre><code>const updateArray = (dataArray, updates = {}) => {     let result = [];      const updateApply = (objData) => {         if (updates && Object.keys(updates).length > 0) {             Object.keys(updates).map((key) => {                 if (objData.hasOwnProperty(key)) {                     objData[key] = updates[key];                 }             });         }          return objData;     };      for (const index in dataArray) {         if (Array.isArray(dataArray[index])) {             result[index] = dataArray[index].map((e) => {                 return Array.isArray(e)                     ? updateArray([...e], updates)                     : updateApply(e);             });         } else {             result[index] = updateApply(dataArray[index]);         }     }      return result; }; </code></pre> <p>Calling the function with the object(s) that need to be changed:</p> <pre><code>updateArray(data, { require: false }); </code></pre>",,,false
"{'account_id': 8141288, 'reputation': 2730, 'user_id': 6131368, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://i.sstatic.net/WQREV.jpg?s=256', 'display_name': 'JSEvgeny', 'link': 'https://stackoverflow.com/users/6131368/jsevgeny'}",True,2,1669640330,1669640330,74600945,74600833,CC BY-SA 4.0,"<p>Something like that could possibly work:</p> <pre><code>const output = data.map(item => item.map(nested => {     if (nested.name === ""tax-payer-identification"") {         nested.required = true     }     return nested })) </code></pre>",,,false
"{'account_id': 26931715, 'reputation': 314, 'user_id': 20504019, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0yY2nT897Da6A7uTBchebCNCVHp_XeZiKIS2y3=k-s256', 'display_name': 'Jay F.', 'link': 'https://stackoverflow.com/users/20504019/jay-f'}",True,2,1669640170,1669640170,74600917,74600781,CC BY-SA 4.0,"<p>Try removing the backticks.</p> <pre><code>import styles from ""./style.module.css""; const App = () => {     const type = ""primary"";     const text = ""Hello""     return (         <div className={type === ""primary"" ? styles.primary : styles.secondary}>             {text}         </div>     ); }; export default App; </code></pre>",,,false
"{'account_id': 2876245, 'reputation': 2172, 'user_id': 3107689, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/cdbb6168012bc7c8d4a43f36f6b089dd?s=256&d=identicon&r=PG', 'display_name': 'yeya', 'link': 'https://stackoverflow.com/users/3107689/yeya'}",False,1,1669640194,1669640194,74600923,74600639,CC BY-SA 4.0,"<p>You should not have any issues with <code>cors</code> when you working with your own server. If your react app is served on different url than your node - you can use <a href=""https://%20https://expressjs.com/en/resources/middleware/cors.html"" rel=""nofollow noreferrer"">cors library</a> to allow that.</p> <p>Anyway - does your server needs the <code>accessToken</code> at all? If not, you can keep it in the client cookie, no need to pass it to server and back to your client.</p> <p>Usually - when using third party auth, you should be able to send some auth required request when client side app is initilized, then you can redirect your client to the private route \ login route per the response.</p> <p>Do not rely on <code>res.cookie</code>, you should rely on response from your oAuth provider or your own server if you use it to process something with your credentials.</p>",,,false
"{'account_id': 26893307, 'reputation': 1, 'user_id': 20471694, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu2c89pWzT14a8WOwYT1rPGv59eQUCV_YgjxTrAP2Q=k-s256', 'display_name': 'Gab-H3nrique', 'link': 'https://stackoverflow.com/users/20471694/gab-h3nrique'}",False,0,1669849548,1669639227,74600741,74600621,CC BY-SA 4.0,<p>I think you forgot that data could be checked in the conditional. Try to replace</p> <pre><code>{!error && !loading && data.map((name) => <div key={name}>{name}</div>)} </code></pre> <p>with</p> <pre><code>{!error && !loading && data && data.map((name) => <div key={name}>{name}</div>)} </code></pre>,1669849548.0,,false
"{'account_id': 6836013, 'reputation': 9, 'user_id': 6497868, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-S4s0tOMuBp4/AAAAAAAAAAI/AAAAAAAAAO8/DEbdyKoD834/photo.jpg?sz=256', 'display_name': 'M Abubkr Afzal', 'link': 'https://stackoverflow.com/users/6497868/m-abubkr-afzal'}",False,0,1669720658,1669720658,74613226,74600621,CC BY-SA 4.0,<p>data should be checked if it is undefined or not. try this code</p> <pre><code>{!error && !loading && data && data.map((name) => <div key={name}>{name}</div>)} </code></pre>,,,false
"{'account_id': 14955650, 'reputation': 45, 'user_id': 10797038, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-ilHBv57TZcU/AAAAAAAAAAI/AAAAAAAAAAA/AGDgw-hqqtVHH6nK67uJsS8IxAS8i4SEsA/mo/photo.jpg?sz=256', 'display_name': 'Naftalib', 'link': 'https://stackoverflow.com/users/10797038/naftalib'}",False,0,1669716113,1669716113,74612243,74600578,CC BY-SA 4.0,"<p>The solution for me was to convert everything to an array in the call back function like this.</p> <pre><code>const filteredData = logs.filter(item => {     const mainKey_values = Object.values(item)     const fieldChange_keys = Object.keys(item.fieldChange)     return mainKey_values.toString().toLowerCase().includes(lowercasedValue) ||      fieldChange_keys.toString().toLowerCase().includes(lowercasedValue)     }); </code></pre> <p>the (lowercasedValue) is just a variable for the event.target.value.</p> <p>As pertains to the question, by applying Object.keys on the nested object we can iterate over the keys and convert them back into a string which allows the comparison with the entered value by which to filter. Did the same for the regular keys by their values for simplicity sake.</p>",,,false
"{'account_id': 4422656, 'reputation': 384, 'user_id': 3602095, 'user_type': 'registered', 'accept_rate': 40, 'profile_image': 'https://www.gravatar.com/avatar/dd954a41d9b6f28ac858254f4d7e00b2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'AntiPawn79', 'link': 'https://stackoverflow.com/users/3602095/antipawn79'}",False,0,1676907719,1676907719,75511341,74600462,CC BY-SA 4.0,<p>You need to allow your phone/simulator to talk to Metro Bundler.</p> <p>There is a command line tool called 'adb'.  You need to install that into your local terminal. Then do yourself a favor and add it to your $PATH so you can call <code>adb</code> from anywhere. In my case I use zsh so I edited my ~/.zshrc file (your file might be ~/.bash_profile or other).</p> <p><code>export PATH=$PATH:/Users/{my_user_directory}/Library/Android/sdk/platform-tools/</code></p> <p>Then source the file: <code>source ~/.zshrc</code></p> <p>Now run in your terminal: <code>adb reverse tcp:8081 tcp:8081</code></p> <p>I usually run this right after I start up the simulator but before my app actually loads up.</p>,,,false
"{'account_id': 18908487, 'reputation': 931, 'user_id': 13795089, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RMwKj.jpg?s=256', 'display_name': 'Hamas Hassan', 'link': 'https://stackoverflow.com/users/13795089/hamas-hassan'}",False,1,1669639519,1669639519,74600804,74600462,CC BY-SA 4.0,"<p>First make sure your metro bundle is running on 8081 port.</p> <p><strong>yarn start --port 8081</strong></p> <p><strong>adb reverse tcp:8081 tcp:8081</strong></p> <p>Try this above 2 commands, I hope this will help you out!</p>",,,false
"{'account_id': 22779066, 'reputation': 70, 'user_id': 16935261, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gg85psvxOdokqzxgvU1lJhCSPiJLW2_slQOUW7rCQ=k-s256', 'display_name': 'Der Achim', 'link': 'https://stackoverflow.com/users/16935261/der-achim'}",False,0,1669638615,1669638615,74600606,74600437,CC BY-SA 4.0,"<p>Didn't test it, but I solved it liked a few times:</p> <pre><code>this.intervalRef = setInterval(() => {     let myself = this;     this.setState(prevState=>({        timer:prevState.timer-1     });     if(timer:prevState.timer <=0) clearInterval(myself.intervalRef):  )},2000); </code></pre> <p>The trick is to have a Non-member variable to this (as this is not the same thing inside the setIntveral timeout function.</p>",,,false
"{'account_id': 8472999, 'reputation': 1762, 'user_id': 6355024, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/BYggb.jpg?s=256', 'display_name': 'Kia Kaha', 'link': 'https://stackoverflow.com/users/6355024/kia-kaha'}",False,0,1669802235,1669642655,74601434,74600327,CC BY-SA 4.0,"<p>Since <code>highestId</code> is defaulted to 0 in the hook fetching categories, why don't you add the check <code>if(highestID <= 0) return null</code> in the <code>AdminPanel</code> - this way you will start rendering once the hook has returned a value.</p>",1669802235.0,,false
"{'account_id': 6950565, 'reputation': 561, 'user_id': 5333324, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/515a5c3b09f7d6bf93d083e4c45fe889?s=256&d=identicon&r=PG', 'display_name': 'Volodymyr Sichka', 'link': 'https://stackoverflow.com/users/5333324/volodymyr-sichka'}",True,2,1669641724,1669641724,74601234,74600155,CC BY-SA 4.0,"<p>Check your backend code. If you use Express.js with some body parsers, you can increase body limit, like this:</p> <pre><code>app.use(bodyParser.json({ limit: '100mb' })); </code></pre>",,,false
"{'account_id': 22799402, 'reputation': 195, 'user_id': 16952372, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/XAGAe.jpg?s=256', 'display_name': 'Finn', 'link': 'https://stackoverflow.com/users/16952372/finn'}",True,0,1669826960,1669639814,74600856,74600128,CC BY-SA 4.0,"<p>If you have an array of objects like this:</p> <pre class=""lang-js prettyprint-override""><code>[   { id: 0, name: ""one"" },   { id: 1, name: ""two"" },   { id: 2, name: ""three"" } ] </code></pre> <p>You can display those as options in a select like so, with the ""please select an option"" in a separate option element:</p> <pre><code><div> <select value={selected} onChange={handleChange}>   <option value={-1} disabled>     please select an option   </option>   {values.map((obj) => {     return (       <option key={obj.id} value={obj.id}>         {obj.name}       </option>     );   })} </select> </div> </code></pre> <p>Then in the <code>handleChange</code> function, you can set a state that stores which item is selected (here I'm storing the <code>id</code> of the <code>obj</code>, which in this case is the same as the index of the <code>values</code> array):</p> <pre class=""lang-js prettyprint-override""><code>const [selected, setSelected] = useState(-1);  function handleChange(event) {   setSelected(event.target.value); } </code></pre> <p>And then you can use that to output the selection:</p> <pre><code><div>   You have {values[selected] ? <>""{values[selected].name}""</> : <>nothing</>} selected. </div> </code></pre> <p><a href=""https://codesandbox.io/s/stoic-sun-chujmp?fontsize=14&hidenavigation=1&theme=dark&file=/src/App.js"" rel=""nofollow noreferrer""><img src=""https://codesandbox.io/static/img/play-codesandbox.svg"" alt=""Edit festive-blackwell-es2ske"" /></a></p> <p>Check out the React <a href=""https://reactjs.org/docs/forms.html"" rel=""nofollow noreferrer"">docs</a> for more information.</p>",1669826960.0,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",False,0,1669641795,1669641482,74601173,74600128,CC BY-SA 4.0,"<p>Let's assume your <strong>state.values</strong> is like this:</p> <pre><code>[   {     id: 0,     name: ""First value""   },   {     id: 1,     name: ""Second value""   } ] </code></pre> <p>In order to show the ""please pick and select"" as the default value of the select element (placeholder), it's good to not have it in your data. Instead you can render an extra option along with your data options and then choose the value as the selected value of the select element:</p> <pre class=""lang-js prettyprint-override""><code><select className=""form-select"" aria-label=""Default select example"">   <option value={-1} selected>     Please pick and select   </option>   {     this.state.values.map((obj) => {       return (         <option key={obj.id} value={obj.id}>           {obj.name}         </option>       );     })   } </select> </code></pre> <p>If you want to have control over the selected value as well, you can use <strong>useState</strong> and declare a state for your selected value and change it whenever the selected value is changed:</p> <pre class=""lang-js prettyprint-override""><code>const [selectedValue, setSelectedValue] = useState(-1);  const handleOnChange = (event) => {   setSelectedValue(event.target.value); }  return (   <select value={selectedValue} onChange={handleOnChange} className=""form-select"" aria-label=""Default select example"">     <option value={-1}>       Please pick and select     </option>     {       this.state.values.map((obj) => {         return (           <option key={obj.id} value={obj.id}>             {obj.name}           </option>         );       })     }   </select> ); </code></pre> <p>Read more <a href=""https://www.geeksforgeeks.org/how-to-set-default-value-in-select-using-reactjs/"" rel=""nofollow noreferrer"">here</a>.</p>",1669641795.0,,false
"{'account_id': 18588806, 'reputation': 930, 'user_id': 13546478, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RqmdE.jpg?s=256', 'display_name': 'DarkSide77', 'link': 'https://stackoverflow.com/users/13546478/darkside77'}",True,0,1669636546,1669636546,74600238,74600013,CC BY-SA 4.0,<p>You can solve this problem by doing the following steps:</p> <ul> <li>delete <code>yarn.lock</code> or <code>package-lock.json</code> and <code>node_modules</code>.</li> <li>run <code>yarn install</code> or run <code>yarn</code> (if you are using npm you can run <code>npm install</code>.</li> <li>if all the above steps worked fine then run `expo upgrade.</li> </ul> <p>this would do the trick.</p>,,,false
"{'account_id': 26931715, 'reputation': 314, 'user_id': 20504019, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0yY2nT897Da6A7uTBchebCNCVHp_XeZiKIS2y3=k-s256', 'display_name': 'Jay F.', 'link': 'https://stackoverflow.com/users/20504019/jay-f'}",False,0,1669639104,1669637964,74600465,74599880,CC BY-SA 4.0,"<p>Call the <code>load()</code> function in your <code>useEffect</code> to load the video any time the video source changes.</p> <pre><code>useEffect(() => {     document.querySelector(""video"").load(); }, []) </code></pre> <p>Also, <code>src</code> links should have a forward slash. I see you have a back slash in your link. <code>/files\1669374105146_s (2).mp4</code> possibly should be <code>/files/1669374105146_s (2).mp4</code></p>",1669639104.0,,false
"{'account_id': 9028981, 'reputation': 5269, 'user_id': 8822610, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/mmrkR.jpg?s=256', 'display_name': 'vighnesh153', 'link': 'https://stackoverflow.com/users/8822610/vighnesh153'}",False,0,1669633845,1669633845,74599703,74599645,CC BY-SA 4.0,"<p>You can use the <code>context.Consumer</code> to get the context's value in a class component. It follows the <a href=""https://reactjs.org/docs/render-props.html"" rel=""nofollow noreferrer"">render-props</a> pattern.</p> <pre><code>interface ContextProps {   property1: string; }  const context = React.createContext<ContextProps | null>(null);  export default class App extends React.Component {   render() {     return (       <div>         <context.Provider value={{ property1: '123' }}>           <context.Consumer>             {({ property1 }) => <div>{property1}</div>}           </context.Consumer>         </context.Provider>       </div>     );   } } </code></pre>",,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",True,1,1669634648,1669633804,74599701,74599533,CC BY-SA 4.0,"<p>Why you just don't hold the quantity field for each article instead of storing multiple articles ?</p> <pre class=""lang-js prettyprint-override""><code>const { append, remove, update } = useFieldArray({   control,   name: 'Articles', });    const increment = (index) => {   const oneArticle = {...list[index]};   oneArticle.quantity += 1;   update(index, oneArticle); };      const decrement = (index) => {   const oneArticle = {...list[index]};   // It's the last quantity of the article so we should remove it from the list.   if(oneArticle.quantity === 1) {     remove(index);   // It's not the last quantity of the article so we should decrease the quantity.   } else {     oneArticle.quantity -= 1;     update(index, oneArticle);   } }; </code></pre> <p>And then just loop through the <strong>list</strong> data and there is no need to use <strong>listWithoutDuplicates</strong> anymore.</p> <pre class=""lang-js prettyprint-override""><code><tbody>   {list?.map((oneArticle, index) => {     return (       <tr key={index}>         <td>           <span>{oneArticle?.name}</span>         </td>         <td>           <span>{oneArticle?.color}</span>         </td>         <td>           <span>{oneArticle?.quantity}</span>         </td>         <td>           <button type=""button"" onClick={() => decrement(index)}>             -           </button>           <button type=""button"" onClick={() => increment(index)}>             +           </button>         </td>          </tr>     )   })} </tbody>  </code></pre> <p>And another point is that <strong><a href=""https://react-hook-form.com/api/usefieldarray"" rel=""nofollow noreferrer"">remove</a></strong> gets index or array of indexes not the object.</p>",1669634648.0,,false
"{'account_id': 27031397, 'reputation': 1186, 'user_id': 20587701, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/aHg04.jpg?s=256', 'display_name': 'NAZIR HUSSAIN', 'link': 'https://stackoverflow.com/users/20587701/nazir-hussain'}",False,-1,1669634007,1669634007,74599731,74599533,CC BY-SA 4.0,"<p>use Like this...</p> <pre><code>  import React,{useState} from 'react';     import { Table } from 'react-bootstrap';     import { useFieldArray } from 'react-hook-form';          export const ListArticle = ({ watch, control }) => {       const [list, setList] = useState(watch('Articles'));            //listWithoutDuplicates is because i just want to see once my articles even if the quantity is more than 1       //const listWithoutDuplicates = list?.filter(        // (ele, ind) => ind === list?.findIndex((elem) => elem.name === ele.name)      // );            const { append, remove } = useFieldArray({         control,         name: 'Articles',       });            const increment = (index) => {        //append(oneArticle);     let newList =list;     newList[index].quantity =(newList[index].quantity || 0) +1     setList(newList)       };            const decrement = (index) => {         //remove(oneArticle);     let newList =list;     newList[index].quantity =(newList[index].quantity || 0) -1     setList(newList)       };                  return (         <>           <Table responsive>             <thead>               <tr>                 <th> Name </th>                 <th> Color</th>                 <th> Quantity </th>               </tr>             </thead>             <tbody>               {list?.map((oneArticle, index) => {                 return (                   <tr key={index}>                     <td>                       <span>{oneArticle?.name}</span>                     </td>                     <td>                       <span>{oneArticle?.color}</span>                     </td>                     <td>                       <button type=""button"" onClick={() => decrement(index)}>                         -                       </button>                        <p>{oneArticle.quantity || 0}</p>                       <button type=""button"" onClick={() => increment(index)}>                         +                       </button>                                    </td>                      </tr>                 );               })}             </tbody>            </Table>         </>       ); }; </code></pre> <p>I hope this will help you!</p>",,,false
"{'account_id': 8261395, 'reputation': 2487, 'user_id': 12586837, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/40d9592737cd1a2a73e749998c5b8536?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Samitha Nanayakkara', 'link': 'https://stackoverflow.com/users/12586837/samitha-nanayakkara'}",True,1,1669644634,1669638872,74600652,74599447,CC BY-SA 4.0,"<p>I'm continuing the comment section reply as an answer here.</p> <p>Yes. You can change props globally based on additional packages. However, what I recommend is to make your own component for Typography and do all the customizations there rather than changing props globally.</p> <p>Sample Package: <a href=""https://github.com/Ajackster/react-native-global-props"" rel=""nofollow noreferrer"">https://github.com/Ajackster/react-native-global-props</a></p>",1669644634.0,,false
"{'account_id': 18946677, 'reputation': 513, 'user_id': 13825398, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/JbCEz.jpg?s=256', 'display_name': 'Samyar', 'link': 'https://stackoverflow.com/users/13825398/samyar'}",False,-1,1669802585,1669802585,74625881,74599414,CC BY-SA 4.0,"<p>I researched a bit and found two solution for it.</p> <p><strong>First</strong> : Using <a href=""https://vitejs.dev/guide/build.html#multi-page-app"" rel=""nofollow noreferrer"">multipage app</a> feature in Vite.</p> <p><strong>Second</strong>: confining nginx on server for this feature. (I didn't do the configuration someone else did, but it worked)</p>",,,false
"{'account_id': 14041123, 'reputation': 41, 'user_id': 10142502, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-anREtPdySwk/AAAAAAAAAAI/AAAAAAAAAAA/AAnnY7pS44UdYT6-yIcyb2Ie5CWGohaLZw/mo/photo.jpg?sz=256', 'display_name': 'Nasim Akhtar', 'link': 'https://stackoverflow.com/users/10142502/nasim-akhtar'}",False,0,1669635802,1669635769,74600074,74599414,CC BY-SA 4.0,<p>For the landing page use</p> <pre><code>var __html = require('./template.html'); var __html = require('./template.html'); var template = { __html: __html };  React.module.exports = React.createClass({   render: function() {     return(       <div dangerouslySetInnerHTML={template} />     );   } });```   on / route and other react components use on app and login route </code></pre>,1669635802.0,,false
"{'account_id': 18877508, 'reputation': 401, 'user_id': 20539156, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b59d54dc3d0f3a0f6dcaeabdece9ec96?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'AbsoluteZero', 'link': 'https://stackoverflow.com/users/20539156/absolutezero'}",False,1,1669633125,1669633125,74599577,74599388,CC BY-SA 4.0,"<p>There are again a few ways to do what you need.</p> <p>You can use <code>String.prototype.substring</code> if the date is always in the same format or you can use a regular expression to handle other cases. If you are working with dates a lot in your application I'd recommend a simple library like <a href=""https://day.js.org/"" rel=""nofollow noreferrer"">dayjs</a>. It's lightweight and you could use <code>.format('DD/MM/YYYY HH:mm')</code> method to format your date.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const date = '28/11/2022/11:40';  const formatDate = (date) => {     return `${date.substring(0, 10)} ${date.substring(11)}`; };  const formatDateWithRegex = (date) => {     return date.replace(/^(\d{1,2}\/\d{1,2}\/\d{4})\/(\d{1,2}:\d{2})$/, ""$1 $2""); };  console.log('Without RegExp: ',formatDate(date)); console.log('With RegExp:', formatDateWithRegex(date));</code></pre>  </div>  </div>  </p> <p>The regex I've used here is probably suboptimal but it groups your MM/DD/YYYY date and HH:mm as a separate groups and then returns them with a space being the separator (<code>$1</code> - first group, <code>$2</code> - second group).</p>",,,false
"{'account_id': 26094958, 'reputation': 3, 'user_id': 19791200, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/8398c11f07671d403923f34c9a89416a?s=256&d=identicon&r=PG', 'display_name': 'Suman kumar', 'link': 'https://stackoverflow.com/users/19791200/suman-kumar'}",False,0,1669656685,1669656685,74604390,74599380,CC BY-SA 4.0,"<p>User createContext hook everything will be fine.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>import React, { createContext, useEffect, useState, useContext } from ""react""; import { auth } from ""../FireBase/Firebase"" import { createUserWithEmailAndPassword, onAuthStateChanged, signInWithEmailAndPassword } from ""firebase/auth""; const AuthContext = createContext() export function useAuth() {     return useContext(AuthContext) } export function AuthProvider({ children }) {     const [currentUser, setCurrentUser] = useState()     const [isLoading, setLoading] = useState(true)     function signup(email, paaword) {         return createUserWithEmailAndPassword(auth, email, paaword)     }     function login(email, password) {         return signInWithEmailAndPassword(auth, email, password)     }     useEffect(() => {          const unsubscriber = auth.onAuthStateChanged(user => {             setCurrentUser(user)             setLoading(false)          })         return unsubscriber     }, [])      const value = {         currentUser,         signup     }      return (         <AuthContext.Provider value={value}>             {!isLoading && children}         </AuthContext.Provider>      ) }</code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 21422806, 'reputation': 344, 'user_id': 15991847, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-Eqvh_sdQLwY/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuckjfaLbEwtijbx3PcjfurC2HP88pA/s96-c/photo.jpg?sz=256', 'display_name': 'Flitzcore', 'link': 'https://stackoverflow.com/users/15991847/flitzcore'}",False,0,1673182515,1673182515,75047921,74599377,CC BY-SA 4.0,"<p>The problem is from the particle effect. That time, i don't know that it will block my click, so anything behind that can't be clicked</p>",,,false
"{'account_id': 27010242, 'reputation': 44, 'user_id': 20570023, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/7bcbc8634ca05c97a8e774cc274e5d42?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Fatwa Reza Rizqika', 'link': 'https://stackoverflow.com/users/20570023/fatwa-reza-rizqika'}",False,-1,1669688545,1669688545,74608481,74599377,CC BY-SA 4.0,"<p>Get started with Tailwind CSS</p> <p>Tailwind CSS works by scanning all of your HTML files, JavaScript components, and any other templates for class names, generating the corresponding styles and then writing them to a static CSS file.</p> <p>It's fast, flexible, and reliable â with zero-runtime. <a href=""https://tailwindcss.com/docs/installation"" rel=""nofollow noreferrer"">https://tailwindcss.com/docs/installation</a></p>",,,false
"{'account_id': 14541479, 'reputation': 1807, 'user_id': 10503039, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/qGu7K.jpg?s=256', 'display_name': 'Nullndr', 'link': 'https://stackoverflow.com/users/10503039/nullndr'}",False,1,1669806791,1669632675,74599483,74599362,CC BY-SA 4.0,"<p>Define your <code>WeatherCard</code> component like the following:</p> <pre><code>import { WeatherDataObj } from '../../types/types';  const WeatherCard = ({ weatherData }: { weatherData: WeatherDataObj }) => {   return (     <>       <p>City: {weatherData.name}</p>       <p>Temperature: {weatherData.main.temp}</p>       // etc.     </>   ); } export default WeatherCard; </code></pre> <p>When you call a component like <code>WeatherCard</code> with some props, these props are all send to just one object conventionally named <code>props</code>:</p> <pre><code>const WeatherCard = (props: any) => {   return (     <>       <p>City: {weatherData.name}</p>       <p>Temperature: {weatherData.main.temp}</p>       // etc.     </>   ); } </code></pre> <p>In your case you define the <code>props</code> object to be the type of <code>WeatherDataObj</code>.</p> <p>This would work if you called the <code>WeatherCard</code> like the following:</p> <pre><code><WeatherCard   coord={...}   base={...}   weather={...}   ...  /> </code></pre>",1669806791.0,,false
"{'account_id': 7426710, 'reputation': 49809, 'user_id': 5648954, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2noo3.jpg?s=256', 'display_name': 'Nick Parsons', 'link': 'https://stackoverflow.com/users/5648954/nick-parsons'}",True,1,1669633929,1669632984,74599540,74599360,CC BY-SA 4.0,"<p>From the link that you shared: <em>""<code>getOptionLabel</code> should return string""</em>. You're returning JSX (an object), not a string. You can also see this in the <a href=""https://mui.com/material-ui/api/autocomplete/"" rel=""nofollow noreferrer"">autocomplete API documentation</a> by looking at the <strong>signature</strong>.</p> <p><a href=""https://i.sstatic.net/gi5bM.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/gi5bM.png"" alt=""enter image description here"" /></a></p> <hr /> <p>Rather than trying to render JSX in the <code>getOptionLabel</code> prop and trying to return JSX from that, you can use the <code>renderOption</code> prop instead to display your options, for example, in <strong>Material UI v5</strong> you would do:</p> <pre><code><Autocomplete   getOptionLabel={option => `${option.name} ${option.dob}`}   renderOption={(props, option) => <>       {option.name}       <span className=""**"">{option.dob}</span>     </>   }   ... /> </code></pre> <p>In <strong>Material UI v4</strong> you would change the <code>renderOption</code> function to use <code>option</code> as the first argument:</p> <pre><code><Autocomplete   getOptionLabel={option => `${option.name} ${option.dob}`}   renderOption={option => <>       {option.name}       <span className=""**"">{option.dob}</span>     </>   }   ... /> </code></pre>",1669633929.0,,false
"{'account_id': 10164332, 'reputation': 421, 'user_id': 11119684, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-PasmsiINODU/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3retq0AXmgUC5sxcfAPWBHl5IwwmNQ/mo/photo.jpg?sz=256', 'display_name': 'bvdl', 'link': 'https://stackoverflow.com/users/11119684/bvdl'}",False,0,1669632373,1669632373,74599424,74599360,CC BY-SA 4.0,"<p>It is because you are not returning a string, but you are returning html:</p> <pre class=""lang-js prettyprint-override""><code>getOptionLabel={option => { return (   <>     {option.name.toString()}     <span className=""**"">{option.dob.toString()}</span>   </> ); }} </code></pre> <p>Needs to be for example:</p> <pre class=""lang-js prettyprint-override""><code>getOptionLabel={option => {     return option.name.toString(); }} </code></pre>",,,false
"{'account_id': 26454749, 'reputation': 31, 'user_id': 20097452, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/ACNPEu8kT1rcy2acqCeLkBoFg4vZCaEPIBwta6BLV3cb=k-s256', 'display_name': 'Jef Ceuppens', 'link': 'https://stackoverflow.com/users/20097452/jef-ceuppens'}",False,0,1669647338,1669647338,74602457,74599242,CC BY-SA 4.0,"<p>Answer provided by Muhammad Nouman Rafique</p> <p>No. you cannot get the key for that column. If i'm not wrong, you want to have one function that controls the state of each column filter. If that is so, you can solve this by mapping over the columns array and call that common function with open value and the key of that column.</p> <pre><code>columns.map((column) => ({ ...column, onFilterDropdownOpenChange: (open) => onFilterDropdownOpenChangeHandler(open, column.key) })) </code></pre>",,,false
"{'account_id': 2629453, 'reputation': 7426, 'user_id': 2275797, 'user_type': 'registered', 'accept_rate': 90, 'profile_image': 'https://i.sstatic.net/lg0K6.jpg?s=256', 'display_name': 'briosheje', 'link': 'https://stackoverflow.com/users/2275797/briosheje'}",True,1,1669732737,1669732737,74615735,74599209,CC BY-SA 4.0,"<p>You can handle a React Component inside the <code>editCellComponent</code> template, where the callback provided by the devexpress component allows you to handle a nested state and to notify the DataGrid that a row state change is requested.</p> <p>In case the user will confirm the Form Changes, the changes of the underlying component will be saved, you can check this Sandbox for an example: <a href=""https://codesandbox.io/s/row-editing-and-editing-events-devextreme-data-grid-forked-my6phn?file=/App.js:2470-3127"" rel=""nofollow noreferrer"">https://codesandbox.io/s/row-editing-and-editing-events-devextreme-data-grid-forked-my6phn?file=/App.js:2470-3127</a></p> <p>Summarizing, the relevant part is the column:</p> <pre><code><Column             dataField=""Attachments""             width={250}             cellRender={(v) => (               <span>                 {v.value                   ?.map(                     (i) =>                       `${i.name} - ${                         i.mandatory ? ""mandatory"" : ""not mandatory""                       }`                   )                   .join(""; "")}               </span>             )}             editCellComponent={({ data }) => {               const { value, setValue } = data;                return (                 <AttachmentsGridEditor value={value} setValue={setValue} />               );             }}           /> </code></pre> <p>And the component itself (please consider these as pure examples, not ready for production usage):</p> <pre><code>import { useCallback, useEffect, useState } from ""react"";  export default function AttachmentsGridEditor({ value, setValue }) {   const [localState, setLocalState] = useState(value);    const triggerSampleCheckboxChange = useCallback(     (idx) => {       const vCopy = [...localState];       vCopy[idx] = {         ...vCopy[idx],         mandatory: !vCopy[idx].mandatory       };        setLocalState([...vCopy]);     },     [localState, setLocalState]   );    // Because DevExpress does not trigger component re-render, a local state   // has to be kept to allow sync between the two states.   useEffect(() => {     setValue([...localState]);   }, [localState, setValue]);    // TODO: normalize components, compute a better key   return (     <div>       {localState.map((attachment, attachmentIndex) => (         <div key={""attachment"" + attachmentIndex + Math.random()}>           <input type=""text"" readOnly defaultValue={attachment.name} />           <input             type=""checkbox""             defaultChecked={attachment.mandatory}             onChange={() => triggerSampleCheckboxChange(attachmentIndex)}           />         </div>       ))}     </div>   ); } </code></pre>",,,false
"{'account_id': 26990503, 'reputation': 19, 'user_id': 20553470, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/08eeeca0efe6c337dd048c02fa8d4500?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Ramel Jay Cu&#241;a', 'link': 'https://stackoverflow.com/users/20553470/ramel-jay-cu%c3%b1a'}",False,0,1669785394,1669785394,74623174,74599157,CC BY-SA 4.0,"<p>I Solve the problem guys on how to upload image in reactjs frontend to backend using Formik i just did this code</p> <pre><code>{({    setFieldValue }) => (    <Form>        <label>Image</label>        <ErrorMessage name=""image"" component=""span""/>        <input             autoComplete=""off""             id=""image""             name=""image""             type=""file""             onChange={event => setFieldValue(""image"",event.currentTarget.files[0])}        />    </Form> )} </code></pre> <p>I just declare the onFieldValue inside the Formik tag</p> <p>In my backend API i did this</p> <pre><code>  const multer = require(""multer"");   const path = require(""path"");    const storage = multer.diskStorage({     destination: ""./Image"",     filename: (req, file, cb) => {         return cb(null,   `${file.fieldname}_${Date.now()}${path.extname(file.originalname)}`)     } });  const upload = multer({     storage: storage,     fileFilter: function(req, file, cb) {         if(!file.originalname.match(/\.(jpg|JPG|jpeg|JPEG|png|PNG)$/)) {             req.fileValidationError = ""Only the image file is allowed"";             return cb(new Error(""Only the image file is allowed""), false);         }         cb(null, true);     }, });  router.post(""/"", upload.single(""image""), async (req, res) => {     const {              image = req.file.path,             username,              password,         } = req.body;     bcrypt.hash(password, 10).then((hash) => {         Admin.create({             image: image,             username: username,             password: hash,         });         res.json(""Success"");     }); }); </code></pre> <p>I use multer library to get the image</p> <p>i hope it helps to any one has same problem with me :)</p>",,,false
"{'account_id': 24080909, 'reputation': 355, 'user_id': 18055582, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GioRshE2kUgPwA6UkDj9WX4U89bfI7rJef9s7d6xw=k-s256', 'display_name': 'jsBug', 'link': 'https://stackoverflow.com/users/18055582/jsbug'}",False,0,1669637689,1669637689,74600423,74599128,CC BY-SA 4.0,"<p><strong>UPDATED</strong></p> <p>here is the solved react code as like @Hoargarth's logic implementation</p> <p>i have just removed the depth parent and child propegation bubble event for according to code needs then its woked for me</p> <p>here is the updated code in react</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const CustomCalender = () => {   // let index = 1;    let getPeriod = { value1: """", value2: """", value3: """", value4: """" };   let index = [1, 1, 1, 1];    function scrollClass(event, array, td, md, bd, pt, objPt) {     var elementMd = document.getElementById(md);     var elementTo = document.getElementById(td);     var elementBo = document.getElementById(bd);     console.log(index[pt]);     index[pt] = event < 0 ? ++index[pt] : event > 0 ? --index[pt] : index[pt];     index[pt] =       index[pt] > array.length - 1         ? 0         : index[pt] < 0         ? array.length - 1         : index[pt];     elementMd.innerHTML = array[index[pt]];     elementTo.innerHTML =       array[index[pt] + 1] === undefined ? array[0] : array[index[pt] + 1];     elementBo.innerHTML =       array[index[pt] - 1] === undefined         ? array[array.length - 1]         : array[index[pt] - 1];     getPeriod[objPt] = array[index[pt]];   }   const colors = [     ""Dec"",     ""Nov"",     ""Oct"",     ""Sep"",     ""Aug"",     ""Jul"",     ""Jun"",     ""May"",     ""Apr"",     ""Mar"",     ""Feb"",     ""Jan"",   ];   const year = [""2025"", ""2024"", ""2023"", ""2022"", ""2021"", ""2020"", ""2019""];       function preventScroll(e) {     // preventDefault keeps the element from scrolling     e.preventDefault();      return false;   }    const changeValueByWheel = (e, ar, td, md, bd, pt, objPlace) => {     scrollClass(e.deltaY, ar, td, md, bd, pt, objPlace);   };   const changeItem = (payload, ar, td, md, bd, pt, objPlace) => {     scrollClass(-payload, ar, td, md, bd, pt, objPlace);   };    const getCustomDate = () => {     console.log(getPeriod);     var parentScrollableDiv = document.querySelector("".container"");   };    const mouseOutHandle = () => {     var parentScrollableDiv = document.querySelector("".container"");     parentScrollableDiv.removeEventListener(""wheel"", preventScroll);   };   const mouseHoverHandle = () => {     var parentScrollableDiv = document.querySelector("".container"");     parentScrollableDiv.addEventListener(""wheel"", preventScroll, {       passive: false,     });   };    return (     <div className=""container"">       <h4>What is Lorem Ipsum?</h4>       <p>         Lorem Ipsum is simply dummy text of the printing and typesetting         industry. Lorem Ipsum has been the industry's standard dummy text ever         since the 1500s, when an unknown printer took a galley of type and         scrambled it to make a type specimen book. It has survived not only five         centuries, but also the leap into electronic typesetting, remaining         essentially unchanged. It was popularised in the 1960s with the release         of Letraset sheets containing Lorem Ipsum passages, and more recently         with desktop publishing software like Aldus PageMaker including versions         of Lorem Ipsum.       </p>       <div         onMouseLeave={mouseOutHandle}         onMouseOver={mouseHoverHandle}         className=""customCalenderContainer""       >         <div id=""showItem"" className=""DemoContainer"">           <div             onWheelCapture={(e) =>               changeValueByWheel(                 e,                 colors,                 ""startMonthTopEle"",                 ""startMonthMiddleEle"",                 ""startMonthBottomEle"",                 0,                 ""value1""               )             }             className=""monthDiv""           >             <div               onClick={() =>                 changeItem(                   +1,                   colors,                   ""startMonthTopEle"",                   ""startMonthMiddleEle"",                   ""startMonthBottomEle"",                   0,                   ""value1""                 )               }               id=""startMonthTopEle""             ></div>             <div id=""startMonthMiddleEle"">{colors[colors.length - 1]}</div>             <div               onClick={() =>                 changeItem(                   -1,                   colors,                   ""startMonthTopEle"",                   ""startMonthMiddleEle"",                   ""startMonthBottomEle"",                   0,                   ""value1""                 )               }               id=""startMonthBottomEle""             >               {colors[colors.length - 2]}             </div>           </div>           <div             onWheelCapture={(e) =>               changeValueByWheel(                 e,                 year,                 ""startYearTopEle"",                 ""startYearMiddleEle"",                 ""startYearBottomEle"",                 1,                 ""value2""               )             }             className=""monthDiv""           >             <div               id=""startYearTopEle""               onClick={() =>                 changeItem(                   +1,                   year,                   ""startYearTopEle"",                   ""startYearMiddleEle"",                   ""startYearBottomEle"",                   1,                   ""value2""                 )               }             ></div>             <div id=""startYearMiddleEle"">{year[year.length - 1]}</div>             <div               onClick={() =>                 changeItem(                   -1,                   year,                   ""startYearTopEle"",                   ""startYearMiddleEle"",                   ""startYearBottomEle"",                   1,                   ""value2""                 )               }               id=""startYearBottomEle""             >               {year[year.length - 2]}             </div>           </div>           <div className=""middleDis"">TO</div>           <div             onWheelCapture={(e) =>               changeValueByWheel(                 e,                 colors,                 ""endMonthTopEle"",                 ""endMonthMiddleEle"",                 ""endMonthBottomEle"",                 2,                 ""value3""               )             }             className=""monthDiv""           >             <div               id=""endMonthTopEle""               onClick={() =>                 changeItem(                   +1,                   colors,                   ""endMonthTopEle"",                   ""endMonthMiddleEle"",                   ""endMonthBottomEle"",                   2,                   ""value3""                 )               }             ></div>             <div id=""endMonthMiddleEle"">{colors[colors.length - 1]}</div>             <div               onClick={() =>                 changeItem(                   -1,                   colors,                   ""endMonthTopEle"",                   ""endMonthMiddleEle"",                   ""endMonthBottomEle"",                   2,                   ""value3""                 )               }               id=""endMonthBottomEle""             >               {colors[colors.length - 2]}             </div>           </div>           <div             onWheelCapture={(e) =>               changeValueByWheel(                 e,                 year,                 ""endYearTopEle"",                 ""endYearMiddleEle"",                 ""endYearBottomEle"",                 3,                 ""value4""               )             }             className=""monthDiv""           >             <div               id=""endYearTopEle""               onClick={() =>                 changeItem(                   +1,                   year,                   ""endYearTopEle"",                   ""endYearMiddleEle"",                   ""endYearBottomEle"",                   3,                   ""value4""                 )               }             ></div>             <div id=""endYearMiddleEle"">{year[year.length - 2]}</div>             <div               onClick={() =>                 changeItem(                   -1,                   year,                   ""endYearTopEle"",                   ""endYearMiddleEle"",                   ""endYearBottomEle"",                   3,                   ""value4""                 )               }               id=""endYearBottomEle""             >               {year[year.length - 3]}             </div>           </div>         </div>         <div className=""calanderButtonContainer"">           <button className=""applyBtnCalender"" onClick={getCustomDate}>             Apply           </button>         </div>       </div>       <h4>What is Lorem Ipsum?</h4>       <p>         Lorem Ipsum is simply dummy text of the printing and typesetting         industry. Lorem Ipsum has been the industry's standard dummy text ever         since the 1500s, when an unknown printer took a galley of type and         scrambled it to make a type specimen book. It has survived not only five         centuries, but also the leap into electronic typesetting, remaining         essentially unchanged. It was popularised in the 1960s with the release         of Letraset sheets containing Lorem Ipsum passages, and more recently         with desktop publishing software like Aldus PageMaker including versions         of Lorem Ipsum.       </p>     </div>   ); };   //========================================== ReactDOM.createRoot(     document.getElementById(""root"") ).render(     <CustomCalender/> );</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.container{     width: 30rem;     height: 20rem;     background-color: white;     border: 1px solid gray;     overflow-y: scroll;     margin: auto auto;     background-color: purple;     color: white;     position: relative; } .container::-webkit-scrollbar{     width: .5rem;     /* background-color: green; */   }   .container::-webkit-scrollbar-thumb {     background: lightgray;     border-radius: .6rem;   }      .container::-webkit-scrollbar-thumb:hover {     background: #d8d8d8;     border-radius: .6rem;   }   .customCalenderContainer{     width: 15rem;     height: 12rem;     border-radius: .3rem;      background-color: black;     display: flex;    flex-direction: column;    align-items: center;    /* justify-content: space-evenly; */    justify-content: flex-start;    border: .01rem solid #f0f1f2;    margin: 2rem auto;    padding-top: 1rem; } .DemoContainer{   width: 13rem;   height: 8rem;   border-radius: .3rem;    background-color: white;    display: flex;   align-items: center;   justify-content: space-around;   margin: 0 auto; } .monthDiv{     height: 8rem;     width: 3rem;     display: flex;     align-items: center;     justify-content: center;     flex-direction: column;     /* background-color: black; */     cursor: all-scroll; } #startMonthMiddleEle, #startYearMiddleEle, #endMonthMiddleEle, #endYearMiddleEle{     border-bottom: .1rem solid #868686;     border-top: .1rem solid #868686;     font-weight: 700;     color: #717171;     padding: .3rem 0;     width: 80%;     text-align: center;     font-size: .9rem;     transition: 1s ease-in-out;     /* transform : translateY(-20px) */ } #startMonthTopEle, #startMonthBottomEle, #startYearTopEle, #startYearBottomEle, #endMonthTopEle, #endMonthBottomEle, #endYearTopEle, #endYearBottomEle{     font-weight: 500;     font-size: .6rem;     transition: 1s ease-in-out;     color:  #9d9d9d;     /* background-color: green; */     height: 2rem;     width: 100%;     display: flex;     align-items: center;     justify-content: center;     cursor: pointer; }   .middleDis{     height: 9rem;     width: 2rem;     /* background-color: rgb(200, 254, 200); */     align-items: center;     display: flex;     justify-content: center;     font-weight: bolder;color: #717171; } .calanderButtonContainer{     width: 13rem;     display: flex;     align-items: flex-end;     justify-content: flex-end; } .applyBtnCalender{ background-color: orange; color: white; /* margin-top: -4vh; */ padding: 0.6em 1.1em; font-size: .7rem; font-family: 'Roboto', sans-serif; border: none; border-radius: .3rem; cursor: pointer; } </code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div id=""root""></div> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.1.0/umd/react.development.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.1.0/umd/react-dom.development.js""></script></code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 12256913, 'reputation': 1618, 'user_id': 9184970, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/XBuII.jpg?s=256', 'display_name': 'Mugentoki', 'link': 'https://stackoverflow.com/users/9184970/mugentoki'}",True,1,1669634612,1669634612,74599846,74599128,CC BY-SA 4.0,"<p>Since I'm not very good at react, I've reduced your example to a simple HTML / CSS / JS example.<br> But it's basically still the same, as you want to keep the outer container from scrolling as soon as you enter your date select. <br><br> So basically, you need two events on your date select. Just as you already mentioned in your post, one when you enter the element and one when you exit it.<br> <code>mouseenter</code> on date select: when this event fires, you wan't to prevent your outer container from scrolling. In order to do so, you add a new eventListener to the outer container, listening on the <code>wheel</code> event.<br> In the event function you prevent the default behaviour with <code>e.preventdefault()</code> and stop bubbling up the event with <code>e.stopPropagation</code>. <br><br> <code>mouseout</code> on date select: when you exit your date select, you want to remove the previously added eventListener from the scroll container. You can do this with <code>removeEventListener()</code>. This lets you scroll again as soon as you are no longer hovering the element. <br><br> Note: In order to remove an eventlistener, you have to use named functions for your events. Thus we are defining it with <code>function preventScroll()</code> <br><br> Note 2: As long as you don't move your mouse and are just scrolling, the <code>mouseenter</code> event will not fire, so you can keep on scrolling over the element without getting stuck on it <br><br> Note 3: In case you want the same behavour for mobile users, you might want additional eventlisteners, for example sa soon as they start using the date select. You'll have to define them seperately but the basic concept will be the same. <br><br> Minimal working example below, same can be applied to react apps as well</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function preventScroll(e){     // preventDefault keeps the element from scrolling     e.preventDefault();          // stopPropagation keeps the event to bubble up and  scroll an outer container     e.stopPropagation();      return false; }  // we get the containers here const preventScrollElement = document.querySelector('.prevent-scroll'); const scrollContainer = document.querySelector('.container');  // when you enter the element with your mouse, we add another eventlistener the the scrolling container itself preventScrollElement.addEventListener('mouseenter', () => {   scrollContainer.addEventListener('wheel', preventScroll, {passive: false}); });  // as soon as we leave the element, we remove the eventlistener from the scroll container preventScrollElement.addEventListener('mouseout', () => {   scrollContainer.removeEventListener('wheel', preventScroll); });</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.container {   height: 200px;   width: 300px;   margin: 0 auto;   border: 1px solid black;   overflow-y: scroll; }  .prevent-scroll {   width: 100px;   height: 100px;   margin: 0 auto;   background: green; }  .prevent-scroll:hover {   background: red; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div class=""container"">   <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>   <div class=""prevent-scroll""></div>     <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p> </div></code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 1123228, 'reputation': 452, 'user_id': 1111063, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b4f72a55461a0b53cc6ebd3ad0378251?s=256&d=identicon&r=PG', 'display_name': 'Sam Kaz', 'link': 'https://stackoverflow.com/users/1111063/sam-kaz'}",True,2,1714423340,1669630473,74599052,74598833,CC BY-SA 4.0,"<p>As informed before you will have to change</p> <pre><code>const DefaultLayout = () => {} </code></pre> <p>to</p> <pre><code>const DefaultLayout = (props) => {} </code></pre> <p>and remove this from <code>{this.props.children}</code> as this is not available in an arrow function.</p> <p>I have put together a quick example for you here: <a href=""https://codesandbox.io/s/react-playground-forked-pr7lsc?f"" rel=""nofollow noreferrer"">https://codesandbox.io/s/react-playground-forked-pr7lsc?f</a></p>",1714423340.0,,false
"{'account_id': 16209082, 'reputation': 1671, 'user_id': 11703584, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/54aae3fe53edfc98938801620cca434a?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Hilory', 'link': 'https://stackoverflow.com/users/11703584/hilory'}",False,4,1669630057,1669630057,74598959,74598833,CC BY-SA 4.0,"<p>My best bet is that you are having a compilation error, from what you have in your codebase <code>{this.props.children}</code> will result in an error, you use <code>this props</code> in a class-based component, whereas you are using a functional component for <code>< DefaultLayout/></code></p> <p>Instead do</p> <pre><code>const DefaultLayout = (props) => { ... <Content className=""site-layout-background"" style={...}>    {props.children} </Content> } </code></pre>",,,false
"{'account_id': 29720418, 'reputation': 1, 'user_id': 22777847, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/6bc4ffa3886718d92e6c82f7bf774602?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'SteveK', 'link': 'https://stackoverflow.com/users/22777847/stevek'}",False,0,1697865408,1697862464,77334746,74598821,CC BY-SA 4.0,"<p>I came across this while googling about can't resolve 'v8'. Note: I don't use framer-motion, but have a similar can't resolve 'v8' error.</p> <p>The solution for me was:</p> <ol> <li><p>Full backup of the working directory - for safety ;) In case you want to go back on your changes...</p> </li> <li><p>In Visual Studio Code's Terminal: npm list then note all the version numbers because the following steps may upgrade, even delete parts of the current version!</p> </li> <li><p>Re-install all the modules on that npm list, one by one.</p> </li> <li><p>Noticing some vulnerabilities, so used: npm audit fix,</p> </li> <li><p>Some vulnerabilities remain, so used: npm audit fix --force</p> </li> <li><p>nmp list and compare what changed from step 2.</p> </li> <li><p>Eventually saw a message that my start page was causing some problem: my previous experiments using app\pages.js and app\layout.js was conflicting with my \index.js Both wanted to start the app at the same time. There can only be one way to start your app! So delete or rename either pages.js + layout.js, or index.js.</p> </li> <li><p>In the .js file which is the client side / front end fetching the data from the server and displaying the data to the user, changed from:</p> </li> </ol> <pre><code>    import { withPageAuthRequired } from '@auth0/nextjs'; </code></pre> <p>to</p> <pre><code>    import { withPageAuthRequired } from '@auth0/nextjs/client'; </code></pre> <p>This step was modified, originally suggested by @blazestudios23 in <a href=""https://github.com/panva/node-openid-client/discussions/442"" rel=""nofollow noreferrer"">https://github.com/panva/node-openid-client/discussions/442</a></p> <p>Apparently with auth0 from version 2.0.0 there are changes which could break your code... Go read the original post. Especially so when doing updates to the latest modules (i.e. steps 3 & 4).</p> <p>I'm using auth0/nextjs-auth0@2.21</p> <ol start=""9""> <li><p>now: npx run dev works OK, ! :)</p> </li> <li><p>If it doesn't work, restore the backup of your working directory, and attempt another method.</p> </li> </ol> <p>Hope that helped... YMMV All the best!</p>",1697865408.0,,false
"{'account_id': 27136703, 'reputation': 7, 'user_id': 20678089, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu3vkifQCV9_AH1CI03yyNEmi87EB5hXAb1dPNTT=k-s256', 'display_name': 'pkocak', 'link': 'https://stackoverflow.com/users/20678089/pkocak'}",False,-5,1671988217,1671988041,74914726,74598821,CC BY-SA 4.0,<p>The answer lies in here:</p> <blockquote> <p>Can't resolve 'v8'.</p> </blockquote> <p>So you should add v8 to your project.</p> <pre><code>npm install v8 / yarn add v8 </code></pre>,1671988217.0,,false
"{'account_id': 27051019, 'reputation': 19, 'user_id': 20604389, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/f5ee57aae3e3c65e5849bbaa0b5b973e?s=256&d=identicon&r=PG', 'display_name': 'Adams Abdulmaleek ', 'link': 'https://stackoverflow.com/users/20604389/adams-abdulmaleek'}",False,-1,1669633419,1669633419,74599628,74598821,CC BY-SA 4.0,<p>You can try check if all module imported are installed. I use framer-motion buh I have never seen an error like this</p>,,,false
"{'account_id': 5916539, 'reputation': 1261, 'user_id': 4655177, 'user_type': 'registered', 'accept_rate': 78, 'profile_image': 'https://www.gravatar.com/avatar/07af988150e974fcf11399073992c6a5?s=256&d=identicon&r=PG', 'display_name': 'Xiduzo', 'link': 'https://stackoverflow.com/users/4655177/xiduzo'}",True,2,1669629676,1669629676,74598905,74598767,CC BY-SA 4.0,"<p>your <code>setBackgroundColor</code> you use for setting <code>backgroundColor</code> in your <code>searchStyles</code> not compatible with the property <code>backgroundColor</code> <em>(Property 'backgroundColor' is incompatible with index signature.)</em> as is could possible return <code>undefined</code> while <code>backgroundColor</code> requires a ""<em>SystemStyleObject | CssVariableType | ((theme: Theme) => string | number | SystemStyleObject)</em>"" and does not accept <code>undefined</code> as a valid type</p> <p>You should be able to fix this by adding a <code>default</code> case to your <code>setBackGroundColor</code> method</p> <pre class=""lang-js prettyprint-override""><code>const setBackgroundColor = () => {   switch ( props.search ) {     case 'home': return darkMode ? 'rgba(0, 0, 0, 0.54)' : 'rgba(238, 240, 243, 1)';     case 'items': return 'rgba( 255, 255, 255, 1 )';     default: return 'none'   }}; </code></pre>",,,false
"{'account_id': 16033906, 'reputation': 786, 'user_id': 11578082, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-jTbrrEP7heA/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfZmoBWXH6kuOVg-e8j-gz22gDmvg/mo/photo.jpg?sz=256', 'display_name': 'Robert S', 'link': 'https://stackoverflow.com/users/11578082/robert-s'}",False,0,1669633731,1669633731,74599687,74598498,CC BY-SA 4.0,"<p>A cookie is a piece of data (key-value pairs) stored on the userâs computer by the web browser while browsing a site. Cookies are a reliable mechanism for websites to remember stateful information or record the userâs browsing activity or verify the user's identity.</p> <pre><code>import Cookies from 'universal-cookie';  const cookies = new Cookies();  cookies.set('jwt', 'chalmeraputt', { path: '/' });  console.log(cookies.get('jwt')); </code></pre> <p>Refer <a href=""https://reactgo.com/react-get-cookie/"" rel=""nofollow noreferrer"">this link</a></p>",,,false
"{'account_id': 26931715, 'reputation': 314, 'user_id': 20504019, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0yY2nT897Da6A7uTBchebCNCVHp_XeZiKIS2y3=k-s256', 'display_name': 'Jay F.', 'link': 'https://stackoverflow.com/users/20504019/jay-f'}",True,0,1669632141,1669632141,74599384,74598498,CC BY-SA 4.0,"<p>This should work fine:</p> <pre><code>import Cookies from ""universal-cookie"";  function App() {     const cookies = new Cookies();      cookies.set(""cookie"", ""chocolate_chip"", { path: ""/"" });      return <div>{cookies.get(""cookie"")}</div>; }  export default App; </code></pre>",,,false
"{'account_id': 26931715, 'reputation': 314, 'user_id': 20504019, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0yY2nT897Da6A7uTBchebCNCVHp_XeZiKIS2y3=k-s256', 'display_name': 'Jay F.', 'link': 'https://stackoverflow.com/users/20504019/jay-f'}",False,0,1669660227,1669637044,74600322,74598490,CC BY-SA 4.0,"<p>I guess the issue is not the way you pass the data to your component. The issue is, when you rerender your component, it changes the <code>src</code> in your video <code><source /></code> tag but it does not actually reload the video, thus you see an old or wrong video even with the correct URL. I would suggest <code>load()</code> the video with each call to your child component that shows the video. For example call load in useEffect whenever the video source changed:</p> <pre><code>useEffect(() => {     document.querySelector(""video"").load(); }, []) </code></pre> <p>This will force the <code>video</code> to reload with the new <code>src</code>.</p> <p>EDIT:</p> <p>I cloned your project and the issue indeed is re-loading the video with the new source. Here is the solution. In your Sidebar.js add the following <code>useEffect</code> and add <code>className=""sidebar-video""</code> to your <code><video /></code> tag. That should do it.</p> <pre><code>useEffect(() => {     document.querySelector("".sidebar-video"").load(); }, [title]); </code></pre>",1669660227.0,,false
"{'account_id': 17405188, 'reputation': 418, 'user_id': 12613405, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AAuE7mDMoJlFWsFtlLHnNvFOxZusqeeJ8yDDFlZsq3zP=k-s256', 'display_name': 'Ibrahim shamma', 'link': 'https://stackoverflow.com/users/12613405/ibrahim-shamma'}",False,0,1669628922,1669628922,74598737,74598490,CC BY-SA 4.0,"<p>Simply, create a default project</p> <pre class=""lang-js prettyprint-override""><code>const defaultProject = { title: """", liveLink: """", } const {title, liveLink, codeLink, video, videoAlt, tags, details, challenges, lessons} = ListOfProjects.find((project) => {         return project.title === activeProject; }) || defaultProject;  </code></pre> <p>Also, make sure the <code>title</code> is unique or the <code>.find</code> will be returning wrong project.</p>",,,false
"{'account_id': 27071084, 'reputation': 67, 'user_id': 20621722, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e4b16e9edaf5fdc4f2ff1175b9f81a70?s=256&d=identicon&r=PG', 'display_name': 'Kriss_Vector', 'link': 'https://stackoverflow.com/users/20621722/kriss-vector'}",False,2,1669628701,1669628369,74598629,74598490,CC BY-SA 4.0,"<p>Try this, <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find"" rel=""nofollow noreferrer"">the find</a> may return undefined if it can not find the data. So you can not destruct undefined. Adding <code>|| {}</code> will check if <code>ListOfProjects.find((project) => { return project.title === activeProject; })</code> is undefined, it will change to an empty object <code>{}</code></p> <pre><code>const {title, liveLink, codeLink, video, videoAlt, tags, details, challenges, lessons} = ListOfProjects.find((project) => {         return project.title === activeProject; }) || {}; </code></pre>",1669628701.0,,false
"{'account_id': 21820209, 'reputation': 2045, 'user_id': 16116506, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/E1zGO.png?s=256', 'display_name': 'Wraithy', 'link': 'https://stackoverflow.com/users/16116506/wraithy'}",True,1,1669628454,1669628454,74598651,74598467,CC BY-SA 4.0,"<p>State is updated after rerender, you are calling it before rerender. In your case i suggest to return enrollments and then pass them as parameter:</p> <pre><code>const [enrollments, setEnrollments] = useState<Enrollment[]>([]);   client.v2().enrollments().fetch()).then((enrollments) => {         setEnrollments(enrollments.enrollments);         return enrollments.enrollments       })       .then((enrollmentsData) => {         getCourses(enrollmentsData);       }   const getCourses = (enrollmentsData) => {     console.log(enrollmentsData)} </code></pre> <p>or you can use them in first <code>then</code> callback:</p> <pre><code>const [enrollments, setEnrollments] = useState<Enrollment[]>([]);   client.v2().enrollments().fetch()).then((enrollments) => {         setEnrollments(enrollments.enrollments);         getCourses(enrollments.enrollments)       })          const getCourses = (enrollmentsData) => {     console.log(enrollmentsData)} </code></pre> <p>dont forget, that this fetch will be called every render, so i suggest to put in useEffect with empty array as dependencies</p> <pre><code>const [enrollments, setEnrollments] = useState<Enrollment[]>([]);  React.useEffect(()=>{     client.v2().enrollments().fetch()).then((enrollments) => {         setEnrollments(enrollments.enrollments);         getCourses(enrollments.enrollments)       })},[]);           const getCourses = (enrollmentsData) => {     console.log(enrollmentsData)} </code></pre> <p>and with that settings you can call getCourses in another useEffect instead:</p> <pre><code>const [enrollments, setEnrollments] = useState<Enrollment[]>([]);   React.useEffect(()=>{     client.v2().enrollments().fetch()).then((enrollments) => {         setEnrollments(enrollments.enrollments);       })},[]);  React.useEffect(()=>{  if(enrollments.length >0){   getCourses() }},[enrollments]);       const getCourses = () => {     console.log(enrollments)} </code></pre> <p>This will call getCourses when enrollments change and are not empty array. But i would suggest previous solution with <code>getCourses</code> inside then callback and passing enrollments as parameter</p>",,,false
"{'account_id': 25667033, 'reputation': 1201, 'user_id': 19431815, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/0uNix.png?s=256', 'display_name': 'Priyen Mehta', 'link': 'https://stackoverflow.com/users/19431815/priyen-mehta'}",True,1,1669641149,1669641149,74601113,74598368,CC BY-SA 4.0,"<p>This is solution for how you convert nested object into single array, Please use in your code like this:</p> <p>It will work like recursion function.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const obj = {   name: 'Project',   data: '2022',   task: {     id: 1,     title: 'Apple',     start: '2021',     end: '2022',     sub: [{       id: 2,       title: 'tomato',       start: '2021',       end: '2022',       sub: [{         id: 3,         title: 'Orange',         start: '2019',         end: '2020',         sub: [{           id: 4,           title: 'Banana',           start: '2022',           end: '2022',           sub: [{               id: 5,               title: 'Strawberry',               start: '2015',               end: '2018',             },             {               id: 6,               title: 'cherry',               start: '2001',               end: '2003',             },           ],         }, ],       }, ],     }, ],   }, };  const arr = [];  const foo = (task) => {   if (!task.id) return;   arr.push({     id: task.id,     title: task.title,     start: task.start,     end: task.end,   });    if (task.sub && task.sub.length > 0) task.sub.forEach(item => foo(item)); };  foo(obj.task);  console.log('>>>>>  arr : ', arr);</code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 24773511, 'reputation': 67, 'user_id': 18657175, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/yue8R.png?s=256', 'display_name': 'KALrious', 'link': 'https://stackoverflow.com/users/18657175/kalrious'}",False,-1,1669627609,1669627609,74598474,74598368,CC BY-SA 4.0,"<p>I think what you are missing is the user of object.keys:</p> <p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys</a></p> <p>It allow you to return a array of keys of your object that you can map on.</p> <p>What I suggest is doing something like this :</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const GanttContainer: React.FC = () => {     const {tasks, loading, error} = useTypedSelector(state => state.task)     const dispatch: Dispatch<any> = useDispatch()       useEffect(() => {         dispatch(fetchTasks())     }, [])      if (loading) {         return <h1>ÐÐ´ÐµÑ Ð·Ð°Ð³ÑÑÐ·ÐºÐ°...</h1>     }     if (error) {         return <h1>{error}</h1>     }      return (         ....                 {Object.keys(tasks).map((taskKeys, id) => {                     return (                     <div key={id}>                         {tasks[taskKeys]}                     </div>)         ....     ); };  export default GanttContainer;</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdnjs.cloudflare.com/ajax/libs/react/16.6.3/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.6.3/umd/react-dom.production.min.js""></script></code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 27031397, 'reputation': 1186, 'user_id': 20587701, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/aHg04.jpg?s=256', 'display_name': 'NAZIR HUSSAIN', 'link': 'https://stackoverflow.com/users/20587701/nazir-hussain'}",True,2,1669627766,1669627766,74598514,74598236,CC BY-SA 4.0,"<p>your validTill date is wrong, fab month can't have 30 days. use a valid date and try, it will work fine.</p>",,,false
"{'account_id': 16033906, 'reputation': 786, 'user_id': 11578082, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-jTbrrEP7heA/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfZmoBWXH6kuOVg-e8j-gz22gDmvg/mo/photo.jpg?sz=256', 'display_name': 'Robert S', 'link': 'https://stackoverflow.com/users/11578082/robert-s'}",False,0,1669634492,1669634492,74599829,74598163,CC BY-SA 4.0,"<p>I think you might actually be using <strong>react-router-dom@6</strong>. The <strong>Switch</strong> component was replaced by a <strong>Routes</strong> component and the <strong>Route</strong> component API changed significantly.</p> <p>Example:</p> <pre><code>import { Routes, Route } from 'react-router-dom';  export default function App() {   return (      <Routes>        <Router path=""/"" element={<Home />} />        ... other routes ...      </Routes>   ); } </code></pre> <p>Refer <a href=""https://reactrouter.com/en/main/start/overview"" rel=""nofollow noreferrer"">this link</a></p>",,,false
"{'account_id': 18508059, 'reputation': 923, 'user_id': 13483939, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/3WOJz.jpg?s=256', 'display_name': 'Shubham Waje', 'link': 'https://stackoverflow.com/users/13483939/shubham-waje'}",False,1,1669628038,1669627653,74598489,74598157,CC BY-SA 4.0,"<p>The more classic example is when you use <code>setInterval</code> inside the <code>useEffect</code>. take a look at the following code:</p> <pre class=""lang-js prettyprint-override""><code>import { useEffect, useState } from ""react""; import ""./styles.css"";  export default function App() {   const [count, setCount] = useState(0);    useEffect(() => {     let interval = setInterval(() => {       // setCount((c) => c + 1);       setCount(count + 1);     }, 1000);      return () => {       clearInterval(interval);     };   }, []);    return (     <div className=""App"">       <h1>{count}</h1>     </div>   ); }  </code></pre> <p>In this case, it renders <code>0</code> and then increments the <code>count</code> once after one second. The count value will remain at <code>1</code> after that.</p> <p>The reason behind this is that <code>count</code> here represents your React state. This is a variable that holds a value. A <code>closure</code> is created over the outer scope where count is declared - which is the <code>App</code> component itself. Such variables can change value between function calls, but this is where React's <strong>immutability</strong> comes into play.</p> <p>You can update the state using the second method as follows:</p> <pre class=""lang-js prettyprint-override""><code> useEffect(() => {     let interval = setInterval(() => {       setCount((c) => c + 1); // this will update count value every second     }, 1000);      return () => {       clearInterval(interval);     };   }, []); </code></pre> <p>There will always be a fresh state for that variable when using this method.</p> <p>That's why you shouldn't jump into React without learning core JS first. <strong>React is not JavaScript</strong>, but rather a declarative JavaScript library that simplifies some things.</p> <p>Codesandbox link of the above example: <a href=""https://codesandbox.io/s/react-interval-gi4xl7"" rel=""nofollow noreferrer"">https://codesandbox.io/s/react-interval-gi4xl7</a></p> <p>Great article by Dan referencing the same topic: <a href=""https://overreacted.io/making-setinterval-declarative-with-react-hooks/"" rel=""nofollow noreferrer"">https://overreacted.io/making-setinterval-declarative-with-react-hooks/</a></p>",1669628038.0,,false
"{'account_id': 13742565, 'reputation': 1677, 'user_id': 9917250, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/FNyE7.jpg?s=256', 'display_name': 'Ali Nauman', 'link': 'https://stackoverflow.com/users/9917250/ali-nauman'}",False,-1,1669635014,1669625829,74598161,74598018,CC BY-SA 4.0,"<p>Before React 18's <code>StrictMode</code>, your components would only mount once. But now, they mount, are unmounted, and then remounted. So its not only the effects that are ran twice - your entire component is rendered twice.</p> <p>That means your state is re-initialized and your refs are also reinitialized. Obviously, your effects will run twice as well.</p> <p>About effects running twice, you need to properly cleanup <code>async</code> effects - any effect that does something asynchronously, like fetching data from the server, adding an event listener etc. Not all effects need a cleanup.</p> <p>Also, the effects are meant to run twice in development (they only run once in production). Some people try to prevent effects from running twice, but that is not okay. If you cleanup an effect properly, there should be no difference in its execution when it runs once in production or twice in development.</p> <blockquote> <p>Also the useId hook returns two different ids where the 2nd Id is kept also in further render cycles. Is this a bug or expected behavior? If it is expected, is there a way to fix this? The second value will be the one that is used. It is not a bug, and you can keep using that as the ""true"" value.</p> </blockquote> <p>You can readup more on <code>StrictMode</code> <a href=""https://reactjs.org/docs/strict-mode.html"" rel=""nofollow noreferrer"">here</a>.</p> <p>Edit: Detecting an unmount.</p> <pre class=""lang-js prettyprint-override""><code>// Create a ref to track unmount const hasUnmounted = useRef(false)  useEffect(() => {   return () => {     // Set ref value to true in cleanup. This will run when the component is unmounted. If this is true, your component has unmounted OR the effect has run at least once     hasUnmounted.current = true;   } }, []) </code></pre>",1669635014.0,,false
"{'account_id': 5258007, 'reputation': 404, 'user_id': 4200334, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/ZgwRi.jpg?s=256', 'display_name': 'dbonev', 'link': 'https://stackoverflow.com/users/4200334/dbonev'}",False,1,1669625320,1669624774,74597976,74597774,CC BY-SA 4.0,"<p>When open the <strong>why-choose-us</strong> page use <strong>scrollIntoView</strong>: <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView</a> To show the accordion on the screen.</p> <p>Then set <strong>expanded</strong> property for the accordion to <strong>true</strong>: <a href=""https://mui.com/material-ui/api/accordion/"" rel=""nofollow noreferrer"">https://mui.com/material-ui/api/accordion/</a></p> <p>About clicking on a link you should use <strong>useEffect</strong> hook to determine the component initialization and inside the callback use the above approaches.</p>",1669625320.0,,false
"{'account_id': 15727758, 'reputation': 2087, 'user_id': 11348853, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/4d8765b72d118899e85026939435187d?s=256&d=identicon&r=PG', 'display_name': 'Nahidujjaman Hridoy', 'link': 'https://stackoverflow.com/users/11348853/nahidujjaman-hridoy'}",True,85,1714464570,1669629002,74598748,74597732,CC BY-SA 4.0,"<p>Apparently, since I am using Material UI I need to install <code>@emotion/react</code> and <code>@emotion/styled</code> as well.</p> <pre class=""lang-bash prettyprint-override""><code>npm i @emotion/react @emotion/styled  or  yarn add @emotion/react @emotion/styled </code></pre>",1714464570.0,,false
"{'account_id': 29580846, 'reputation': 1, 'user_id': 22670670, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocKu3cxAjHFzs00qSedbCR3MJUiuC-bALEOw0kh64onb=k-s256', 'display_name': 'Jatinder Choudhary', 'link': 'https://stackoverflow.com/users/22670670/jatinder-choudhary'}",False,0,1697088489,1697088489,77277904,74597732,CC BY-SA 4.0,<p>just delete the node module files and run npm install that will solve the problem</p>,,,false
"{'account_id': 18301751, 'reputation': 21, 'user_id': 13326379, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/875b1e0ce8e48f7a3eea0889a4b5707f?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'quememo', 'link': 'https://stackoverflow.com/users/13326379/quememo'}",False,2,1696452033,1696451960,77232833,74597732,CC BY-SA 4.0,"<p>For anyone using styled-components: <a href=""https://mui.com/material-ui/guides/styled-components/"" rel=""nofollow noreferrer"">https://mui.com/material-ui/guides/styled-components/</a></p> <p>Vite not in docs but almost the same as Webpack if not using Yarn:</p> <pre><code>import { defineConfig } from 'vite' export default defineConfig({  // Other stuff  resolve: {     alias: {       '@mui/styled-engine': '@mui/styled-engine-sc',     }, },  }) </code></pre>",1696452033.0,,false
"{'account_id': 27112625, 'reputation': 21, 'user_id': 20657529, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0imOx4vW19tDC8-UGqsV1w3Krlpx0SFxac5VsUbA=k-s256', 'display_name': 'Victor Vizzy', 'link': 'https://stackoverflow.com/users/20657529/victor-vizzy'}",False,2,1694214560,1694214560,77070250,74597732,CC BY-SA 4.0,<pre><code>npm install @mui/material @emotion/react @emotion/styled --force </code></pre> <p>this should fix the error</p>,,,false
"{'account_id': 28199750, 'reputation': 61, 'user_id': 21553747, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AGNmyxYl_akjXsH-Cfi4wgtC8gRPLJjaKeQsg0pJRMhq=k-s256', 'display_name': 'ShrutiLatthe', 'link': 'https://stackoverflow.com/users/21553747/shrutilatthe'}",False,4,1691834353,1691834353,76888749,74597732,CC BY-SA 4.0,<p>This is for those who are using <strong>MUI</strong> install the following</p> <p><strong>npm install --save @emotion/react</strong></p> <p><strong>npm install --save @emotion/styled</strong></p> <p>after installing <strong>re-run</strong> your project</p>,,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",True,2,1669623297,1669622956,74597686,74597659,CC BY-SA 4.0,"<p>Gonna be the type of <code>Dispatch<SetStateAction<YOUR_TYPE></code></p> <pre><code>import { Dispatch, SetStateAction } from ""react"";  export default function BuyTicketForm(props: {     setImageIdUploaded?: Dispatch<SetStateAction<string | undefined>> </code></pre>",1669623297.0,,false
"{'account_id': 3209982, 'reputation': 2182, 'user_id': 2710165, 'user_type': 'registered', 'accept_rate': 88, 'profile_image': 'https://www.gravatar.com/avatar/f0db8e924bf6fbd30534aa899e9541b0?s=256&d=identicon&r=PG', 'display_name': 'shrekuu', 'link': 'https://stackoverflow.com/users/2710165/shrekuu'}",False,0,1727517712,1727517712,79033920,74597421,CC BY-SA 4.0,"<p>Yes. Like other answers mentioned, I <strong>created a global component</strong> <code>NoSSR.tsx</code> file.</p> <pre><code>import dynamic from 'next/dynamic'; import React from 'react';  const NoSSR = ({ children }: { children: React.ReactNode }) => <React.Fragment>{children}</React.Fragment>;  export default dynamic(() => Promise.resolve(NoSSR), {   ssr: false, });  </code></pre> <p>Whenever I want to force a component to only render in the browser, say this <code>CompA.tsx</code>:</p> <pre><code>// This line becomes useless actually since we do not prerender it on the server. Omit it if you like. 'use client';    export default function CompA() {   return <div>CompA</div>; } </code></pre> <p>I just wrap that component with this component like this (this code can appear on both server-side components and client-side components):</p> <pre><code>... <NoSSR>   <CompA /> </NoSSR> ... </code></pre>",,,false
"{'account_id': 18508059, 'reputation': 923, 'user_id': 13483939, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/3WOJz.jpg?s=256', 'display_name': 'Shubham Waje', 'link': 'https://stackoverflow.com/users/13483939/shubham-waje'}",True,9,1669622119,1669622119,74597552,74597421,CC BY-SA 4.0,"<p>You can disable SSR for a specific component while exporting it.</p> <pre class=""lang-js prettyprint-override""><code>const NoSSRYourComponent = () => {     return (         // ... NoSSRYourComponent code     ) }  // export it with SSR disabled const YourComponent = dynamic(() => Promise.resolve(NoSSRYourComponent), {   ssr: false, })  export default YourComponent </code></pre>",,,false
"{'account_id': 2432151, 'reputation': 1731, 'user_id': 2122822, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RNpbU.jpg?s=256', 'display_name': 'Azzy', 'link': 'https://stackoverflow.com/users/2122822/azzy'}",False,2,1669623344,1669621348,74597422,74597384,CC BY-SA 4.0,"<p>Make api calls in useEffects or event handlers</p> <pre><code>const [state, setState] = React.useState({       default: {}, // set default value here      defaultTab: """"   });  useEffect(() => {    let ignore = false;     const fetchData = async () => {        const response = await callApiHere();        // skip execution in invalid scope        if (ignore) { return; }         setState(s => ({ ...s, default: response }))    }      fetchData()     return () => {        ignore = true;    }     }, []) </code></pre> <p>when using <code>state</code> use <a href=""https://dmitripavlutin.com/javascript-optional-chaining/"" rel=""nofollow noreferrer"">chaining</a> <code>?.</code> or <code>??</code> to handle missing data accordingly</p> <pre><code>{ state?.default?.property ?   <div>...</div>  : null } </code></pre> <p>You can check the <a href=""https://beta.reactjs.org/learn/lifecycle-of-reactive-effects"" rel=""nofollow noreferrer"">beta docs about useEffect</a> life cycles</p> <p>Hope it helps</p>",1669623344.0,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",True,0,1669621036,1669621036,74597375,74597255,CC BY-SA 4.0,"<p>You need to store your information inside of state, or on a backend side or in some other storage, otherwise it will be lost after re-render.</p> <p>So for better understanding, imagine that re-render works like page reload, and all stuff that is not in state or something just re-initialized.</p> <p>So when you have your prices array and update one thing there you see the results, but when you try to modify something else, all processes starts from scratch, so your prices array will get fresh data from car items (that doesn't actually have a updated price that was previously updated) and will set new price.</p> <p>So to solve this, you need to store in state car items and update prices there through manipulating state.</p>",,,false
"{'account_id': 17275818, 'reputation': 477, 'user_id': 12510464, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/sBsDP.jpg?s=256', 'display_name': 'Kamran Davar', 'link': 'https://stackoverflow.com/users/12510464/kamran-davar'}",False,1,1669621488,1669621488,74597443,74597176,CC BY-SA 4.0,"<p>here you are:</p> <pre><code>import React, { useState } from 'react'; import './index.css'; import { Tabs, Pagination } from 'antd';  const App = () => {   const [current, setCurrent] = useState(1);    const onChange = (key: string) => {     setCurrent(key);   };   return (     <div>       <Tabs         activeKey={current}         defaultActiveKey={1}         onChange={onChange}         items={[           {             label: `Tab 1`,             key: 1,             children: `Content of Tab Pane 1`,           },           {             label: `Tab 2`,             key: 2,             children: `Content of Tab Pane 2`,           },           {             label: `Tab 3`,             key: 3,             children: `Content of Tab Pane 3`,           },         ]}       />       <Pagination         defaultCurrent={current}         total={3}         onChange={onChange}         pageSize={1}       />     </div>   ); };  export default App;  </code></pre> <p><a href=""https://stackblitz.com/edit/react-ehk3bg?file=demo.tsx"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/react-ehk3bg?file=demo.tsx</a></p>",,,false
"{'account_id': 20431753, 'reputation': 215, 'user_id': 14990516, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jcIP1.png?s=256', 'display_name': 'Asmeeta Rathod', 'link': 'https://stackoverflow.com/users/14990516/asmeeta-rathod'}",False,0,1669703986,1669703986,74609997,74597128,CC BY-SA 4.0,"<p>You may try this</p> <pre><code>const onChange = (id) => {             let newArray =[];      data.map(item =>{       if(item?.id == id){           newArray.push({...item, isSelected : true});       }else{         newArray.push(item);       }     } )     setData(newArray);   }; </code></pre> <p>and replace this line</p> <pre><code>  onChange={() => onChange(item?.id)} </code></pre>",,,false
"{'account_id': 1221815, 'reputation': 33917, 'user_id': 1188322, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/08fdd25bdd63b5ce587375b879522e44?s=256&d=identicon&r=PG', 'display_name': 'kiranvj', 'link': 'https://stackoverflow.com/users/1188322/kiranvj'}",True,3,1669619654,1669619654,74597160,74597110,CC BY-SA 4.0,"<p>You need to use <code>Array.find</code> method to get the status name</p> <pre><code>function getStatus(id, status) {   const statusDetails = status.find(item=>item.id === id);   return statusDetails?.name || 'Status not available'; } </code></pre> <p>Call this function to get status with status value and status array as arguments.</p>",,,false
"{'account_id': 8136386, 'reputation': 537, 'user_id': 6127865, 'user_type': 'registered', 'accept_rate': 25, 'profile_image': 'https://lh3.googleusercontent.com/-golN78yuKVg/AAAAAAAAAAI/AAAAAAAAADE/2awb6e183mM/photo.jpg?sz=256', 'display_name': 'Abasaheb Gaware', 'link': 'https://stackoverflow.com/users/6127865/abasaheb-gaware'}",False,0,1669627458,1669618793,74597021,74596899,CC BY-SA 4.0,"<p>It looks like you are using react 18 and an old version of react-collapsed@3.3.0. react collapsed 3rd version need old react 16 or 17.</p> <p>You need to upgrade react-collapsed to the latest version.</p> <ol> <li>It's not safe for production. It's recommended to use the latest version.</li> <li>above is the alternate option.</li> </ol> <p><strong>Update:</strong></p> <p>there is react 18 support issue for react-collapsed, so you can try the below patch for the alternative:</p> <p><a href=""https://www.npmjs.com/package/@gaearon/react-collapsed?activeTab=versions"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/@gaearon/react-collapsed?activeTab=versions</a></p>",1669627458.0,,false
"{'account_id': 2432151, 'reputation': 1731, 'user_id': 2122822, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RNpbU.jpg?s=256', 'display_name': 'Azzy', 'link': 'https://stackoverflow.com/users/2122822/azzy'}",True,1,1672034724,1669618232,74596958,74596838,CC BY-SA 4.0,"<p>Cleaning up the connections from the previous renders</p> <pre><code>useEffect(() => {            let isValidScope = true;      socket.on('message', message => {         console.log(message)         // if message received when component unmounts         // stop executing the code         if (!isValidScope) { return; };          // if you need to access latest state, props or variables         // without including them in the depedency array         // i.e you want to refer the variables without reseting the connection         // use useRef or some custom solution (link below)      })       return () => {        // cleanup code, disconnect        // socket.disconnect()        isValidScope = false;      }       }, [socket]) </code></pre> <p>more about <a href=""https://beta.reactjs.org/learn/lifecycle-of-reactive-effects"" rel=""nofollow noreferrer"">useEffect life cycle</a>, to get an idea why</p> <ul> <li>A new effect is created after every render</li> <li>How the cleanup for previous effect occurs before executing of current useEffect</li> </ul> <p>You can read about why isValid is set <a href=""https://beta.reactjs.org/learn/synchronizing-with-effects#fetching-data"" rel=""nofollow noreferrer"">synchronizing with effects</a></p> <p>Why it was running 3 times in <a href=""https://beta.reactjs.org/learn/synchronizing-with-effects#how-to-handle-the-effect-firing-twice-in-development"" rel=""nofollow noreferrer"">dev mode</a></p> <p>If you are intererested in taking a deep dive, consider reading a blog post by <a href=""https://overreacted.io/a-complete-guide-to-useeffect/#each-render-has-its-own-everything"" rel=""nofollow noreferrer"">Dan on useEffect</a>, its old but helps to build a good mental model about useEffects and functional components.</p> <p><a href=""https://beta.reactjs.org/learn/separating-events-from-effects#declaring-an-event-function"" rel=""nofollow noreferrer"">useEvent</a> can solve the problem but it is in <a href=""https://github.com/reactjs/rfcs/blob/useevent/text/0000-useevent.md"" rel=""nofollow noreferrer"">RFC</a></p> <p>you can check my question about a implementation to build a <a href=""https://stackoverflow.com/q/74551749/2122822"">custom useEvent</a> till it becomes stable</p> <p>Hope it helps, cheers</p>",1672034724.0,,false
"{'account_id': 4071861, 'reputation': 5638, 'user_id': 3344612, 'user_type': 'registered', 'accept_rate': 73, 'profile_image': 'https://i.sstatic.net/jwgap.jpg?s=256', 'display_name': 'Teivaz', 'link': 'https://stackoverflow.com/users/3344612/teivaz'}",False,1,1670588917,1669618810,74597025,74596838,CC BY-SA 4.0,"<p>The problem with your code is you assume your component will never be recreated. But React does not provide such guarantees. And if you will add logging at the place when you open a socket, you will notice that for the first render it will be called 2 times. And because you do not have cleanup code the socket remains open even after the component is destroyed. Thus duplicated messages.</p> <p>Furthermore it would seem that your component is recreated on every message, which multiplies the existing effect of duplication.</p> <p>The solution in your case would be to close the connection in cleanup part of the effect.</p>",1670588917.0,,false
"{'account_id': 11823848, 'reputation': 446, 'user_id': 10930451, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/a9877230450452df43fc6453de23ea22?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'C.D.', 'link': 'https://stackoverflow.com/users/10930451/c-d'}",False,0,1714551821,1714551821,78412740,74596746,CC BY-SA 4.0,"<p>I solved my problem (on Linux, Ubuntu) by using the <code>sudo</code> command before the npm start.</p> <pre><code>sudo npm start </code></pre> <p>Previously using the solution of changing configurations to allow for more file watchers worked but then the problem returned after I rebooted. This seemed to fix my problem.</p>",,,false
"{'account_id': 11991589, 'reputation': 776, 'user_id': 8774520, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/926854630797316/picture?type=large', 'display_name': 'iku', 'link': 'https://stackoverflow.com/users/8774520/iku'}",True,5,1697705361,1697705361,77322275,74596746,CC BY-SA 4.0,"<p>This happens when the maximum number of file watchers limits exceeded on your system.</p> <p><strong>If you try to run many applications at a same time, this problem occurs.</strong></p> <p><em>To solve the issue on Linux based operating system execute the following command in terminal,</em></p> <pre><code>//for Debian, RedHat and other similar Linux distros echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p  //for ArchLinux echo fs.inotify.max_user_watches=524288 | sudo tee /etc/sysctl.d/40-max-user-watches.conf && sudo sysctl --system </code></pre>",,,false
"{'account_id': 14848666, 'reputation': 71, 'user_id': 10723329, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/0l9ay.jpg?s=256', 'display_name': 'Ersin AkÅar', 'link': 'https://stackoverflow.com/users/10723329/ersin-ak%c5%9far'}",False,0,1669617234,1669617234,74596810,74596746,CC BY-SA 4.0,"<p>I solved the problem by closing the visual studio code windows that I used to examine other project code. It worked then, but I think it might be that Visual Studio Code can't keep track of project dependencies for the project it runs when there are a few windows and projects. But I'm not sure. That solved my problem. I've encountered the same problem before. Can someone satisfy my curiosity about this? Is this caused by visual studio code? Does anyone really have an idea if this is the cause of the problem?</p>",,,false
"{'account_id': 19615875, 'reputation': 2235, 'user_id': 15357136, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/ye8nX.jpg?s=256', 'display_name': 'Richardson', 'link': 'https://stackoverflow.com/users/15357136/richardson'}",False,0,1669647440,1669617150,74596801,74596705,CC BY-SA 4.0,"<p>You can do so, either by removing them manually, form the console or by setting the some variation of following code that fulfill your needs</p> <pre><code>if (img) {   const storage = getStorage();   const storageRef = ref(storage, `profiles/${userId}/profile-image`);   await deleteObject(storageRef); } </code></pre> <p>Donât forget the importsâ¦ though</p>",1669647440.0,,false
"{'account_id': 11636, 'reputation': 42080, 'user_id': 22514, 'user_type': 'registered', 'accept_rate': 86, 'profile_image': 'https://i.sstatic.net/ePeDX.png?s=256', 'display_name': 'Kevin Hakanson', 'link': 'https://stackoverflow.com/users/22514/kevin-hakanson'}",False,0,1670447605,1670447605,74722880,74596699,CC BY-SA 4.0,"<p>You can direct target the Amazon Cognito <a href=""https://docs.aws.amazon.com/cognito/latest/developerguide/authorization-endpoint.html"" rel=""nofollow noreferrer"">Authorize endpoint</a> and set <code>identity_provider=Google</code> on the URL.</p> <blockquote> <p>If you include an identity_provider or idp_identifier parameter in the URL, it silently redirects your user to the sign-in page for that identity provider (IdP).</p> </blockquote> <p>The OAuth 2.0 REST API endpoints are fully documented under <a href=""https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-userpools-server-contract-reference.html"" rel=""nofollow noreferrer"">User pool OIDC and hosted UI API endpoints reference</a></p>",,,false
"{'account_id': 3690291, 'reputation': 946, 'user_id': 4382391, 'user_type': 'registered', 'accept_rate': 69, 'profile_image': 'https://i.sstatic.net/gMRgs.png?s=256', 'display_name': 'Null Salad', 'link': 'https://stackoverflow.com/users/4382391/null-salad'}",False,0,1669682870,1669682870,74608009,74596598,CC BY-SA 4.0,"<p>A preliminary safer solution based off @Oleg's answer, which does not use any 3rd party libraries, is that I created a new function:</p> <pre class=""lang-js prettyprint-override""><code>const sanitizeHTML = (unsanitized : string) : string => {     const el : HTMLDivElement = document.createElement(""div"");     el.innerText = unsanitized;     return el.innerHTML; } </code></pre> <p>and then made a slight modification to <code>textPreprocessor</code></p> <pre class=""lang-js prettyprint-override""><code>const textPreprocessor = (content : string) : React.ReactNode => {     // adds hashtags     const sanitized = sanitizeHTML(content)     const words = content.split("" "");     let htmlString = """"     words.forEach(word  => {         if(word[0] === ""#"") {             htmlString += `<a href='hashtag/:${word}'/>${word}</a> `         }         else{             htmlString += `${word} `         }     })          return <div dangerouslySetInnerHTML={{__html: htmlString}} />; }  </code></pre>",,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",False,1,1669621596,1669621596,74597465,74596598,CC BY-SA 4.0,"<p>There are some libraries for that, like dompurify. Those libraries add some more security for this, but you should always consider this to be dangerous and try to avoid such things.</p>",,,false
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,0,1669663903,1669663903,74605648,74596570,CC BY-SA 4.0,"<h1>Issues</h1> <p>The <code>WorkDetails</code> component is rendered on a <em><strong>nested</strong></em> route, so in order to be rendered the parent <code>Work</code> component rendered on <code>""/works""</code> necessarily needs to render an <code>Outlet</code> component for the nested routes to render their <code>element</code> content into.</p> <p>An additional issue that is that the <code>WorkDetails</code> is issuing state updates as an unintentional side-effect. In fact the <code>work</code> state is completely unnecessary since it's able to be derived from the current <code>slug</code> route path parameter value and the <code>data</code> array of work items. It's a React anti-pattern to store derived ""state"" in React state. Filter/find the matching work item from the <code>data</code> array, and if necessary, memoize the value via the <code>useMemo</code> hook instead of storing in any state.</p> <h1>Solution</h1> <h2>Layout & Nested Routes</h2> <p>If you want to use <code>Work</code> as a layout route then it should render also an <code>Outlet</code> component for the nested routes to render their content into.</p> <p>Example:</p> <pre><code><BrowserRouter>   <Routes>     <Route path=""/"" element={<Home />} />     <Route path=""/works"" element={<Work />}>       <Route path="":slug"" element={<WorkDetails />} />     </Route>   </Routes> </BrowserRouter> </code></pre> <pre><code>import { Link, Outlet } from 'react-router-dom'; import { data } from '../path/to/data';  const Work = ({ data }) => {   return (     <>       <div>         <h1>Works</h1>         {data.map(({ id, name, slug }) => (           <div key={id} id={id}>             <h2>{name}</h2>             <Link to={slug}>               <button>Work Details</button>             </Link>           </div>         ))}       </div>       <Outlet /> // <-- nested routes render element here     </>   ); }; </code></pre> <h2>Regular Routes</h2> <p>If you want to <code>Work</code> and <code>WorkDetails</code> to render as two separate routes and components they un-nest the routes. No <code>Outlet</code> component is required to render <code>WorkDetails</code>.</p> <p>Example:</p> <pre><code><BrowserRouter>   <Routes>     <Route path=""/"" element={<Home />} />     <Route path=""/works"">       <Route index element={<Work />} />               // <-- ""/works""       <Route path="":slug"" element={<WorkDetails />} /> // <-- ""/works/:slug""     </Route>   </Routes> </BrowserRouter> </code></pre> <h2><code>WorkDetails</code> should compute and render derived ""state""</h2> <p>The <code>WorkDetails</code> component shouldn't store the derived work item value into local state. It should instead directly compute and render the searched result.</p> <p>Example:</p> <pre><code>const WorkDetails = () => {   const { slug } = useParams();    // Find the object with the same slug as the params.   const findWork = data.find((d) => d.slug === slug);    if (!findWork) {     return null; // <-- or some ""Not Found"" fallback UI   }    return (     <div>       <Link to=""/works"">         <button>Back to Works</button>       </Link>       <h1>{work.name}</h1>       {work.subtopic.map((topic) => {         return (           <React.Fragment key={topic.title}> // <-- don't forget React key             <h2>{topic.title}</h2>             <p>{topic.description}</p>           </React.Fragment>         );       })}     </div>   ); }; </code></pre> <p>If the derived state needs to be memoized then use the <code>useMemo</code> hook:</p> <pre><code>const findWork = useMemo(() => data.find((d) => d.slug === slug), [slug]); </code></pre>",,,false
"{'account_id': 1123228, 'reputation': 452, 'user_id': 1111063, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b4f72a55461a0b53cc6ebd3ad0378251?s=256&d=identicon&r=PG', 'display_name': 'Sam Kaz', 'link': 'https://stackoverflow.com/users/1111063/sam-kaz'}",False,0,1669619140,1669619140,74597083,74596570,CC BY-SA 4.0,"<p>There are a couple of issues:</p> <ol> <li><p>the sequencing of the routes is not correct, its should be from specific to generic.</p> </li> <li><p>Also in the work details you are setting the variable incorrectly.</p> </li> </ol> <p>I have tweaked your example for you, see below.</p> <p><a href=""https://codesandbox.io/s/dynamic-routes-forked-7j026p"" rel=""nofollow noreferrer"">https://codesandbox.io/s/dynamic-routes-forked-7j026p</a></p>",,,false
"{'account_id': 27031397, 'reputation': 1186, 'user_id': 20587701, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/aHg04.jpg?s=256', 'display_name': 'NAZIR HUSSAIN', 'link': 'https://stackoverflow.com/users/20587701/nazir-hussain'}",False,0,1669618276,1669618276,74596964,74596570,CC BY-SA 4.0,"<p>change your workDetail file as</p> <pre><code>    const WorkDetails = () => {   const { slug } = useParams();   // Find the object with the same slug as the params.   const [work, setWork] = useState({});    useEffect(()=>{   let findWork = data.find((d) => d.slug === slug);     if (findWork) {       setWork(findWork);     }   }, [findWork])    return (     <div>       <Link to=""/works"">         <button>Back to Works</button>       </Link>       <h1>{work.name}</h1>       {work.subtopic?.map((topic) => {         return (           <>             <h2>{topic.title}</h2>             <p>{topic.description}</p>           </>         );       })}     </div>   ); }; </code></pre>",,,false
"{'account_id': 26877426, 'reputation': 361, 'user_id': 20458458, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/QTyWi.jpg?s=256', 'display_name': 'kuuhak-u', 'link': 'https://stackoverflow.com/users/20458458/kuuhak-u'}",True,0,1669617567,1669617196,74596806,74596570,CC BY-SA 4.0,"<p>Change your code in app.js to this</p> <pre><code>    <BrowserRouter>       <Routes>         <Route path=""/"" element={<Home />} />         <Route path=""/works"" element={<Work data={data} />} />         <Route path=""/works/:slug"" element={<WorkDetails />} />       </Routes>     </BrowserRouter> </code></pre> <p>and this line  <code><Link to={slug}></code>to this  <code><Link to={</code>${slug}<code>}></code></p> <p>and work details to this</p> <pre><code>import { useEffect, useState } from ""react""; import { Link, useParams } from ""react-router-dom""; import data from ""./data"";  const WorkDetails = () => {   const { slug } = useParams();   console.log("";"", slug);    // Find the object with the same slug as the params.   const [work, setWork] = useState({});   let findWork = data.find((d) => d.slug === slug);   console.log(""ll"", findWork);      useEffect(()=>{     if (findWork) {       setWork(findWork);     }    }, [findWork])   return (     <div>       <Link to=""/works"">         <button>Back to Works</button>       </Link>       <h1>{work?.name}</h1>       {work?.subtopics?.map((topic) => {         return (           <>             <h2>{topic.title}</h2>             <p>{topic.description}</p>           </>         );       })}     </div>   ); };  export default WorkDetails; </code></pre>",1669617567.0,,false
"{'account_id': 6818910, 'reputation': 156, 'user_id': 12238257, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AAuE7mD-B0tDf8OcPWMxGKbgVLdxLzqJMV-aDfdFV_U_1w=k-s256', 'display_name': 'MAYUR SANCHETI', 'link': 'https://stackoverflow.com/users/12238257/mayur-sancheti'}",False,-1,1669617243,1669615064,74596535,74596446,CC BY-SA 4.0,"<p>you can apply for td like below,</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-css lang-css prettyprint-override""><code>table {   border-collapse: separate;   border-spacing: 0 16px; }  tr td {   border: 1px solid transparent;   transition: all ease 0.3s;   padding: 5px; }  td {   border-radius: 10px;  }  td:hover {   border: 1px solid green; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><body> <table> <tbody>   <tr>     <td>01</td>     <td>02</td>     <td>03</td>     <td>04</td>     <td>05</td>     <td>06</td>   </tr>   <tr>     <td>07</td>     <td>08</td>     <td>09</td>     <td>10</td>     <td>11</td>     <td>12</td>   </tr> </tbody> </table> </body></code></pre>  </div>  </div>  </p> <p>please comment if any query</p>",1669617243.0,,false
"{'account_id': 17784410, 'reputation': 10856, 'user_id': 12914833, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/mNLi2.jpg?s=256', 'display_name': 'Chris Hamilton', 'link': 'https://stackoverflow.com/users/12914833/chris-hamilton'}",False,2,1669619292,1669618866,74597034,74596357,CC BY-SA 4.0,"<p>The issue is you're trying to use the same <code>onClick</code> function for everything. You should make separate functions and paramaterize them so you know what got clicked on.</p> <pre><code><GameBase onClick={handleGameBaseClick}>       <CardRow>           <Pile cards={state.stack1} spacing={0} onClick={()=>handleStackClick(1)}/>           <Pile cards={state.stack2} spacing={0} onClick={()=>handleStackClick(2)}/>           <Pile cards={state.stack3} spacing={0} onClick={()=>handleStackClick(3)}/>           <Pile cards={state.stack4} spacing={0} onClick={()=>handleStackClick(4)}/>           <CardRowGap/>           <Pile cards={state.draw} spacing={0} onClick={handleDrawClick}/>           <Pile cards={state.discard} spacing={0} onClick={handleDiscardClick}/>       </CardRow>       <CardRow>           <Pile cards={state.pile1} onClick={()=>handlePileClick(1)}/>           <Pile cards={state.pile2} onClick={()=>handlePileClick(2)}/>           <Pile cards={state.pile3} onClick={()=>handlePileClick(3)}/>           <Pile cards={state.pile4} onClick={()=>handlePileClick(4)}/>           <Pile cards={state.pile5} onClick={()=>handlePileClick(5)}/>           <Pile cards={state.pile6} onClick={()=>handlePileClick(6)}/>           <Pile cards={state.pile7} onClick={()=>handlePileClick(7)}/>       </CardRow>       <div id=""errorMsg""></div> </GameBase> </code></pre> <pre class=""lang-js prettyprint-override""><code>function handleGameBaseClick() {   console.log(""You clicked somewhere on the board!""); }  function handleStackClick(id) {   console.log(""You clicked on stack:"", id); }  function handleDrawClick() {   console.log(""You clicked on the draw pile""); }  function handleDiscardClick() {   console.log(""You clicked on the discard pile""); }  function handlePileClick(id) {   console.log(""You clicked on pile:"", id); } </code></pre> <p>It may even be simpler to create separate functions for each pile / stack rather than a parameter.</p>",1669619292.0,,false
"{'account_id': 2432151, 'reputation': 1731, 'user_id': 2122822, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RNpbU.jpg?s=256', 'display_name': 'Azzy', 'link': 'https://stackoverflow.com/users/2122822/azzy'}",False,0,1669617807,1669617030,74596782,74596124,CC BY-SA 4.0,"<p>This can work</p> <pre><code>     // set initial value for circle      const [showCircle, setShowCircle] = useState(false);       const onMarkerClick = (r) => {        // e.preventDefault();        console.log('marker click')        // toggle circle        setShowCircle(s => !s)       }           <MapContainer             center={[48.864716, 2.349]}             zoom={2}             scrollWheelZoom={true}             zoomControl={false}             style={{ width: ""100%"", height: ""100%"" }}             minZoom={2}             maxZoom={5}             doubleClickZoom={false}>             <TileLayer                 attribution='&copy; <a href=""https://www.openstreetmap.org/copyright"">OpenStreetMap</a> contributors'                 url=""https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png""             />             <Polygon positions={overline} />             <Marker                 position={[36.5, 130]}                 // add event handler here                eventHandlers={{ click: onMarkerClick }}              >                 <Popup >Korea                     // show circle conditionally when marker is clicked                    { showCircle && <Circle center={[36.5, 130]} radius={1000000} />}                 </Popup>             </Marker>         </MapContainer> </code></pre> <p>Few pointers name of <code>drawCircle</code> needs to be changed to <code>DrawComponent</code> needs <a href=""https://drawCircle%20component%20needs%20to%20start%20with%20capital%20%20letter%20and%20needs%20to%20be%20outside%20the%20main%20compoent%20for%20performance%20reasons"" rel=""nofollow noreferrer"">to start with capital letter</a> and needs to be <a href=""https://beta.reactjs.org/learn/your-first-component#nesting-and-organizing-components"" rel=""nofollow noreferrer"">outside the main component</a> for performance reasons</p> <p>Hope this helps yout to solve the problem</p>",1669617807.0,,false
"{'account_id': 27068906, 'reputation': 11, 'user_id': 20619840, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/8fc1983639af4f638b1378b485a1df3c?s=256&d=identicon&r=PG', 'display_name': 'kimjaku', 'link': 'https://stackoverflow.com/users/20619840/kimjaku'}",False,0,1669615083,1669615083,74596537,74596124,CC BY-SA 4.0,"<pre><code>import React from 'react'; import { MapContainer, TileLayer, Marker, Popup, Circle } from 'react-leaflet'; import ""./test.css""  function Test_full_map() {      const drawCircle = (position) => {         console.log(position)         return (<Circle center={position} radius={10000} />)     }      return (         <div id='map'>             <MapContainer                 center={[48.864716, 2.349]}                 zoom={2}                 scrollWheelZoom={true}                 zoomControl={false}                 style={{ width: ""100%"", height: ""100%"" }}                 minZoom={2}                 maxZoom={5}                 doubleClickZoom={false}>                 <TileLayer                     attribution='&copy; <a href=""https://www.openstreetmap.org/copyright"">OpenStreetMap</a> contributors'                     url=""https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png""                 />                 <Marker position={[36.5, 130]}                 //eventHandlers ={{click : (e) => drawCircle(e.latlng)}} //use eventHandler                 >                     <Popup closeButton={true}>Korea                         <Circle center={[36.5, 130]} radius={1000000} //use Popup                         />                      </Popup>                 </Marker>             </MapContainer>         </div>     ); }  export default Test_full_map; </code></pre> <p>This Code is total Code. Thank you for your interest.</p>",,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",True,0,1669611328,1669611328,74596154,74596064,CC BY-SA 4.0,"<p>replace this</p> <pre><code>const {input, setInput} =useState(''); </code></pre> <p>with this</p> <pre><code>const [input, setInput] =useState(''); </code></pre>",,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",True,3,1669664155,1669624371,74597914,74596050,CC BY-SA 4.0,"<p>Try this:</p> <pre class=""lang-js prettyprint-override""><code>const [user, setUser] = useState<User | null>(null);  useEffect(() => {   const auth = getAuth();   const unsubscribe = onAuthStateChanged(auth, user => {     if (user) {       setUser(user);     }   });   // Don't listen on stateChange anymore if component did unmount.   return () => {    unsubscribe();   } }, []); </code></pre> <p><strong>Update:</strong></p> <p>You should import <strong>User</strong> interface from ""firebase/auth"" not ""@firebase/auth-types"";</p> <pre class=""lang-js prettyprint-override""><code>import { User } from ""firebase/auth""; </code></pre>",1669664155.0,,false
"{'account_id': 14429076, 'reputation': 562, 'user_id': 10422933, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ab5495eb8b7b322414de345748af3c7b?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Tigran Petrosyan', 'link': 'https://stackoverflow.com/users/10422933/tigran-petrosyan'}",False,0,1669623623,1669623623,74597780,74596050,CC BY-SA 4.0,"<p>The first thing that comes to the mind, is that this side effect should be done inside of useEffect, it should trigger when the component first mounts.</p> <pre><code>useEffect(() =>{        const unlisten = onAuthStateChanged(           authUser => {             authUser               ? setAuthUser(authUser)               : setAuthUser(null);           },        );        return () => {            unlisten();        }  }, []); </code></pre> <p>and then clean up the effect. In my case exact same code works.</p>",,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",True,0,1669610158,1669610158,74596021,74596002,CC BY-SA 4.0,"<p>setState is asynchronous in react. It wil not update the state immetidaly. Can use <code>useEffect</code> to check once updated</p> <pre><code>useEffect(() => {console.log(quantities)}, [quantities]) </code></pre>",,,false
"{'account_id': 20907575, 'reputation': 6260, 'user_id': 15359157, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d82e9c986bd14027251dd29c7dc6478f?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'code', 'link': 'https://stackoverflow.com/users/15359157/code'}",False,0,1669665883,1669613492,74596369,74595932,CC BY-SA 4.0,"<h2>Edit</h2> <p>I wasn't aware of the optimizations JavaScript's object naturally employs, meaning it'll be much faster if you directly perform a lookup on the JavaScript object. The <a href=""https://perf.link/#eyJpZCI6InVwNXRlYW45dXN0IiwidGl0bGUiOiJkaWN0aW9uYXJ5IHNlYXJjaCIsImJlZm9yZSI6IkFycmF5LnByb3RvdHlwZS5yYW5kb20gPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXNbKE1hdGgucmFuZG9tKCkgKiB0aGlzLmxlbmd0aCkgfCAwXTtcbn1cblxuY29uc3QgYWxwaGFiZXQgPSBcImFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6XCIuc3BsaXQoXCJcIik7XG5jb25zdCBmYWtlRGF0YUxpc3QgPSBBcnJheS5mcm9tKHsgbGVuZ3RoOiA1MDAwMDAgfSwgKF8sIGkpID0%2BIHtcbiAgY29uc3Qgd29yZExlbmd0aCA9ICgoTWF0aC5yYW5kb20oKSAqIDIwKSB8IDApICsgMTtcbiAgbGV0IHdvcmQgPSBcIlwiO1xuICBmb3IobGV0IGkgPSAwOyBpIDwgd29yZExlbmd0aDsgaSsrKVxuICAgIHdvcmQgKz0gYWxwaGFiZXQucmFuZG9tKCk7XG4gIHJldHVybiB3b3JkO1xufSk7XG5jb25zdCBmYWtlRGF0YSA9IGZha2VEYXRhTGlzdC5yZWR1Y2UoKGEsIGIpID0%2BIHtcbiAgYVtiXSA9IDE7XG4gIHJldHVybiBhO1xufSwge30pO1xuY29uc3QgZmFrZURhdGFTZXQgPSBuZXcgU2V0KGZha2VEYXRhTGlzdCk7IiwidGVzdHMiOlt7ImNvZGUiOiJmYWtlRGF0YVNldC5oYXMoZmFrZURhdGFMaXN0LnJhbmRvbSgpKSIsIm5hbWUiOiJzZXQiLCJvcHMiOjB9LHsibmFtZSI6ImFyciIsImNvZGUiOiJmYWtlRGF0YUxpc3QuaW5jbHVkZXMoZmFrZURhdGFMaXN0LnJhbmRvbSgpKSIsInJ1bnMiOls2MTUsNjE1LDQ2MSwxMjMwLDg0NiwzODQsNzY5LDMwNyw0NjEsMTAwMCw4NDYsNTM4LDEwMDAsMTIzMCwxMDc2LDEwMDAsNjE1LDE1MzgsNTM4LDEwMDAsMzg0LDEyMzAsNjE1LDkyMywxMDc2LDYxNSw1MzgsMTAwMCw5MjMsMTAwMCw0NjEsMTUzOCwxMDc2LDEzODQsMTE1Myw2MTUsNjkyLDY5Miw2OTIsNjE1LDEzODQsOTIzLDc2OSw0NjEsODQ2LDM4NCw3NjksODQ2LDY5MiwxMDc2LDEwMDAsNjE1LDEzMDcsOTIzLDc2OSwxMzA3LDY5MiwzODQsMTMwNywxMDc2LDEwMDAsOTIzLDUzOCwxMTUzLDc2OSwxMDc2LDkyMywxMjMwLDkyMywxNDYxLDM4NCw3NjksNjkyLDg0Niw0NjEsMTIzMCw4NDYsMTE1Myw3NjksODQ2LDYxNSwxNTM4LDY5Miw5MjMsNzY5LDY5MiwxMDAwLDg0Niw3NjksNjE1LDY5Miw2MTUsNjE1LDQ2MSwxMDc2LDEwNzYsMTA3Niw4NDYsMTUzOCw3NjldLCJvcHMiOjB9LHsibmFtZSI6ImluIiwiY29kZSI6ImZha2VEYXRhTGlzdC5yYW5kb20oKSBpbiBmYWtlRGF0YSIsInJ1bnMiOlsxMjM1NjE1LDE3MDE1MzgsMTk0MjY5MiwxOTIxMzA3LDE4ODA2MTUsMTAxMzE1Myw0MzQzMDcsMTQzNTM4NCwxNDAwNjE1LDE0NDc3NjksMjAzMTMwNywxNzk3Mzg0LDE1Njc3NjksMTcxMTYxNSwxNTYwNjE1LDEwNDAzMDcsMTE4NTAwMCwxOTQxMDc2LDM1ODkyMywzNTY0NjEsNjg3NzY5LDE1MzMyMzAsMTYwODMwNywxMTE2MjMwLDE3MzIxNTMsMTM5OTA3NiwxNDEyMDc2LDE5MjYzODQsMTg3MTMwNywxOTI1OTIzLDEwMTY2OTIsMzcyNzY5LDExMjA2OTIsMTAxNDQ2MSwxMjM4NTM4LDExMDEzMDcsMTQyMDYxNSwxMTg1NzY5LDEwODU4NDYsMTkwODY5MiwxODQyNDYxLDEyMTc3NjksMTczNTE1Myw2MTU2MTUsNzAzODQ2LDIyNjMwNywxNDY3MjMwLDEzNTQ2OTIsODYyMTUzLDEzNDk3NjksMTcxMjMwNyw3ODE5MjMsMTIyMzkyMywxNzk2MDc2LDEzNjQ3NjksMTE1OTIzMCwxNjMyNjkyLDEwMjg1MzgsMTU2NDA3NiwxNDcwMDAwLDEzNzI3NjksOTMyNjkyLDE3NTMxNTMsMTA4ODA3NiwxNTY4Mzg0LDE1NDk1MzgsMTU1MjUzOCwxMTYwODQ2LDE1MTY2OTIsMTcxNTY5MiwxODM2NjE1LDExMTk4NDYsMTkwMzQ2MSwxMTEwODQ2LDY5NjYxNSwxODI1NzY5LDE4MjI4NDYsMTUzNjg0NiwxMjc3MDAwLDE1MDEwMDAsNzQxMTUzLDE0MzI5MjMsMTM4ODc2OSwxNTU0MDAwLDExMjI1MzgsMTI3OTAwMCwxMzkxODQ2LDE0ODk0NjEsMTEwODIzMCwxMDc1NTM4LDEyMzUzMDcsNzQzODQ2LDE3Mjg2OTIsNzQxNjkyLDE0MTU2MTUsMTAxNjM4NCwxMjc4MDAwLDk5MTY5MiwxNTgzNTM4LDg3OTc2OV0sIm9wcyI6MH0seyJuYW1lIjoiaGFzT3duIiwiY29kZSI6Ik9iamVjdC5oYXNPd24oZmFrZURhdGEsIGZha2VEYXRhTGlzdC5yYW5kb20oKSkiLCJydW5zIjpbMTIwMTE1MywxODkxMzA3LDE2NjU5MjMsMTM4NDMwNywxNTI2MDc2LDY4NDM4NCw1MzMxNTMsMTMwMTc2OSwxNTg5NDYxLDE4ODcxNTMsMjExNjIzMCwxNTQyNTM4LDEwMTc4NDYsMTU1Mzg0NiwxNDQ2NzY5LDE0ODQ2MTUsMTEyNzQ2MSwxODc4Mzg0LDkzNTQ2MSwyMjI2MTUsNzQ2NjkyLDEzNjE2OTIsMjAxODg0NiwxNDY0MDc2LDE0NjMzODQsMTcwNjIzMCwxMjcxMzA3LDE3MzU2OTIsMTU3NDE1MywxNTQ3Mzg0LDg3NTAwMCw1MDA2MTUsMTUxNTQ2MSwxMDc5MDc2LDEzNDc4NDYsMTk5MjUzOCwxMjQ4ODQ2LDc1OTY5Miw3NTAwMDAsMTQzMDg0NiwxNjQ0OTIzLDE0MTUyMzAsOTU1MTUzLDU4NTM4NCw5NjMzMDcsNzA2NjkyLDE0NTkzMDcsMTI1OTMwNywxMzk5OTIzLDgzOTQ2MSwxNTAyNzY5LDE0Mjg2MTUsMTc2MTUzOCwxMDI1MDAwLDE3ODQ1MzgsMTI5NTkyMywxMTg4NTM4LDE1ODcyMzAsMTQ3NDE1MywxNzU5NjE1LDI2NTMwNywyNDI1MzgsMTY0MDA3NiwxMDE5NDYxLDE0MDc2MTUsMTIwNDkyMywxMDY5OTIzLDE2NDE5MjMsMTExMDMwNywxMjQ2ODQ2LDEyODM0NjEsMTc5ODg0NiwxMzc5MjMwLDEzMjM3NjksMTI2MTM4NCwxNTE4MDc2LDE1MDYzMDcsMTcxMzkyMywxNzExODQ2LDE3NDcxNTMsOTMwNjE1LDEzMTE4NDYsMTgyMjUzOCwxNDA5NjE1LDc5NjAwMCwxMjgyMDAwLDE0OTI1MzgsMTUyOTUzOCw3MDY3NjksMTE5MTYxNSwxNjU4MzA3LDE0OTMwNzYsMTQxMTUzOCwxMjQ3NDYxLDEzMjYyMzAsMTI1MzM4NCwxNDU3MTUzLDEwMDg2MTUsODAzNjkyLDc2NjMwN10sIm9wcyI6MH1dLCJ1cGRhdGVkIjoiMjAyMi0xMS0yOFQxODo1NzozOS4yODdaIn0%3D"" rel=""nofollow noreferrer"">benchmark</a> varies between the <code>in</code> operator and Set, but given you're already using an object, <code>in</code> would probably be optimal:</p> <pre class=""lang-js prettyprint-override""><code>if (orderedInput.toLowerCase() in data) {   dispatch(actions) else {   dispatch(other actions) } </code></pre> <p>tl;dr use the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/in"" rel=""nofollow noreferrer""><code>in</code> operator</a> or Set, which already implement advanced optimization algorithms.</p> <hr /> <p>First of all, by calling <code>Object.keys</code> you would have to re-access the entire list of words, which would add to the amount of time. If you could instead transform your JSON file to an array (arrays are valid as the root of a JSON object) it would eliminate that call. You can transform the data with a simple Node script you manually run, so you don't have to call it every time a user types:</p> <pre class=""lang-js prettyprint-override""><code>const fs = require(""fs""); const file = fs.readFileSync(""path/to/words_dictionary.json""); fs.writeFileSync(""path/to/words_dictionary.json"", Object.keys(file)); </code></pre> <p>You just have to run that once, then you can remove the object and you eliminate the entire <code>Object.keys</code> call.</p> <hr /> <p>Secondly, and perhaps more importantly, you can use the <a href=""https://en.wikipedia.org/wiki/Trie"" rel=""nofollow noreferrer""><code>trie</code></a> data structure to significantly optimize your time complexity.</p> <p><a href=""https://i.sstatic.net/Npq4P.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/Npq4P.png"" alt=""trie illustration by Booyabazooka (based on PNG image by Deco). Modifications by Superm401. - own work (based on PNG image by Deco), Public Domain, https://commons.wikimedia.org/w/index.php?curid=1197221"" /></a> <em>trie illustration | By Booyabazooka (from wikipedia)</em></p> <p>Here's my sample implementation:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>// create a custom trie implementation class Trie {   constructor(data) {     this.root = {}; // use an object to represent the tree     this.end = Symbol(""trieEnd""); // use a symbol to represent the end of a word      // convert each letter into a key     for(const i of data) {       i.split("""").reduce((ref, letter, index) => {         ref[letter] = {...(ref[letter] || {})};         if(index === i.length - 1) {           ref[letter][this.end] = 1; // mark this is as the end of a word         }         return ref[letter];       }, this.root);     }   }   search(word) {     let pos = this.root;          for(let i in word) {       pos = pos[word[i]];              if(typeof pos === ""undefined"")         return false;              if(i == word.length - 1) {         // test if this end is an actual end         if(!Object.hasOwn(pos, this.end))           return false;       }     }          return true;   } }  const t = new Trie([""hello"", ""hell"", ""hi"", ""boy""]); console.log(   t.search(""hello""),   t.search(""boy""),   t.search(""ho""),   t.search(""not in here""),   t.search(""h"") );</code></pre>  </div>  </div>  </p> <h3>Benchmarks</h3> <p>Just to prove that trie is <em>much</em> faster (a half-million wordlist is generated, and 100000 random words inside the wordlist are chosen to be found):</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code snippet-currently-hidden"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>// set up Array.prototype.random = function() {   return this[(Math.random() * this.length) | 0]; }  const alphabet = ""abcdefghijklmnopqrstuvwxyz"".split(""""); const fakeDataList = Array.from({ length: 500000 }, (_, i) => {   const wordLength = ((Math.random() * 20) | 0) + 1;   let word = """";   for(let i = 0; i < wordLength; i++)     word += alphabet.random();   return word; });  class Trie {   constructor(data) {     this.root = {};     this.end = Symbol(""trieEnd"");     for(const i of data) {       i.split("""").reduce((ref, letter, index) => {         ref[letter] = {...(ref[letter] || {})};         if(index === i.length - 1) {           ref[letter][this.end] = 1;         }         return ref[letter];       }, this.root);     }   }   search(word) {     let pos = this.root;          for(let i in word) {       pos = pos[word[i]];              if(typeof pos === ""undefined"")         return false;              if(i == word.length - 1) {         if(!Object.hasOwn(pos, this.end))           return false;       }     }          return true;   } }  function trieSearch(word, trie) {   return trie.search(word); } function naiveSearch(word, list) {   return list.includes(word); }  const findList = []; for(let i = 0; i < 100000; i++)   findList.push(fakeDataList.random()); function runManyTimes(fn, data) {   for(const w of findList) {     fn(w, data);   } }  console.time(""naive search""); runManyTimes(naiveSearch, fakeDataList); console.timeEnd(""naive search"");  console.time(""trie initialization""); const t = new Trie(fakeDataList); console.timeEnd(""trie initialization"");  console.time(""trie search""); runManyTimes(trieSearch, t); console.timeEnd(""trie search"");</code></pre>  </div>  </div>  </p> <p>Sure, the initialization takes a while (keep in mind the trie only needs to be initialized once on page load, not on each search), but after that each search is about 16x faster. Quite an improvement to me.</p> <p><em>For me, the naive search took ~8s, trie initialization took ~4s, and trie search took ~0.5s.</em></p>",1669665883.0,,false
"{'account_id': 17784410, 'reputation': 10856, 'user_id': 12914833, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/mNLi2.jpg?s=256', 'display_name': 'Chris Hamilton', 'link': 'https://stackoverflow.com/users/12914833/chris-hamilton'}",False,4,1669616323,1669610007,74596003,74595932,CC BY-SA 4.0,"<p>Just index the object, <code>includes</code> is a brute force search.</p> <pre class=""lang-js prettyprint-override""><code>if (data[orderedInput.toLowerCase()]) {   dispatch(actions) else {   dispatch(other actions) } </code></pre> <hr /> <p>I would personally use a <code>Set</code> for this, probably no difference in lookup performance but I think slightly better on memory, no need for the 1's.</p> <pre class=""lang-js prettyprint-override""><code>export const data = new Set([   ""afterwash"",   ""afterwhile"",   ""afterwisdom"",   ""afterwise"",   ... ]); </code></pre> <pre class=""lang-js prettyprint-override""><code>if (data.has(orderedInput.toLowerCase())) {   dispatch(actions) else {   dispatch(other actions) } </code></pre>",1669616323.0,,false
"{'account_id': 24179239, 'reputation': 46, 'user_id': 18140151, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GjYJj7GcuA_tmECoIStKkaKsxLhaRtrGRQifEn6=k-s256', 'display_name': 'Daryll Castelino', 'link': 'https://stackoverflow.com/users/18140151/daryll-castelino'}",True,2,1669656604,1669626544,74598275,74595824,CC BY-SA 4.0,"<p>The following code can be used  to solve your problem:<br/></p> <p>You can use the <code>find</code> method instead of <code>map</code> to find the object needed.<br/> Reference: <a href=""https://www.w3schools.com/jsref/jsref_find.asp"" rel=""nofollow noreferrer"">https://www.w3schools.com/jsref/jsref_find.asp</a> <br/></p> <p>After that, you can check if the object has been found using the ternary operator <code>?</code>. If found, it will provide the <strong>courseCode</strong> otherwise, it will provide <strong>Course not found</strong> string. (You can change it to anything that you see fit to display)<br/></p> <p>Reference: <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator</a></p> <pre><code>const temp = {     ""title"": ""Student Details"",     ""education"": ""under graduate"",     ""courses"": [         {             ""courseCode"": ""101"",             ""course"": ""Physics""         },         {             ""courseCode"": ""102"",             ""course"": ""Chemistry""         },         {             ""course"": ""Math"",             ""courseCode"": ""103""         }     ],     ""studentId"": ""xyz202267"" };  let ans = temp.courses.find(obj => obj.course === 'Math' ); ans = ans && ans.courseCode ? ans.courseCode : ""Course not found""; console.log(ans); </code></pre> <p>Hope this helps.</p>",1669656604.0,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",False,2,1669607848,1669607848,74595830,74595824,CC BY-SA 4.0,<p>Use <code>find</code> instead of <code>map</code></p> <pre><code>let ans = temp.courses.find(obj => obj.course === 'Math' )  console.log(ans?.courseCode) </code></pre>,,,false
"{'account_id': 27031397, 'reputation': 1186, 'user_id': 20587701, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/aHg04.jpg?s=256', 'display_name': 'NAZIR HUSSAIN', 'link': 'https://stackoverflow.com/users/20587701/nazir-hussain'}",False,0,1669617744,1669617744,74596888,74595789,CC BY-SA 4.0,<p>you should only <code>return item</code> from the hook</p> <p>and try to <code>console.log(item)</code> in your component.</p>,,,false
"{'account_id': 21850726, 'reputation': 1092, 'user_id': 16142839, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/594b67aecf8f93c893bde2f8e94c5dd5?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Tehila', 'link': 'https://stackoverflow.com/users/16142839/tehila'}",False,1,1669615112,1669613817,74596392,74595789,CC BY-SA 4.0,"<p><strong>In the <code>Section</code> component, It should be: <code>item.data?.addedBy.realName</code>.</strong></p> <p>The <code>?</code> is for the case the item is  an empty array, which will happen when the <code>isTicketCreated</code> is <strong>false</strong>.</p> <p>And yes, you did send <code>item</code> as an array from the hook, but when you use the hook  in the <code>Section</code> you extract it from that array in this line:  <code>const [item] = TicketsDetailsHook(id);</code></p> <p>So it will still be an object, and you just need to access the <code>data</code> field in it.</p> <p><strong>Note:</strong> If you where importing the item from the hook like this:</p> <pre><code>const item = TicketsDetailsHook(id); </code></pre> <p>Then, it will be an array because you didn't distructure it. So in this case you would access the data like this: <code>item[0].data?.addedBy.realName</code></p>",1669615112.0,,false
"{'account_id': 14815966, 'reputation': 79, 'user_id': 12228149, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/wtRvY.gif?s=256', 'display_name': 'Iangyl', 'link': 'https://stackoverflow.com/users/12228149/iangyl'}",False,0,1669676678,1669676678,74607418,74595656,CC BY-SA 4.0,"<p>You don't need <code>flex</code> for centering text or image, just use <code>text-align</code> property. Tag <code><img></code> and text have display <code>inline</code> by default. The property <code>text-align</code> using for horizontal aligning <code>inline</code> elements.</p> <p>Info: <a href=""https://developer.mozilla.org/en-US/docs/Web/CSS/text-align"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Web/CSS/text-align</a></p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.centered-div {   text-align: center;  }  img {   width: 300px; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><section>   <div class='centered-div'>Hello World!</div>   <div class='centered-div'>     <img src='https://cdn.logo.com/hotlink-ok/logo-social.png' alt='logo' />   </div>   <div class='centered-div'>     <img src='https://banner2.cleanpng.com/20180203/ihw/kisspng-line-black-and-white-angle-point-bold-line-cliparts-5a75a3b3c7c9b8.7740503415176590598183.jpg' alt='bottom' />   </div> </section></code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 25944203, 'reputation': 114, 'user_id': 19663148, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AItbvmlteWmTglLNOSbhFa5egpI8t-VrqEuuomlh5o78=k-s256', 'display_name': 'Prosenjit Chongder', 'link': 'https://stackoverflow.com/users/19663148/prosenjit-chongder'}",False,0,1669612790,1669612790,74596299,74595656,CC BY-SA 4.0,<p>I don't know your actual saturation so i give an simple example</p> <pre><code><div class='parent'> <div>Child 1</div> <div>Child 2</div> <div>Child 3</div> </div>  :css .parent{     display: flex;     flex-direction: column;     justify-content: center;     align-items: center;     }  </code></pre>,,,false
"{'account_id': 12320475, 'reputation': 153, 'user_id': 9760560, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-ippQIB9SEf8/AAAAAAAAAAI/AAAAAAAAAFU/dMvtlrjvGVA/photo.jpg?sz=256', 'display_name': 'Raqun Bob', 'link': 'https://stackoverflow.com/users/9760560/raqun-bob'}",False,1,1669607403,1669607403,74595795,74595653,CC BY-SA 4.0,"<p>if you use the below strategy it works as you want it to work. React cannot see state changes out of its built-in functions so it didn't track the change on your array which was out of its state scope</p> <pre><code>import * as React from ""react""; import { render } from ""react-dom""; import { useState, useEffect } from ""react"";  let keys: string[] = [];  function App(props: any) {   const [keys, oldKeysState] = useState(props.keys);   const [keysState, setKeysState] = useState(keys);    useEffect(() => {     setKeysState(keys);   }, [keys]);    // componentWillMount   useEffect(() => {     setTimeout(() => {       oldKeysState([...keys, ""a""]);     }, 1000);   }, []);    return (     <div>       {keysState.map((key: string) => (         <li>{key}</li>       ))}       <button onClick={() => setKeysState([...keysState, ""+""])}>+</button>     </div>   ); }  const rootElement = document.getElementById(""root""); render(<App keys={keys} />, rootElement); </code></pre>",,,false
"{'account_id': 5523062, 'reputation': 7530, 'user_id': 4385889, 'user_type': 'registered', 'accept_rate': 92, 'profile_image': 'https://i.sstatic.net/V0hjo.png?s=256', 'display_name': 'Andrew', 'link': 'https://stackoverflow.com/users/4385889/andrew'}",True,1,1669606407,1669606407,74595709,74595653,CC BY-SA 4.0,"<p>All data that is dynamic needs to be managed by React. Put your event inside the component and update local state.</p> <pre><code>function App({ initialKeys }: { initialKeys: string[] }) {   const [keys, setKeys] = React.useState(initialKeys);   console.log(keys);    React.useEffect(() => {     const append = (e) => {       setKeys([...keys, e.key]);     };     document.addEventListener(""keypress"", append);     return () => {       document.removeEventListener(""keypress"", append);     };   }, [keys]);    return (     <div>       {keys.map((key: string, idx) => (         <li key={idx}>{key}</li>       ))}     </div>   ); } </code></pre> <p><a href=""https://codesandbox.io/s/changing-props-on-react-root-component-forked-l869dd?file=/src/index.tsx"" rel=""nofollow noreferrer"">https://codesandbox.io/s/changing-props-on-react-root-component-forked-l869dd?file=/src/index.tsx</a></p>",,,false
"{'account_id': 25192131, 'reputation': 55, 'user_id': 19032198, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJz4LGj3MIr4ELohLUs3iN_qFeeLMoY-qmwmIgx-=k-s256', 'display_name': 'okmmy123456', 'link': 'https://stackoverflow.com/users/19032198/okmmy123456'}",True,0,1669615206,1669615206,74596550,74595648,CC BY-SA 4.0,<p>I can do it after I put</p> <pre><code>disabled={Authenticate.level == 'admin' ? false:true}  </code></pre> <p>in <code><ListItem></code></p> <p>thank everyone</p>,,,false
"{'account_id': 25944203, 'reputation': 114, 'user_id': 19663148, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AItbvmlteWmTglLNOSbhFa5egpI8t-VrqEuuomlh5o78=k-s256', 'display_name': 'Prosenjit Chongder', 'link': 'https://stackoverflow.com/users/19663148/prosenjit-chongder'}",False,0,1669612192,1669612192,74596243,74595648,CC BY-SA 4.0,"<p>Try this</p> <pre><code><Link href=""/stock"" passHref className={Authenticate.level != 'admin' ? 'className1' : 'className2'}> </Link>  </code></pre>",,,false
"{'account_id': 14600402, 'reputation': 1, 'user_id': 10544806, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/0fbb072e530d37e4c262d6a3d5e74074?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'IP man', 'link': 'https://stackoverflow.com/users/10544806/ip-man'}",False,0,1684464785,1684464741,76285710,74595559,CC BY-SA 4.0,"<p>Turns out the root cause of the problem is not from the swiper, but from the change of background image behind the swiper.</p> <p>Supposingly, in my project, the background image behind the swiper change on swiper index change. However, changing background image somehow causes lags in Chrome.</p> <p>The fix is to use the appropriate method to show the expected background image. The method I used is applying CSS <code>opacity: 0;</code> and <code>opacity: 100;</code> on corresponding images. As opacity is proved to have better performance than methods like <code>display: none;</code> and <code>visibility: none;</code> in terms of speed. Also, you can use <code>will-change: opacity;</code> to further boost the performance. <a href=""https://stackoverflow.com/questions/14731049/visibilityhidden-vs-displaynone-vs-opacity0"">This post</a> explains the difference of the three methods.</p>",1684464785.0,,false
"{'account_id': 17404535, 'reputation': 493, 'user_id': 14313852, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/mf5IX.jpg?s=256', 'display_name': 'Shub', 'link': 'https://stackoverflow.com/users/14313852/shub'}",False,0,1705142189,1705142189,77811094,74595489,CC BY-SA 4.0,"<p>Here's another that allows put and delete in json file: <a href=""https://render.com/"" rel=""nofollow noreferrer"">Render</a></p>",,,false
"{'account_id': 9429050, 'reputation': 86, 'user_id': 8230256, 'user_type': 'registered', 'accept_rate': 0, 'profile_image': 'https://lh6.googleusercontent.com/-Hd8wmxqbkHw/AAAAAAAAAAI/AAAAAAAAAF8/4zJrTOh0j1M/photo.jpg?sz=256', 'display_name': 'Srinivas Reddy', 'link': 'https://stackoverflow.com/users/8230256/srinivas-reddy'}",False,1,1693086240,1693086240,76984948,74595489,CC BY-SA 4.0,"<p>I have found a solution for hosting the backend API. <a href=""https://www.cyclic.sh/"" rel=""nofollow noreferrer"">Cyclic</a> is a platform that can be used to host backend APIs, especially those built with Node.js and Express.js.</p>",,,false
"{'account_id': 11937491, 'reputation': 29, 'user_id': 8735417, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/N15dL.jpg?s=256', 'display_name': 'Andr&#233;s Aguilar', 'link': 'https://stackoverflow.com/users/8735417/andr%c3%a9s-aguilar'}",False,0,1669604840,1669604840,74595588,74595489,CC BY-SA 4.0,"<p>Vercel is a platform for frontend hosting, not for full stack web applications. If you want to deploy a full stack application using Vercel you could use Vercel for your front-end and use some kind of cloud service to persist and fetch your data like MongoDB Atlas.</p> <p>To access the cloud service where you are storing your data you could use <a href=""https://vercel.com/docs/concepts/functions/serverless-functions"" rel=""nofollow noreferrer"">serverless functions</a> that are provided by Vercel.</p>",,,false
"{'account_id': 24075279, 'reputation': 11, 'user_id': 18050712, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/027ebaac6221598415ef6238e68f6317?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Hudson Basso', 'link': 'https://stackoverflow.com/users/18050712/hudson-basso'}",False,-1,1669607968,1669607968,74595841,74595480,CC BY-SA 4.0,"<p>This ended up being an issue with my DNS setup. I found a good walk through here <a href=""https://stackoverflow.com/questions/9082499/custom-domain-for-github-project-pages"">Custom domain for GitHub project pages</a> .</p>",,,false
"{'account_id': 23805856, 'reputation': 31, 'user_id': 17815399, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/658f8b134e3d20bf8686d29c5f3702b6?s=256&d=identicon&r=PG', 'display_name': 'paria', 'link': 'https://stackoverflow.com/users/17815399/paria'}",False,0,1669621692,1669621692,74597481,74595390,CC BY-SA 4.0,<p>you can identify state in parent and set this state on child component to pass data from child to parent</p>,,,false
"{'account_id': 26261803, 'reputation': 1511, 'user_id': 19932999, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AFdZucocyRPCF5TFQzrQ43lHD1xLKKcb328CUBMRHRjw=k-s256', 'display_name': 'Muhammad Nouman Rafique', 'link': 'https://stackoverflow.com/users/19932999/muhammad-nouman-rafique'}",True,1,1669605656,1669605656,74595649,74595390,CC BY-SA 4.0,"<p>Each component receives props as an object. In SidebarNav component, props will look like this <code>{ setCurrentDemo } :any</code> not <code>setCurrentDemo:any</code>.</p> <p>Here's the interface for <code>SidebarNav</code> Component</p> <pre><code>import { SetStateAction } from ""react"";  interface SidebarNavProps {   setCurrentDemo: SetStateAction<string> } </code></pre> <p>And your <code>SidebarNav</code> component will look like this:</p> <pre><code>export function SidebarNav(props: SidebarNavProps) {   const { setCurrentDemo } = props;    //GOAL: PASS ID OF SELECTED NAV ITEM TO PARENT COMPONENT AND SET VALUE OF 'CURRENTDEMO' TO THAT ID   const handleCurrentClick = (id: any) => {     if (id === 'intro') {       setCurrentDemo('ComponentA');     } else if (id === 'ComponentA') {       setCurrentDemo('ComponentB');     } else if (id === 'ComponentB') {       setCurrentDemo('intro');     }   };    return (     <div className=""sidebarNav"">       <div className=""sidebarNav__container"">         {navData?.map((item, index) => (           <div key={index}>             <button               onClick={() => {                 handleCurrentClick(item.id);               }}               id={item.id}             >               {item.title}             </button>           </div>         ))}       </div>     </div>   ); } </code></pre> <p>This will fix that error and you can store the id in state using <code>setCurrentDemo</code>.</p>",,,false
"{'account_id': 16522721, 'reputation': 115, 'user_id': 11938414, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-DrcrAqwVnYg/AAAAAAAAAAI/AAAAAAAAE0g/XtU9EjA_tj0/photo.jpg?sz=256', 'display_name': 'Parth B Thakkar', 'link': 'https://stackoverflow.com/users/11938414/parth-b-thakkar'}",False,1,1669633008,1669602827,74595423,74595275,CC BY-SA 4.0,"<p>you can use below. I prefer to write code like this .</p> <pre><code>let body = { id : id, status : status }  if(locale!==""all""){ body = { ...body, locale:locale } return API.post(body); </code></pre>",1669633008.0,,false
"{'account_id': 946495, 'reputation': 28740, 'user_id': 973651, 'user_type': 'registered', 'accept_rate': 90, 'profile_image': 'https://www.gravatar.com/avatar/dd66c6ce85ae84cb0e0c39654f5028ba?s=256&d=identicon&r=PG', 'display_name': 'Mathew Berg', 'link': 'https://stackoverflow.com/users/973651/mathew-berg'}",False,1,1669602855,1669602855,74595425,74595275,CC BY-SA 4.0,"<p>You could use something like this.</p> <pre><code>let body = { id, status };  if(!locale?.includes(""all"")){   body = { ...body, locale }; }  return API.post(body);  </code></pre>",,,false
"{'account_id': 26852198, 'reputation': 7407, 'user_id': 20436957, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/88ZOB.png?s=256', 'display_name': 'John Li', 'link': 'https://stackoverflow.com/users/20436957/john-li'}",False,1,1669603394,1669602685,74595404,74595261,CC BY-SA 4.0,"<p>There are many possible approaches, here is a basic example that uses an object type <code>active</code> state to store the value for each list item.</p> <pre><code>const [active, setActive] = useState({ About: true }) </code></pre> <p>The list data is stored in an array so it can be mapped in the JSX part of the component.</p> <pre><code>const itemList = [""About"", ""Skills"", ""Projects"", ""Words""] </code></pre> <p>While <code>index</code> is not an ideal <code>key</code> it is used here just for example purpose.</p> <pre><code>{   itemList.map((item, index) => (     <li key={index}>       <button         onClick={() => toggleColor(item)}         className={active[item] ? ""active"" : """"}       >         {item}       </button>     </li>   )); } </code></pre> <p><code>toggleColor</code> sets value for <code>active</code>, and it specify that <code>active</code> should always be in the format of <code>{About: true}</code>, <code>{Skills: true}</code> and such. The <code>!!!</code> covers the case when certain keys are not existing in the object.</p> <pre><code>const toggleColor = function (item) {   setActive((prev) => {     return { [item]: !!!prev[item] };   }); }; </code></pre> <p>Below is the full example, it runs in the snippet for convenience.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function Header() {   const [active, setActive] = React.useState({ About: true });    const itemList = [""About"", ""Skills"", ""Projects"", ""Words""];    const toggleColor = function (item) {     // on load, 'About' button has active class     // when clicking another menu item add active class, remove active from the rest of buttons     setActive((prev) => {       return { [item]: !!!prev[item] };     });   };    return (     <header className=""header-img-container"">       <nav>         <ul>           {itemList.map((item, index) => (             <li key={index}>               <button                 onClick={() => toggleColor(item)}                 className={active[item] ? ""active"" : """"}               >                 {item}               </button>             </li>           ))}         </ul>       </nav>     </header>   ); }  const App = () => {   return (     <div>       <Header />     </div>   ); };  ReactDOM.render(<App />, document.querySelector(""#root""));</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.App {   font-family: sans-serif;   text-align: center; }  button {   padding: 6px; }  .active {   border: 1px solid pink;   color: hotpink; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div id=""root""></div> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.1.0/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.1.0/umd/react-dom.production.min.js""></script></code></pre>  </div>  </div>  </p>",1669603394.0,,false
"{'account_id': 26573689, 'reputation': 113, 'user_id': 20199506, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e02b024fce7372daa50ee7c1588ef41c?s=256&d=identicon&r=PG', 'display_name': 'Heliodor', 'link': 'https://stackoverflow.com/users/20199506/heliodor'}",False,1,1669602292,1669602292,74595373,74595261,CC BY-SA 4.0,"<p>Create a state like this</p> <pre><code>const [active, setActive] = useState({About: true, Skills: false, Projects: false, Words: false}) </code></pre> <p>Ð change local parameter to add a class to element. For example</p> <pre><code><li>   <button onClick={() => {     setActive({...active, About: false, Skills: true, Projects: false,      Words: false })     }}>Skills</button> </li> </code></pre>",,,false
"{'account_id': 26261803, 'reputation': 1511, 'user_id': 19932999, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AFdZucocyRPCF5TFQzrQ43lHD1xLKKcb328CUBMRHRjw=k-s256', 'display_name': 'Muhammad Nouman Rafique', 'link': 'https://stackoverflow.com/users/19932999/muhammad-nouman-rafique'}",True,1,1669602283,1669602283,74595369,74595261,CC BY-SA 4.0,"<p>There are so many ways to solve that problem. You can try this if it's meet your requirements.</p> <pre><code>import ""./styles.css"";  import { useState } from ""react"";  const list = [""About"", ""Skills"", ""Projects"", ""Words""];  export default function Header() {   const [activeLink, setActiveLink] = useState(""About"");    return (     <header className=""header-img-container"">       <nav>         <ul>           {list.map((item) => (             <li key={item}>               <button                 onClick={() => setActiveLink(item)}                 className={activeLink === item ? ""active"" : """"}               >                 {item}               </button>             </li>           ))}         </ul>       </nav>     </header>   ); }  </code></pre>",,,false
"{'account_id': 16660711, 'reputation': 709, 'user_id': 12040727, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AAuE7mAOjTEj27xvPP2r6QoaiDiZQe99ipcDVeXgQnmj=k-s256', 'display_name': 'Vu Phung', 'link': 'https://stackoverflow.com/users/12040727/vu-phung'}",False,1,1669605447,1669602441,74595381,74594964,CC BY-SA 4.0,"<p>I can do it with <a href=""https://reactnative.dev/docs/sectionlist"" rel=""nofollow noreferrer"">SectionList</a> and this is my example: <a href=""https://snack.expo.dev/@pqv2210/exsectionlist"" rel=""nofollow noreferrer"">https://snack.expo.dev/@pqv2210/exsectionlist</a></p> <p>Just change name of field in your restaurantData: <code>productData</code> to <code>data</code></p> <pre><code>export const restaurantData = [   {     restaurantName: 'Milan Mondayz',     businessAddress: 'The Steak House of Hammond',     images: require('../images/milanpic.jpg'),     data: [       {         meal: 'BBQ Chicken Plate with Sides',         foodImages: require('../images/Food1.jpg'),         price: 12.0,         checked: false,         id: '0',       },     ],     id: '0',   },    {     restaurantName: ""Nick's Cajun Flavors"",     businessAddress: '123 Hammond Road',     images: require('../images/cajun.jpeg'),     data: [       {         meal: 'Crawfish Etouffee',         price: 13.99,         foodImages: require('../images/crawfishEto.jpeg'),         checked: false,       },     ],     id: 1,   }, ]; </code></pre> <p>Replace FlatList to SectionList and modify <code>RestaurantCard</code> is item of list in renderItem.</p> <pre><code>const renderRestaurentInfo = ({ section }) => (   // render restaurantName, images and businessAddress )  const renderFoodItem = ({ item }) => (   //  render meal, foodImages, price )  <SectionList   sections={restaurantData}   renderSectionHeader={renderRestaurentInfo}   keyExtractor={(_, index) => index + ''}   renderItem={renderFoodItem} /> </code></pre>",1669605447.0,,false
"{'account_id': 106364, 'reputation': 164098, 'user_id': 283366, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/9ad213d8adabe4b64c2d53c5e0e3cab4?s=256&d=identicon&r=PG', 'display_name': 'Phil', 'link': 'https://stackoverflow.com/users/283366/phil'}",True,0,1669596983,1669596179,74594931,74594879,CC BY-SA 4.0,"<p>Seems you want something like this...</p> <p>First, create a date formatter for your locale (or a specific one if you want)</p> <pre class=""lang-js prettyprint-override""><code>const locale = undefined; // leave undefined to use the current locale const formatter = new Intl.DateTimeFormat(locale, {   day: ""numeric"",   month: ""short"", }); </code></pre> <p>Then use it to format your dates</p> <pre class=""lang-jsx prettyprint-override""><code><span>Ida {formatter.format(new Date(passagens.departure_date))}</span> </code></pre> <hr /> <p>You could automatically parse the date strings when setting your data to avoid calling <code>new Date()</code> every render</p> <pre class=""lang-js prettyprint-override""><code>setPassagens(response.data.slice(0, 10).map(({ departure_date, ...rest }) => ({   ...rest,   departure_date: new Date(departure_date), })); </code></pre>",1669596983.0,,false
"{'account_id': 26261803, 'reputation': 1511, 'user_id': 19932999, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AFdZucocyRPCF5TFQzrQ43lHD1xLKKcb328CUBMRHRjw=k-s256', 'display_name': 'Muhammad Nouman Rafique', 'link': 'https://stackoverflow.com/users/19932999/muhammad-nouman-rafique'}",True,1,1669598053,1669598053,74595065,74594867,CC BY-SA 4.0,"<p>In <code>KnowledgeBase.js</code> file, remove <code>/knowledge-base</code> from each route. React router automatically adds the parent route path with each child. You do not have to write the parent path with each child if it's already placed inside with another route i.e. <code>/knowledge-base/*</code></p> <pre><code>const KnowledgeBase = (props) => {   return (       <div className={style.knowledgeBase}>           <Menu forMenu={props.forKnowledgeBase}/>           <BaseAll forBaseAll={props.forKnowledgeBase}>               <Routes>                   <Route path=""/purchase-and-refund"" element={<Blocks3/>}/>                   <Route path=""/popular-questions"" element={<Blocks2/>}/>                   <Route path=""/analytics"" element={<Blocks1/>}/>               </Routes>           </BaseAll>       </div>   ) }  </code></pre>",,,false
"{'account_id': 2371392, 'reputation': 43243, 'user_id': 2075944, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/CGDE9.png?s=256', 'display_name': 'phry', 'link': 'https://stackoverflow.com/users/2075944/phry'}",True,1,1669619750,1669619750,74597177,74594866,CC BY-SA 4.0,"<p>A few things:</p> <ul> <li>to have the hooks, you have to <code>import</code> from <code>'@reduxjs/toolkit/query/react';</code></li> <li>the <code>queryFn</code> has to return either <code>{ data }</code> or <code>{ error }</code>, not <code>{ student }</code></li> <li>your code does not seem to have a <code>error</code> variable, but tries to return it.</li> </ul> <p>so:</p> <pre class=""lang-js prettyprint-override""><code>import { createApi, fakeBaseQuery } from '@reduxjs/toolkit/query/react';  export const supabaseApi = createApi({   baseQuery: fakeBaseQuery(),     endpoints: (builder) =({         getStudents: builder.query({             queryFn: async () ={                 const students = await supabase                 .from('students')                 .select()                  return { data: students }             }         })     }) })  export const { useGetStudentsQuery } = supabaseApi; </code></pre>",,,false
"{'account_id': 20815818, 'reputation': 44137, 'user_id': 15288641, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/JpR3RiD2.jpg?s=256', 'display_name': 'Youssouf Oumar', 'link': 'https://stackoverflow.com/users/15288641/youssouf-oumar'}",True,2,1670224503,1669747121,74618795,74594830,CC BY-SA 4.0,"<p>React is designed in a way that data flows top to bottom. A component can get data as <code>props</code> from its parent, not the other way around. Still, you could update a state in the parent component by passing a state updater to the child.</p> <p>You could pass a <code>setBackgroundImageURL</code> from <code>App</code> to <code>Maindata</code> to set the image you get from the API and have it available in <code>App</code>, by doing something like so:</p> <pre class=""lang-js prettyprint-override""><code>function App() {   const [location, setLocation] = useState();   const [backgroundImageURL, setBackgroundImageURL] = useState(""/pics/01n.jpg"");    return (     <div       className=""mainpage""       style={{         backgroundImage: `url(${backgroundImageURL})`,         backgroundSize: ""cover"",       }}     >       <div className=""searchComp"">         <Search {...{ location, setLocation }} />       </div>        <Maindata city={location} setBackgroundImageURL={setBackgroundImageURL} />     </div>   ); }  export default App; </code></pre> <pre class=""lang-js prettyprint-override""><code>export default function Maindata({ city = ""mansehra"", setBackgroundImageURL }) {   //....   const icons = `/icons/${data.list[0].weather[0].icon}.svg`;   setBackgroundImageURL(icons);   //.... </code></pre> <p>Besides that, if you are having a problem with displaying the image, maybe you are not using the correct path. The answer to this <a href=""https://stackoverflow.com/questions/72606910/images-not-loading-when-relative-path-is-used-in-react"">question</a> would help in which case.</p>",1670224503.0,,false
"{'account_id': 5500237, 'reputation': 2016, 'user_id': 4375751, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-bkwU2RYFeiQ/AAAAAAAAAAI/AAAAAAAAByU/B2cmsnYRs4Y/photo.jpg?sz=256', 'display_name': 'George', 'link': 'https://stackoverflow.com/users/4375751/george'}",False,0,1669599329,1669599329,74595148,74594830,CC BY-SA 4.0,"<p>best solution to hit the ground running is to use React's built-in <code>useContext</code> hook.</p> <p>Then, as the app grows, you could pivot to something like <a href=""https://www.npmjs.com/package/jotai"" rel=""nofollow noreferrer"">Jotai</a></p>",,,false
"{'account_id': 27066462, 'reputation': 1, 'user_id': 20617744, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b293adaffa0ad44904587f66f04b9b7e?s=256&d=identicon&r=PG', 'display_name': 'm_wb', 'link': 'https://stackoverflow.com/users/20617744/m-wb'}",False,0,1669595372,1669595372,74594860,74594830,CC BY-SA 4.0,"<p>You could use a global state management tool. React comes with <a href=""https://www.w3schools.com/react/react_usecontext.asp"" rel=""nofollow noreferrer"">useContext</a> but if youâre looking for a more robust solution, you could look into redux in combination with <a href=""https://react-redux.js.org/introduction/getting-started"" rel=""nofollow noreferrer"">react-redux</a>. Then anywhere you need the data in the application you just use <code>useDispatch</code></p>",,,false
"{'account_id': 8496704, 'reputation': 844, 'user_id': 6371094, 'user_type': 'registered', 'accept_rate': 67, 'profile_image': 'https://i.sstatic.net/ktTVE.jpg?s=256', 'display_name': 'Erhan YaÅar', 'link': 'https://stackoverflow.com/users/6371094/erhan-ya%c5%9far'}",False,1,1669594630,1669594630,74594817,74594643,CC BY-SA 4.0,"<p>As per the race condition happening on APIs, itâs useful to implement debouncing methods as itâs explaned below.</p> <blockquote> <p>The debounce() function forces a function to wait a certain amount of time before running again. The function is built to limit the number of times a function is called.</p> </blockquote> <p>You can either use <a href=""https://www.educative.io/answers/how-to-use-the-debounce-function-in-javascript"" rel=""nofollow noreferrer"">debouncing</a> on either <a href=""https://www.npmjs.com/package/debounce-promise"" rel=""nofollow noreferrer"">server-side</a> or <a href=""https://lodash.com/docs/4.17.15#debounce"" rel=""nofollow noreferrer"">client side</a> as they have pretty similar implementation.</p>",,,false
"{'account_id': 426987, 'reputation': 942, 'user_id': 808516, 'user_type': 'registered', 'accept_rate': 60, 'profile_image': 'https://i.sstatic.net/nIEIh.jpg?s=256', 'display_name': 'strada', 'link': 'https://stackoverflow.com/users/808516/strada'}",False,2,1669594000,1669594000,74594779,74594643,CC BY-SA 4.0,"<p>You can read through here also: <a href=""https://beta.reactjs.org/learn/synchronizing-with-effects#how-to-handle-the-effect-firing-twice-in-development"" rel=""nofollow noreferrer"">https://beta.reactjs.org/learn/synchronizing-with-effects#how-to-handle-the-effect-firing-twice-in-development</a></p> <p>The same issue can occur if the user leaves/visits a route quickly for example (which is what development mode is simulating here). It might not be the the best approach to call a backend maintenance script when a UI component is being rendered.</p>",,,false
"{'account_id': 27067135, 'reputation': 1, 'user_id': 20618318, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu3nRG6xsU2YBg9_9iBn24HLQxrM6ffe4CfQX24ZMA=k-s256', 'display_name': 'Mucahid Sarikaya', 'link': 'https://stackoverflow.com/users/20618318/mucahid-sarikaya'}",False,0,1670182808,1670182808,74680276,74594626,CC BY-SA 4.0,"<p>I am using Auth0 identity provide with Microsoft connection. It works fine with for example  and . The response of  returns all the emails correctly, but I React doesnt support data-for HTML attribute. The error says: ""unexpected token email"". See the attachments.</p> <p><a href=""https://i.sstatic.net/E8EyT.png"" rel=""nofollow noreferrer"">as you can see the  tag returns and displays the value</a></p> <p><a href=""https://i.sstatic.net/y27NY.png"" rel=""nofollow noreferrer"">This is the response of . The response is correct, but I cant loop and display for example ""bodyPreview.""</a></p> <p><a href=""https://i.sstatic.net/52iAg.png"" rel=""nofollow noreferrer"">This shows my implementation</a></p> <p>Is there a different approach to display the response? So how can I display the value without data-for attribute?</p> <p>Thanks for your response and support!</p>",,,false
"{'account_id': 24140407, 'reputation': 730, 'user_id': 18106676, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/a9b27a147e4f6c3d46f507f238a97136?s=256&d=identicon&r=PG', 'display_name': 'vicky kumar', 'link': 'https://stackoverflow.com/users/18106676/vicky-kumar'}",False,0,1669979667,1669979667,74654884,74594626,CC BY-SA 4.0,"<p>As per the <a href=""https://learn.microsoft.com/en-us/graph/toolkit/components/get"" rel=""nofollow noreferrer"">Doc</a>,React Toolkit do support the data -for HTML-attribute. In the code you provided above, the error says unable to find the variable mail ,I am wondering you are using authenticating through AuthO,you are using && operation ,might be there is any issue with authentication please confirm once or you can also try to <a href=""https://learn.microsoft.com/en-us/graph/toolkit/components/login"" rel=""nofollow noreferrer"">login with React Toolkit</a> , you can also check in the <a href=""https://mgt.dev/?path=/story/components-mgt-get--get-email&source=docs"" rel=""nofollow noreferrer"">React Toolkit playground</a>, this is working as expected.</p> <p><a href=""https://i.sstatic.net/De1ML.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/De1ML.png"" alt=""enter image description here"" /></a></p> <p>Hope this helps,</p> <p>If you still having the issue , kindly share the screenshot of output as well ,to understand where it fails</p> <p>Thanks</p>",,,false
"{'account_id': 2244812, 'reputation': 1337, 'user_id': 1978448, 'user_type': 'registered', 'accept_rate': 83, 'profile_image': 'https://i.sstatic.net/hqmVU.png?s=256', 'display_name': 'NULL pointer', 'link': 'https://stackoverflow.com/users/1978448/null-pointer'}",True,2,1675126900,1675126900,75291751,74594569,CC BY-SA 4.0,"<p>The callback function's two parameters are (err, result). From <a href=""https://www.npmjs.com/package/amazon-cognito-identity-js"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/amazon-cognito-identity-js</a> use case 2:</p> <pre><code>cognitoUser.confirmRegistration('123456', true, function(err, result) {     if (err) {         alert(err.message || JSON.stringify(err));         return;     }     console.log('call result: ' + result); }); </code></pre> <p>I confirmed by console logging in a working app, and result is type string, and has value 'SUCCESS' when the confirmation worked.</p>",,,false
"{'account_id': 26852198, 'reputation': 7407, 'user_id': 20436957, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/88ZOB.png?s=256', 'display_name': 'John Li', 'link': 'https://stackoverflow.com/users/20436957/john-li'}",False,0,1669610650,1669593347,74594713,74594479,CC BY-SA 4.0,"<p><strong>UPDATE</strong></p> <p><strong>The component now handle ranges for <code>width</code> and <code>height</code> separately.</strong></p> <p>It also attempts to get the natural size of <code>img</code> if no <code>imageSize</code> is provided on <code>load</code> event.</p> <pre><code>const [imgNatural, setImgNatural] = useState({ width: 0, height: 0 });  const handleImageLoad = () =>   setImgNatural({     width: imgRef.current.naturalWidth,     height: imgRef.current.naturalHeight,   });  </code></pre> <pre><code><Crop image={url} boxSizeX={300} boxSizeY={200} step={10} /> </code></pre> <p><strong>Original</strong></p> <p>Not sure if I understand the question correctly, but here is a quick example.</p> <p>It sets the limits by passing defined sizes for image and display box to the component, and disable the buttons when the image is about to move past a certain range.</p> <pre><code><Crop image={url} boxSize={300} imageSize={500} step={10} /> </code></pre> <p>It calculates the moveable <code>range</code> simply by:</p> <pre><code>const range = Math.abs((boxSize - imageSize) / 2) </code></pre> <p>It does cover the cases of image both bigger and smaller than the display box, but perhaps this can be further improved by taking <code>step</code> into calculation.</p> <p>The below example runs in the snippet for convenience.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function Crop({ image, boxSizeX, boxSizeY, imageSizeX, imageSizeY, step }) {   const [imgX, setImgX] = React.useState(0);   const [imgY, setImgY] = React.useState(0);    const imgRef = React.useRef(null);   const [imgNatural, setImgNatural] = React.useState({ width: 0, height: 0 });    const handleImageLoad = () =>     setImgNatural({       width: imgRef.current.naturalWidth,       height: imgRef.current.naturalHeight,     });    // ð These and related logic can be improved by also considering step   const rangeX = imageSizeX     ? Math.abs((boxSizeX - imageSizeX) / 2)     : imgNatural.width     ? Math.abs((boxSizeX - imgNatural.width) / 2)     : 100;    const rangeY = imageSizeY     ? Math.abs((boxSizeY - imageSizeY) / 2)     : imgNatural.height     ? Math.abs((boxSizeY - imgNatural.height) / 2)     : 100;    return (     <div>       <div>         {imgNatural.width && imgNatural.height ? (           <p>{`Natural image size is ${imgNatural.width}px * ${imgNatural.height}px `}</p>         ) : (           <p>Loading image...</p>         )}         <button           onClick={() => {             setImgY((prev) => (prev -= step));           }}           disabled={imgY <= -rangeY ? true : false}         >           UP         </button>         <button           onClick={() => {             setImgY((prev) => (prev += step));           }}           disabled={imgY >= rangeY ? true : false}         >           DOWN         </button>         <button           onClick={() => {             setImgX((prev) => (prev -= step));           }}           disabled={imgX <= -rangeX ? true : false}         >           LEFT         </button>         <button           onClick={() => {             setImgX((prev) => (prev += step));           }}           disabled={imgX >= rangeX ? true : false}         >           RIGHT         </button>       </div>       <div         className=""window""         style={{ width: `${boxSizeX}px`, height: `${boxSizeY}px` }}       >         <img           src={image}           alt=""""           ref={imgRef}           onLoad={handleImageLoad}           style={{             width: imageSizeX ? `${imageSizeX}px` : ""auto"",             height: imageSizeY ? `${imageSizeY}px` : ""auto"",             transform: `translate(${imgX}px, ${imgY}px)`,           }}         />       </div>     </div>   ); }  const App = () => {   return (     <div className=""app"">       <Crop         image={""https://picsum.photos/400/300""}         boxSizeX={300}         boxSizeY={200}         step={10}       />     </div>   ); };  ReactDOM.render(<App />, document.querySelector(""#root""));</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.window {  background-color: pink;  overflow: hidden;  display: flex;  justify-content: center;  align-items: center; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div id=""root""></div> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.1.0/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.1.0/umd/react-dom.production.min.js""></script></code></pre>  </div>  </div>  </p>",1669610650.0,,false
"{'account_id': 7615319, 'reputation': 7647, 'user_id': 5774952, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/yZM8h.png?s=256', 'display_name': 'Zac Anger', 'link': 'https://stackoverflow.com/users/5774952/zac-anger'}",False,3,1669585857,1669585857,74594049,74594019,CC BY-SA 4.0,"<p><code>@testing-library/dom</code> is a <a href=""https://github.com/testing-library/user-event/blob/main/package.json#L60"" rel=""nofollow noreferrer"">peer dependency</a> of <code>user-event</code> and needs to be installed separately in your project.</p>",,,false
"{'account_id': 25010372, 'reputation': 45, 'user_id': 18869942, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/bb810d8d4f6d5395f25dcd78fe783b14?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'ProgramProdigy', 'link': 'https://stackoverflow.com/users/18869942/programprodigy'}",False,-1,1669585453,1669585453,74594012,74593984,CC BY-SA 4.0,"<p>Use CSS to specify a top and left position, make it static, and add a className attribute to the component. Make display none and when the button is clicked, set display to block.</p>",,,false
"{'account_id': 2331351, 'reputation': 3848, 'user_id': 2044706, 'user_type': 'registered', 'accept_rate': 60, 'profile_image': 'https://i.sstatic.net/qCzhq.jpg?s=256', 'display_name': 'Tomer Almog', 'link': 'https://stackoverflow.com/users/2044706/tomer-almog'}",False,0,1669606895,1669599787,74595177,74593912,CC BY-SA 4.0,"<p>So I found an ugly solution, I really don't want to use it, but it makes the annoying error go away...</p> <p>Adding timeout on the useEffect ""solves"" this since the initial render matches the server DOM.</p> <pre><code>useEffect(() => {     setHasMounted(true);     const user = getUserCookie(true);     if (user) {       setTimeout(() => {         userState.set(() => user);       }, 100);     }   }, []);  </code></pre> <p>Let's agree as a community that this trash can't be the accepted answer here. Anyone has a better solution?</p>",1669606895.0,,false
"{'account_id': 4903864, 'reputation': 215, 'user_id': 3951168, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/94926b68d53b4ec675d3415d5516049d?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'iaq', 'link': 'https://stackoverflow.com/users/3951168/iaq'}",False,1,1669588365,1669588365,74594311,74593747,CC BY-SA 4.0,"<p>401 means unauthorized. Either the token is missing in the post request or your token is not valid or is not for the API you are trying to access.</p> <p>You can also check on the network tab of your browser in chrome developer tools if the token is actually sent with your request or not.</p> <p>If the token is sent correctly then I suggest you decode your jwt token at jwt.io to verify the validity.</p> <p>I would suggest use axios as given below for post request.</p> <pre><code>var resp = await  axios.post(url, {       data: ...     }, {       headers: {         'Authorization': `Bearer ${token}`         }      }) </code></pre>",,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",True,0,1669584039,1669583617,74593840,74593709,CC BY-SA 4.0,"<p>Have you tried this ?</p> <pre class=""lang-js prettyprint-override""><code>const result = new Set(data.flatMap(d => d.details.map(de => de.id))); console.log(result); </code></pre> <p>Read more <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap"" rel=""nofollow noreferrer"">here</a>.</p>",1669584039.0,,false
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",True,1,1669954339,1669954339,74650829,74593688,CC BY-SA 4.0,"<p>From what I can tell of the code so far I see 2 issues:</p> <ol> <li>You are not rendering the <code>Navbar</code> component within the routing context being provided to the app.</li> <li>The <code>Navbar</code> component is rendering <code>@mui/material</code> <code>Link</code> components instead of <code>react-router-dom</code> <code>Link</code> components.</li> </ol> <p>Fix the links in the <code>Navbar</code> component, the <code>MenuItem</code> components should render the <code>NavLink</code> component and take a <code>to</code> prop instead of <code>href</code>:</p> <pre><code>... import { NavLink, Route, Routes } from 'react-router-dom'; ...  function AccountMenu() {   ...    return (     <React.Fragment>       ...       <Menu         ...       >         <MenuItem component={NavLink} to=""/editProfile"">           ...         </MenuItem>          <MenuItem component={NavLink} to=""/favorites"">           ...         </MenuItem>          <MenuItem component={NavLink} to=""/"" style={{ textDecoration: ""none"" }}>           ...         </MenuItem>       </Menu>     </React.Fragment>   ); } </code></pre> <p>Render the <code>Navbar</code> component within the router.</p> <pre><code>import React from 'react' import { BrowserRouter, Routes, Route } from 'react-router-dom'; import Navbar from '../path/to/Navbar'; import SignIn from './pages/SignIn'; import HomePage from './pages/HomePage'; import Favorites from './pages/Favorites'; import EditProfile from './pages/EditProfile';  import ""bootstrap/dist/css/bootstrap.min.css""  const App = () => {   return (     <div className='R'>       <BrowserRouter>         <Navbar /> // <-- render inside routing context         <Routes>           <Route path=""/"" element={<HomePage />} />           <Route path=""/signIn"" element={<SignIn />} />           <Route path=""/favorites"" element={<Favorites />} />           <Route path=""/editProfile"" element={<EditProfile />} />         </Routes>       </BrowserRouter>     </div>   ); }; </code></pre>",,,false
"{'account_id': 24302288, 'reputation': 601, 'user_id': 20617445, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e8a8c24676ef4c47cd70dbe84d5dacd8?s=256&d=identicon&r=PG', 'display_name': 'Viktor Marinho', 'link': 'https://stackoverflow.com/users/20617445/viktor-marinho'}",True,1,1669581060,1669581060,74593605,74593573,CC BY-SA 4.0,"<p>Material ui components are open source. You can see their source code in github: <a href=""https://github.com/mui/material-ui"" rel=""nofollow noreferrer"">https://github.com/mui/material-ui</a></p> <p>If you want to edit them, you can clone the repo, follow the steps to setup your environment and try changing the code. You could also open github codespaces on the repository, which i find to be a really useful tool for inspecting source code quickly.</p>",,,false
"{'account_id': 26852198, 'reputation': 7407, 'user_id': 20436957, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/88ZOB.png?s=256', 'display_name': 'John Li', 'link': 'https://stackoverflow.com/users/20436957/john-li'}",False,2,1669584623,1669581619,74593663,74593566,CC BY-SA 4.0,"<p>Because <code>setTasks</code> updates the state value in a newly rendered version of the component, it is a normal behavior that the <code>console.log(tasks)</code> in the same block does not receive an updated copy of <code>tasks</code>.</p> <p>On a side note, a more standard way of setting state based on a previous value could be:</p> <pre><code>const deleteTask = (index) =>   setTasks((prev) => prev.filter((x) => x.id !== index)); </code></pre> <p>Moreover, the current <code>addTask</code> could possibly create a conflict between <code>id</code> and <code>index</code>, and it could be safer like this:</p> <pre><code>const addTask = (text) =>   setTasks((prev) => {     if (!Array.isArray(prev) || prev.length === 0) return [{ id: 1, text }];     return [...prev, { id: prev[prev.length - 1].id + 1, text }];   }); </code></pre> <p>Here is an over simplified example so that it might be easier to visualize. It runs in the below snippet for convenience.</p> <p>Hopefully it will help.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const Task = ({ task, onDelete }) => {   return (     <div className=""task"" key={task.id}>       <h3>         {task.text}         <button           style={{ color: ""red"", cursor: ""pointer"" }}           onClick={() => onDelete(task.id)}         >           delete         </button>       </h3>     </div>   ); };  const Tasks = ({ tasks, onDelete }) => {   return tasks.map((task) => (     <Task key={task.id} task={task} onDelete={onDelete} />   )); };  const AddTasks = ({ addTask }) => {   const inputRef = React.useRef(null);   const handleSubmit = (e) => {     e.preventDefault();     const { value } = inputRef.current;     if (!value) return;     addTask(value);   };   return (     <form className=""add"" onSubmit={handleSubmit}>       <input type=""text"" ref={inputRef} />       <button type=""submit"">Add Task</button>     </form>   ); };  const App = () => {   const [tasks, setTasks] = React.useState([     { id: 1, text: ""Task 1"" },     { id: 2, text: ""Task 2"" },     { id: 3, text: ""Task 3"" },   ]);    const deleteTask = (index) =>     setTasks((prev) => prev.filter((x) => x.id !== index));    const addTask = (text) =>     setTasks((prev) => {       if (!Array.isArray(prev) || prev.length === 0) return [{ id: 1, text }];       return [...prev, { id: prev[prev.length - 1].id + 1, text }];     });    return (     <div className=""app"">       <div className=""container"">         <AddTasks addTask={addTask}></AddTasks>         {tasks.length > 0 ? (           <Tasks tasks={tasks} onDelete={deleteTask} />         ) : (           ""No Tasks To Show""         )}       </div>     </div>   ); };  ReactDOM.render(<App />, document.querySelector(""#root""));</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div id=""root""></div> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.1.0/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.1.0/umd/react-dom.production.min.js""></script></code></pre>  </div>  </div>  </p>",1669584623.0,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",False,-1,1669582922,1669582922,74593772,74593566,CC BY-SA 4.0,"<p>React setState is async (read more <a href=""https://www.geeksforgeeks.org/is-setstate-method-async/#:%7E:text=Why%20setState()%20is%20async,better%20user%20experience%20and%20performance."" rel=""nofollow noreferrer"">here</a>) so when you log your state just after setState, it shows the previous data not the updated one because it takes some time for the state to get updated.</p> <p>You can see that your state is updated by writing an useEffect and log your state there:</p> <pre class=""lang-js prettyprint-override""><code>const deleteTask = (index) => {   const cp = tasks.filter(x=> x.id !== index);   setTasks(cp); };  useEffect(() => {   console.log(tasks); }, [tasks]); </code></pre>",,,false
"{'account_id': 339226, 'reputation': 1701, 'user_id': 668572, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/5y2al.jpg?s=256', 'display_name': 'Sedat Polat', 'link': 'https://stackoverflow.com/users/668572/sedat-polat'}",False,0,1669737027,1669734510,74616141,74593487,CC BY-SA 4.0,"<p>I check the code in sandbox, it looks ok. Only reason could be <code>redirecting /popup</code> url to incorrect server. It will work on local, because every request to localhost:xxxx will go to correct server without needing any redirection config(of course if you do not have any releated redirecting config in the host file).</p> <p>Note: if you have a react routing in single page reactjs app(url is not opening in new tab/window), redirection will seems like still working as expected even if there is a wrong redirect url config in your server. The reason is, react routing will handle this url path. But if you hard refresh the page or open the page in new tab/window, then request to that url will not reach to the server that react runs on.</p>",1669737027.0,,false
"{'account_id': 5916539, 'reputation': 1261, 'user_id': 4655177, 'user_type': 'registered', 'accept_rate': 78, 'profile_image': 'https://www.gravatar.com/avatar/07af988150e974fcf11399073992c6a5?s=256&d=identicon&r=PG', 'display_name': 'Xiduzo', 'link': 'https://stackoverflow.com/users/4655177/xiduzo'}",True,2,1669584847,1669584847,74593950,74593481,CC BY-SA 4.0,"<p>As I mentioned in my comment; you could create your own <code>FormProvider</code> component which extends the default <code>FormProviderProps</code> and the custom hardSubmit you want to add.</p> <pre><code>import { FC } from ""react""; import { FormProvider, FormProviderProps } from ""react-hook-form"";  interface Props extends FormProviderProps<any, any> {   hardSubmit: () => void; }  export const MyFormProvider: FC<Props> = ({   children,   hardSubmit,   ...formProps }) => {   return (     <FormProvider {...formProps}>       {children}       <button onClick={hardSubmit}>hard submit</button>     </FormProvider>   ); }; </code></pre> <p>You could use this like</p> <pre><code>import { useForm } from ""react-hook-form""; import ""./styles.css""; import { MyFormProvider } from ""./MyFormProvider"";  export default function App() {   const methods = useForm();    const hardSubmit = () => {     console.log(""hard submit"");   };    return (     <MyFormProvider {...methods} hardSubmit={hardSubmit}>       <form onSubmit={methods.handleSubmit(console.log, console.log)}>         <input placeholder=""test"" {...methods.register(""name"")} />         <button type=""submit"">submit</button>       </form>     </MyFormProvider>   ); } </code></pre> <p>Have a look at <a href=""https://codesandbox.io/s/funny-phoebe-ldo0ed?file=/src/App.tsx:0-684"" rel=""nofollow noreferrer"">this codesandbox</a> for a working example</p>",,,false
"{'account_id': 15358901, 'reputation': 17, 'user_id': 11080421, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-nMUzuFDSRQE/AAAAAAAAAAI/AAAAAAAABfI/Xuz4I-Buxd8/photo.jpg?sz=256', 'display_name': 'Marwan Ashraf', 'link': 'https://stackoverflow.com/users/11080421/marwan-ashraf'}",True,0,1669920570,1669592654,74594665,74593453,CC BY-SA 4.0,"<p>So after trying different solutions this is what worked for me:</p> <ul> <li>Create the react project using <code>npx create-react-app urprojname</code></li> <li><code>cd</code> to the created project folder</li> <li>open the terminal and run the 2 following lines to be able to use Material UI v5</li> </ul> <pre class=""lang-bash prettyprint-override""><code>npm install @mui/material @emotion/react @emotion/styled npm install @mui/icons-material </code></pre>",1669920570.0,,false
"{'account_id': 15522454, 'reputation': 24, 'user_id': 11198265, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/1284396045044170/picture?type=large', 'display_name': 'Naut De Vroome', 'link': 'https://stackoverflow.com/users/11198265/naut-de-vroome'}",False,0,1669583654,1669583654,74593844,74593197,CC BY-SA 4.0,"<p>You probably didn't update your firewall. For other devices to be able to communicate with you pc you have to what's called open your port for tcp traffic, in this case port 3000. You can find how to do so for example here: <a href=""https://answers.microsoft.com/en-us/windows/forum/all/how-to-open-port-in-windows-10-firewall/f38f67c8-23e8-459d-9552-c1b94cca579a"" rel=""nofollow noreferrer"">https://answers.microsoft.com/en-us/windows/forum/all/how-to-open-port-in-windows-10-firewall/f38f67c8-23e8-459d-9552-c1b94cca579a</a> Be aware that others on your network can now send traffic to your laptop. Therefor it is wise to revert this when you are done testing.</p>",,,false
"{'account_id': 372830, 'reputation': 7710, 'user_id': 3199927, 'user_type': 'registered', 'accept_rate': 80, 'profile_image': 'https://www.gravatar.com/avatar/4015cfa2eb61c6d7150dcdf06984a7d8?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Tom', 'link': 'https://stackoverflow.com/users/3199927/tom'}",True,3,1669578074,1669577887,74593228,74593141,CC BY-SA 4.0,"<p>Assuming by ""latest value"" you mean highest index in the array, you can <code>reduce</code> the array and continue setting / resetting the value at the key, then take the values from the resulting object.</p> <p>Something like:</p> <pre><code>Object.values(   serviceListData     .reduce((acc, next) => ({...acc, [next.Id]: next }), {}) ) </code></pre>",1669578074.0,,false
"{'account_id': 24030210, 'reputation': 46, 'user_id': 18011249, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c91a8d27086a77a357ee7598419eef70?s=256&d=identicon&r=PG', 'display_name': 'Underdeveloper', 'link': 'https://stackoverflow.com/users/18011249/underdeveloper'}",True,1,1669680998,1669579653,74593440,74593124,CC BY-SA 4.0,"<p>Change line, because even after this line the program continues to run.</p> <pre><code>if (existingUser) res.status(400).json({message: 'User already exists!!'}); </code></pre> <p>To:</p> <pre><code>if (existingUser) return res.status(400).json({message: 'User already exists!!'}); </code></pre> <p>You need to <code>return</code> key.</p>",1669680998.0,,false
"{'account_id': 24030210, 'reputation': 46, 'user_id': 18011249, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c91a8d27086a77a357ee7598419eef70?s=256&d=identicon&r=PG', 'display_name': 'Underdeveloper', 'link': 'https://stackoverflow.com/users/18011249/underdeveloper'}",False,1,1669680954,1669580700,74593576,74593124,CC BY-SA 4.0,"<p>Try changing the code with the Else method so:</p> <pre><code>export const signUp = async (req, res) => {   const {email, password, username, roomid} = req.body;   try {          console.log(req.body);          let existingUser = User.findOne({email});          console.log(existingUser);          if (existingUser){         return res.status(400).json({message: 'User already exists!!'});      }else{       const hashedPassword = await bcrypt.hash(password, 12);        const result = await User.create({         email,         password: hashedPassword,         username,         roomid,       });          const token = jwt.sign(         {email: existingUser.email, id: existingUser._id},         'test',         {expiresIn: '1hr'}       );       return res.status(201).json({result, token});     }     } catch (err) {     console.log(err);   } }; </code></pre> <p>Note: Don't forget to turn the server off and then on again.</p>",1669680954.0,,false
"{'account_id': 7381927, 'reputation': 3137, 'user_id': 5618326, 'user_type': 'registered', 'accept_rate': 48, 'profile_image': 'https://i.sstatic.net/iXxLF.jpg?s=256', 'display_name': 'Mile MijatoviÄ', 'link': 'https://stackoverflow.com/users/5618326/mile-mijatovi%c4%87'}",False,1,1669578703,1669577858,74593224,74593124,CC BY-SA 4.0,"<p>Try this</p> <pre><code>const existingUser = db.collection('users').findOne({ email: email });   if (existingUser) {    res.json({      message: 'User already exists',      existingUser: existingUser    });    client.close();    return; <-- stop executing code if user already exists  } //checks if user already exists  </code></pre>",1669578703.0,,false
"{'account_id': 25257437, 'reputation': 71, 'user_id': 19088921, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Ggcjg6jYOwhRdrB9_v_1f1XL2YhmtHqXiWor01VEg=k-s256', 'display_name': 'Julius Olsson', 'link': 'https://stackoverflow.com/users/19088921/julius-olsson'}",False,-1,1669579138,1669579138,74593382,74593116,CC BY-SA 4.0,<p>Just change the {LoginClick} to LoginClick().</p>,,,false
"{'account_id': 58439, 'reputation': 14999, 'user_id': 174983, 'user_type': 'registered', 'accept_rate': 80, 'profile_image': 'https://i.sstatic.net/tsYIf.jpg?s=256', 'display_name': 'Dani', 'link': 'https://stackoverflow.com/users/174983/dani'}",True,0,1672862458,1672862458,75010680,74593007,CC BY-SA 4.0,"<p>The problem was here:</p> <pre><code>const [currentValue, setCurrentValue] = useState(null); </code></pre> <p>instead of null it needs to get the time value.</p>",,,false
"{'account_id': 20815818, 'reputation': 44137, 'user_id': 15288641, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/JpR3RiD2.jpg?s=256', 'display_name': 'Youssouf Oumar', 'link': 'https://stackoverflow.com/users/15288641/youssouf-oumar'}",True,3,1669707186,1669707186,74610504,74592904,CC BY-SA 4.0,"<p>To serve it as a React application, you need to use  <a href=""https://nextjs.org/docs/advanced-features/static-html-export"" rel=""nofollow noreferrer"">Static HTML Export</a>, which would generate a build folder like React by running <code>next build && next export</code>. Doing so would work, but you won't get all Next.js features such as: <code>Image Optimization</code>, <code>Internationalized Routing</code>, <code>API Routes</code>, <code>Headers</code>, <code>Middleware</code>, <code>getServerSideProps</code>.</p> <p>That's because Next.js  is designed to be a Node.js / React ""Full Stack"" framework. Hence the recommended way is to use it as a standalone application with <code>npm run build && next start</code>.</p>",,,false
"{'account_id': 10551370, 'reputation': 126, 'user_id': 7773975, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/ERH2L.jpg?s=256', 'display_name': 'Beatriz Infante', 'link': 'https://stackoverflow.com/users/7773975/beatriz-infante'}",False,0,1669575737,1669574996,74592870,74592754,CC BY-SA 4.0,"<p>If you want to keep track of all likes/dislikes instead of setting the data, you need first to read (getItem) what is already in your localStorage and then set what was already + new like/dislike:</p> <pre><code>axios.post(url, data, {headers})     .then(resp => {         const likes = JSON.parse(localStorage.getItem('likes'));         likes.push(resp.data);         localStorage.setItem('like', JSON.stringify(likes));     }).catch(err => {     console.log(err); }); </code></pre> <p>You can apply the same to dislikes.</p>",1669575737.0,,false
"{'account_id': 5916539, 'reputation': 1261, 'user_id': 4655177, 'user_type': 'registered', 'accept_rate': 78, 'profile_image': 'https://www.gravatar.com/avatar/07af988150e974fcf11399073992c6a5?s=256&d=identicon&r=PG', 'display_name': 'Xiduzo', 'link': 'https://stackoverflow.com/users/4655177/xiduzo'}",True,0,1669574432,1669574432,74592792,74592751,CC BY-SA 4.0,"<p>You can not render the <code>.then</code> of an API call like this.</p> <p>A common pattern to do this is to utilize the <code>useEffect</code> to fetch the data in combination with the <code>useState</code> to store the result which should be displayed.</p> <p>Inside your component you could add 3 things:</p> <ol> <li>A state to store the results from your database</li> </ol> <p><code>const [state, setState] = useState([])</code></p> <ol start=""2""> <li>A call to the API</li> </ol> <pre class=""lang-js prettyprint-override""><code>useEffect(() => {   const url = ""https://localhost:7101/GetPlayersInMain"";   fetch(URL)   .then((response) => response.json())   .then((data) => {     setState(data);   }    }, []) </code></pre> <ol start=""3""> <li>use the state in your component</li> </ol> <p>replace the <code>{Players()}</code> with</p> <pre><code>{data.map(el => {   console.log(el);   return (     <div className=""box e"">       <div className=""username"">         {el.Username}       </div>        <div className=""progress"">         <img src={require('./images/raccoon.png')} style={{ left: progressOfUser(el.WPM) + '%' }} />         <hr />        </div>        <div className=""finishedText"">         {el.WPM}       </div>     </div>   ); })};  </code></pre>",,,false
"{'account_id': 1336539, 'reputation': 541, 'user_id': 1279150, 'user_type': 'registered', 'accept_rate': 90, 'profile_image': 'https://i.sstatic.net/R48Tv.png?s=256', 'display_name': 'HamletHub', 'link': 'https://stackoverflow.com/users/1279150/hamlethub'}",True,6,1669673492,1669673492,74607014,74592484,CC BY-SA 4.0,"<p>I reread an earlier post <a href=""https://stackoverflow.com/questions/68058814/next-11-and-adding-script-tags-not-working-no-scripts-are-rendered/68059559#68059559"">Next 11 and adding Script tags not working. No scripts are rendered</a> <a href=""https://stackoverflow.com/questions/68058814/next-11-and-adding-script-tags-not-working-no-scripts-are-rendered/68059559#68059559"">enter link description here</a> and realized you cannot put the  component within the Head tags. In addition, it should not be in the _document.tsx, but instead should be in _app.tsx. (unless you are using beforeInteractive I believe, see link above)</p> <p>Because I also want to include a Google Analytics script, I created a component called TrackingCode as a separate js file</p> <pre><code>import Script from ""next/script"";  function TrackingCode() {   return (    <>   {/* Global site tag (gtag.js) - Google Analytics */}   <Script src=""https://www.googletagmanager.com/gtag/js?id=G-GOOGLEID"" />   <Script id=""google-analytics"" strategy=""afterInteractive"">     {`   window.dataLayer = window.dataLayer || [];   function gtag(){window.dataLayer.push(arguments);}   gtag('js', new Date());    gtag('config', 'G-GOOGLEID');   `}   </Script>    {/* for Zoho Marketing Automation */}    <Script id=""zoho-ma"">     {`var w = window; var p = w.location.protocol; if (p.indexOf(""http"") < 0) {   p = ""http"" + "":""; } var d = document; var f = d.getElementsByTagName(""script"")[0],   s = d.createElement(""script""); s.type = ""text/javascript""; s.async = false; if (s.readyState) {   s.onreadystatechange = function () {     if (s.readyState == ""loaded"" || s.readyState == ""complete"") {       s.onreadystatechange = null;       try {         loadwaprops(           ""mycode"",           ""mycode"",           ""mycode"",           ""mycode"",           ""0.0""         );       } catch (e) {}     }   }; } else {   s.onload = function () {     try {       loadwaprops(         ""mycode"",         ""mycode"",         ""mycode"",          ""mycode"",         ""0.0""       );     } catch (e) {}   }; } s.src = p + ""//ma.zoho.com/hub/js/WebsiteAutomation.js""; f.parentNode.insertBefore(s, f);`}   </Script>   {/* end Zoho marketing automation */} </>  ); }  export default TrackingCode; </code></pre> <p>and my _app.tsx file is:</p> <pre><code>import ""../assets/scss/material-kit.scss""; import ""../node_modules/bootstrap/scss/bootstrap.scss""; import ""../styles/globals.scss""; import { useEffect } from ""react""; import type { ReactElement, ReactNode } from ""react""; import type { NextPage } from ""next""; import type { AppProps } from ""next/app""; import TrackingCode from ""../components/tracking-code"";  import store from ""../app/store"";   export type NextPageWithLayout = NextPage & {   getLayout?: (page: ReactElement) => ReactNode; };  type AppPropsWithLayout = AppProps & {   Component: NextPageWithLayout; };  export default function MyApp({ Component, pageProps }: AppPropsWithLayout)  {  const getLayout = Component.getLayout ?? ((page) => page);   useEffect(() => {    typeof document !== undefined       ? require(""../node_modules/bootstrap/dist/js/bootstrap"")      : null;   }, []);  return getLayout(    <>      <TrackingCode />      <Component {...pageProps} />    </>   ); } </code></pre>",,,false
"{'account_id': 11897604, 'reputation': 11, 'user_id': 8706514, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d60f96ac0bedc58943bde7928fab729f?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'johnsmh', 'link': 'https://stackoverflow.com/users/8706514/johnsmh'}",False,0,1669572354,1669572354,74592521,74592469,CC BY-SA 4.0,"<p>Your issue is coming from <code>../data/BoxerData</code> because you're exporting the type of <code>Array<{ name: string; imgUrl: string; age: string; status: string; } | undefined></code>, meaning there is a possibility of the data within the array of being undefined.</p> <p>Meaning your data is returning has the possibility of returning <code>[undefined, undefined, ...boxers]</code></p> <p>You can resolve this by filtering and then mapping or by preventing the possibility of an <code>undefined</code> element from being inside of the array.</p>",,,false
"{'account_id': 18508059, 'reputation': 923, 'user_id': 13483939, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/3WOJz.jpg?s=256', 'display_name': 'Shubham Waje', 'link': 'https://stackoverflow.com/users/13483939/shubham-waje'}",False,0,1669572335,1669572335,74592517,74592469,CC BY-SA 4.0,"<p>You have extra <code>,</code> after first element in the <code>BoxData.tsx</code>. Remove that and it will work properly.</p> <pre class=""lang-js prettyprint-override""><code>import React from ""react"";  export default [   {     name: ""Natalia Castaneda"",     imgUrl: """",     age: ""19"",     status: ""Open"",   },   // here you were having an extra , (comma)   {     name: ""Joel Sanchez"",     imgUrl: """",     age: ""19 years old"",     status: ""Open"",   },   {     name: ""Scott Mcfadden"",     imgUrl: """",     age: ""20 years old"",     status: ""Open"",   },   {     name: ""Augusta Grace"",     imgUrl: """",     age: ""26 years old"",     status: ""Novice"",   },   {     name: ""Alex Garcia"",     imgUrl: """",     age: ""19 years old"",     status: ""Novice"",   },   {     name: ""Mia Andre"",     imgUrl: """",     age: ""13 years old"",     status: ""Novice"",   },    {     name: ""Jocelyn Castaneda"",     imgUrl: """",     age: ""13 years old"",     status: ""Novice"",   }, ];  </code></pre>",,,false
"{'account_id': 27064534, 'reputation': 1, 'user_id': 20616105, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b667ee15cd2e3395aa589eb6fcd78f3f?s=256&d=identicon&r=PG', 'display_name': 'janthenelli', 'link': 'https://stackoverflow.com/users/20616105/janthenelli'}",False,0,1669773028,1669650124,74603048,74592460,CC BY-SA 4.0,"<p>I was able to fix this problem by adding accessible <code>datakey</code> attributes onto the <code>divs</code> of each Board and Cell component. Also changing Board's <code>onCLick</code> function to <code>onClick={onClick}</code> instead of <code>onClick={() => onClick(i)}</code> allowed me to access the parent node of each individual cell</p> <p>Board Component:</p> <pre><code>import React from 'react' import Cell from './Cell'  const Board = ({dataKey, cells, onClick}) => {   return (     <div className=""main-cells"" data-key={dataKey}>       {cells.map((cell, i) => {         return (<Cell key={i} dataKey={i} value={cell} onClick={onClick} />)       })}     </div>   ) }  export default Board </code></pre> <p>Cell Component:</p> <pre><code>import React from 'react'  import './game.css'  const Cell = ({dataKey, value, onClick}) => {   const style = value ? `inner-cells ${value}` : 'inner-cells'    return (     <div data-key={dataKey} className={style} onClick={onClick}>       {value}     </div>   ) }  export default Cell </code></pre> <p>FullBoard Component:</p> <pre><code>import React from 'react' import Board from './Board'  const FullBoard = ({ boards, onClick }) => {   return (     <div className=""board-container"">       {boards.map((board, i) => {         return (<Board key ={i} dataKey={i} cells={board} onClick={onClick} />)       })}     </div>   ) }  export default FullBoard  </code></pre>",1669773028.0,,false
"{'account_id': 21391731, 'reputation': 261, 'user_id': 15755662, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GhjMiL7YFRCILniAHoBgQ9YM_e9N59oaKuclNM5qg=k-s256', 'display_name': 'codinn.dev', 'link': 'https://stackoverflow.com/users/15755662/codinn-dev'}",False,0,1669571084,1669571084,74592376,74592267,CC BY-SA 4.0,"<p>Issue is not reproducible, however this piece of code itself is sufficient.</p> <pre class=""lang-js prettyprint-override""><code>  useEffect(() => {         const parts = partsList.map((part) => ({            ...part,            dbvalue: ""db value"",         }));              const unSubscribe = setPartsList([...parts]);          return () => {unSubscribe;};       }, [partsList]); </code></pre>",,,false
"{'account_id': 17349383, 'reputation': 126, 'user_id': 12568156, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b42871bb5b4fa926b03e3f913d751a01?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'narravabrion', 'link': 'https://stackoverflow.com/users/12568156/narravabrion'}",True,1,1669570330,1669570330,74592272,74592143,CC BY-SA 4.0,"<p>Use efffect runs after the render. Essentially is you're trying to show the spinner before the website loads then this is not the best approach. You can try code spliitting i.e</p> <pre><code>import React, { Suspense } from 'react';  import HashLoader from ""react-spinners/HashLoader""; const Newhome  = React.lazy(() => import('./COMPONENTS/Newhome'));  function App() {   return (     <div>       <Suspense fallback={<HashLoader/>}>         <Newhome />       </Suspense>     </div>   ); } </code></pre>",,,false
"{'account_id': 32112212, 'reputation': 11, 'user_id': 24913017, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b64e9b60faf50b37c699aa50dc371887?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Akiro Pe&#241;a', 'link': 'https://stackoverflow.com/users/24913017/akiro-pe%c3%b1a'}",False,1,1715082326,1715082326,78442220,74592034,CC BY-SA 4.0,"<p>1 year and a half late, I stumbled on the same issue, but in case it helps:</p> <p>In the example function DnDOutsideResource, a ""localizer"" object is expected as argument, otherwise it will throw the described error; either pass the localizer as a prop to your  component, or create the localizer within the component.</p> <p>Below using moment.js:</p> <pre><code>// @ts-ignore import React, { useCallback, useMemo, useState } from 'react' // @ts-ignore import PropTypes from 'prop-types' //---------------------------------------- //import momentLocalizer //---------------------------------------- import { Calendar, Views, DateLocalizer, momentLocalizer } from 'react-big-calendar' import withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop' import 'react-big-calendar/lib/addons/dragAndDrop/styles.scss' import events from './events' //---------------------------------------- //import moment.js library import moment from ""moment""; //----------------------------------------  const DragAndDropCalendar = withDragAndDrop(Calendar)  const adjEvents = events.map((it, ind) => ({     ...it,     isDraggable: ind % 2 === 0, }))  const formatName = (name, count) => `${name} ID ${count}`  //-------------------------------------------- //removed function argument {localizer} export default function DnDOutsideResource() { //--------------------------------------------     const [myEvents, setMyEvents] = useState(adjEvents)     const [draggedEvent, setDraggedEvent] = useState()     const [displayDragItemInCell, setDisplayDragItemInCell] = useState(true)     const [counters, setCounters] = useState({ item1: 0, item2: 0 })     //--------------------------------------------     // initialize localizer const     const localizer = momentLocalizer(moment);     //--------------------------------------------     const eventPropGetter = useCallback(         (event) => ({             ...(event.isDraggable                 ? { className: 'isDraggable' }                 : { className: 'nonDraggable' }),         }),         []     )     const handleDragStart = useCallback((event) => setDraggedEvent(event), [])      const dragFromOutsideItem = useCallback(() => draggedEvent, [draggedEvent])      const customOnDragOver = useCallback(         (dragEvent) => {             // check for undroppable is specific to this example             // and not part of API. This just demonstrates that             // onDragOver can optionally be passed to conditionally             // allow draggable items to be dropped on cal, based on             // whether event.preventDefault is called             if (draggedEvent !== 'undroppable') {                 console.log('preventDefault')                 dragEvent.preventDefault()             }         },         [draggedEvent]     )       const moveEvent = useCallback(         ({ event, start, end, isAllDay: droppedOnAllDaySlot = false }) => {             const { allDay } = event             if (!allDay && droppedOnAllDaySlot) {                 event.allDay = true             }              // @ts-ignore             setMyEvents((prev) => {                 const existing = prev.find((ev) => ev.id === event.id) ?? {}                 const filtered = prev.filter((ev) => ev.id !== event.id)                 return [...filtered, { ...existing, start, end, allDay }]             })         },         [setMyEvents]     )      const newEvent = useCallback(         (event) => {             setMyEvents((prev) => {                 const idList = prev.map((item) => item.id)                 const newId = Math.max(...idList) + 1                 return [...prev, { ...event, id: newId }]             })         },         [setMyEvents]     )      const onDropFromOutside = useCallback(         ({ start, end, allDay: isAllDay }) => {             if (draggedEvent === 'undroppable') {                 setDraggedEvent(null)                 return             }              const { name } = draggedEvent             const event = {                 title: formatName(name, counters[name]),                 start,                 end,                 isAllDay,             }             setDraggedEvent(null)             setCounters((prev) => {                 const { [name]: count } = prev                 return {                     ...prev,                     [name]: count + 1,                 }             })             newEvent(event)         },         [draggedEvent, counters, setDraggedEvent, setCounters, newEvent]     )      const resizeEvent = useCallback(         ({ event, start, end }) => {             // @ts-ignore             setMyEvents((prev) => {                 const existing = prev.find((ev) => ev.id === event.id) ?? {}                 const filtered = prev.filter((ev) => ev.id !== event.id)                 return [...filtered, { ...existing, start, end }]             })         },         [setMyEvents]     )      const defaultDate = useMemo(() => new Date(2015, 3, 12), [])      return (                 <DragAndDropCalendar                     defaultDate={defaultDate}                     defaultView={Views.MONTH}                     dragFromOutsideItem={                         displayDragItemInCell ? dragFromOutsideItem : null                     }                     draggableAccessor=""isDraggable""                     eventPropGetter={eventPropGetter}                     events={myEvents}                     localizer={localizer}                     onDropFromOutside={onDropFromOutside}                     onDragOver={customOnDragOver}                     onEventDrop={moveEvent}                     onEventResize={resizeEvent}                     onSelectSlot={newEvent}                     resizable                     selectable                 />     )     }     DnDOutsideResource.propTypes = {         localizer: PropTypes.instanceOf(DateLocalizer),     } </code></pre>",,,false
"{'account_id': 17349383, 'reputation': 126, 'user_id': 12568156, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b42871bb5b4fa926b03e3f913d751a01?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'narravabrion', 'link': 'https://stackoverflow.com/users/12568156/narravabrion'}",False,1,1669568600,1669568600,74592045,74591935,CC BY-SA 4.0,<p>The file upload input is changing from undefined to defined <em>(thus changing it from uncontrolled to controlled which is not good practice in react)</em> since it has no initial value. I haven't used formik alot but you should read through the docs and check how to set initial value for a dropzone.</p>,,,false
"{'account_id': 8854852, 'reputation': 15936, 'user_id': 6612932, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://i.sstatic.net/Q3mwe.jpg?s=256', 'display_name': 'rocambille', 'link': 'https://stackoverflow.com/users/6612932/rocambille'}",True,3,1669568742,1669567960,74591962,74591910,CC BY-SA 4.0,"<p>You're typing your whole props as <code>string[]</code> instead of just <code>keys</code>. Embed <code>keys</code> prop in an object:</p> <pre class=""lang-js prettyprint-override""><code>function App({ keys }: { keys: string[]; }) {   // ... </code></pre> <p>Or using an interface:</p> <pre class=""lang-js prettyprint-override""><code>interface AppProps {   keys: string[]; }  function App({ keys }: AppProps) {   // ... </code></pre> <p>Or a type:</p> <pre class=""lang-js prettyprint-override""><code>type AppProps {   keys: string[]; }  function App({ keys }: AppProps) {   // ... </code></pre> <p>To go further: <a href=""https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#differences-between-type-aliases-and-interfaces"" rel=""nofollow noreferrer"">Differences Between Type Aliases and Interfaces</a></p>",1669568742.0,,false
"{'account_id': 22443986, 'reputation': 2480, 'user_id': 16648127, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gi1fxsGw6v1p1_YJWSGK8SFP46IivbTxW0kvmbl=k-s256', 'display_name': 'Enfield Li', 'link': 'https://stackoverflow.com/users/16648127/enfield-li'}",True,1,1669574563,1669574563,74592816,74591901,CC BY-SA 4.0,"<p>React saves the initial state once and ignores it on the next renders, and doing anything as such will be ignored:</p> <h3>1. Update initial state via props â:</h3> <pre><code>function ViewDispatcher(items) {   const [state, setState] = useState(items); } </code></pre> <p>On the first render, <code>ViewDispatcher</code> receives <code>[]</code> from items, and thus setting the initialState, on subsequent render caused by change of props, new values from <code>items</code> will be ignored.</p> <h3>2. Recreating the initial state â:</h3> <pre><code>function ViewDispatcher() {   const [state, setState] = useState(createInitialStateFn()); } </code></pre> <p>On first render, state is initialized by <code>createInitialStateFn()</code> once, on subsequent renders, anything returned from <code>createInitialStateFn()</code> will be ignored.</p> <h3>To solve this</h3> <p>You can lift the <code>useList</code> up to the parent component and update the state using the <code>update</code> function from the <code>useList</code> library, just like <code>setState((prev) => ({ ...prev, loading: false, items }));</code> in the dot then block.</p> <h3>You might want to restructure state properly:</h3> <p>Both parent and child component keeps a hold of the <code>items</code> state, and there's a good chance that, you can merge these two state into one, otherwise, everytime state changes, you'll have to update both state using <code>setter</code> simultaneously, in order to keep them in sync.</p> <p>And create a stand alone loading state specifically is best suited for your case I suppose:</p> <pre><code>const [loading, setLoading] = useState(true); </code></pre>",,,false
"{'account_id': 18508059, 'reputation': 923, 'user_id': 13483939, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/3WOJz.jpg?s=256', 'display_name': 'Shubham Waje', 'link': 'https://stackoverflow.com/users/13483939/shubham-waje'}",True,0,1669570988,1669569945,74592224,74591900,CC BY-SA 4.0,"<p>I think you can create a function which will make an api call when user enters any text in the input. Also, debounce it to avoid frequent api calls.</p> <pre class=""lang-js prettyprint-override""><code>import React, { useCallback } from ""react"";  // Debounce to avoid frequent api calls export const debounce = (func, waitFor) => {   let timeout = null;    const debounced = (...args) => {     if (timeout !== null) {       clearTimeout(timeout);       timeout = null;     }     timeout = setTimeout(() => func(...args), waitFor);   };    return debounced; };  const TestComponent = () => {   // debounce the function so that we send api calls once user stops typing   const searchSomething = useCallback(     debounce(async (value) => {       try {         // Make your api call using whichever library you are using         // let response = await fetch(`${YOUR_SERVER_URL}/search?query=${value}`);         let response =  axios.get(`${YOUR_SERVER_URL}/search?query=${value}`)         console.log(response);       } catch (error) {         console.log(error);       }     }, 500),     []   );    return (     <Form className=""d-flex"">       <Form.Control         type=""search""         placeholder=""Search""         className=""me-2""         aria-label=""Search""         onChange={(e) => {           searchSomething(e.target.value);         }}       />       <Button variant=""outline-success"">Search</Button>     </Form>   ); };  export default TestComponent;  </code></pre>",1669570988.0,,false
"{'account_id': 18930614, 'reputation': 530, 'user_id': 13812770, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/31924a8edec25b4821042a7868e5bca6?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'pzutils', 'link': 'https://stackoverflow.com/users/13812770/pzutils'}",False,0,1669569967,1669569967,74592228,74591900,CC BY-SA 4.0,"<p>Your <code>axios</code> call should end up something like this:</p> <pre><code>axios({   method: 'post',   url: '/login', // replace with your endpoint URL   data: {     searchField.name: searchField.value,   } }); </code></pre> <p>with searchField.name being whatever field name Django is expecting to receive on the back end (it looks like it's <code>name</code> here), and searchField.value being the value of the search field.</p>",,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",False,0,1669572587,1669572587,74592551,74591884,CC BY-SA 4.0,"<p>Hope it helps:</p> <pre class=""lang-js prettyprint-override""><code>const [serviceListData, setServiceListData] = useState([]);  useEffect(() => {   if (selectInsurance) {     setServiceListData([...serviceListData, {ID: filtered.ID}]);   } }, [selectInsurance, count]);  </code></pre>",,,false
"{'account_id': 26261803, 'reputation': 1511, 'user_id': 19932999, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AFdZucocyRPCF5TFQzrQ43lHD1xLKKcb328CUBMRHRjw=k-s256', 'display_name': 'Muhammad Nouman Rafique', 'link': 'https://stackoverflow.com/users/19932999/muhammad-nouman-rafique'}",False,0,1669569331,1669569331,74592152,74591884,CC BY-SA 4.0,"<p>When you try to add new value in serviceList, your key <code>ID</code> remains same. I'm assuming that you just want to store ids in state, then object is not appropriate to use here. Instead you can use array or if you want to store unique values then use <code>Set</code>.</p> <p><strong>Array</strong></p> <pre><code>const [serviceListData, setServiceListData] = useState([]);  useEffect(() =>{   setServiceListData((prev)=> [...prev, filtered.ID]);  }, [selectInsurance, count]) </code></pre> <p><strong>SET (If unique Ids)</strong></p> <pre><code>const [serviceListData, setServiceListData] = useState(new Set());  useEffect(() =>{   setServiceListData((prev)=> new Set(prev).add(filtered.ID)); }, [selectInsurance, count]) </code></pre> <p>If you want to store data related to that particular ID, then you can use object like this:</p> <p><strong>Object</strong></p> <pre><code>const [serviceListData, setServiceListData] = useState({});  useEffect(() =>{   setServiceListData((prev)=> Object.assign(prev, { [filtered.ID]: /*data*/ } )); }, [selectInsurance, count]) </code></pre>",,,false
"{'account_id': 13170666, 'reputation': 88007, 'user_id': 9513184, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/176386ce0b94057e55352484e69707f9?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Unmitigated', 'link': 'https://stackoverflow.com/users/9513184/unmitigated'}",False,1,1670447369,1669571610,74592439,74591838,CC BY-SA 4.0,"<p>You can use <code>Array#filter</code> with a <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set"" rel=""nofollow noreferrer""><code>Set</code></a> to store ids that were already found.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const arr=[{id:1,fullname:""ABC"",email:""abc@gmail.com""},{id:2,fullname:""DEF"",email:""def@gmail.com""},{id:2,fullname:""DEF"",email:""def@gmail.com""},{id:3,fullname:""GHI"",email:""ghi@gmail.com""},{id:1,fullname:""ABC"",email:""abc@gmail.com""}]; let ids = new Set, res = arr.filter(x => !ids.has(x.id) && ids.add(x.id)); console.log(res);</code></pre>  </div>  </div>  </p>",1670447369.0,,false
"{'account_id': 26701698, 'reputation': 100, 'user_id': 20308649, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu03--_1zNa0x_dFmLFsZJIr23jmPSsFrysqjXI9DQ=k-s256', 'display_name': 'Suhail Qureshi', 'link': 'https://stackoverflow.com/users/20308649/suhail-qureshi'}",False,0,1669571508,1669568585,74592043,74591838,CC BY-SA 4.0,"<pre><code>const tempArray=[]; const filteredArr = oldArray.filter(value =>{  if(!tempArray.includes(value.id)) {     tempArray.push(value.id)     return true    }   }) </code></pre> <p>Create a tempArray, loop over the array and checks if a value exist in tempArr if not push the value into the tempArr and return true(or value)</p>",1669571508.0,,false
"{'account_id': 1292874, 'reputation': 448, 'user_id': 1244611, 'user_type': 'registered', 'accept_rate': 0, 'profile_image': 'https://www.gravatar.com/avatar/e5b6a8e239f3eba9cd5855596a77a0b5?s=256&d=identicon&r=PG', 'display_name': 'InfiniteStack', 'link': 'https://stackoverflow.com/users/1244611/infinitestack'}",False,-1,1669567363,1669567363,74591874,74591838,CC BY-SA 4.0,"<p>I know short answer but, use a <code>Set()</code> on the receiving end. Whenever you add an item to a set, use <code>Set.add</code> - it makes sure if it's a duplicate, it won't be added to the set. Sets have similar capability as arrays, but cannot contain duplicates.</p>",,,false
"{'account_id': 1123228, 'reputation': 452, 'user_id': 1111063, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b4f72a55461a0b53cc6ebd3ad0378251?s=256&d=identicon&r=PG', 'display_name': 'Sam Kaz', 'link': 'https://stackoverflow.com/users/1111063/sam-kaz'}",False,0,1669572347,1669572347,74592519,74591795,CC BY-SA 4.0,"<p>First welcome to react world Jim Halpert! Hope you are enjoying your journey.</p> <p>Their a couple of issues I have found in your example.</p> <p>1)In the Fish.jsx click handler you need to pass the index while calling the actual function.</p> <p>2)You have to bind the index as props, from the parent JSX file.</p> <p>3)Since you have order and fishes in the same object you will have to copy the previous data as well as shown in line 57 of App.jsx</p> <p>I have tweaked your example a bit, have a look at it below:</p> <pre><code>import React from ""react""; import { useState } from ""react""; import { Fish } from ""./Fish"";  const App = () => {   const [state, setState] = useState({     fishes: {       ""salmon"" : {         ""image"":""https://via.placeholder.com/20x20"",         ""name"":""salmon"",         ""description"":""test"",         ""status"":""available""       }     },     order: {},   });    /**    * Structure of the function served in <AddFishForm>    * Making a copy of the state to avoid mutations ...state.fishes    * Date.now() used to assign a unique key    *    */   const addFish = (fish) => {     const fishes = { ...state.fishes };     fishes[`fish${Date.now()}`] = fish;     setState({       fishes: fishes,     });   };    /**    * Function to display a sample fishes in the list    * Made to avoid manual typing    * Fish data comes from ../sample-fishes    */   const loadSampleFishes = () => {     setState({ fishes: sampleFishes });   };    /**    * Take a copy of state    * Either add to the order or update the number in order    * (if order exists, adds one to it, if not, set it to one)    * Call setState() to update state object    */   const addToOrder = (fish) => {          const order = { ...state.order };     order[fish] = order[fish.key] + 1 ?? 1;     console.log(""Order >>>>>>>>>>>> ""+JSON.stringify(order));     setState({       ...state,       order: order,     });   };    return (     <div className=""catch-of-the-day"">       <div className=""menu"">                  <ul className=""fishes"">            {Object.keys(state.fishes).map((key) => {             return (              <Fish                 index={key}                 details={state.fishes[key]}                 addToOrder={addToOrder}               ></Fish>             );           })}         </ul>       </div>            </div>   ); };  export default App; </code></pre> <hr /> <pre><code>import React from ""react""; export const Fish = ({ details, addToOrder, index }) => {   const isAvailable = details.status === ""available"";    const handleClick = (index) => {     addToOrder(index);   };    return (    <li className=""menu-fish"">       <img src={details.image} alt="""" />       <h3 className=""fish-names"">         {details.name}         <span className=""price"">{details.price}</span>       </h3>       <p>{details.desc}</p>       <button type=""submit"" disabled={!isAvailable} onClick={() => handleClick(index)}>         {isAvailable ? ""Add to order"" : ""Sold out!""}       </button>            </li>   ); }; </code></pre>",,,false
"{'account_id': 43788, 'reputation': 195458, 'user_id': 128165, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/cdef5bd2099545a776ee86fb8049bdc6?s=256&d=identicon&r=PG', 'display_name': 'Gabriele Petrioli', 'link': 'https://stackoverflow.com/users/128165/gabriele-petrioli'}",False,0,1669566930,1669566930,74591819,74591795,CC BY-SA 4.0,"<p>The <code>onClick={() => handleClick}</code> should be</p> <p>either with parenthesis at the end to call it</p> <pre><code>onClick={() => handleClick()}  </code></pre> <p>or better yet, pass it directly as the callback method</p> <pre><code>onClick={handleClick} </code></pre>",,,false
"{'account_id': 21703824, 'reputation': 39, 'user_id': 16016637, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c2f955ec3a686f1d26ac21a60326d093?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Muqtadir Billah', 'link': 'https://stackoverflow.com/users/16016637/muqtadir-billah'}",False,0,1669640397,1669640397,74600958,74591650,CC BY-SA 4.0,<p>You can save the token in Cookies (js-cookie can be used). If you need to authorize a path you can just check if the token exists in cookies. To make it more secure you need to add a security layer in backend APIs. While making request to a secure APIs you will first check if the token is valid and user is authorized or not. This can be done by adding middleware.</p>,,,false
"{'account_id': 23708472, 'reputation': 987, 'user_id': 17730652, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/hPPpn.jpg?s=256', 'display_name': 'George Chond', 'link': 'https://stackoverflow.com/users/17730652/george-chond'}",True,1,1669569425,1669569425,74592164,74591605,CC BY-SA 4.0,"<p>You have to attach a scroll listener on component mount. This scroll listener is going to increment/decrement the value of a state e.g. <code>scrollY</code>. Then, instead of applying a class to show/hide, you directly adjust the <code>left</code> position of <code>nav</code>. Something like this (<a href=""https://codepen.io/gestok/pen/VwddBgx"" rel=""nofollow noreferrer"">Codepen</a>):</p> <pre class=""lang-css prettyprint-override""><code>#app {   min-height: 2000px;   display: flex;   flex-direction: column; }  #app > div {   position: sticky;   top: 0; }  nav {   position: relative;   top: 0;   background: gray;   height: 300px;   display: flex;   width: 200px;   transition: left 0.2s linear; } </code></pre> <pre><code>const Navbar = () => {   const [scrollY, setScrollY] = React.useState(-300);    const controlNavbar = () => {     if (typeof window !== ""undefined"" && window.scrollY < 300){ // This should be the same initial value as scrollY       setScrollY(scrollY + window.scrollY);     }   };    // On component mount, attach a scroll listener   React.useEffect(() => {     if (typeof window !== ""undefined"") {       window.addEventListener('scroll', controlNavbar);        // cleanup function       return () => {         window.removeEventListener('scroll', controlNavbar);       };     }   }, []);    return (     <div>       <nav className=""active"" style={{left: scrollY}}> // <-- Inline change left property         <div className=""invisible md:visible"">           <aside class=""w-64"" aria-label=""Sidebar"">             <div class=""overflow-y-auto py-4 px-3 bg-gray-50 border-r-2 border-black dark:bg-white h-screen"">               <ul class=""space-y-2"">                 <li>                   <a class=""flex items-center py-5 p-2 pl-12 text-xl font-normal text-gray-900 rounded-lg dark:text-red-500 hover:bg-gray-100 dark:hover:bg-gray-700"">                     <span class=""flex-1 ml-3 whitespace-nowrap"">Home</span>                   </a>                 </li>                 <li>                   <a class=""flex items-center py-2 p-2 pl-12 text-xl font-normal text-gray-900 rounded-lg dark:text-red-500 hover:bg-gray-100 dark:hover:bg-gray-700"">                     <span class=""flex-1 ml-3 whitespace-nowrap"">Projects</span>                   </a>                 </li>               </ul>             </div>           </aside>         </div>       </nav>     </div>   ); };   ReactDOM.render(<Navbar/>, document.getElementById('app')); </code></pre>",,,false
"{'account_id': 2432151, 'reputation': 1731, 'user_id': 2122822, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RNpbU.jpg?s=256', 'display_name': 'Azzy', 'link': 'https://stackoverflow.com/users/2122822/azzy'}",True,0,1669612463,1669573746,74592706,74591479,CC BY-SA 4.0,"<p>If you need to show InfoWindow for each marker you need to add React.Fragment, because you can't return a single element</p> <pre><code>{markers && markers.map(({ email, latitude, longitude }) =>  {        // this should return a single element    return(      <React.Fragment>         <Marker           ... marker props            onClick={() => {              // set selected email              // or other unique key for the marker like id              // since two emails can have same coordinates              setSelected({                lat: parseFloat(latitude),                lng: parseFloat(longitude),                email               });              // of create another state              //setSelectedEmail(email)              console.log(selected);                         }}         />         {(email?.email === email) && (         <InfoWindow           ... props         </InfoWindow>         )}       </React.Fragment>     ) // end of return inside the list  })} </code></pre> <p>Hope this solves your problem</p>",1669612463.0,,false
"{'account_id': 20715675, 'reputation': 6220, 'user_id': 15211203, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/QP4q2.png?s=256', 'display_name': 'NoCommandLine', 'link': 'https://stackoverflow.com/users/15211203/nocommandline'}",True,1,1669577149,1669569894,74592221,74591370,CC BY-SA 4.0,"<p>You've combined 2 commands - <code>gcloud beta run deploy</code>, <code>gcloud run services update-traffic </code></p> <p><code>--set-env-var</code> is only applicable to the first command.</p> <p>You can try this (I moved the flag to be part of the first command)</p> <blockquote> <p>gcloud beta run deploy my-app-frontend --image=eu.gcr.io/my-project/my-app-frontend/my-app-frontend:abcdefghijklmnopqrstuvwxyz123 --execution-environment=gen2 --region=europe-north1 <strong>--set-env-vars=[NODE_ENV=production]</strong> --project=my-project && gcloud run services update-traffic my-app-frontend --to-latest</p> </blockquote> <p>or you can run the 2 commands one after the other (<em>I prefer to always include the <code>-project</code> flag when running commands to ensure I run it against my intended target</em>)</p> <p>a. First Command</p> <blockquote> <p>gcloud beta run deploy my-app-frontend --image=eu.gcr.io/my-project/my-app-frontend/my-app-frontend:abcdefghijklmnopqrstuvwxyz123 --execution-environment=gen2 --region=europe-north1 --set-env-vars=[NODE_ENV=production] --project=my-project</p> </blockquote> <p>b. Second command</p> <blockquote> <p>gcloud run services update-traffic my-app-frontend --to-latest --project=my-project</p> </blockquote>",1669577149.0,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",True,4,1669562664,1669562664,74591252,74591240,CC BY-SA 4.0,"<p>use <code>split</code></p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const list = ""Material: 100% Polyester | Three-button | Color: Gray""  console.log(list.split("" | ""))</code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",True,1,1669565123,1669565123,74591602,74591202,CC BY-SA 4.0,"<p>Let's assume you have 2 API calls: fetchAll('123') and fetchAll('321');</p> <p>In order to wait for all of your requests and then update your state, you should use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all"" rel=""nofollow noreferrer"">Promise.all</a> like this:</p> <pre class=""lang-js prettyprint-override""><code>Promise.all([fetchAll('123'), fetchAll('321')]).then((responses) => {   setPending(false) } </code></pre>",,,false
"{'account_id': 7339236, 'reputation': 96, 'user_id': 5589483, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/23dbddbe8f5914fc84b49d5e83ea304d?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'jj29', 'link': 'https://stackoverflow.com/users/5589483/jj29'}",False,0,1669564792,1669564792,74591553,74591202,CC BY-SA 4.0,"<p>You can have multiple async calls using <code>Promise.all()</code> or <code>Promise.allSettled()</code> depending on your use case.</p> <pre><code>setPending(true) try {   await Promise.all([() => fetchAll(1), () => fetchAll(2)]) } finally {   setPending(false) } </code></pre> <p>This will wait for all calls to complete (or one to fail)</p>",,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",False,0,1669562443,1669562443,74591224,74591202,CC BY-SA 4.0,"<p><code>fetchDetails</code> returning a promise, you need to use async/await</p> <pre><code>const fetchAll = async (userId) => {      try {         await fetchDetails(userId)     } catch (err) {         console.log(err)     } finally {         setPending(false)     }  } </code></pre>",,,false
"{'account_id': 12583672, 'reputation': 25348, 'user_id': 9153448, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/ySWKP.jpg?s=256', 'display_name': 'DecPK', 'link': 'https://stackoverflow.com/users/9153448/decpk'}",True,2,1669816868,1669561614,74591117,74591093,CC BY-SA 4.0,"<p>You can <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map"" rel=""nofollow noreferrer""><code>map</code></a> over source array as:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const srcArr = [""www.example.com"", ""www.example2.com"", ""www.example3.com""]  const result = srcArr.map(original => ({ original, thumbnail: `${original}/thumbnail`})); console.log(result)</code></pre>  </div>  </div>  </p>",1669816868.0,,false
"{'account_id': 27060206, 'reputation': 1, 'user_id': 20612326, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/363a783563451b7e25a306013295fa7e?s=256&d=identicon&r=PG', 'display_name': 'king', 'link': 'https://stackoverflow.com/users/20612326/king'}",False,0,1669562190,1669561955,74591156,74591093,CC BY-SA 4.0,"<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map"" rel=""nofollow noreferrer""><code>Array.prototype.map()</code></a> is a good choice.</p> <p>Maybe you should learn some prototype methods of Array <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"" rel=""nofollow noreferrer"">here</a>.</p>",1669562190.0,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",False,2,1669561583,1669561583,74591115,74591093,CC BY-SA 4.0,"<p>Just use <code>map</code></p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const list = [    ""www.example.com"",""www.example2.com"",""www.example3.com"",    ]  const result = list.map(item => {   return {      original: item,      thumbnail: `${item}/thumbnail`,   } })  console.log(result)</code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 6675605, 'reputation': 2157, 'user_id': 5150335, 'user_type': 'registered', 'accept_rate': 77, 'profile_image': 'https://i.sstatic.net/3EwsD.png?s=256', 'display_name': 'mlz7', 'link': 'https://stackoverflow.com/users/5150335/mlz7'}",False,0,1674109683,1674109683,75168467,74591085,CC BY-SA 4.0,"<p>In <code>package.json</code>:</p> <p>in the <code>scripts</code> section, add <code>--loader:.png=file</code> to the following line:</p> <pre><code>""build"": ""esbuild app/javascript/*.* --bundle --sourcemap --outdir=app/assets/builds --public-path=assets"", </code></pre> <p>ex:</p> <pre><code>""build"": ""esbuild app/javascript/*.* --bundle --sourcemap --outdir=app/assets/builds --public-path=assets --loader:.png=file"", </code></pre> <p>This will allow you to load <code>png</code> files.</p> <p>Then in <code>jsx</code> you can just import and use your image like normal:</p> <p>ex.</p> <pre><code>import React from 'react' import Image from '../path/to/your/image.png'  export default () => (   <img src={Image} /> ) </code></pre> <p>See <a href=""https://esbuild.github.io/content-types/#file"" rel=""nofollow noreferrer"">here</a> for more information.</p>",,,false
"{'account_id': 26634366, 'reputation': 19, 'user_id': 20251051, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/abbc65c30156c49c41eb4c2f720accf4?s=256&d=identicon&r=PG', 'display_name': 'elgueromiranda', 'link': 'https://stackoverflow.com/users/20251051/elgueromiranda'}",False,-3,1669909295,1669909295,74644515,74591085,CC BY-SA 4.0,<p>I setup rails react on rails instead and with web packer its very simple to import images</p>,,,false
"{'account_id': 2867804, 'reputation': 1809, 'user_id': 2461748, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/63fe174bb61340aeefc533c259951285?s=256&d=identicon&r=PG', 'display_name': 'antokhio', 'link': 'https://stackoverflow.com/users/2461748/antokhio'}",True,1,1671053995,1669577364,74593157,74591007,CC BY-SA 4.0,"<p>this should be possible via so called stencils, and your reference is correct.</p> <p>However the stencil technique would not work with 2d text, because itâs using special shader instructions that are not supported by text 2d shader.</p> <p>The text 2d is just grid objects with characters as texture, using special shader, and thatâs not includes stencil semantics needed for it to work. (You can get the same by extending shader)</p> <p>You should be able to use text 3d as stencil like so:</p> <pre><code><Mask id={1}>   <Text3D/> <Mask/> </code></pre> <p>Then:</p> <pre><code>const stencil = useMask(1)  <Text3D   bevelEnabled={false}       curveSegments={32}   height={0.0}   lineHeight={0.5}   letterSpacing={-0.06}   size={1.5}   font=""..."">    {`hello\nworld`}    <meshStandardMaterial {...stencil}/> </Text3D> </code></pre>",1671053995.0,,false
"{'account_id': 7339236, 'reputation': 96, 'user_id': 5589483, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/23dbddbe8f5914fc84b49d5e83ea304d?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'jj29', 'link': 'https://stackoverflow.com/users/5589483/jj29'}",True,1,1669566506,1669566506,74591776,74590981,CC BY-SA 4.0,"<p>It is a bit hard to say without knowing what's under the hood in <code>MockedProvider</code> provider. However, in my experience with mocks they should always match (1:1), especially if it works when you comment out <code>{ variables: { id: idValue }, skip: !idValue }</code> inside <code>useComponentRespQuery</code>.<br /> I would suggest double checking <code>zoneMock</code> to make sure that it matches what you expect</p>",,,false
"{'account_id': 25526487, 'reputation': 503, 'user_id': 19315471, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/015e703966dfcd7e41bfb3433f94a0d8?s=256&d=identicon&r=PG', 'display_name': 'user19315471', 'link': 'https://stackoverflow.com/users/19315471/user19315471'}",True,0,1684585087,1684585087,76295193,74590967,CC BY-SA 4.0,"<p>I too have noticed that canvas element appearing without a reason.<br /> Turned out the React Dev tools extension was the culprit responsible for that canvas element (at least in Firefox).</p> <p>From Firefox React Dev tools source code:</p> <pre><code>const root = window.document.documentElement; root.insertBefore(canvas, root.firstChild); </code></pre>",,,false
"{'account_id': 2353077, 'reputation': 997, 'user_id': 2061500, 'user_type': 'registered', 'accept_rate': 57, 'profile_image': 'https://www.gravatar.com/avatar/79dfd0f19cb1c2c6e38e558e0cee76bf?s=256&d=identicon&r=PG', 'display_name': 'Erwin van Hoof', 'link': 'https://stackoverflow.com/users/2061500/erwin-van-hoof'}",False,0,1669570677,1669570677,74592321,74590907,CC BY-SA 4.0,"<p>If I get you correctly you can Post many times before the first request is processed? You should create a queue which handles the create requests one at a time for the create endpoint (ideally per userId). Here you can read more about queues: (<a href=""https://docs.nestjs.com/techniques/queues"" rel=""nofollow noreferrer"">https://docs.nestjs.com/techniques/queues</a>)</p>",,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",True,1,1669562756,1669561017,74591041,74590706,CC BY-SA 4.0,"<p>Currently every time the state updates, <strong>boxMarkup</strong> function gets executed. So every time only one of your if conditions gets executed and only 1 item is returning from the <strong>boxMarkup</strong> function.</p> <p>In order to fix it, you should declare a new state which holds all of your elements and then update it in your <strong>boxMarkup</strong> function every time your <strong>data</strong> gets updated:</p> <pre class=""lang-js prettyprint-override""><code>const [boxItems, setBoxItems] = useState([]);  useEffect(() => {   boxMarkup(); }, [data]);  function boxMarkup(){   const newBox = data.length == 0 ? """" : data.length === 3 ? null :     (       <div className=`col-${data.length}`>         data.map(item => (           <Box height={item.height + ""px""} width={item.height + ""px""} color={item.color} />         )       </div>     );   setBoxItems([...boxItems, newBox]); } </code></pre> <p>And finally render your UI:</p> <pre class=""lang-js prettyprint-override""><code>return(     <div>         <EmailSent message={emailSentMessage.message} />         {boxItems}     </div> ); </code></pre> <p><strong>Update:</strong> You faced key error when <strong>data.length === 1</strong> because you tried to use data.height, data.width, data.color. Instead you should use data[0].height, data[0].width, data[0].color.</p>",1669562756.0,,false
"{'account_id': 7808373, 'reputation': 3599, 'user_id': 5905466, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/cdd5418ea77bfc7524a7cfa5b464dd36?s=256&d=identicon&r=PG', 'display_name': 'Michael Bahl', 'link': 'https://stackoverflow.com/users/5905466/michael-bahl'}",True,0,1669561387,1669561387,74591090,74590620,CC BY-SA 4.0,"<p>Check your sample:</p> <ol> <li>screenOptions is a property of Navigator</li> <li>Each opening bracket has a closing one</li> </ol> <pre class=""lang-js prettyprint-override""><code>function BottomTabNavigator() {        return (           <Tab.Navigator>            <Tab.Screen name=""Dashboard"" component={DashboardScreen} />            screenOptions={({ route }) => ({ // Is property of Navigator               tabBarIcon: ({ focused, color, size }) => {                 let iconName;                 if (route.name === 'Dashboard') {                   iconName = focused                     ? 'ios-speedometer'                     : 'ios-speedometers';                 } else if (route.name === 'Settings') {                   iconName = focused ? 'ios-list' : 'ios-list-outline';                 } // closing brackets are missing            <Tab.Screen name=""Settings"" component={TabTwoScreen} />          </Tab.Navigator>        );      } </code></pre> <p>It should look like:</p> <pre class=""lang-js prettyprint-override""><code>const Tab = createBottomTabNavigator();  function BottomTabNavigator() {   return (     <Tab.Navigator       screenOptions={({route}) => ({         tabBarIcon: ({focused, color, size}) => {           let iconName;           if (route.name === 'Dashboard') {             iconName = focused ? 'ios-speedometer' : 'ios-speedometers';           } else if (route.name === 'Settings') {             iconName = focused ? 'ios-list' : 'ios-list-outline';           }         }       })}     >       <Tab.Screen name='Dashboard' component={DashboardScreen} />       <Tab.Screen name='Settings' component={TabTwoScreen} />     </Tab.Navigator>   ); } </code></pre>",,,false
"{'account_id': 26622415, 'reputation': 876, 'user_id': 20241005, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/nTyPF.png?s=256', 'display_name': 'MalwareMoon', 'link': 'https://stackoverflow.com/users/20241005/malwaremoon'}",False,0,1669568563,1669568563,74592037,74590526,CC BY-SA 4.0,"<p>I assume that you are using react router v5 as switch is is not in v6. In that case the import for switch is following:</p> <pre><code>import { Switch } from ""react-router""; </code></pre> <p>You are importing it from <code>react-router-dom</code> while it should be from <code>react-router</code></p>",,,false
"{'account_id': 2432151, 'reputation': 1731, 'user_id': 2122822, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RNpbU.jpg?s=256', 'display_name': 'Azzy', 'link': 'https://stackoverflow.com/users/2122822/azzy'}",False,0,1669560924,1669560283,74590961,74590474,CC BY-SA 4.0,"<p>Here is a approach with immer that may guide you to a proper solution This is not a generic approach but makes things easier by relying on <a href=""https://immerjs.github.io/immer/patches/"" rel=""nofollow noreferrer"">immer</a></p> <pre><code>import produce, { applyPatches, enablePatches } from ""immer""; import { difference } from ""lodash"";  // once in your app enablePatches();  let obj = {   Name: ""Ajmal"",   age: 25,   email: ""ajmaln@gmail.com"",   contact: [12345678, 987654321],   address: {     houseName: ""ABC"",     street: ""XYZ"",     pin: 67891   } };  let obj2 = {   Name: ""Ajmal"",   age: 25,   email: ""something@gmail.com"",   contact: [12345678, 11111111],   address: {     houseName: ""ABC"",     street: ""XYZ"",     pin: 111   } }; </code></pre> <p>Gettig the patch updates</p> <pre><code> let fork = { ...obj };     let changes = [];      const updatedItem = produce(       fork,       (draft) => {          // object specific updates         draft.Name = obj2.Name;         draft.age = obj2.age;         draft.email = obj2.email;         draft.address.houseName = obj2.address.houseName;         draft.address.street = obj2.address.street;         draft.address.pin = obj2.address.pin;        const originalContact = original(draft.contact);        const contactDiff = difference(obj2.contact, originalContact);        console.log(""diff"", contactDiff);        if (contactDiff?.length) {          draft.contact = contactDiff;        }        },       (patches) => {         changes.push(...patches);       }     );      //Problem here => default values need to be given to state     // so the default values need to be excluded from the patch     let state = { contact: [], address: {} };      const patch = applyPatches(state, changes);      console.log(""patch"", patch); </code></pre> <p>logs changes op</p> <pre><code>contact: Array(1) 0: 11111111 address: Object pin: 111 email: ""something@gmail.com"" </code></pre> <p>Hope this helps you in some way</p> <p>Cheers</p>",1669560924.0,,false
"{'account_id': 26903574, 'reputation': 331, 'user_id': 20480318, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/30b9fdbd8aa847141f738d1dbb43c3be?s=256&d=identicon&r=PG', 'display_name': 'ColdDarkness', 'link': 'https://stackoverflow.com/users/20480318/colddarkness'}",False,0,1669557732,1669557732,74590642,74590474,CC BY-SA 4.0,"<p>Mista NewbeedRecursion to your service:</p> <pre><code>const compare = (obj1, obj2) => {   const keys = Object.keys(obj1);    const payload = {};    keys.forEach((el) => {     const first = obj1[el];     const second = obj2[el];     let check;     if (first !== second) {       if (first instanceof Object && !(first instanceof Array))         check = compare(first, second);       payload[el] = check || second;     }   });   return payload; }; </code></pre>",,,false
"{'account_id': 21648688, 'reputation': 9, 'user_id': 15969634, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Ggq8-QsPKdKC4GFacPYAS0HLON0z282d-5K8VYoXw=k-s256', 'display_name': 'Muhammad', 'link': 'https://stackoverflow.com/users/15969634/muhammad'}",False,-1,1711800713,1711800713,78247857,74590335,CC BY-SA 4.0,"<p>you need to kill all running processing for that port, the one your app is using</p> <p>ex:</p> <pre><code>lsof -i :3000  kill <PID> </code></pre> <p>if you are running more then one next js apps in droplet or system, for me stopping them all then building worked.</p>",,,false
"{'account_id': 25323693, 'reputation': 340, 'user_id': 19144656, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gghk4LFtka1QeYZ8ru1t0VvOv14Yov-Me-8Xy2I-w=k-s256', 'display_name': 'Smit Gabani', 'link': 'https://stackoverflow.com/users/19144656/smit-gabani'}",False,4,1673920689,1673919846,75141272,74590335,CC BY-SA 4.0,"<p>The optimization takes place because the ec2 instance <strong>does not have enough memory</strong> for <strong>building</strong> available for your Next app to run.</p> <p>Again, the problem will arise only when running the command</p> <pre><code>$ npm run build error due to not having enough memory </code></pre> <p>and not when you start the next app or run the command</p> <pre><code>$ npm start should work as too much memory is not needed. </code></pre> <p>You have already tried increasing the memory (I do not recommend that as you are changing your instance and paying more for a task that you will run only once and that too can be done on any other machine) by changing the instance type. You can try some other ways:</p> <p>Option 1: You can try to <strong>optimize</strong> your Next.js app by <strong>removing unnecessary dependencies</strong> and <strong>minimizing the size of your assets</strong>.</p> <p>Option 2: You can try <strong>building the Next.js app on another machine</strong> (does not have to be Linux) with more memory and then transfer the build to the EC2 instance using ssh or WinSCP.</p> <p>Option 3: use a service like AWS Elastic Beanstalk - This service automatically handles provisioning, load balancing, and automatic scaling for your Next.js application.</p> <p>Option 1 may not be practical so I <strong>recommend trying option 2 or 3</strong>.</p>",1673920689.0,,false
"{'account_id': 8491136, 'reputation': 2916, 'user_id': 6367424, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2w16e.jpg?s=256', 'display_name': 'timotgl', 'link': 'https://stackoverflow.com/users/6367424/timotgl'}",True,0,1669557854,1669557854,74590657,74590088,CC BY-SA 4.0,"<p>You should not use <code>createAsyncThunk</code> at all, because <code>localStorage.setItem()</code> is not async: <a href=""https://stackoverflow.com/questions/20231163/is-html5-localstorage-asynchronous"">Is HTML5 localStorage asynchronous?</a></p> <p>There is also no need to track this operation with a <code>loading</code> flag. You can simply assume that it happens immediately.</p> <p>What you want to do is:</p> <pre><code>const initialState = {     // Load previously persisted user or set it to null if none exists.     user: JSON.parse(localStorage.getItem('__MY_REACT_APP_USER__')) } </code></pre> <p>And then for the slice:</p> <pre><code>const userSlice = createSlice({     name: 'user',     initialState,     reducers: {         setUser(state, action) {             state.user = action.payload;             localStorage.setItem('__MY_REACT_APP_USER__', JSON.stringify(action.payload));         },     } }); </code></pre> <p>Why <code>__MY_REACT_APP_USER__</code> and not just <code>user</code> or <code>USER</code> or <code>USER_KEY</code>? You're risking a name collision by using a common word, other libraries might write to localStorage as well. It's better to obfuscate it a bit.</p>",,,false
"{'account_id': 708924, 'reputation': 5956, 'user_id': 608042, 'user_type': 'registered', 'accept_rate': 62, 'profile_image': 'https://www.gravatar.com/avatar/43170c54502dcfebd4c8fb32fb4748d3?s=256&d=identicon&r=PG', 'display_name': 'Andy', 'link': 'https://stackoverflow.com/users/608042/andy'}",True,0,1669565240,1669565240,74591617,74590056,CC BY-SA 4.0,"<p>The expected behaviour of <a href=""https://www.w3.org/WAI/ARIA/apg/patterns/tabpanel/"" rel=""nofollow noreferrer"">Tabs as per ARIA Practices Guideline (APG)</a> is that the arrow keys on the keyboard change focus within this composite component.</p> <p>Depending on the visual presentation of the tabs, the left and right arrow keys are used for a horizontal arrangement, up and down for vertical ones.</p> <p><a href=""https://react-bootstrap.github.io/components/tabs/"" rel=""nofollow noreferrer"">React-Bootstrapâs Tab component</a> implements the arrow keys, but both up/down and left/right navigate the tabs.</p>",,,false
"{'account_id': 11303727, 'reputation': 31, 'user_id': 8288943, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/4851bfdbe045c1c7a65dd61236653f9f?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'vishnu.k', 'link': 'https://stackoverflow.com/users/8288943/vishnu-k'}",False,0,1669735459,1669698700,74609401,74589907,CC BY-SA 4.0,"<p>I updated the mutation function like this.</p> <pre><code>     const register = async ({ email, password, name, price }) => {       const response = await createUserWithEmailAndPassword(auth, email, password);       return setDoc(doc(usersDb, response.user.uid), { name, price })     };          const Register = () => {              const newUser = useMutation(register);            const submit = () => {         newUser.mutate({ email: ""john@gmail.com"", password: ""123456"", name: ""John"", price: ""20"" });       };            return (         <div>           <button onClick={submit}>register</button>         </div>       );     };  </code></pre> <p>By doing this I can avoid using another useMutation.</p>",1669735459.0,,false
"{'account_id': 13151685, 'reputation': 1034, 'user_id': 9500119, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/8z5mX.jpg?s=256', 'display_name': 'Joel', 'link': 'https://stackoverflow.com/users/9500119/joel'}",False,0,1669551363,1669551363,74589930,74589889,CC BY-SA 4.0,<p>Maybe you have another project running on the same default port.</p> <p>Create a file with name .env in the main directory besides <code>package.json</code> and set PORT variable to desired port number.</p> <p>For example:</p> <p>.env</p> <pre><code>PORT=4200 </code></pre> <p>then try it run again.</p>,,,false
"{'account_id': 27038007, 'reputation': 11, 'user_id': 20593303, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu1YJw1MnfEd3eQOF-ndLMW8qGbF_CtwXOypCE2L=k-s256', 'display_name': 'njouro', 'link': 'https://stackoverflow.com/users/20593303/njouro'}",False,1,1669552596,1669552596,74590065,74589808,CC BY-SA 4.0,"<p>I closed the useMutation call too early, so  accidentally using the comma operator and just returning that config object.</p>",,,false
"{'account_id': 26877426, 'reputation': 361, 'user_id': 20458458, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/QTyWi.jpg?s=256', 'display_name': 'kuuhak-u', 'link': 'https://stackoverflow.com/users/20458458/kuuhak-u'}",False,0,1669551515,1669551165,74589911,74589800,CC BY-SA 4.0,<p>Hey the reason i think you getting undefined is beacause of this line</p> <pre><code>{complete ? <Busket props={props} complete={complete}/>: <Busket />} </code></pre> <p>complete is 'false' by default so it will render the <code><Busket/></code> with no prop/value so the {complete} in your Busket component becomes 'undefined' and if u set 'Complete' to true you will get 'True' in the <code><Busket/></code> becasue you are passing the prop only when the complete/condition is 'true' <code><Busket props={props} complete={complete}/></code></p>,1669551515.0,,false
"{'account_id': 22425702, 'reputation': 4266, 'user_id': 16632344, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/aQbs8.jpg?s=256', 'display_name': 'monim', 'link': 'https://stackoverflow.com/users/16632344/monim'}",True,3,1669758577,1669552140,74590017,74589770,CC BY-SA 4.0,"<p>when the page loads, the <code>setKeysState</code> function gets invoked and it updates the state, updating the state in reactjs causes a re-render and it keeps doing that infinitely. which produces <code>Too many re-renders</code> error.</p> <p>just pass an <strong>initial value</strong> to the <code>useState()</code> hook to initialize the state. like this  :</p> <pre><code>let [keysState, setKeysState] = useState(keys); </code></pre> <p><strong>NOTE :</strong> In your case  You do not need The React <code>useState Hook</code> because you're not tracking the data  (keys in your case, you are  not be updating it  ) just change your component like this  :</p> <pre><code>let keys = [""a"", ""b""];  function App() {    return (     <div>       {keys?.map((key) => (         <li>{key}</li>       ))}     </div>   ); } </code></pre>",1669758577.0,,false
"{'account_id': 19235561, 'reputation': 999, 'user_id': 14056591, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jB7Xv.png?s=256', 'display_name': 'Ovidiu Cristescu', 'link': 'https://stackoverflow.com/users/14056591/ovidiu-cristescu'}",False,2,1669567367,1669554200,74590261,74589770,CC BY-SA 4.0,"<p>While <a href=""https://stackoverflow.com/a/74590017/14056591"">@monim</a>'s answer is great, I feel that you don't need a <code>useState</code> hook if you don't need <code>setKeysState</code></p> <pre class=""lang-js prettyprint-override""><code>import * as ReactDOM from ""react-dom"";  let keys = [""a"", ""b""];  function App() {    return (     <div>       {keys.map((key) => (         <li>{key}</li>       ))}     </div>   ); }  const rootElement = document.getElementById(""root"");  ReactDOM.createRoot(rootElement).render(<App />); </code></pre> <p>EDIT: I put together a series of links that I did not want to lose. If you want to deep dive, here's what I personally saved on the hooks: <a href=""https://github.com/criszz77/react-js-links#hooks"" rel=""nofollow noreferrer"">https://github.com/criszz77/react-js-links#hooks</a></p>",1669567367.0,,false
"{'account_id': 26622415, 'reputation': 876, 'user_id': 20241005, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/nTyPF.png?s=256', 'display_name': 'MalwareMoon', 'link': 'https://stackoverflow.com/users/20241005/malwaremoon'}",False,1,1669555134,1669553911,74590214,74589770,CC BY-SA 4.0,"<p>There seems to be a bit of confusion as to how <code>useState</code> works. You are getting infinite refreshes, because the component re-renders if there is a change to a state. And what is happening there is, that you component loads, you init your state and set value, which triggers re-render and that runs in loop. To solve it just set initial value to keys instead of <code>[]</code></p> <p><strong>Things that no one mentioned</strong></p> <ul> <li>Make states constants as there is, I think, never a good reason to change the fact that it's a state and if you want to change the value you use <code>setKeysState</code></li> <li><code>setKeysState</code> is a function where that you call with the new value of <code>keysState</code>, so do never change value of that state by anything else but <code>setKeysState(newValue)</code>. You are passing something that I'd describe as ?function?. Just pass the value.</li> </ul> <p>Solution:</p> <pre class=""lang-js prettyprint-override""><code>const [keysState, setKeysState] = useState(keys); </code></pre>",1669555134.0,,false
"{'account_id': 6486576, 'reputation': 3723, 'user_id': 5021963, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://i.sstatic.net/t7Qsr.png?s=256', 'display_name': 'Edvaldo Silva de Almeida Jr', 'link': 'https://stackoverflow.com/users/5021963/edvaldo-silva-de-almeida-jr'}",False,0,1669552756,1669550888,74589885,74589770,CC BY-SA 4.0,"<p>Many different problems with this code, and this allow me to tell you that you haven't got the way of React hooks yet.</p> <p>First of all, you don't need to write this <code>setKeyState</code> function. The <code>useState</code> hook will return it when invoked. <a href=""https://i.sstatic.net/O1tyu.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/O1tyu.jpg"" alt=""enter image description here"" /></a></p> <p>Second, if you want to provide an initial value to your <code>keyState</code>, you should do it using the <code>setState</code> hook, just like this:</p> <pre><code>const [keyState, setKeyState] = useState([""a"",""b""]); </code></pre> <p>This would create the <code>keyState</code> variable and initialize it with <code>[""a"",""b""]</code>, as well as provide the <code>setKeyState</code> function.</p> <p>I believe this is the main problem with this code. This redundance is causing the perpetual re-render.</p> <p>Finally, you should have some way to react to state changes. This will be given by the <code>useEffect</code> hook.</p> <pre><code>useEffect(() => {     // Things to perform when `stateKeys` changes },[stateKeys]) </code></pre> <p>The second parameter this hook receives <code>[stateKeys]</code> is exactly to prevent a perpetual re-rendering. It tells the hook it should run only when the variables inside this array changes.</p> <p>It seems to me, allow please don't be offended for me to say, that you missed something in React way of doing things. Specially when it comes to React Hooks. I suggest you to read the documentation again:</p> <p><a href=""https://reactjs.org/docs/hooks-state.html"" rel=""nofollow noreferrer"">https://reactjs.org/docs/hooks-state.html</a></p>",1669552756.0,,false
"{'account_id': 7713419, 'reputation': 369, 'user_id': 5841996, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-wKKxy6KqVbk/AAAAAAAAAAI/AAAAAAAARSE/jVUT9Zj9Rp8/photo.jpg?sz=256', 'display_name': 'yanai edri', 'link': 'https://stackoverflow.com/users/5841996/yanai-edri'}",False,1,1669620527,1669620527,74597292,74589716,CC BY-SA 4.0,"<p>you can use a Proxy - to redirect all your request to a specific server (one or more) this is good only for development</p> <p><a href=""https://create-react-app.dev/docs/proxying-api-requests-in-development/"" rel=""nofollow noreferrer"">https://create-react-app.dev/docs/proxying-api-requests-in-development/</a></p> <p>when you use proxy - cors is not a issue</p>",,,false
"{'account_id': 15269102, 'reputation': 141, 'user_id': 11016820, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/eb2e612437032e8a967b4960146d3bf6?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Shadow', 'link': 'https://stackoverflow.com/users/11016820/shadow'}",True,1,1669718114,1669605814,74595664,74589688,CC BY-SA 4.0,"<p>Here you have missed the optional chaining before map function as it validates whether array you are mapping is invalid or not.</p> <pre><code>    {mocktest?.questionSet?.map((qSet) => (                   <div key={qSet._id} id=""body""> </code></pre>",1669718114.0,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",True,1,1669548888,1669548888,74589663,74589583,CC BY-SA 4.0,"<p>Well there are some best practices over the internet about React/Next folder structure. Like these links:</p> <ol> <li><a href=""https://www.xenonstack.com/insights/reactjs-project-structure#:%7E:text=Components%20are%20the%20building%20blocks,widely%20used%20in%20the%20project."" rel=""nofollow noreferrer"">React.js project structure</a></li> <li><a href=""https://www.robinwieruch.de/react-folder-structure/"" rel=""nofollow noreferrer"">React folder structure</a></li> <li><a href=""https://climbtheladder.com/10-next-js-folder-structure-best-practices/"" rel=""nofollow noreferrer"">Next.JS folder structure best practices</a></li> </ol> <p>Based on my experience with React and Next.JS for about 4 years, it's good to have a <strong>services</strong> folder and put all your API calls inside that. Also it's better to have a base class for your requests and error handlers.</p> <p>But at the end it's you that makes the final decision as the developer that which folder structure fits your project the most.</p>",,,false
"{'account_id': 22425702, 'reputation': 4266, 'user_id': 16632344, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/aQbs8.jpg?s=256', 'display_name': 'monim', 'link': 'https://stackoverflow.com/users/16632344/monim'}",False,1,1669551011,1669551011,74589894,74589581,CC BY-SA 4.0,"<p>You might get this error because you are mapping over options and showing them in <code>MenuItem</code> while these options aren't yet loaded. <strong>try :</strong></p> <pre><code></MenuItem>     {currentOptions && currentOptions.map((el, i) => (       <MenuItem key={i} value={el}>{el}</MenuItem> </code></pre>",,,false
"{'account_id': 25017061, 'reputation': 21, 'user_id': 18876079, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/fe07d02ba66d36ff48c8dcc8ffbf27ec?s=256&d=identicon&r=PG', 'display_name': 'Michael Sarto', 'link': 'https://stackoverflow.com/users/18876079/michael-sarto'}",False,1,1680816366,1680816243,75953905,74589482,CC BY-SA 4.0,"<p><strong>EXPO SOLUTION:<br> THIS IS NOT WORKING FOR ANDROID AND I DID NOT TEST FOR WEB</strong><br> <strong>I'm still figuring out how to get the same result in Android, so if some knows how to do it plase answer this quesiton</strong><br> In iOS you can use onShouldStartLoadWithRequest event in your webVIew.<br> Just add your custom function to handle the image and make it available for sharing.<br> Here's an example<br> webView</p> <pre><code>               <WebView                         ref={webView}                         domStorageEnabled = {true}                         onLoad={onLoad}                         useWebKit={true}                         startInLoadingState={true}                         allowUniversalAccessFromFileURLs={true}                         javaScriptEnabled={true}                         mixedContentMode={'always'}                         onShouldStartLoadWithRequest={onShouldStartLoadWithRequest} // this is your event handler                         allowFileAccess={true}                         allowsBackForwardNavigationGestures={true}                         cacheEnabled={false}                         originWhitelist={[""*""]}                         source={{ uri: urlLoad }}                         style={{  backgroundColor: '#fcfcfc',marginTop:20 }}                      />  </code></pre> <br>  And the function used for handle the event<br> <pre><code>function onShouldStartLoadWithRequest(event) {     const { url } = event;          if(url.indexOf('data:image/png;base64,')>=0){                  downloadImage(url.split('data:image/png;base64,').pop(),'filename')         return false;     }          return true; } </code></pre> <br> And the actual function that makes the logic<br> <pre><code>const downloadImage = async (base64String, filename) => {      const downloadDir = FileSystem.documentDirectory + 'images/';     const imagePath = downloadDir + filename + '.png';     await FileSystem.makeDirectoryAsync(downloadDir, { intermediates: true });     await FileSystem.writeAsStringAsync(imagePath, base64String, { encoding: FileSystem.EncodingType.Base64 });      await FileSystem.getContentUriAsync(imagePath)         .then(uri => {             Sharing.shareAsync(uri);         })         .catch(error => {             console.error(error);         }); }; </code></pre>",1680816366.0,,false
"{'account_id': 12263183, 'reputation': 69, 'user_id': 8950329, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-6K4w4KIbDn4/AAAAAAAAAAI/AAAAAAAACc0/fot5jssbzo4/photo.jpg?sz=256', 'display_name': 'Tunji Abioye', 'link': 'https://stackoverflow.com/users/8950329/tunji-abioye'}",False,2,1675718320,1675718320,75366682,74589478,CC BY-SA 4.0,<p>You can create a <code>tawk.d.ts</code> file and place <code>declare module '@tawk.to/tawk-messenger-react';</code> in it. this should work.</p>,,,false
"{'account_id': 19618400, 'reputation': 2016, 'user_id': 14359374, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/245b200b2a1bbf9e36dbcc1afa9564f7?s=256&d=identicon&r=PG', 'display_name': 'udoyhasan', 'link': 'https://stackoverflow.com/users/14359374/udoyhasan'}",True,1,1669550914,1669549738,74589755,74589412,CC BY-SA 4.0,"<h3>Algorithm to sort your data</h3> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>// Your response data const data = [    {       ""Maintroom"":""221"",       ""MaintroomName"":""gogi"",       ""Plsectn"":""22"",       ""PlsectnName"":""pardehan""    },    {       ""Maintroom"":""222"",       ""MaintroomName"":""nahaleymenash"",       ""Plsectn"":""22"",       ""PlsectnName"":""pardehan""    },    {             ""Maintroom"":""231"",       ""MaintroomName"":""gvul"",       ""Plsectn"":""23"",       ""PlsectnName"":""meshulash""    },    {             ""Maintroom"":""232"",       ""MaintroomName"":""daro"",       ""Plsectn"":""23"",       ""PlsectnName"":""meshulash""    }, ];  // Variable to track duplicate keys (PlsectnName) let keys = [];  // Result after sorting the data let result = [];  // Algorithm to sort the data data.forEach((obj) => {   if(!keys.includes(obj.PlsectnName)){     result.push({       title: obj.PlsectnName,       checked: false,       data: [         { key: obj.MaintroomName, value: obj.Maintroom, checked: false }       ]     });     keys.push(obj.PlsectnName);   }      else {     result.forEach((subObj,index) => {       if(subObj.title == obj.PlsectnName){         subObj.data = [...subObj.data, { key: obj.MaintroomName, value: obj.Maintroom, checked: false }]         result[index] = subObj;       }     });   } })  // Log the result console.log(result)</code></pre>  </div>  </div>  </p> <p>(Note: If you want to set the <em><strong><code>value</code></strong></em> as <em><strong><code>false</code></strong></em> then change <em><strong><code>value: obj.Maintroom</code></strong></em> to <em><strong><code>value: false</code></strong></em>)</p> <p><br/><br/></p> <h3>Implementing the Algorithm in your <em><strong><code>useEffect</code></strong></em> function.</h3> <pre class=""lang-js prettyprint-override""><code>// Algorithm as function to sort your data const sortData = (data) => {     // Variable to track duplicate keys (PlsectnName)     let keys = [];      // Result after sorting the data     let result = [];      // Algorithm to sort the data     data.forEach((obj) => {         if(!keys.includes(obj.PlsectnName)){             result.push({                 title: obj.PlsectnName,                 checked: false,                 data: [                     { key: obj.MaintroomName, value: obj.Maintroom, checked: false }                 ]             });             keys.push(obj.PlsectnName);         }            else {             result.forEach((subObj,index) => {                 if(subObj.title == obj.PlsectnName){                     subObj.data = [...subObj.data, { key: obj.MaintroomName, value: obj.Maintroom, checked: false }]                     result[index] = subObj;                 }             });         }     })      // return the result     return result; }  // Your function useEffect(() => {     BtpBridgeModule.loadDataFromSdk(         'GushSet',         [],         { PlantID: userData.plant, LocationID: userData.LocationID },         undefined,         0,     ).then(function (dataResolved) {         let aResults = JSON.parse(dataResolved).value;         // Added code         let sortedResult = sortData(aResults)         // Here sortedResult is your final data     }); }, [userData.LocationID, userData.plant]); </code></pre>",1669550914.0,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",True,0,1669546930,1669546674,74589428,74589399,CC BY-SA 4.0,"<p>Can't do multiple assigning in one line. add separate lines</p> <pre><code>const onEdit = (item) => {   console.log(item.Content)   const content = {...item.Content }   content.contentEditable = ""true"";   return content } </code></pre>",1669546930.0,,false
"{'account_id': 19861207, 'reputation': 182, 'user_id': 14549532, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/yhuJa.jpg?s=256', 'display_name': 'Erik Metz', 'link': 'https://stackoverflow.com/users/14549532/erik-metz'}",False,0,1669546178,1669546178,74589365,74589364,CC BY-SA 4.0,"<p>Here are two possibilities:</p> <ol> <li><p>view solution</p> <pre><code>import React, { useEffect, useRef, useState } from 'react' import { renderHook, RenderHookResult, waitFor } from '@testing-library/react'  interface Iref {   current: any }  const useCustomHookView = (   view: RenderHookResult<React.RefObject<Iref>, unknown> ): {   initializedView: boolean } => {   const [initializedView, setInitializedView] = useState<boolean>(false)    useEffect(() => {     if (view && view.result) {       console.log({ viewResult: view.result.current })     }     setInitializedView(true)   }, [view])   return { initializedView } }  describe('useRefMock', () => {   beforeEach(() => {     jest.clearAllMocks()   })     it('view', async () => {       const view = renderHook(() =>         useRef<Iref>({ current: 'my fake' })       )        const { result, rerender } = renderHook(() => useCustomHookView(view))       rerender()       expect(result.current.initializedView).toBeTruthy()     }) }) </code></pre> </li> <li><p>ref solution</p> <pre><code>import React, { useEffect, useRef, useState } from 'react' import { renderHook, RenderHookResult, waitFor } from '@testing-library/react'  interface Iref {   current: any }  const useCustomHookRef = (   ref: () => React.RefObject<Iref> ): {   initializedRef: boolean } => {   const [initializedRef, setInitializedRef] = useState<boolean>(false)    useEffect(() => {     if (ref) {       const { current } = ref()       console.log({ refCurrent: current })     }     setInitializedRef(true)   }, [ref])    return { initializedRef } }  describe('useRefMock', () => {   beforeEach(() => {     jest.clearAllMocks()   })    it('ref', async () => {     const ref = (): React.RefObject<Iref> => {       const { result } = renderHook(() => useRef<Iref>({ current: 'my fake' }))        console.log({ resultCurrent: result.current })        return result     }      const { result, rerender } = renderHook(() => useCustomHookRef(ref))     rerender()     expect(result.current.initializedRef).toBeTruthy() }) </code></pre> </li> </ol>",,,false
"{'account_id': 16262221, 'reputation': 584, 'user_id': 11743253, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/WxNYSQRw.jpg?s=256', 'display_name': 'Elvin', 'link': 'https://stackoverflow.com/users/11743253/elvin'}",False,0,1669547810,1669547318,74589496,74589347,CC BY-SA 4.0,"<pre><code> useEffect(() => {     handleName(name);     handleEmail(email);      }, [name, email, isEmailValid, isNameValid,goNext,isEmailBlank, isNameBlank]) </code></pre> <p>Please just comment <code>useEffect</code> and then check, you are setting name and email with the dependency of name and email, which will cause an <code>infinity</code> loop.</p> <p>Just comment and test, maybe the issue is not related toast related that one.</p>",1669547810.0,,false
"{'account_id': 5916539, 'reputation': 1261, 'user_id': 4655177, 'user_type': 'registered', 'accept_rate': 78, 'profile_image': 'https://www.gravatar.com/avatar/07af988150e974fcf11399073992c6a5?s=256&d=identicon&r=PG', 'display_name': 'Xiduzo', 'link': 'https://stackoverflow.com/users/4655177/xiduzo'}",True,1,1669555442,1669555442,74590395,74589329,CC BY-SA 4.0,"<p>You could just pass a property to your model component, lets call it <code>onSubmit</code></p> <p><code>export default function MyModal( { onSubmit } ) {</code></p> <p>Within your modal you can handle the submitting with a <code>submitHandler</code> like</p> <pre><code>const submitHandler = () => {  setShowModal(false);  onSubmit(); } </code></pre> <p>Your delete button in the <code>MyModal</code> can call this <code>submitHandler</code> like</p> <pre class=""lang-html prettyprint-override""><code><button onClick={submitHandler}> Delete </button> </code></pre> <p>and within your <code>ManageUser</code> component you could pass the <code>deleteOperation</code> as the <code>onSubmit</code> function like</p> <pre class=""lang-html prettyprint-override""><code><MyModal onSubmit={() => deleteOperation(user.id)}/> </code></pre>",,,false
"{'account_id': 17069417, 'reputation': 30, 'user_id': 12350609, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-u1X25GimUWk/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfNB7ij1MIaXSrP0xAFVRkYCYa_Dg/photo.jpg?sz=256', 'display_name': 'Shiva C', 'link': 'https://stackoverflow.com/users/12350609/shiva-c'}",False,0,1669545891,1669545891,74589322,74589177,CC BY-SA 4.0,"<p>You're getting that error because your are getting null from the api's response and setting the education state as also null. After that in the function return, you are trying to get the length of the null.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const [loading, setLoading] = useState(false) const [education, setEducation] = useState([])  useEffect(() => {          axios.post(""/api/fetch/fetchEducation"", {             id: props.id         })         .then((response) => {             console.log(response)             setEducation(response.data)             setLoading(false)         })         .catch(() => {             setLoading(false)         })     }, [props.id])            return (       <div className=""dashboard-parent"">         <div className=""dashboard"">           {             loading ? <DashboardPending /> :                (                 education !== null ? (                   education.map((edu, index) => {                     return (                         <DashboardListItem first={edu.Course}                             second={edu.Institution} third=                                  {edu.StartDate} fourth={edu.EndDate} key=                           {index} />                     )                 })                 ) : <EmptyDashboard content=""No education added.""                   />               )           }         </div>       </div>  )</code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 115937, 'reputation': 5010, 'user_id': 304179, 'user_type': 'registered', 'accept_rate': 75, 'profile_image': 'https://i.sstatic.net/kqGrL.png?s=256', 'display_name': 'dube', 'link': 'https://stackoverflow.com/users/304179/dube'}",False,0,1673345785,1673345785,75068484,74589003,CC BY-SA 4.0,"<p><code>toBe</code> is like a reference check, but of course these two objects are not the same instance. <code>toBe</code> is rarely the right choice for <em>objects</em></p> <blockquote> <p>Use .toBe to compare primitive values or to check referential identity of object instances. It calls Object.is to compare values, which is even better for testing than === strict equality operator.</p> </blockquote> <p>You can add <a href=""https://www.npmjs.com/package/jest-immutable-matchers"" rel=""nofollow noreferrer""><code>jest-immutable-matchers</code></a> to your project to compare immutable-js objects for <em>value equality</em>:</p> <pre><code>import * as matchers from 'jest-immutable-matchers';  describe('My suite', function () {   beforeEach(function () {     expect.extend(matchers);   });    it('passes if the immutable objects are equal', function () {     expect(Immutable.Map({a: 1})).toEqualImmutable(Immutable.Map({a: 1}));   }); }); </code></pre> <p>If you want to test equality of two immutable objects yourself, use <code>Immutable.is</code>, e.g. <code>Immutable.is(Immutable.Map({a: 1}), Immutable.Map({a: 1}))</code></p>",,,false
"{'account_id': 1536528, 'reputation': 143, 'user_id': 1432422, 'user_type': 'registered', 'accept_rate': 31, 'profile_image': 'https://i.sstatic.net/VJGiW.jpg?s=256', 'display_name': 'Gia Nebieridze', 'link': 'https://stackoverflow.com/users/1432422/gia-nebieridze'}",False,0,1669545034,1669545034,74589233,74588964,CC BY-SA 4.0,"<p>i had my checkbox inside this div with data-toggle=""buttons""</p> <pre><code><div data-toggle=""buttons""></div> </code></pre> <p>which is from bootstrap. it caused not to check my checkboxes. i was going crazy.</p>",,,false
"{'account_id': 26672364, 'reputation': 1216, 'user_id': 20283630, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/8be87e896dd7e8c668dee4cf430b7ce9?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'xenooooo', 'link': 'https://stackoverflow.com/users/20283630/xenooooo'}",True,0,1669542683,1669542683,74589005,74588936,CC BY-SA 4.0,"<p>According to <a href=""https://inertiajs.com/file-uploads"" rel=""nofollow noreferrer"">Inertia Docs</a></p> <blockquote> <p>Uploading files using a multipart/form-data request is not natively supported in some languages for the put,patch or delete methods. The workaround here is to simply upload files using post instead.</p> </blockquote> <p>So instead of using <code>put()</code> when sending an update you can use the <code>post()</code> then add the a new attribute that contains the appropriate request method.</p> <pre><code>Inertia.post(route('article.update', article.id), {   _method: 'put',   // your other attributes here }) </code></pre>",,,false
"{'account_id': 1556832, 'reputation': 385477, 'user_id': 1447675, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/1ca7405e5f147fe30dbd2f23c80cec5a?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'qqq', 'link': 'https://stackoverflow.com/users/1447675/qqq'}",True,0,1669541681,1669541681,74588906,74588885,CC BY-SA 4.0,"<p>You could iterate all conditions and filter the products.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const     conditions = { Brand: [""msi"", ""acer""], Processor: [""intel i7"", ""intel i9""], Refreshrate: [""165 hz""] },     products = [{ Productname: ""Acer Nitro"", Specifications: { Brand: ""acer"", Processor: ""intel i7"", Refreshrate: ""144 hz"" } }, { Productname: ""Msi Katana"", Specifications: { Brand: ""msi"", Processor: ""intel i7"", Refreshrate: ""165 hz"" } }, { Productname: ""Acer Aspire"", Specifications: { Brand: ""acer"", Processor: ""intel i9"", Refreshrate: ""165 hz"" } }],     result = products.filter(product => Object         .entries(conditions)         .every(([key, values]) => values.includes(product.Specifications[key]))     )      console.log(result);</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.as-console-wrapper { max-height: 100% !important; top: 0; }</code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 194657, 'reputation': 49062, 'user_id': 1603351, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/lQ6aZ.jpg?s=256', 'display_name': 'Eugene Astafiev', 'link': 'https://stackoverflow.com/users/1603351/eugene-astafiev'}",False,0,1669554680,1669554680,74590312,74588799,CC BY-SA 4.0,"<p>You can use MS Graph for getting the job done, see <a href=""https://learn.microsoft.com/en-us/azure/app-service/tutorial-connect-app-access-microsoft-graph-as-app-javascript?tabs=azure-powershell"" rel=""nofollow noreferrer"">Tutorial: Access Microsoft Graph from a secured JavaScript app as the app</a> for more information.</p>",,,false
"{'account_id': 26380097, 'reputation': 342, 'user_id': 20033482, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/t1XXI.png?s=256', 'display_name': 'Elbashir Saror', 'link': 'https://stackoverflow.com/users/20033482/elbashir-saror'}",False,0,1670401734,1670401734,74713726,74588762,CC BY-SA 4.0,"<p>You only need one api which is the theater endpoint. I don't know which backend you are using, but you need one response, it should contain all these nested lists. then simply in react, use this logic</p> <pre><code>import React, {useState,useEffect} from 'react'; import axios from 'axios';  function Form() {     const [theater, setTheater] = useState("""")     const [movie, setMovie] = useState("""")     const [showTime, setShowTime] = useState("""")         const [theaterList, setTheaterList] = useState([])     const [movieList, setMovieList] = useState([])     const [showTimeList, setShowTimeList] = useState([])       useEffect(() =>{         fetchTheater();              }, [])      const fetchTheater = () => {       /*using fetch       fetch(`http://localhost:8080/api/v1/theatre`,             {                headers : {                  'Content-Type': 'application/json',                 'Accept': 'application/json'             }                      }).then(res => res.json()).then(             data => {                 console.log(data);                 setTheaterList(data);                 //setReady(true);                 console.log(""theater id: ""+data[0].theaterId);                          }).catch(error => {             console.log(error);         });*/         // using axios         axios.get('http://localhost:8080/api/v1/theatre')       .then(response => {         console.log(response.data)         setTheaterList(response.data);       })       .catch(error => console.log(error));     }       const handleTheaterChange = (event) =>{         let id = event.target.value;         console.log(""theater changed: ""+id);         //setTheater(event.target.value);         theaterList.map(theater => {         console.log(theater.theaterId);         if(theater.theaterId === parseInt(id)){             console.log(""theater found ""+theater.theaterId);             setMovieList(theater.movies);             setTheater(theater);         }              });              }       const handleMovieChange = (event) =>{         let id = event.target.value;         console.log(""movie changed: ""+id);                      movieList.map(movie => {             console.log(movie.movieId);             if(movie.movieId === parseInt(id)){                 console.log(""theater found ""+movie.movieId);                 setShowTimeList(movie.showtimes)                 setMovie(movie);             }         });      }      const handleShowTimeChange = (event) =>{         let id = event.target.value;         console.log(""showtime changed: ""+id);         showTimeList.map(showtime => {             console.log(showtime.showtimeId);             if(showtime.showtimeId === parseInt(id)){                 console.log(""showtime found ""+showtime.showtimeId);                 // furthermore, you can set the seat list                 //setSeatList(showtime.seats)                 setShowTime(showtime);             }         });     }           const saveBtn = (e) => {         e.preventDefault();         console.log('Theater Selected',theater.theaterName);         console.log('Movie Selected',movie.movieName);         console.log('Showtime Selected',showTime.showtimeTime);      }      return (         <div>           <div className=""container-fluid"">             <div className=""row"">               <div className=""col-sm-4"">                 <h2 className=""alert alert-warning"">Movies</h2>                                  <br />                                  <select className=""form-control"" onChange={handleTheaterChange}>                   <option value="""">Choose theatre</option>                   {theaterList.map(theater => (                   <option value={theater.theaterId} key={theater.theaterId}>                     {theater.theaterName}                   </option>                   ))}                 </select>                    <br/>                    <select className=""form-control""  onChange={handleMovieChange}>                     <option value="""">Choose Movie</option>                     {movieList.map(movie => (                       <option value={movie.movieId} key={movie.movieId} >{movie.movieName}</option>                     ))}                   </select>                    <br/>                    <select className=""form-control""  onChange={handleShowTimeChange}>                     <option value="""">Choose showtime</option>                     {showTimeList.map(showtime => (                       <option value={showtime.showtimeId} key={showtime.showtimeId} >{showtime.showtimeDate}</option>                     ))}                   </select>                     <button className=""btn btn-primary"" onClick={saveBtn}>Save</button>               </div>             </div>           </div>               </div>       )     }     export default Form </code></pre> <p>important! change the word 'theatre' to 'theater', or you use either of them, but consistently.</p>",,,false
"{'account_id': 15696449, 'reputation': 111, 'user_id': 11325852, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-Vc_-ZMcIoS0/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfOz8eUEHYu-Zl7ZjaxFwABBWTIKQ/mo/photo.jpg?sz=256', 'display_name': 'Hassan Baig', 'link': 'https://stackoverflow.com/users/11325852/hassan-baig'}",True,1,1669540883,1669540883,74588835,74588695,CC BY-SA 4.0,"<p>This is because, In Axios POST API 2nd parameter is the body object, and 3rd parameter is the config.</p> <p>So, If you pass a null or empty object in the 2nd parameter, and move the config to the 3rd parameter, it would work</p> <pre><code> const { data } = await axios.post(   `http://localhost:6969/v1/api/transferToAccountByAccountNo?senderAccountNo=${id}&receiverAccountNo=${account}&amount=${amount}`,{}, config ); </code></pre>",,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",False,0,1669539448,1669539080,74588673,74588664,CC BY-SA 4.0,"<p>Define state and in component level and remove <code>useEffect</code>. Don't define state and effect in functional level</p> <pre><code>function Todo() {     const [tasks,setTasks] = useState([]);       ..... </code></pre> <p>Then set the values inside the <code>then</code></p> <pre><code> axios.post('http://localhost:8080/Todo',request)     .then(resp=>{        setTasks(resp.data.message);     })     .catch( err=>{         console.log(err);     })       } </code></pre>",1669539448.0,,false
"{'account_id': 6836013, 'reputation': 9, 'user_id': 6497868, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-S4s0tOMuBp4/AAAAAAAAAAI/AAAAAAAAAO8/DEbdyKoD834/photo.jpg?sz=256', 'display_name': 'M Abubkr Afzal', 'link': 'https://stackoverflow.com/users/6497868/m-abubkr-afzal'}",False,0,1669721218,1669721218,74613361,74588530,CC BY-SA 4.0,"<p>you can use .sort function of array in js like this. let's assume PostPropsArray is an array that has all the posts.</p> <pre><code>PostPropsArray.sort((a, b) =>       a.score < b.score ? -1 : 1     ); </code></pre>",,,false
"{'account_id': 6383885, 'reputation': 837, 'user_id': 4952402, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/1113062012053608/picture?type=large', 'display_name': 'Alex Shtromberg', 'link': 'https://stackoverflow.com/users/4952402/alex-shtromberg'}",False,0,1669537727,1669537727,74588558,74588498,CC BY-SA 4.0,"<p>The issue here is for each word you start calculation of index from the beginning: in your case <strong>""Hello world!"".split("" "")</strong> this gives you 2, and you are starting twice from the beginning: <strong>word.split("""")</strong></p> <p>The simplest solution what can I recommend you is to use length of the list as an index for the next element.</p> <pre><code>itemsRef.current[itemsRef.current.length] = el </code></pre>",,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",True,1,1669537499,1669537499,74588539,74588498,CC BY-SA 4.0,"<p>Need to calculate the index based on the parent loop index and current word length</p> <p><code>itemsRef.current[index * word.length + i] = el;</code></p> <p><a href=""https://stackblitz.com/edit/react-ts-sh3oan?file=App.tsx"" rel=""nofollow noreferrer"">Demo</a></p>",,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",True,2,1669536931,1669536931,74588502,74588473,CC BY-SA 4.0,"<p>Loop through the object keys using <code>Object.keys</code> and then access the nested items. Like this</p> <pre><code> const [data] = React.useState({     Computer: [{ title: 'Aftershock' }],     Car: [{ title: 'BMW' }, { title: 'Bentley' }],   });   return (     <div>       {Object.keys(data).map((key) => (         <div>           <h1>{key}</h1>           {data[key].map((product) => (             <div>               <p>{product?.title}</p>               <p>{product?.description}</p>             </div>           ))}         </div>       ))}     </div>   ); </code></pre> <p><a href=""https://stackblitz.com/edit/react-ts-ihzpwh?file=App.tsx"" rel=""nofollow noreferrer"">Demo</a></p>",,,false
"{'account_id': 24494688, 'reputation': 129, 'user_id': 18411181, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GjPj02UFHxSXI3T_A02estQhz-T8J_bmzqE4wwqMA=k-s256', 'display_name': 'Sam Levine', 'link': 'https://stackoverflow.com/users/18411181/sam-levine'}",False,1,1669538739,1669538739,74588643,74588364,CC BY-SA 4.0,"<p>It sounds like you are trying to console.log the updated state inside of the function.</p> <p>""setState is asynchronous call means if synchronous call get called it may not get updated at right time like to know current value of object after update using setState it may not get give current updated value on console. To get some behavior of synchronous need to pass function instead of object to setState."" - <a href=""https://www.geeksforgeeks.org/reactjs-setstate/"" rel=""nofollow noreferrer"">https://www.geeksforgeeks.org/reactjs-setstate/</a></p> <p>For more clean and concise code you should set the state inside of your input:</p> <pre><code><input type=""text"" id=""title"" onChange={(e)=> setName(e.target.value)} value={name} />  <input type=""number"" id=""amount"" onChange={(e)=> setAmount(e.target.value)} value={amount} /> </code></pre>",,,false
"{'account_id': 8696455, 'reputation': 72, 'user_id': 6507647, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Nmy4t.jpg?s=256', 'display_name': 'Sultan', 'link': 'https://stackoverflow.com/users/6507647/sultan'}",False,0,1669535537,1669535537,74588383,74588362,CC BY-SA 4.0,"<p>The easiest way to do it would be to hold the <em>state</em> in a <em>parent component</em> and manipulating it as a props function from the <strong>AddProduct</strong> component. Please check this article. It has a working example. <a href=""https://reactjs.org/docs/lifting-state-up.html"" rel=""nofollow noreferrer"">https://reactjs.org/docs/lifting-state-up.html</a></p>",,,false
"{'account_id': 4703892, 'reputation': 1939, 'user_id': 3829557, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5f38a37eed5c2703f68e8b38b8622bda?s=256&d=identicon&r=PG', 'display_name': 'swithinbank', 'link': 'https://stackoverflow.com/users/3829557/swithinbank'}",False,0,1669631177,1669631177,74599188,74588321,CC BY-SA 4.0,"<p>This is probably an Astro compiler bug (perhaps related to <a href=""https://github.com/withastro/compiler/issues/554"" rel=""nofollow noreferrer"">https://github.com/withastro/compiler/issues/554</a>).</p> <p>As a workaround, you can flip the order here:</p> <pre><code>--- import { TextField, TextFieldProps } from ""@mui/material"";  export type Props = TextFieldProps & {   margin?: string }; --- </code></pre>",,,false
"{'account_id': 18894217, 'reputation': 37, 'user_id': 13783759, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GhcnAwHKUqQU84cP66vOLOVJBpdZeHDDCpfqNlHGQ=k-s256', 'display_name': 'yassine aibi', 'link': 'https://stackoverflow.com/users/13783759/yassine-aibi'}",False,0,1669537521,1669537521,74588540,74588239,CC BY-SA 4.0,"<p>const mystyle = { display: ""block"", };</p>    <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-html lang-html prettyprint-override""><code>  const mystyle = {     display: ""block"",   };    <div className=""Works"" style={slideIndex == 0 ? mystyle : null}></div></code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 18894217, 'reputation': 37, 'user_id': 13783759, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GhcnAwHKUqQU84cP66vOLOVJBpdZeHDDCpfqNlHGQ=k-s256', 'display_name': 'yassine aibi', 'link': 'https://stackoverflow.com/users/13783759/yassine-aibi'}",False,0,1669537260,1669537260,74588521,74588239,CC BY-SA 4.0,"<p>const mystyle = { display: ""block"", };</p>",,,false
"{'account_id': 16829284, 'reputation': 331, 'user_id': 12167701, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/31a99665774f063e8a265c79c391e268?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Developer Nans', 'link': 'https://stackoverflow.com/users/12167701/developer-nans'}",False,0,1669533724,1669533724,74588217,74588160,CC BY-SA 4.0,"<pre><code>const updatedSongs = async () => { songs = await fetch(""/songs"")      setSongs(songs) }  function handleClick() {      updatedSongs()   }   useEffect(() => { updatedSongs() },[]) </code></pre>",,,false
"{'account_id': 27871405, 'reputation': 1, 'user_id': 21281837, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/dca940bccba5b4c6bbdaac613ca35930?s=256&d=identicon&r=PG', 'display_name': 'bk045', 'link': 'https://stackoverflow.com/users/21281837/bk045'}",False,0,1677259269,1677259269,75559568,74588139,CC BY-SA 4.0,<p>Check all the custom css file (including app.css and index.css) that you have added in your project and look for any missing comments. I had used a custom css file where i had forgot to comment out a few lines properly.</p>,,,false
"{'account_id': 24201650, 'reputation': 1, 'user_id': 18159397, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GhHGzPUk8Gd3r9iVXWyOJs40J6cpxmmXlsMglTB=k-s256', 'display_name': 'SHUBHAM DIXIT', 'link': 'https://stackoverflow.com/users/18159397/shubham-dixit'}",False,0,1669535364,1669535364,74588370,74588073,CC BY-SA 4.0,"<p>You are right about it. loading a file in state first of all can be a bad idea because its loaded like an Array Buffer or sort, so its all binary not exact text. Hence search would be a problem.</p> <p>This usecase is more for the backend side to handle in Real World scenarios.</p>",,,false
"{'account_id': 24326039, 'reputation': 2959, 'user_id': 18265570, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJw1Lmm2YL-G4A4poEW-Qun-9z7ilTrZQ5Y0xpAl=k-s256', 'display_name': 'Roopa M', 'link': 'https://stackoverflow.com/users/18265570/roopa-m'}",False,0,1669622451,1669622451,74597604,74588071,CC BY-SA 4.0,"<p>To enable <code>CORS</code> you have to install library in your <code>function</code> folder by using below command</p> <pre><code>npm i cors --save </code></pre> <p>And import  as shown below :</p> <pre><code>const cors = require('cors')({origin: true}); </code></pre> <p>You can also set <code>CORS</code> headers without any library using below snippet</p> <pre><code>response.set('Access-Control-Allow-Origin', '*'); </code></pre> <p>For more information have a look at this <a href=""https://akhromieiev.com/enabling-cors-in-cloud-functions-for-firebase/"" rel=""nofollow noreferrer"">documentation</a> and <a href=""https://stackoverflow.com/q/42755131/18265570"">this thread</a></p> <p>If you are <a href=""https://firebase.google.com/docs/functions/beta/http-events#configuring_cors_cross-origin_resource_sharing"" rel=""nofollow noreferrer"">configuring <code>CORS</code></a> for HTTP function.  Use the <a href=""https://firebase.google.com/docs/functions/beta/reference/firebase-functions.https.httpsoptions#httpshttpsoptionscors"" rel=""nofollow noreferrer"">cors option</a> to control which origins can access your function.</p> <blockquote> <p>If true, allows CORS on requests to this function. If this is a string or RegExp, allows requests from domains that match the provided value. If this is an Array, allows requests from domains matching at least one entry of the array. Defaults to true for https.CallableFunction and false otherwise.</p> <p><strong>Signature:</strong><br /> <code>cors?: string | boolean | RegExp | Array<string | RegExp>;</code></p> </blockquote>",,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",True,0,1669528102,1669528102,74587808,74587785,CC BY-SA 4.0,<p>Need to access absolute url path</p> <pre><code>const { data } = await axios.get(`http://localhost:6969/v1/api/getAccountByAccountNo?accountNo </code></pre>,,,false
"{'account_id': 20956583, 'reputation': 65, 'user_id': 15396919, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-HnZydT7reP0/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucmAdtHFZu9ve643Si_-fiAiHcDH4Q/s96-c/photo.jpg?sz=256', 'display_name': 'user15396919', 'link': 'https://stackoverflow.com/users/15396919/user15396919'}",False,0,1669529087,1669529087,74587880,74587725,CC BY-SA 4.0,<p>I was able to fix this by moving setTabIcon and the MediaFile component to the parent block.</p> <p>Would love suggestions on how to improve this code.</p>,,,false
"{'account_id': 19906405, 'reputation': 74, 'user_id': 14585373, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/WYMnF.jpg?s=256', 'display_name': 'Aneeq Khurram', 'link': 'https://stackoverflow.com/users/14585373/aneeq-khurram'}",False,0,1669527875,1669527875,74587788,74587725,CC BY-SA 4.0,"<p>Make a state variable in the parent component, and then pass that state and setState to the child as props, and then from the child component, you can update the state in the parent component.</p>",,,false
"{'account_id': 2432151, 'reputation': 1731, 'user_id': 2122822, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RNpbU.jpg?s=256', 'display_name': 'Azzy', 'link': 'https://stackoverflow.com/users/2122822/azzy'}",False,1,1669546045,1669524708,74587593,74587549,CC BY-SA 4.0,"<p>It look like a CORS also, but you will be able to sort it out</p> <p>a simple solution in development is to use a local api server, and finally when the app is deployed to the server which is on the same domain as the api, you should get the response, as demonstrated below by making the calls using dev tools.</p> <p>in short: if a api calls work with postman but not through the browser, its mostly due to cors restrictions, then it could be the response type</p> <p>Verifying cors issue by making calls throught dev tools</p> <pre><code> let onSubmit = async () => {     try {       const url = ""https://www.your-domain***.com/getUrlApp.php"";        const formData = new FormData();       formData.append(""k"", ""kk"");       formData.append(""id"", ""dd"");       const data = new URLSearchParams(formData);        const response = await fetch(url, {         method: ""POST"", // *GET, POST, PUT, DELETE, etc.         mode: ""no-cors"", // no-cors, *cors, same-origin         body: data // body data type must match ""Content-Type"" header       });        //const res = response.json();       const buffer = await response.arrayBuffer();        const decoder = new TextDecoder(""iso-8859-1"");       const text = decoder.decode(buffer);        console.log(""text"", text);        return response;     } catch (error) {       console.log(""error"", error);     }   }; </code></pre> <p>To verify the response</p> <ul> <li><p>go https://www.your-domain***.com</p> </li> <li><p>open dev tools => console</p> </li> <li><p>past the function above and run it by typing onSubmit() in the console</p> </li> </ul> <p>you will see the response</p> <p>Hope it helps you in some way</p> <p><a href=""https://i.sstatic.net/oGqxR.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/oGqxR.png"" alt=""enter image description here"" /></a></p>",1669546045.0,,false
"{'account_id': 7339236, 'reputation': 96, 'user_id': 5589483, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/23dbddbe8f5914fc84b49d5e83ea304d?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'jj29', 'link': 'https://stackoverflow.com/users/5589483/jj29'}",False,0,1669567494,1669567494,74591894,74587530,CC BY-SA 4.0,"<p>I would suggest using controlled component</p> <pre><code>function doSomething() {   console.log('Do something') }  export function App(props) {   const [enabled, setEnabled] = React.useState(false)    return (     <div className='App'>       <p onClick={enabled ? doSomething : null}>paragraph</p>       <button onClick={() => setEnabled(true)}>Add event</button>       <button onClick={() => setEnabled(false)}>Remove event</button>     </div>   ); }  </code></pre>",,,false
"{'account_id': 12583672, 'reputation': 25348, 'user_id': 9153448, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/ySWKP.jpg?s=256', 'display_name': 'DecPK', 'link': 'https://stackoverflow.com/users/9153448/decpk'}",False,1,1669526391,1669526073,74587666,74587530,CC BY-SA 4.0,"<p>As far as I understand you are trying to add and remove Event listener on <code>p</code> by clicking on buttons. So If you want to do that then you can simply make use of <code>useRef</code> hook, there is no need of using <code>useState</code> or <code>useEffect</code>. You can take the <code>ref</code> of <code>p</code> using <code>useRef</code> and simply attach eventListener or detach event listener by clicking on buttons.</p> <p><a href=""https://codesandbox.io/s/throbbing-glade-y673fk?file=/src/Comp.js"" rel=""nofollow noreferrer""><code>CODESANDBOX LINK</code></a></p> <pre><code>import { useRef } from ""react"";  export default function Comp() {   const pRef = useRef(null);    function doSomething() {     console.log(""Loggin from doSomething"");   }    function attachEventListener() {     if (pRef.current) pRef.current.addEventListener(""click"", doSomething);   }    function detachEventListener() {     if (pRef.current) pRef.current.removeEventListener(""click"", doSomething);   }    return (     <>       <p id=""test"" ref={pRef}>         paragraph       </p>       <button onClick={attachEventListener}>addEventListener</button>       <button onClick={detachEventListener}>removeEventListener</button>     </>   ); } </code></pre> <hr /> <p>You have to pass a function to <code>onClick</code> instead you are invoking it.</p> <pre><code><button onClick={ setFoo(doSomething); }></button> </code></pre> <p>So above snippet should be</p> <pre><code><button onClick={ () => setFoo(doSomething) }></button> </code></pre>",1669526391.0,,false
"{'account_id': 28493802, 'reputation': 16, 'user_id': 21806048, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c77ca323f0d0088347cf1fe8c1103c88?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Ininity', 'link': 'https://stackoverflow.com/users/21806048/ininity'}",False,0,1683193077,1683193077,76171709,74587334,CC BY-SA 4.0,"<p>This how to get url when image has uploded</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code> reader.onload = (e) => {                 if (file == null) return;                 Swal.fire({                     title: 'Your uploaded picture',                     imageUrl: e.target.result,                     imageAlt: 'The uploaded picture'                 })                 const imageRef = ref(storage, `user/profile/${file.nama + user.uid}`);                 uploadBytes(imageRef, file).then((snapshot) => {                     getDownloadURL(snapshot.ref).then((url) => {                         setImageUrls(url);                     });                 });             }</code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 14206439, 'reputation': 48073, 'user_id': 10262805, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/zQvN3.jpg?s=256', 'display_name': 'Yilmaz', 'link': 'https://stackoverflow.com/users/10262805/yilmaz'}",True,2,1669519309,1669519309,74587261,74586973,CC BY-SA 4.0,"<p>If you are using server components inside <code>app</code> directory, pages have <code>searchParams</code> prop and it automatically populates this prop if you have a query. You do not need to write anything. For example, if you have this <code>http://localhost:3000/?name=any</code>, in <code>page.js</code>, <code>console.log(props)</code>, you get this</p> <pre><code>{ params: {}, searchParams: { name: 'any' } } </code></pre> <p>for the client-side, you can use <a href=""https://beta.nextjs.org/docs/api-reference/use-search-params"" rel=""nofollow noreferrer"">use-search-params</a></p>",,,false
"{'account_id': 20247191, 'reputation': 550, 'user_id': 14849316, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GgzshdfzFzQBhHxPLNtImTv8ft2b8EkCMYgabzG=k-s256', 'display_name': 'Integralist', 'link': 'https://stackoverflow.com/users/14849316/integralist'}",False,1,1669630791,1669630791,74599114,74586950,CC BY-SA 4.0,"<p>If you have Fastly fronting your app, then YES you can definitely use Fastly to provide geolocation information.</p> <p>Just to be clear (as you mentioned you were unfamiliar with Fastly and more generally are a ""new dev""), when I say ""fronting your app"" I mean: when a client (e.g. a user's web browser) makes a request for <a href=""https://yourapp.com/"" rel=""nofollow noreferrer"">https://yourapp.com/</a>, does the request first get routed <em>through</em> Fastly? If it does, then Fastly will proxy the request through to your app and any data you send back through Fastly to the client will likely be cached to make future requests for all your users much quicker (this is one of the many functions Fastly provides).</p> <p>Fastly has lots of products, but for your primary purposes there are two platform services Fastly offers:</p> <ol> <li>Content Delivery (CDN) which is built on Varnish/VCL (if your ops team already has Fastly setup then this is likely what they have).</li> <li>Compute@Edge which is built upon WebAssembly.</li> </ol> <p>I would highly recommend reading the following resources to understand more about the Fastly platform options:</p> <ul> <li><a href=""https://developer.fastly.com/learning/vcl/"" rel=""nofollow noreferrer"">Content Delivery with VCL</a></li> <li><a href=""https://developer.fastly.com/learning/compute/"" rel=""nofollow noreferrer"">Content Delivery with Compute@Edge</a></li> </ul> <p>As far as using Fastly to handle geolocation information, I'll point you to the following resources:</p> <ul> <li><a href=""https://developer.fastly.com/solutions/examples/geo-ip-api-at-the-edge"" rel=""nofollow noreferrer"">https://developer.fastly.com/solutions/examples/geo-ip-api-at-the-edge</a></li> <li><a href=""https://developer.fastly.com/solutions/examples/decorating-origin-requests-with-geoip"" rel=""nofollow noreferrer"">https://developer.fastly.com/solutions/examples/decorating-origin-requests-with-geoip</a></li> </ul> <p>Also search the following page for references to ""geolocation"" as there are quite a few 'examples' that you might be interested in:</p> <ul> <li><a href=""https://developer.fastly.com/solutions/examples/"" rel=""nofollow noreferrer"">https://developer.fastly.com/solutions/examples/</a></li> </ul> <p>I would also suggest having a play around with <a href=""https://fiddle.fastly.dev"" rel=""nofollow noreferrer"">https://fiddle.fastly.dev</a> which let's you use either VCL or any of the supported Compute@Edge languages to test out ideas without needing to have a real Fastly service setup. This will give you a chance to trial out some geolocation code.</p> <p>Lastly, you can also have a read through the first half of <a href=""https://www.integralist.co.uk/posts/fastly-varnish/"" rel=""nofollow noreferrer"">https://www.integralist.co.uk/posts/fastly-varnish/</a> which covers some basics about Fastly's use of Varnish/VCL (but I'd suggest reading the official references, linked above, first).</p> <p>Any other questions, then please feel free to reach out to support@fastly.com who will be happy to help.</p>",,,false
"{'account_id': 2432151, 'reputation': 1731, 'user_id': 2122822, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RNpbU.jpg?s=256', 'display_name': 'Azzy', 'link': 'https://stackoverflow.com/users/2122822/azzy'}",True,1,1669527584,1669527584,74587768,74586708,CC BY-SA 4.0,"<p>Few pointers It is better to give feedback to the user as he enters the data</p> <pre><code>// validate on change const handleChange = e => {      const { name, value } = e.target;      const updatedValues = { ...values, [name]: value };      setValues(updatedValues)      const validationErrors = validateNewUser(updatedValues);      setErrors(validationErrors)  }; </code></pre> <p>On Submit you can return the first error, so that the form can scroll or focus on the field with the error.</p> <pre><code>const handleSubmit = async (e) => {      e.preventDefault();        // this might  not be needed     // you can do validations which need api calls     // but event those can be done on input     // setErrors(validateNewUser(values));      // return error code     const firstErrorKey = Object.keys(error)[0]     if (firstErrorKey !== undefined) {        return { hasError: true }      }      const user = {         firstName: values.firstName,         lastName: values.lastName,         email: values.email,         password: values.password     };      const response = await axios.post(url, user)     console.log(response.data);      // return success code depending on server response     // so u can show success     // return { isSuccess: response.data?.code === 0 }       } } </code></pre> <p>in form you can set a loader set a loader</p> <pre><code> const onFormSubmit = async e => {    try {        setState('submitting')        const response = await handleSubmit(e);        if (response.isSuccess) {         // show alert/toast       }       if (response.hasErrors) {        // focus on first error control         const firstErrorKey = Object.keys(error)[0]         if (firstErrorKey !== undefined) {            // focus on control with error         }      }        setState('success')     } catch(error) {      setState('error')    }  }   <Form onSubmit={handleSubmit}>   </Form> </code></pre> <p>If you can seperate the form input state from api logic it will make the code more maintainable.</p> <p>If possible use libraries like <a href=""https://formik.org/docs/overview#the-gist"" rel=""nofollow noreferrer"">Formik</a>, they handle the form state and allow you to focus on the business part of the code, like api call, validations</p> <p>Thinking of <a href=""https://beta.reactjs.org/learn/reacting-to-input-with-state#thinking-about-ui-declaratively"" rel=""nofollow noreferrer"">component states</a> will also help you design better components</p> <p>Hope it helps in some way,</p> <p>Cheers</p>",,,false
"{'account_id': 2432151, 'reputation': 1731, 'user_id': 2122822, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RNpbU.jpg?s=256', 'display_name': 'Azzy', 'link': 'https://stackoverflow.com/users/2122822/azzy'}",True,0,1669528813,1669528813,74587862,74586580,CC BY-SA 4.0,"<p>Most likey groceryList is not getting updated in function, so it will help to  add the new elements to a array and then finally add them</p> <p>Quick fix</p> <pre><code>setGroceryList(list => [...list, {name : dish.toLowerCase(), qty : 1}]); </code></pre> <p>To move towards a improved solution, the quantity of existing item also needs to be udpated</p> <pre><code>const handleClick = () => {     // can include try catch     setShowList(true);      let newList = []       for (const meal of selectedMeals) {        // include check with ?. and ??        const ingredient = meal.ingredient;        // can add another loop here        const dish = ingredient.find(dish => !groceryList.find(({ name }) => name === dish.toLowerCase()))       if (!dish) {         newList.push({ name : dish.toLowerCase(), qty : 1})       } else {         // depends on what you want to achieve         // increase qty or something        }     }      setGroceryList([ ...groceryList, ...newList ])          } </code></pre> <p>Hope it helps you in some way</p> <p>Cheers</p>",,,false
"{'account_id': 26852198, 'reputation': 7407, 'user_id': 20436957, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/88ZOB.png?s=256', 'display_name': 'John Li', 'link': 'https://stackoverflow.com/users/20436957/john-li'}",False,0,1669522614,1669509331,74586648,74586539,CC BY-SA 4.0,"<p>It seems that this line:</p> <pre><code>onClick={(e) => handleSubmit(e)} </code></pre> <p>Can be as simple as:</p> <pre><code>onSubmit={handleSubmit} </code></pre> <p>Because the event object is passed to the call back function by default.</p> <p>Here is an example over simplified from posted code, and runs in the below snippets for convenience.</p> <p>Hopefully this will help by showing the validating status change in real time.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const Login = () => {   const [username, setUsername] = React.useState("""");   const [message, setMessage] = React.useState("""");    const handleSubmit = (e) => {     e.preventDefault();     if (!username) return;     // ð This can be any action, here it's for display only     setMessage(`Successfully logged in as ${username}`);   };    return (     // ð This will pass event object to function by default     <form onSubmit={handleSubmit}>       {/* Title */}       <h1>Login</h1>       {/* Username */}       <div>         <label>           <b>Username:</b>         </label>         <input           type=""text""           name=""username""           title=""Enter your username in this field""           required           value={username}           onChange={(e) => setUsername(e.target.value)}         />         {/* ð This can display a helper text when invalid */}         <h3 className=""helper-text"">Please enter a user name</h3>       </div>       {/* Login button */}       <div>         <input type=""submit"" value=""Log In"" title=""Click here to login"" />       </div>       {message && <h3 className=""message"">{message}</h3>}     </form>   ); };  const App = () => {   return (     <div className=""app"">       <Login />     </div>   ); };  ReactDOM.render(<App />, document.querySelector(""#root""));</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>input[type=""text""]:invalid {   background-color: ivory;   border: none;   outline: 2px solid red; }  input[type=""text""]:invalid + .helper-text {   color: crimson;   display: flex; }  input[type=""text""] + .helper-text {   display: none; }  input[type=""text""] {   margin-left: 12px; }  input[type=""submit""] {   margin-top: 12px;   padding: 6px; }  .message {   color: green; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div id=""root""></div> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.1.0/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.1.0/umd/react-dom.production.min.js""></script></code></pre>  </div>  </div>  </p>",1669522614.0,,false
"{'account_id': 26249871, 'reputation': 31, 'user_id': 19922816, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AItbvmm-bNcMf4vKyphBgJneI7EJ62PInsJpQX6Uw8a3=k-s256', 'display_name': 'Yoav Karpassi', 'link': 'https://stackoverflow.com/users/19922816/yoav-karpassi'}",False,2,1669508696,1669508340,74586589,74586539,CC BY-SA 4.0,<p>You should set form onSubmit event</p> <p>add: <code><form onSubmit={(e) => handleSubmit(e)}></code></p> <p>instead of your button input onClick event</p> <p>delete: <code>onClick={(e) => handleSubmit(e)}</code></p>,1669508696.0,,false
"{'account_id': 13273650, 'reputation': 1979, 'user_id': 9583747, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/55a7564a35ef3fb27902ad84d4492775?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'about14sheep', 'link': 'https://stackoverflow.com/users/9583747/about14sheep'}",True,0,1669508633,1669507941,74586563,74586455,CC BY-SA 4.0,"<p>There are a couple problems here. The initial problem, and the reason the error occurred, is because the <code>text</code> variable is <a href=""https://developer.mozilla.org/en-US/docs/Glossary/Scope"" rel=""nofollow noreferrer"">out of scope</a> when you are calling it inside the <code>useState</code> hook. You will need to set the state value when you have reference to the <code>text</code> variable.</p> <p>The second problem is that you are wanting to set the initial value of the a state in a react component based off an asynchronous query. Since an asynchronous value cannot be available at the initial render, you need to combine the <a href=""https://reactjs.org/docs/hooks-state.html#declaring-a-state-variable"" rel=""nofollow noreferrer""><code>useState</code></a> hook and the <a href=""https://reactjs.org/docs/hooks-effect.html"" rel=""nofollow noreferrer""><code>useEffect</code></a> hook to set the value after the initial load.</p> <p>With such limited code shown, i will try to fill in the gaps and make an example of what i think you are looking for:</p> <pre class=""lang-js prettyprint-override""><code>function Component() {   const [computer, setComputer] = useState("""");      useEffect(() => {     fetch(raw).then(r => r.text()).then(text => {       setComputer(new Computer({ mnemonic: text }))     })   }, [])    return (     // whatever you render    ) } </code></pre> <p>This way, at render your component will have a default value of <code>""""</code> and then when the async <code>fetch</code> call has finished it will update the value. If you pass an empty array as the second parameter to the <code>useEffect</code> hook, it will only be called on the initial render.</p>",1669508633.0,,false
"{'account_id': 17757982, 'reputation': 10361, 'user_id': 12894626, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/0c90233e608c015f6036b873c86586c1?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'wongx', 'link': 'https://stackoverflow.com/users/12894626/wongx'}",False,0,1675915476,1675915476,75394089,74586402,CC BY-SA 4.0,"<p>In my case, I was spreading props into a component that shouldn't be accepting that component. Like below:</p> <pre class=""lang-js prettyprint-override""><code>// `...rest` here would contain a prop named `show` function ({className, ...rest}) {   return <input {...rest}></input> } </code></pre> <p>Instead, either remove isolate out the prop or don't spread it.</p> <pre class=""lang-js prettyprint-override""><code>// Isolate out `show` function ({className, show, ...rest}) {   return <input {...rest}></input> } </code></pre> <p>or</p> <pre class=""lang-js prettyprint-override""><code>// Don't spread it function ({className}) {   return <input></input> } </code></pre>",,,false
"{'account_id': 27009404, 'reputation': 1, 'user_id': 20569314, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/f81eae24f41d37d57107488d9eae2edc?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Brady Buchholz', 'link': 'https://stackoverflow.com/users/20569314/brady-buchholz'}",False,0,1669508001,1669507943,74586564,74586402,CC BY-SA 4.0,"<p>It is unclear what exactly you are trying to do. It looks like you are trying to conditionally render content based on whether your state is true or false. The error you are getting is a result of the following</p> <pre><code>`<input  show={show}  type=""date""  name=""date""  id=""date""  className=""form-control bg-transparent border-dark""  placeholder=""Pilih Tanggal""/>` </code></pre> <p>Show is not an attribute for any HTML elements. Try the following. This will get rid of the error you are running into.</p> <pre><code>`<input  type=""date""  name=""date""  id=""date""  className=""form-control bg-transparent border-dark""  placeholder=""Pilih Tanggal""/>` </code></pre>",1669508001.0,,false
"{'account_id': 25724379, 'reputation': 51, 'user_id': 19480959, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/2c083429ff5d9d975abf02b1c0833108?s=256&d=identicon&r=PG', 'display_name': 'dkunrath', 'link': 'https://stackoverflow.com/users/19480959/dkunrath'}",False,1,1669507192,1669507192,74586511,74586402,CC BY-SA 4.0,"<p>I had this problem using <code>styled-components</code> and in their documentantion it says to use a <code>$</code> before the props, like so:</p> <pre class=""lang-html prettyprint-override""><code><input   $show={show}   type=""date""   name=""date""   id=""date""   className=""form-control bg-transparent border-dark""   placeholder=""Pilih Tanggal"" /> </code></pre> <p>This way the DOM will ignore this as an HTML attribute and won't complain about booleans (or numbers, or anything, really)</p>",,,false
"{'account_id': 27036094, 'reputation': 16, 'user_id': 20591700, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/2CanA.png?s=256', 'display_name': 'roberiodutra', 'link': 'https://stackoverflow.com/users/20591700/roberiodutra'}",False,0,1669506814,1669506814,74586483,74586402,CC BY-SA 4.0,"<p>""show"" is not a valid attribute for inputs.</p> <p>If I understand, you want to show one or another input, based on the value of ""show"", correct?</p> <p>You can do it using a ternary operator.</p> <pre><code>{show ? (  <input     type=""date""     name=""date""     id=""date""     className=""form-control bg-transparent border-dark""     placeholder=""Pilih Tanggal""   />   ) : (     <input       type=""date""       name=""date""       id=""date""       className=""form-control bg-transparent border-dark""       placeholder=""Pilih Tanggal""     />   )} </code></pre>",,,false
"{'account_id': 23513241, 'reputation': 139, 'user_id': 17561543, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Ggc7cl3Htyg8Bt3ocSVemsxlqrRVPXmc3CVZI5XFw=k-s256', 'display_name': 'Harsh Rathod', 'link': 'https://stackoverflow.com/users/17561543/harsh-rathod'}",False,0,1669556044,1669556044,74590455,74586381,CC BY-SA 4.0,"<p>I had this same issue. This is because the styled-components library has changed how it handles ref/innerRef. See their documentation: <a href=""https://styled-components.com/docs/advanced#refs"" rel=""nofollow noreferrer"">https://styled-components.com/docs/advanced#refs</a> which states: ""Using an older version of styled-components (below 4.0.0) or of React? Use the innerRef prop instead.""</p> <p>The tutorial uses v3.2.6, check the package.json here: <a href=""https://codesandbox.io/embed/github/eggheadio-projects/react-beautiful-dnd-task-app/tree/lesson-3/?hidenavigation=1"" rel=""nofollow noreferrer"">https://codesandbox.io/embed/github/eggheadio-projects/react-beautiful-dnd-task-app/tree/lesson-3/?hidenavigation=1</a></p> <p>So to fix the error, when using the latest version of style-components (5.3.0), change: innerRef={provided.innerRef} to ref={provided.innerRef}.</p>",,,false
"{'account_id': 16193402, 'reputation': 17, 'user_id': 11691606, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-Rr9WihFmVHA/AAAAAAAAAAI/AAAAAAAAKVw/i0k1aRYvYVI/photo.jpg?sz=256', 'display_name': 'Mentalist 302', 'link': 'https://stackoverflow.com/users/11691606/mentalist-302'}",False,-1,1669529013,1669529013,74587876,74586304,CC BY-SA 4.0,"<p>You can use 'convert-svg-to-png' library. <a href=""https://www.npmjs.com/package/convert-svg-to-png"" rel=""nofollow noreferrer"">This is the npm link</a></p> <p>Then import it:</p> <pre><code>const { convertFile }  = require('convert-svg-to-png'); </code></pre> <p>Then use the following code:</p> <pre><code>(async() => {   const inputFilePath = '/path/to/my-image.svg';   const outputFilePath = await convertFile(inputFilePath);    console.log(outputFilePath);   //=> ""/path/to/my-image.png"" })(); </code></pre> <p>Hope it works for you :)</p>",,,false
"{'account_id': 7339236, 'reputation': 96, 'user_id': 5589483, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/23dbddbe8f5914fc84b49d5e83ea304d?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'jj29', 'link': 'https://stackoverflow.com/users/5589483/jj29'}",False,2,1669506256,1669506256,74586450,74586180,CC BY-SA 4.0,"<p>There are potentially multiple options, depending on your architecture and the complexity of your backend servers. Also, I strongly believe that this is a task to be completed on the backend servers rather than the client:</p> <ol> <li>You would need a database query to reset all users' orders</li> <li>This could be a secure route (e.g accessible only to admins through authentication)</li> </ol> <p>Here are some examples of potential solutions depending on your architecture:</p> <ol> <li>If you are using cloud deployment (e.g AWS) you could set up a <code>lambda function</code> to accomplish this and call it on a given schedule via <code>EventBridge</code> (this is basically a serverless cron job)</li> <li>If you have only one instance of the backend server running you could set up a cron job on that instance (thinking of node-cron job). However, beware of server downtimes and/or multiple servers running at the same time</li> </ol> <p>In a nutshell, there are many ways to accomplish this (it's <strong>not</strong> one size fit all situation) however this has to be done on the backend servers</p>",,,false
"{'account_id': 21763615, 'reputation': 25, 'user_id': 16067830, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJyMcwXc9PmcZjNf6WBIn9quJCZNtuqf8NWG3ps4=k-s256', 'display_name': 'Bradley', 'link': 'https://stackoverflow.com/users/16067830/bradley'}",False,2,1669513183,1669513183,74586898,74586129,CC BY-SA 4.0,"<p>This will render the current prayer based on the time. Please provide more information on what exactly you are trying to render.</p> <pre><code>import React, { useEffect, useState } from ""react"";  type prayerDataType = {   fajr_begins: string;   fajr_jammah: string;   zuhr_begins: string;   zuhr_jammah: string;   asr_begins: string;   asr_jammah: string;   maghrib_begins: string;   maghrib_jammah: string;   isha_begins: string;   isha_jammah: string; };  const prayerData = {   fajr_begins: ""5:54"",   fajr_jammah: ""6:14"",   zuhr_begins: ""12:51"",   zuhr_jammah: ""13:30"",   asr_begins: ""15:28"",   asr_jammah: ""14:10"",   maghrib_begins: ""18:04"",   maghrib_jammah: ""19:49"",   isha_begins: ""19:27"",   isha_jammah: ""20:00"", };  const currentPrayer = () => {   const [currentPrayer, setCurrentPrayer] = useState("""");   const [currentTime, setCurrentTime] = useState(new Date());    function refreshClock() {     setCurrentTime(new Date());   }    useEffect(() => {     const timerId = setInterval(refreshClock, 1000);      let currentAndPastPrayerDateTimes = [];     for (const prayer in prayerData) {       const prayerTime = prayerData[prayer as keyof prayerDataType];       const [hours, minutes] = prayerTime.split("":"");       const prayerDateTime = new Date();       prayerDateTime.setHours(parseInt(hours));       prayerDateTime.setMinutes(parseInt(minutes));       if (prayerDateTime <= currentTime) {         currentAndPastPrayerDateTimes.push(prayerDateTime);       }     }      const currentPrayerDateTime = new Date(       Math.max(...currentAndPastPrayerDateTimes.map(Number))     );     const hours = currentPrayerDateTime.getHours();     const minutes = currentPrayerDateTime.getMinutes();     const currentPrayer = Object.keys(prayerData).find(       (prayer) =>         prayerData[prayer as keyof prayerDataType] === `${hours}:${minutes}`     );      setCurrentPrayer(currentPrayer ? currentPrayer : """");      return function cleanup() {       clearInterval(timerId);     };   }, []);    return <div>{currentPrayer}</div>; }; </code></pre>",,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",True,0,1669651119,1669625798,74598155,74586075,CC BY-SA 4.0,"<p>In your Button component, props.handleClick should be changed to this.props.handleClick.</p> <p>You're sending <strong>question</strong> and <strong>answer</strong> as the props to the Screen component but you're getting <strong>value</strong>. It's wrong. You should pass value prop or get question and answer props in your Screen component.</p> <p>And also when your <strong>question</strong> and <strong>answer</strong> get updated, your state in Screen component does not get updated. In order to fix that you should use <strong><a href=""https://reactjs.org/docs/react-component.html#componentdidupdate"" rel=""nofollow noreferrer"">componentDidUpdate</a></strong> function.</p> <p>So this code will fix your issues:</p> <pre class=""lang-js prettyprint-override""><code>class Calculator extends React.Component{   constructor(props){     super(props);     this.state= {       question:"""",       answer: """"     }     this.handleClick = this.handleClick.bind(this);   }   handleClick(e){     const value = e.target.value;     switch(value){       case ""="" :{         if(this.state.question !== """"){           let result = """";           try {             result = eval(this.state.question);           }           catch(err){             this.setState({               answer: ""MATH ERROR""             });           }           if(result ===undefined){             this.setState({answer: ""MATH ERROR""})           }           else{             this.setState({               question: """",               answer: result             });           }         }         break;       }       case  ""del"" : {         var str = this.state.question;         str = str.substr(0, str.length-1);         this.setState({           question: str         })         break;       }       case  ""AC"" : {         this.setState({           question: "" "",           answer: "" ""         });         break;       }       default:{         this.setState({           question: this.state.question += value         });         break;       }     }   }   render(){     return <div>       <div className=""main-body"">         <Screen question={this.state.question}/>         <Screen answer={this.state.answer}/>         <Buttons handleClick={this.handleClick}/>       </div>     </div>   } } class Screen extends React.Component{   constructor(props){   super(props);     this.state={       question: props.question,       answer: props.answer     }   }   componentDidUpdate(prevProps) {     if(JSON.stringify(prevProps) !== JSON.stringify(this.props)) {       this.setState({         question: this.props.question,         answer: this.props.answer       });     }   }   render(){     return<div>       <div className=""screen"">{this.state.question || this.state.answer}</div>     </div>   } } class Buttons extends React.Component{   constructor(props){     super(props);   }   render(){     return <div>       <div className=""btn-box"">       <button value=""0"" className=""btn-style"" onClick={this.props.handleClick} >0</button>       <button value=""del"" className=""btn-style"" onClick={this.props.handleClick}>DEL</button>       <button value=""AC""className=""btn-style"" onClick={this.props.handleClick}>AC</button>       <button value=""1"" className=""btn-style"" onClick={this.props.handleClick}>1</button>       <button value=""2"" className=""btn-style"" onClick={this.props.handleClick}>2</button>       <button value=""3"" className=""btn-style"" onClick={this.props.handleClick}>3</button>       <button value=""4"" className=""btn-style"" onClick={this.props.handleClick}>4</button>       <button value=""5"" className=""btn-style"" onClick={this.props.handleClick}>5</button>       <button value=""6"" className=""btn-style"" onClick={this.props.handleClick}>6</button>       <button value=""7"" className=""btn-style"" onClick={this.props.handleClick}>7</button>       <button value=""8"" className=""btn-style"" onClick={this.props.handleClick}>8</button>       <button value=""9"" className=""btn-style"" onClick={this.props.handleClick}>9</button>       <button value=""+"" className=""btn-style"" onClick={this.props.handleClick}>+</button>       <button value=""-"" className=""btn-style"" onClick={this.props.handleClick}>-</button>       <button value=""="" className=""btn-style"" onClick={this.props.handleClick}>=</button>       <button value=""/"" className=""btn-style"" onClick={this.props.handleClick}>/</button>       <button value=""*"" className=""btn-style"" onClick={this.props.handleClick}>*</button>       <button value=""."" className=""btn-style"" onClick={this.props.handleClick}>.</button>       </div>     </div>   } } const container = document.getElementById(""calculator""); ReactDOM.render(<Calculator />, container); </code></pre>",1669651119.0,,false
"{'account_id': 16262221, 'reputation': 584, 'user_id': 11743253, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/WxNYSQRw.jpg?s=256', 'display_name': 'Elvin', 'link': 'https://stackoverflow.com/users/11743253/elvin'}",False,0,1669622765,1669503321,74586210,74586075,CC BY-SA 4.0,"<p>Add the <code>this</code> keyword on each <code>props</code>, the component that does not recognize props.</p> <pre><code><button value=""0"" className=""btn-style"" onClick={this.props.handleClick}>   0 </button>; </code></pre> <p>or alternatively</p> <pre><code>render() {     const { props } = this;     return ( </code></pre> <p>The reason why <code>screen</code> does not work. Replace the props value of the Screen component as below.</p> <pre><code>  render() {     return (       <div>         <div className=""main-body"">           <Screen value={this.state.question} />           <Screen value={this.state.answer} />           <Buttons handleClick={this.handleClick} />         </div>       </div>     );   } </code></pre> <p>And for the Screen component no need for any state, you need to call props as below.</p> <pre><code>class Screen extends React.Component {   constructor(props) {     super(props);   }   render() {     return (       <div>         <div className=""screen"">{this.props.value}</div>       </div>     );   } } </code></pre> <p>whole code.</p> <pre><code>class Calculator extends React.Component {   constructor(props) {     super(props);     this.state = {       question: '',       answer: '',     };     this.handleClick = this.handleClick.bind(this);   }   handleClick(e) {     const value = e.target.value;     switch (value) {       case '=': {         if (this.state.question !== '') {           let result = '';           try {             result = eval(this.state.question);           } catch (err) {             this.setState({               answer: 'MATH ERROR',             });           }           if (result === undefined) {             this.setState({ answer: 'MATH ERROR' });           } else {             this.setState({               question: '',               answer: result,             });           }         }         break;       }       case 'del': {         var str = this.state.question;         str = str.substr(0, str.length - 1);         this.setState({           question: str,         });         break;       }       case 'AC': {         this.setState({           question: ' ',           answer: ' ',         });         break;       }       default: {         this.setState({           question: (this.state.question += value),         });         break;       }     }   }   render() {     return (       <div>         <div className=""main-body"">           <Screen value={this.state.question} />           <Screen value={this.state.answer} />           <Buttons handleClick={this.handleClick} />         </div>       </div>     );   } } class Screen extends React.Component {   constructor(props) {     super(props);   }   render() {     return (       <div>         <div className=""screen"">{this.props.value}</div>       </div>     );   } }  class Buttons extends React.Component {   constructor(props) {     super(props);   }   render() {     const { props } = this;     return (       <div>         <div className=""btn-box"">           <button value=""0"" className=""btn-style"" onClick={props.handleClick}>             0           </button>           <button value=""del"" className=""btn-style"" onClick={props.handleClick}>             DEL           </button>           <button value=""AC"" className=""btn-style"" onClick={props.handleClick}>             AC           </button>           <button value=""1"" className=""btn-style"" onClick={props.handleClick}>             1           </button>           <button value=""2"" className=""btn-style"" onClick={props.handleClick}>             2           </button>           <button value=""3"" className=""btn-style"" onClick={props.handleClick}>             3           </button>           <button value=""4"" className=""btn-style"" onClick={props.handleClick}>             4           </button>           <button value=""5"" className=""btn-style"" onClick={props.handleClick}>             5           </button>           <button value=""6"" className=""btn-style"" onClick={props.handleClick}>             6           </button>           <button value=""7"" className=""btn-style"" onClick={props.handleClick}>             7           </button>           <button value=""8"" className=""btn-style"" onClick={props.handleClick}>             8           </button>           <button value=""9"" className=""btn-style"" onClick={props.handleClick}>             9           </button>           <button value=""+"" className=""btn-style"" onClick={props.handleClick}>             +           </button>           <button value=""-"" className=""btn-style"" onClick={props.handleClick}>             -           </button>           <button value=""="" className=""btn-style"" onClick={props.handleClick}>             =           </button>           <button value=""/"" className=""btn-style"" onClick={props.handleClick}>             /           </button>           <button value=""*"" className=""btn-style"" onClick={props.handleClick}>             *           </button>           <button value=""."" className=""btn-style"" onClick={props.handleClick}>             .           </button>         </div>       </div>     );   } } </code></pre>",1669622765.0,,false
"{'account_id': 4341466, 'reputation': 122, 'user_id': 3544591, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/60cab6e76455bfbc90185426c4be615c?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Alex Wauters', 'link': 'https://stackoverflow.com/users/3544591/alex-wauters'}",True,1,1669502680,1669502680,74586148,74585993,CC BY-SA 4.0,"<p>setState may be run asynchronously, but it accepts a callback function as a second argument that you can run after the state has been updated (and thus this.state.PassengerInfo includes your ticketnumber)</p> <p>State changes might also be batched, if you're using state values it's better to pass on a function that accepts props, state <a href=""https://reactjs.org/docs/state-and-lifecycle.html"" rel=""nofollow noreferrer"">https://reactjs.org/docs/state-and-lifecycle.html</a></p>",,,false
"{'account_id': 3338251, 'reputation': 20138, 'user_id': 2805154, 'user_type': 'registered', 'accept_rate': 75, 'profile_image': 'https://i.sstatic.net/DGXwB.png?s=256', 'display_name': 'Michel Floyd', 'link': 'https://stackoverflow.com/users/2805154/michel-floyd'}",False,0,1669671400,1669671400,74606714,74585984,CC BY-SA 4.0,<p>You need to specify the mapping of your query variables. Also your syntax is assuming string substitution rather than query variables.</p> <p>Try:</p> <pre><code>const LOAD_PRODUCTS = gql`   query myQuery ( $category: String! ) {     category(input: { title: $category }){        name       products {         â¦       }     }   } </code></pre>,,,false
"{'account_id': 7339236, 'reputation': 96, 'user_id': 5589483, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/23dbddbe8f5914fc84b49d5e83ea304d?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'jj29', 'link': 'https://stackoverflow.com/users/5589483/jj29'}",False,1,1669504698,1669504698,74586330,74585920,CC BY-SA 4.0,"<p>I agree with @dkunrath that using <code>map</code> would be better.</p> <p>Also I'd like to add that if your end goal is this</p> <pre><code>1 Email: email@email.com               STATUS: WILLATTEND 2 Email: email@email.com               STATUS: WILLATTEND </code></pre> <p>it would be better to add another property to <code>AttendeeBox</code> to render the number with it. This would make it easier.</p> <p>For example</p> <pre><code>class AttendeeListPage extends Component<any,any> {         ...         render(){         let attendarr: any[] = [];         for (let i = 0; i < this.state.arr.length; i++){             attendarr.push(<AttendeeBox                 email={this.state.arr[i][0]}                 status={this.state.arr[i][1]}                 eventNum={this.props.eventNum}                 order={i+1}             />)         }          return (             <div className='App'>                 <div>                     {attendarr.map(attendee => <div>{attendee}</div>)}                 </div>             </div>         );         } }  export default AttendeeListPage; </code></pre> <pre><code>class AttendeeBox extends Component<any,any> {     constructor(props:any){         super(props);         this.state = {id: this.props.eventNum(), updateForced: false, ForceUpdateNow: false}     }     componentDidMount(): void {         this.setState({ForceUpdateNow:true})     }     componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<any>, snapshot?: any): void {         if(this.state.id !== this.props.id){             this.setState({id: this.props.id});  //should probably be id: this.state.id         }     }      render() {         return (             <div className='AttendeeBox'>                 <div>{this.props.order}</div>                  <div className='listElement'>                     Email : {this.props.email}  &nbsp;                 </div>                 <div className='listElement'>                     Status : {this.props.status}                 </div>             </div>         )     } }  export default AttendeeBox; </code></pre>",,,false
"{'account_id': 25724379, 'reputation': 51, 'user_id': 19480959, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/2c083429ff5d9d975abf02b1c0833108?s=256&d=identicon&r=PG', 'display_name': 'dkunrath', 'link': 'https://stackoverflow.com/users/19480959/dkunrath'}",True,0,1669502909,1669502909,74586175,74585920,CC BY-SA 4.0,"<p>I believe this is a matter of structure/CSS, also, your countArr is just an array of numbers, there is no structure for it, so you'll have to use a <code>.map</code> and some HTML structure to hold it in place.</p> <pre><code>class AttendeeListPage extends Component<any,any> {         ...         render(){         let attendarr: any[] = [];         let countArr : number[] = [];         for (let i = 0; i < this.state.arr.length; i++){             countArr.push(i+1);             attendarr.push(<AttendeeBox                 email={this.state.arr[i][0]}                 status={this.state.arr[i][1]}                 eventNum={this.props.eventNum}             />)         }          return (             <div className='App'>                 <div className='indexes'>                     {countArr.map(index => <div>{index}</index>}                 </div>                 <div className='container'>                     {attendarr}                 </div>             </div>         );         } }  export default AttendeeListPage; </code></pre> <p>Component CSS:</p> <pre><code>.App {   display: flex; } </code></pre> <p>the div <code>indexes</code> return all count in countArr inside other <code>divs</code>, which then hold one above the other. Similarly, you cound use <code>countArr.push(<div>i+1</div>)</code> and adjust the code.</p> <p>Hope this makes sense, if not I can use code sandbox to better present it.</p>",,,false
"{'account_id': 4705847, 'reputation': 413, 'user_id': 3808025, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/1410573e5d13bb85b1ca58a593d8010e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'mythosil', 'link': 'https://stackoverflow.com/users/3808025/mythosil'}",True,1,1669536248,1669536248,74588441,74585819,CC BY-SA 4.0,"<p>The prop's name is wrong. <code>breakpoints</code> with a small letter ""p"" is correct.<br /> Its documentation is here: <a href=""https://swiperjs.com/swiper-api#param-breakpoints"" rel=""nofollow noreferrer"">https://swiperjs.com/swiper-api#param-breakpoints</a></p>",,,false
"{'account_id': 22425702, 'reputation': 4266, 'user_id': 16632344, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/aQbs8.jpg?s=256', 'display_name': 'monim', 'link': 'https://stackoverflow.com/users/16632344/monim'}",True,1,1669502023,1669502023,74586078,74585728,CC BY-SA 4.0,<p><strong>f.title</strong> is a string containing HTML elements if you want to render it as a real HTML element just</p> <p><strong>change :</strong></p> <pre><code><p>    {f.Answer} </p> </code></pre> <p><strong>to :</strong></p> <pre><code>  <p  dangerouslySetInnerHTML={{__html: f.Answer}} /> </code></pre>,,,false
"{'account_id': 17559007, 'reputation': 859, 'user_id': 12737879, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/JcF2z.jpg?s=256', 'display_name': 'Aleksandar', 'link': 'https://stackoverflow.com/users/12737879/aleksandar'}",True,0,1669513046,1669513046,74586889,74585704,CC BY-SA 4.0,"<p>You can use <code>Math.random()</code> function which returns a floating-point number between <code>0</code> and less than <code>1</code> then <em>multiply</em> it by the <em>length of</em> your <em>array</em> and pass that number to <code>Math.floor()</code> function and use that final number result as the <strong>index</strong> of your <em>array of songs</em>.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const songs = ['1st song','2nd song','3rd song', '4th song']  const getRandomSong = max => {   return songs[Math.floor(Math.random() * max)]; }  const randomSong = document.querySelector('.randomSong'); const btnRandomizer = document.querySelector('.btnRandomizer'); btnRandomizer.addEventListener('click', () => randomSong.textContent = getRandomSong(songs.length))</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><button class='btnRandomizer'>Randomize</button> <p>Random song: <span class='randomSong'></span></p></code></pre>  </div>  </div>  </p> <p><strong>NOTE:</strong> this example above can seem like its ""stuck"" at some point, but that's just the way it works for example it can result number <code>2</code> twice or 10 or more times <em>in a row</em>.</p> <p>That's why below I've created another example where I'm storing that <em>randomized</em> value(<code>randomNum</code>) to a global variable (in the outer scope)(<code>prevNum</code>).</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const songs = ['1st song', '2nd song', '3rd song', '4th song']  let prevNum; const getRandomSong = max => {   const randomNum = Math.floor(Math.random() * max)   if (prevNum === randomNum) {     let newRandomNum = randomNum === 0 ? randomNum + 1 : randomNum - 1     prevNum = newRandomNum;     return songs[newRandomNum];   } else {     prevNum = randomNum;     return songs[randomNum];   } }  const randomSong = document.querySelector('.randomSong'); const btnRandomizer = document.querySelector('.btnRandomizer'); btnRandomizer.addEventListener('click', () => randomSong.textContent = getRandomSong(songs.length))</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><button class='btnRandomizer'>Randomize</button> <p>Random song: <span class='randomSong'></span></p></code></pre>  </div>  </div>  </p> <p>Further explanation <em>if you are interested</em> is the part of initializing <code>newRandomNum</code> using the ternary operator as to avoid <em>possible</em> issue if you were to simply use <code>+1</code> or <code>-1</code> you may encounter a case scenario where you are trying to access an element above the index of the last element in your array or an index below <code>0</code> which in both cases would resolve to <code>undefined</code>.</p>",,,false
"{'account_id': 10905924, 'reputation': 80573, 'user_id': 8016720, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/bXsod.png?s=256', 'display_name': 'John Hanley', 'link': 'https://stackoverflow.com/users/8016720/john-hanley'}",False,0,1669498086,1669498086,74585694,74585498,CC BY-SA 4.0,"<p>For Google Cloud Run, environment variables are not set in the Dockerfile. They are set via the deployment command.</p> <p><a href=""https://cloud.google.com/sdk/gcloud/reference/run/deploy#--set-env-vars"" rel=""nofollow noreferrer"">gcloud run deploy --set-env-vars[...]</a></p> <p>Tip: The <code>EXPOSE</code> statement also does nothing in Google Cloud Run.</p>",,"[{'tags': ['google-cloud-vision', 'google-cloud-run', 'firebase-in-app-messaging', 'google-cloud-instance-template', 'google-cloud-translate', 'cordova-plugin-firebasex', 'google-cloud-spanner', 'google-cloud-data-transfer', 'google-cloud-storage-r', 'firebase-security', 'firebase-realtime-database', 'google-cloud-sdk', 'google-cloud-launcher', 'firebase-admin', 'google-kubernetes-engine', 'recaptcha-enterprise', 'google-anthos', 'google-cloud-webrisk', 'google-app-engine-php', 'google-cloud-memorystore', 'jib', 'firebase-analytics', 'google-cloud-datastore', 'firebasesimplelogin', 'apigee', 'firebase-hosting', 'google-cloud-healthcare', 'google-cloud-transcoder', 'firebase-app-distribution', 'google-cloud-kms', 'google-cloud-test-lab', 'google-cloud-code', 'firebase-test-lab', 'firebase-ab-testing', 'google-cloud-debugger', 'google-cloud-stackdriver', 'google-app-engine', 'google-cloud-url-maps', 'google-cloud-endpoints-v2', 'google-cloud-ml', 'google-compute-engine', 'google-cloud-storage', 'react-redux-firebase', 'google-cloud-api-gateway', 'firebase-dynamic-links', 'firebase-predictions', 'react-native-firebase', 'redux-saga-firebase', 'google-cloud-dataprep', 'google-cloud-automl', 'google-migrate-for-compute-engine', 'google-cloud-logging', 'firebase-invites', 'cloud-document-ai', 'google-cloud-python', 'google-cloud-node', 'google-cloud-tools', 'firebase-extensions', 'google-app-engine-golang', 'rest-firebase', 'google-cloud-armor', 'firebase-polymer', 'nativescript-firebase', 'google-app-engine-deploy', 'firebase-cloud-messaging', 'dialogflow-cx', 'google-cloud-spanner-emulator', 'google-cloud-search', 'looker', 'firebase-crash-reporting', 'google-cloud-build', 'google-cloud-identity-aware-proxy', 'google-cloud-instances', 'google-cloud-repository', 'dialogflow-es', 'vertex-ai-search', 'google-cloud-tasks', 'google-analytics-firebase', 'google-cloud-datalab', 'firebase-storage', 'google-cloud-iot', 'google-cloud-source-repos', 'firebase-assistant', 'google-cloud-messaging', 'google-cloud-pubsublite', 'google-cloud-firestore', 'google-cloud-networking', 'google-container-optimized-os', 'google-cloud-iam', 'google-cloud-save', 'google-cloud-nl', 'google-translate', 'firebase-mlkit', 'firebase-admob', 'google-cloud-internal-load-balancer', 'firebase-notifications', 'google-cloud-cpp', 'google-cloud-filestore', 'firebase-app-check', 'google-cloud-print-privet', 'google-cloud-intellij', 'google-cloud-router', 'google-cloud-profiler', 'google-cloud-identity', 'google-app-engine-python', 'google-cloud-ai', 'google-cloud-bigtable', 'google-cloud-billing', 'gcloud', 'google-cloud-metrics', 'firebase-database', 'firebase', 'google-cloud-dataflow', 'firebase-tools', 'google-cloud-console', 'google-cloud-vertex-ai', 'firebase-cli', 'google-cloud-print', 'google-app-engine-go', 'google-cloud-talent-solution', 'google-cloud-dataproc-metastore', 'google-cloud-speech', 'google-cloud-visualstudio', 'google-container-os', 'google-container-builder', 'google-cloud-monitoring', 'google-cloud-error-reporting', 'google-cloud-ai-platform-pipelines', 'stackdriver', 'google-cloud-asset-inventory', 'google-cloud-robotics', 'google-cloud-ml-engine', 'google-cloud-dns', 'google-cloud-pubsub', 'google-bigquery', 'google-app-engine-launch', 'google-cloud-workstations', 'firebase-performance', 'google-cloud-ops-agent', 'firebase-job-dispatcher', 'google-cloud-platform', 'google-cloud-vpn', 'google-cloud-resource-manager', 'google-cloud-deploy', 'firebaseui', 'google-cloud-shell', 'google-cloud-dataproc', 'firebase-machine-learning', 'firebase-util', 'firebase-app-indexing', 'google-dataflow', 'google-cloud-scheduler', 'google-cloud-sql', 'apigee-baas', 'firebase-queue', 'google-cloud-data-fusion', 'google-cloud-network-load-balancer', 'bigtable', 'google-prediction', 'firebase-remote-config', 'looker-studio', 'google-cloud-proxy', 'google-cloud-composer', 'google-container-registry', 'google-cloud-automl-nl', 'firebase-authentication', 'google-cloud-php-client', 'google-cloud-endpoints', 'google-cloud-powershell', 'google-cloud-http-load-balancer', 'google-cloud-interconnect', 'google-cloud-language', 'google-fusion-tables', 'google-cloud-recommendation', 'google-cloud-tpu', 'google-cloud-shell-editor', 'google-cloud-cdn', 'google-cloud-load-balancer', 'google-cloud-dlp', 'google-app-engine-patch', 'google-cloud-marketplace', 'maven-jib', 'google-cloud-trace', 'google-cloud-functions', 'google-cloud-registry', 'dialogflow-es-fulfillment', 'firebase-console'], 'external_links': [{'type': 'support', 'link': 'https://stackoverflow.com/contact?topic=15'}], 'description': 'A collective for developers who utilize Google Cloudâs infrastructure and platform capabilities. This collective is organized and managed by the Stack Overflow community.', 'link': '/collectives/google-cloud', 'name': 'Google Cloud', 'slug': 'google-cloud'}]",false
"{'account_id': 22443986, 'reputation': 2480, 'user_id': 16648127, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gi1fxsGw6v1p1_YJWSGK8SFP46IivbTxW0kvmbl=k-s256', 'display_name': 'Enfield Li', 'link': 'https://stackoverflow.com/users/16648127/enfield-li'}",False,0,1669496436,1669496436,74585554,74585475,CC BY-SA 4.0,"<p>The easiest way to migrate from CRA to vite, for me, is to create a vite app and copy all the components I created and install all of the dependencies I have on the CRA app. And boom, it just works. At least for my typescript CRA project. (And by examing git diffs, not surprisingly, only the <code>package.json</code> file changed.)</p>",,,false
"{'account_id': 22913161, 'reputation': 31, 'user_id': 17050137, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJyHU4HRZL0j3qfQkVeG_koDibNPAEFwyUKwyNJk=k-s256', 'display_name': 'Aleksa Å½ivanoviÄ', 'link': 'https://stackoverflow.com/users/17050137/aleksa-%c5%bdivanovi%c4%87'}",False,0,1678211085,1677755301,75614613,74585421,CC BY-SA 4.0,"<p>This happened to me also in T3Stack(<a href=""https://github.com/t3-oss/create-t3-turbo"" rel=""nofollow noreferrer"">https://github.com/t3-oss/create-t3-turbo</a>) after upgrading superjson, @trpc/client and @trpc/server and packages:</p> <pre><code>""@trpc/client"": ""^10.9.0 -> ^ 10.13.2"" ""@trpc/server"": ""^10.9.0 -> ^10.13.2"", ""superjson"": ""1.9.1 -> ^1.12.1"", </code></pre> <p>But it did not mess only with mutateAsync but with whole trpc types as every function that trpc route object provides was inferred as any.</p> <p>After bumping it back to lower version all started working as expected.</p>",1678211085.0,,false
"{'account_id': 442058, 'reputation': 659, 'user_id': 832490, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/38de998f10120ac8f0dab7f193bedf2b?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Rodrigo', 'link': 'https://stackoverflow.com/users/832490/rodrigo'}",True,0,1669727332,1669727332,74614589,74585421,CC BY-SA 4.0,<p>The problem is that I was using <code>superjson</code> as the transformer. Removing it solved the issue</p>,,,false
"{'account_id': 16603476, 'reputation': 64, 'user_id': 13867582, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/0eca85539f1ea628885fb34532c3cde2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Battleaxe', 'link': 'https://stackoverflow.com/users/13867582/battleaxe'}",False,0,1673091479,1673091479,75040007,74585267,CC BY-SA 4.0,"<p>First off, you should use react-three fiber when dealing with 3JS and react.</p> <p>By naming convention you should name your uniforms like u_mouse (with an underscore).</p> <p>In three fiber there is an onPointerMove that you can use to get your mouse movement.</p> <p>For example:</p> <pre><code><mesh onPointerMove={(e) => handleMove(e)}> </code></pre> <p>To pass your values to the shader, you need to have uniforms.</p> <pre><code>const uniforms = {     u_time: { value: 0.0 },     u_mouse: { value: { x: 0.0, y: 0.0 } },     u_resolution: { value: { x: 0, y: 0 } },   }; </code></pre> <p>You can use a useEffect to get the values of the screensize and use these values in your resolution uniform. Then you can use these values in your shader to calculate the movement of the mouse regardless of the screen size.</p> <p>I'm not sure how you have written your shader, but you can create a vec2 for the mouse and a vec2 for the resolution and do something like</p> <pre><code>vec2 v = u_mouse/u_resolution; // mouseposition / screensize vec3 color = vec3(v.x, (v.y/v.x+0.2), v.y); // use the v-value for the x- and y-axis gl_FragColor = vec4(color, 1.0); // add the new colors to your output </code></pre> <p>It all depends on what you want to happen and how you want it to look.</p>",,,false
"{'account_id': 1624362, 'reputation': 4833, 'user_id': 1500241, 'user_type': 'registered', 'accept_rate': 20, 'profile_image': 'https://i.sstatic.net/Zsz7w.jpg?s=256', 'display_name': 'Neil Girardi', 'link': 'https://stackoverflow.com/users/1500241/neil-girardi'}",False,0,1669500359,1669500359,74585919,74585252,CC BY-SA 4.0,<p>Not unless you attach it to the window object like so: <code>window.someFn = someFn</code></p>,,,false
"{'account_id': 13150339, 'reputation': 21, 'user_id': 9499156, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/2cced0ebff93f7e6559fc70123a9eb8a?s=256&d=identicon&r=PG', 'display_name': 'Aral Tasher', 'link': 'https://stackoverflow.com/users/9499156/aral-tasher'}",False,2,1670516713,1670516713,74733350,74585010,CC BY-SA 4.0,"<p>I recently ran into the same issue, and couldn't find any answers either. However, I managed to get it working by reverting <code>react-pdf</code> package down to <code>5.7.2</code> and that seemed to help</p> <p>Also, I'm using the webpack 4 import instead:</p> <p><code>import {Document, Page} from 'react-pdf/dist/esm/entry.webpack';</code></p>",,,false
"{'account_id': 6237507, 'reputation': 191, 'user_id': 4852315, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://i.sstatic.net/tt0ix.jpg?s=256', 'display_name': 'Blitva', 'link': 'https://stackoverflow.com/users/4852315/blitva'}",False,4,1669490458,1669490458,74584975,74584944,CC BY-SA 4.0,"<p>Edit: Figured it out. The mistake was that I was doing cleanup like so <code>return () => newSocket.close();</code> and consequently returning a <code>Socket<DefaultEventsMap, DefaultEventsMap></code> type.</p> <p>Solution was to make the <code>newsocket.close()</code> call inside of curly braces so that the return value remains void, like so:</p> <pre><code>return () => {   newSocket.close(); }; </code></pre> <p>Would appreciate any further elaboration if my interpretation is faulty here.</p>",,,false
"{'account_id': 26852198, 'reputation': 7407, 'user_id': 20436957, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/88ZOB.png?s=256', 'display_name': 'John Li', 'link': 'https://stackoverflow.com/users/20436957/john-li'}",False,1,1669570881,1669492834,74585222,74584926,CC BY-SA 4.0,"<p>Here is a <strong>minimal</strong> solution works without <code>useEffect</code> or changing <code>category</code> and <code>products</code>.</p> <p>A few issues that can be addressed in posted code:</p> <ol> <li>Each <code>input</code> need to have an unique <code>id</code> which matches <code>htmlFor</code> on <code>label</code> for the pair to work together.</li> <li>When <code>filterProducts</code> sets a new state value, it does not get the updated value in the same block. Only use this event to set the filters in <code>toCheck</code>.</li> <li>The value type of <code>toCheck</code> can be an object of <code>[category]: Boolean</code> so each category can be filtered separately, and filters can be combined as well.</li> <li>The original <code>products</code> can be filtered before mapped, so there is no need to keep another state of <code>newProducts</code>, or to modify <code>products</code> data.</li> </ol> <p>Example (live demo: <a href=""https://stackblitz.com/edit/react-ubvwxa?file=src/App.js"" rel=""nofollow noreferrer"">stackblitz</a>)</p> <pre><code>import React, { useState } from 'react'; import './style.css';  export default function App() {   const [category, setCategory] = useState([     'electronics',     'jewelery',     ""men's clothing"",     ""women's clothing"",   ]);   const [products, setProducts] = useState([     {       id: 1,       title: 'Fjallraven - Foldsack No. 1 Backpack, Fits 15 Laptops',       price: 109.95,       category: 'electronics',       rating: { rate: 3.9, count: 120 },     },     {       id: 2,       title: 'Mens Casual Premium Slim Fit T-Shirts ',       price: 22.3,       category: ""men's clothing"",       rating: { rate: 4.1, count: 259 },     },     {       id: 3,       title: 'Mens Cotton Jacket',       price: 55.99,       category: ""men's clothing"",       rating: { rate: 4.7, count: 500 },     },     {       id: 4,       title: 'Womens Dress',       price: 15.99,       category: ""women's clothing"",       rating: { rate: 2.1, count: 430 },     },     {       id: 5,       title:         ""John Hardy Women's Legends Naga Gold & Silver Dragon Station Chain Bracelet"",       price: 695,       category: 'jewelery',       rating: { rate: 4.6, count: 400 },     },   ]);    const [toCheck, setToCheck] = useState({});    const filterProducts = (value) =>     setToCheck((prev) => {       return { ...prev, [value]: !!!prev[value] };     });    return (     <div>       <div className=""d-flex justify-content-evenly"">         {category.map((elm, index) => {           return (             <div className=""form-check ms-2"" key={index}>               <input                 className=""form-check-input""                 type=""checkbox""                 value={elm}                 id={`flexCheckDefault-${index}`}                 onChange={(e) => filterProducts(e.target.value)}               />               <label                 className=""form-check-label""                 htmlFor={`flexCheckDefault-${index}`}               >                 {elm}               </label>             </div>           );         })}       </div>       <div className=""d-flex flex-wrap"">         {products           .filter((prod) =>             Object.keys(toCheck).length === 0 ? true : !!toCheck[prod.category]           )           .map((prod) => {             return (               <div                 className=""card m-3""                 style={{ width: '400px' }}                 key={prod.id}               >                 <div className=""card-body"">                   <p className=""card-text"">Id: {prod.id}</p>                   <h3 className=""card-title"">Title: {prod.title}</h3>                   <p className=""card-text"">Price: {prod.price}</p>                   <p className=""card-text"">Category: {prod.category}</p>                   <p className=""card-text"">Rating: {prod.rating.rate}</p>                 </div>               </div>             );           })}       </div>     </div>   ); }  </code></pre>",1669570881.0,,false
"{'account_id': 17784410, 'reputation': 10856, 'user_id': 12914833, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/mNLi2.jpg?s=256', 'display_name': 'Chris Hamilton', 'link': 'https://stackoverflow.com/users/12914833/chris-hamilton'}",True,1,1669494822,1669491732,74585112,74584926,CC BY-SA 4.0,"<p>You can get whether the checkbox is checked through <code>e.target.checked</code> rather than using a state variable. You also don't need to attach a value, you can just pass it directly, not that it matters.</p> <p>Since you're filtering on multiple elements, this pattern isn't going to work either. You'll need to save all of your filters so you can remove one but keep the others when the box is unchecked. I like to use a <code>Set</code> for this purpose. You can then just filter the products on that set.</p> <p>You also don't need to use state variables for constants that don't change.</p> <p>Also, your <code>id</code>s and <code>htmlFor</code>s need to be unique, or clicking on a label will always select the first box. It's simpler just to wrap the input with the label so you don't need to worry about it.</p> <p>Stackblitz: <a href=""https://stackblitz.com/edit/react-ts-9a9n67?file=App.tsx"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/react-ts-9a9n67?file=App.tsx</a></p> <pre><code>const categories = [   'electronics',   'jewelery',   ""men's clothing"",   ""women's clothing"", ];  const allProducts = [   {     id: 1,     title: 'Fjallraven - Foldsack No. 1 Backpack, Fits 15 Laptops',     price: 109.95,     category: 'electronics',     rating: { rate: 3.9, count: 120 },   },   {     id: 2,     title: 'Mens Casual Premium Slim Fit T-Shirts ',     price: 22.3,     category: ""men's clothing"",     rating: { rate: 4.1, count: 259 },   },   {     id: 3,     title: 'Mens Cotton Jacket',     price: 55.99,     category: ""men's clothing"",     rating: { rate: 4.7, count: 500 },   },   {     id: 4,     title: 'Womens Dress',     price: 15.99,     category: ""women's clothing"",     rating: { rate: 2.1, count: 430 },   },   {     id: 5,     title:       ""John Hardy Women's Legends Naga Gold & Silver Dragon Station Chain Bracelet"",     price: 695,     category: 'jewelery',     rating: { rate: 4.6, count: 400 },   }, ];  export default function App() {   let [categoryFilters, setcategoryFilters] = useState(new Set());    function updateFilters(checked, categoryFilter) {     if (checked)       setcategoryFilters((prev) => new Set(prev).add(categoryFilter));     if (!checked)       setcategoryFilters((prev) => {         const next = new Set(prev);         next.delete(categoryFilter);         return next;       });   }    const filteredProducts =     categoryFilters.size === 0       ? allProducts       : allProducts.filter((p) => categoryFilters.has(p.category));    return (     <div>       <div className=""d-flex justify-content-evenly"">         {categories.map((elm, index) => {           return (             <div className=""form-check ms-2"" key={index}>               <label className=""form-check-label"">                 <input                   className=""form-check-input""                   type=""checkbox""                   onChange={(e) => updateFilters(e.target.checked, elm)}                 />                 {elm}               </label>             </div>           );         })}       </div>       <div className=""d-flex flex-wrap"">         {filteredProducts.map((prod) => {           return (             <div className=""card m-3"" style={{ width: '400px' }} key={prod.id}>               <div className=""card-body"">                 <p className=""card-text"">Id: {prod.id}</p>                 <h3 className=""card-title"">Title: {prod.title}</h3>                 <p className=""card-text"">Price: {prod.price}</p>                 <p className=""card-text"">Category: {prod.category}</p>                 <p className=""card-text"">Rating: {prod.rating.rate}</p>               </div>             </div>           );         })}       </div>     </div>   ); } </code></pre>",1669494822.0,,false
"{'account_id': 21391731, 'reputation': 261, 'user_id': 15755662, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GhjMiL7YFRCILniAHoBgQ9YM_e9N59oaKuclNM5qg=k-s256', 'display_name': 'codinn.dev', 'link': 'https://stackoverflow.com/users/15755662/codinn-dev'}",False,1,1669492090,1669492090,74585141,74584926,CC BY-SA 4.0,"<p><strong>Simple Solution</strong> (with updated data model for category array)</p> <pre><code>const [category, setCategory] = useState([{value : ""electronics"", isChecked: false},{value : ""jewelery"", isChecked: false},{value : ""men's clothing"", isChecked: false},{value : ""women's clothing"", isChecked: false}]);   const [products, setProducts] = useState([     {""id"":1,""title"":""Fjallraven - Foldsack No. 1 Backpack, Fits 15 Laptops"",""price"":109.95,""category"":""electronics"", ""rating"":{""rate"":3.9,""count"":120}},     {""id"":2,""title"":""Mens Casual Premium Slim Fit T-Shirts "",""price"":22.3, ""category"":""men's clothing"",""rating"":{""rate"":4.1,""count"":259}},     {""id"":3,""title"":""Mens Cotton Jacket"",""price"":55.99, ""category"":""men's clothing"",""rating"":{""rate"":4.7,""count"":500}},     {""id"":4,""title"":""Womens Dress"",""price"":15.99, ""category"":""women's clothing"" ,""rating"":{""rate"":2.1,""count"":430}},     {""id"":5,""title"":""John Hardy Women's Legends Naga Gold & Silver Dragon Station Chain Bracelet"",""price"":695, ""category"":""jewelery"",""rating"":{""rate"":4.6,""count"":400}}   ])    let [newProducts, setNewProducts] = useState([]);    const filterProducts = (e) => {     const categories = [...category];     const cat = categories.filter((cat)=>cat.value ===  e.target.value);     cat[0].isChecked = e.target.checked;     setCategory([...categories]);      const tempProduct = [];     for(let c of categories){       if(c.isChecked){         tempProduct.push(...products.filter((a) => a.category === c.value));       }     }      setNewProducts([...tempProduct]);   }    return <div>     <div className='d-flex justify-content-evenly'>         {             category.map((elm, index) => {                 return <div className=""form-check ms-2"" key={index}>                     <input className=""form-check-input"" type=""checkbox"" value={elm.value} id=""flexCheckDefault"" onChange={filterProducts}/>                     <label className=""form-check-label"" htmlFor=""flexCheckDefault"">                         {elm.value}                     </label>                 </div>             })         }     </div>     <div className='d-flex flex-wrap'>     {        (newProducts.length === 0 ? products : newProducts).map((prod) => {         return  <div className='card m-3' style={{ width: ""400px"" }} key={prod.id}>         <div className='card-body'>             <p className='card-text'>Id: {prod.id}</p>             <h3 className='card-title'>Title: {prod.title}</h3>             <p className='card-text'>Price: {prod.price}</p>             <p className='card-text'>Category: {prod.category}</p>             <p className='card-text'>Rating: {prod.rating.rate}</p>         </div>     </div>        })     }     </div>    </div> </code></pre>",,,false
"{'account_id': 9047051, 'reputation': 938, 'user_id': 6738911, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/m6z29.png?s=256', 'display_name': 'Marek Rozmus', 'link': 'https://stackoverflow.com/users/6738911/marek-rozmus'}",True,1,1669562127,1669562127,74591177,74584924,CC BY-SA 4.0,"<p>From the test I see that you are using react testing library. In this case you should ""interact"" with your component inside the test and check if the component reacts properly.</p> <p>The test for spinner should be like that:</p> <ul> <li>render the component</li> <li>find the email input field and ""type"" there an email - use one of <code>getBy*</code> methods and then type with e.g. <code>fireEvent.change(input, {target: {value: 'test@example.com'}})</code></li> <li>find the password input field and ""type"" there a password - same as above</li> <li>find the submit button and ""click"" it - use one of <code>getBy*</code> methods to find it and then use fireEvent to click it</li> <li>this (I assume) should trigger your onSubmit which will call the <code>handleLogin</code> callback which will update the state and that will render the spinner.</li> <li>check if spinner is in the document.</li> </ul> <p>Most probably you would need some mocking for your <code>userAccountAPI</code> so it calls a mock function and not some real API. In here you can also mock that API to return whatever response you want and check if component displays correct content.</p>",,,false
"{'account_id': 20727844, 'reputation': 632, 'user_id': 15220748, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ef479e5f497f0b0b6c281a577cbe3490?s=256&d=identicon&r=PG', 'display_name': 'Rohit Khandelwal', 'link': 'https://stackoverflow.com/users/15220748/rohit-khandelwal'}",False,2,1669496573,1669496573,74585569,74584917,CC BY-SA 4.0,"<p>There are two things which can resolve your problem, here:</p> <ol> <li>First, name your hook with lowercase <code>use</code> and not uppercase. The reason for that is it is wrong according to the React docs.</li> <li>Here, your <code>UseMessage</code> is not a custom hook for React, just a javascript function. Inside it, you are using <code>useState</code> which is a hook and React won't allow that. The reason is the next point.</li> <li>Second, according to the rules of React you can utilise any hook only inside the body of a function component or inside the body of another hook function.</li> </ol>",,,false
"{'account_id': 22443986, 'reputation': 2480, 'user_id': 16648127, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gi1fxsGw6v1p1_YJWSGK8SFP46IivbTxW0kvmbl=k-s256', 'display_name': 'Enfield Li', 'link': 'https://stackoverflow.com/users/16648127/enfield-li'}",False,1,1669495572,1669495572,74585477,74584917,CC BY-SA 4.0,"<p>Custom hook names should always start with lower case <code>use</code> (<a href=""https://beta.reactjs.org/learn/reusing-logic-with-custom-hooks#hook-names-always-start-with-use"" rel=""nofollow noreferrer"">see beta docs</a>), so change to <code>useMessage</code>.</p>",,,false
"{'account_id': 18581949, 'reputation': 21, 'user_id': 13541290, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GiP4TVivKghhCSZ-eIvFsguyn9sH_VAI5GLDdzWI-8=k-s256', 'display_name': 'Nino', 'link': 'https://stackoverflow.com/users/13541290/nino'}",False,0,1669569200,1669569200,74592124,74584819,CC BY-SA 4.0,"<p>I was able to solve this by passing the function parameters while invoking the function. The only difference is that when invoking the function with parameters in React, I had to invoke it like an arrow function '() => slider('scroll-tray', 'left')' in order for it to work.</p>",,,false
"{'account_id': 2432151, 'reputation': 1731, 'user_id': 2122822, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RNpbU.jpg?s=256', 'display_name': 'Azzy', 'link': 'https://stackoverflow.com/users/2122822/azzy'}",True,2,1671034617,1669489965,74584933,74584784,CC BY-SA 4.0,"<p>You can keep a app state and redirect only when app is authenticated</p> <p>Here is a good article by Kent C. Dodds on <a href=""https://kentcdodds.com/blog/authentication-in-react-applications"" rel=""nofollow noreferrer"">how to handle authentication</a></p> <pre><code>export const AuthContext = createContext();   export const AuthProvider = ({children}) => {    const [appState, setAppState] = useState({ user: null, state: 'loading' });    useEffect(() => {           //Call server       const loginUser = {         userId: 1,         role: ""Admin""       }       setUser({          user: loginUser,          state: 'loaded'       })     }, []);    return (     <AuthContext.Provider value={appState}  >{children}</AuthContext.Provider>   ); };   const useAuth = () => {     const state = useContext(AuthContext);     if (state === undefined) {       throw new Error('useAuth must be used within an AuthProvider');     }     return { ...state }; };  export default useAuth; </code></pre> <p>handling app state in ProtectedRoutes</p> <pre><code>const ProtectedRoutes = () => {    const { user, state } = useAuth();    if (state === 'loading') {     return <div>Loading...</div>   }    return(     user ? <Outlet/> : <Navigate to=""/login""/>   )  }  export default ProtectedRoutes </code></pre> <p>Or rendering the protected routes only after app is loaded</p> <pre><code>const AppRoutes = () => {     const { user, state } = useAuth();        if (state === 'loading') {        return <div>Loading...</div>    }        return user ?       <AuthenticatedRoutes>      : UnAuthenticatedRoutes />  }    return (     <AuthProvider>       <BrowserRouter>             <AppRoutes />         </Routes>       </BrowserRouter>     </AuthProvider>   ); </code></pre> <p>Hope this helps in some way</p>",1671034617.0,,false
"{'account_id': 108276, 'reputation': 7116, 'user_id': 287476, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/tNq73.png?s=256', 'display_name': 'Ed Lucas', 'link': 'https://stackoverflow.com/users/287476/ed-lucas'}",True,2,1669512517,1669512517,74586856,74584719,CC BY-SA 4.0,"<p><code>className={`scale-x-${percentage1}% ...`}</code> is an attempt to use a dynamic Tailwind utility class. This will not work because Tailwind creates its compiled CSS file by parsing your code and including only fully-formed (non-dynamic) utility classes. For an explanation, see: <a href=""https://tailwindcss.com/docs/content-configuration#dynamic-class-names"" rel=""nofollow noreferrer"">https://tailwindcss.com/docs/content-configuration#dynamic-class-names</a></p> <p>If the possible <code>percentage1</code> and <code>percentage2</code> values range from 0 to 100, it's probably best to divide the value by 100 and use a <code>style</code> attribute instead of Tailwind for the transform CSS. For example:</p> <pre><code><div style={{transform: `scaleX(${percentage1/100})`}} className=""absolute inset-0 w-full origin-top-left bg-indigo-500 bg-opacity-50""></div> </code></pre>",,,false
"{'account_id': 15037360, 'reputation': 1421, 'user_id': 10853255, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/5R9hB.jpg?s=256', 'display_name': 'Karim Elghamry', 'link': 'https://stackoverflow.com/users/10853255/karim-elghamry'}",False,-1,1669489413,1669489413,74584865,74584719,CC BY-SA 4.0,"<p>According to the <a href=""https://tailwindcss.com/docs/scale"" rel=""nofollow noreferrer"">docs</a>, <code>10</code> is not a predefined value for the <code>scale</code> class. To add a <a href=""https://tailwindcss.com/docs/scale#arbitrary-values"" rel=""nofollow noreferrer"">one off custom value</a>, you can do the following:</p> <pre class=""lang-js prettyprint-override""><code>className={`scale-x-[${percentage1}]`} </code></pre> <p><code>0</code> is 0%, while <code>1</code> is 100%.</p>",,,false
"{'account_id': 21391731, 'reputation': 261, 'user_id': 15755662, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GhjMiL7YFRCILniAHoBgQ9YM_e9N59oaKuclNM5qg=k-s256', 'display_name': 'codinn.dev', 'link': 'https://stackoverflow.com/users/15755662/codinn-dev'}",True,1,1669488483,1669487666,74584705,74584671,CC BY-SA 4.0,"<p>To avoid infinite looping you need to remove <code>allCharacterCards</code> from <code>useEffect</code> dependency array.</p> <pre class=""lang-js prettyprint-override""><code> useEffect(() => {     const playersInFight = gameData.characters.filter((x) =>       fightData.currentPositionInfoDTOS.some((y) => y.entityId == x.id)     );      let orderedCharacters = addPlayers(       playersInFight,       fightData.currentPositionInfoDTOS,       fightData.turnOrder     );      setAllCharacterCards([...orderedCharacters]);    }, [fightData, gameData, fightInfo, allCharacters]); </code></pre> <p><strong>Explanation</strong> (after question edited)</p> <pre><code>    setAllCharacterCards([...orderedCharacters]); </code></pre> <p>This should fix your problem.</p> <p>Since <code>allCharacterCards</code> is an array of <code>objects</code> you need to use spread operator <code>...</code> to let react know that you are updating state everytime with new values. Read more about - <code>Deep copy vs shallow copy</code>.</p>",1669488483.0,,false
"{'account_id': 8141288, 'reputation': 2730, 'user_id': 6131368, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://i.sstatic.net/WQREV.jpg?s=256', 'display_name': 'JSEvgeny', 'link': 'https://stackoverflow.com/users/6131368/jsevgeny'}",False,0,1669491111,1669490798,74585016,74584614,CC BY-SA 4.0,"<p>You could use generics, create a type for your data and pass it into your <code>generateSelectOptions</code> function.</p> <p>You would still need to cast values that you will get from <code>data[field.valueKey]</code> and <code>data[field.labelKey]</code> to a string to match <code>TOptions</code> type</p> <p>This is what I came up so far and if you will try to replace <code>valueKey</code> and <code>labelKey</code> values to something else rather than slug or name or id your IDE will give you a type hint</p> <pre><code>type TOption = { value: string; label: string };  const generateSelectOptions = <T>(   data: T[],   field: { valueKey: keyof T; labelKey: keyof T } ): TOption[] => {   const options = data.map<TOption>((data) => ({     value: data[field.valueKey] as string,     label: data[field.labelKey] as string,   }));    return options; };  type DataType = { name: string; slug: string; id: number };  const data: DataType[] = [   {     name: ""Holy Holy Holy"",     slug: ""holy-holy-holy"",     id: 1,   },   {     name: ""Amazing Grace"",     slug: ""amazing-grace"",     id: 2,   }, ];  const options = generateSelectOptions<DataType>(data, {   valueKey: ""slug"",   labelKey: ""name"", });  console.log(options); </code></pre> <p>you could even add some extra layer of validation on top of the options that gets generated using type guard, but I think that should not be neccessary</p> <pre><code>const isOptionGuard = (option: any): option is TOption => ""value"" in option && ""label"" in option;  const isValidType = options.every(isOptionGuard);  console.log(isValidType)  if (!isValidType) throw Error(""GenerateSelectOptions failed""); </code></pre>",1669491111.0,,false
"{'account_id': 7381830, 'reputation': 552, 'user_id': 5618266, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-dGGYBXPw2oc/AAAAAAAAAAI/AAAAAAAAA70/h1u9MoA9OtM/photo.jpg?sz=256', 'display_name': 'Cedric', 'link': 'https://stackoverflow.com/users/5618266/cedric'}",False,0,1669489789,1669489789,74584904,74584614,CC BY-SA 4.0,"<pre class=""lang-js prettyprint-override""><code>type TOptions = { value: string; label: string}[];  function generateSelectOptions<T extends Record<string, unknown>, KeyField extends keyof T, LabelField extends keyof T>(data: T[], field: {valueKey: KeyField, labelKey: LabelField}): TOptions {   return data.map(entry => ({     label: String(entry[field.labelKey]),     value: String(entry[field.valueKey])   }))  }    const data = [     {       name: ""Holy Holy Holy"",       slug: ""holy-holy-holy"",       id: 1,     },     {       name: ""Amazing Grace"",       slug: ""amazing-grace"",       id: 2,     },   ];    const options: TOptions = generateSelectOptions(data, {valueKey: 'id', labelKey: 'name'}); </code></pre> <p>Obviously, without casting to a string, the values of your data record contain arbitrary values (e.g. strings and numbers). If you only want the label to be a number, you need to cast everything you might find there to a string (e.g. with <code>String(value)</code>.</p>",,,false
"{'account_id': 6839005, 'reputation': 137501, 'user_id': 5260024, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c05c6c0e91c188af47c05e0cb0f6864c?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Jonas Wilms', 'link': 'https://stackoverflow.com/users/5260024/jonas-wilms'}",False,0,1669489424,1669489424,74584866,74584614,CC BY-SA 4.0,"<p>Sure, use a generic type parameter which will be inferred from the first argument, the second argument will then be validated against it:</p> <pre><code>function getOptions<T>(   data: T[],    field: { valueKey: keyof T } ) { /*...*/ } </code></pre>",,,false
"{'account_id': 15037360, 'reputation': 1421, 'user_id': 10853255, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/5R9hB.jpg?s=256', 'display_name': 'Karim Elghamry', 'link': 'https://stackoverflow.com/users/10853255/karim-elghamry'}",False,0,1669487654,1669487654,74584701,74584598,CC BY-SA 4.0,"<p>This happens because of React strict mode, it does not have anything to do with the <code>Map</code> data structure. According to the <a href=""https://reactjs.org/docs/strict-mode.html#detecting-unexpected-side-effects"" rel=""nofollow noreferrer"">docs</a>:</p> <blockquote> <p>Strict mode canât automatically detect side effects for you, but it can help you spot them by making them a little more deterministic. This is done by intentionally double-invoking the following functions:</p> <ul> <li><p>Class component constructor, render, and shouldComponentUpdate    methods</p> </li> <li><p>Class component static getDerivedStateFromProps method</p> </li> <li><p>Function component bodies</p> </li> <li><p><strong>State updater functions (the first argument to setState)</strong></p> </li> <li><p>Functions passed to useState, useMemo, or useReducer</p> </li> </ul> </blockquote> <p>Essentially, the callback passed to the <code>setCountdownTimers</code> setter is invoked twice, hence subtracting <code>2</code> instead of <code>1</code>. It shouldn't happen in production.</p>",,,false
"{'account_id': 13173718, 'reputation': 368762, 'user_id': 9515207, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3d5ccb4452ea5093f95c1da37acc764b?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'CertainPerformance', 'link': 'https://stackoverflow.com/users/9515207/certainperformance'}",True,1,1669487445,1669487445,74584673,74584598,CC BY-SA 4.0,"<p>In <a href=""https://reactjs.org/docs/strict-mode.html"" rel=""nofollow noreferrer"">strict mode</a>, state updater functions are invoked twice in an attempt to detect possible bugs.</p> <p>Your code here does have an arguable bug - you're <em>mutating</em> the existing state in the Map here:</p> <pre><code>setCountdownTimers((prevState) => {     console.log(prevState);     for (const [timerKey, timer] of prevState) {         prevState.set(timerKey, timer - 1);     }     return new Map(prevState); }); </code></pre> <p>Although you create a new Map when returning, you're still calling <code>prevState.set</code> - mutating it. This means that the second time the (strict) state updater runs, the Map it sees (in <code>prevState</code> the second time) has already had its values decremented once.</p> <p>Instead of mutating the existing Map, create the new Map immediately, and only change that new Map.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function App() {     const [countdownTimers, setCountdownTimers] = React.useState(new Map([[1, 60]]));      React.useEffect(() => {         const timeoutId = setInterval(() => {             setCountdownTimers((prevState) => {                 const newMap = new Map(prevState);                 console.log(JSON.stringify([...newMap.entries()]));                 for (const [timerKey, timer] of prevState) {                     newMap.set(timerKey, timer - 1);                 }                 return newMap;             });         }, 1000);         return () => {             clearInterval(timeoutId);         };     }, []);      return countdownTimers.get(1); };  ReactDOM.createRoot(document.querySelector('.react')).render(<React.StrictMode><App /></React.StrictMode>);</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script crossorigin src=""https://unpkg.com/react@18/umd/react.development.js""></script> <script crossorigin src=""https://unpkg.com/react-dom@18/umd/react-dom.development.js""></script> <div class='react'></div></code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 27057215, 'reputation': 11, 'user_id': 20609741, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/mO9W2.jpg?s=256', 'display_name': 'Thomas Findlay', 'link': 'https://stackoverflow.com/users/20609741/thomas-findlay'}",False,1,1669502643,1669502643,74586147,74584534,CC BY-SA 4.0,"<p>I sent you an email with an explanation for this issue and how to fix it. I also created a PR in your repo. I will briefly explain here why the problem happened and how to fix it for anyone who runs into it in the future.</p> <p>Vite 3 does something that Vite 2 doesn't. It automatically sets the ""type"" property in the ""package.json"" file to ""module"". So, one way to fix the problem mentioned by the OP is to either remove it or set it to ""commonjs"". But why does this problem happen in the first place? It turns out that vite-plugin-stylelint@3.0.2 doesn't work correctly when the ""type"" is set to ""module"". This problem was fixed in version 3.0.3, so the solution is to install newer versions than 3.0.2.</p>",,,false
"{'account_id': 26931715, 'reputation': 314, 'user_id': 20504019, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0yY2nT897Da6A7uTBchebCNCVHp_XeZiKIS2y3=k-s256', 'display_name': 'Jay F.', 'link': 'https://stackoverflow.com/users/20504019/jay-f'}",True,1,1669488657,1669488657,74584794,74584534,CC BY-SA 4.0,"<p>Try removing the <code>type: ""module""</code> from package.json file. This may help.</p>",,,false
"{'account_id': 20815818, 'reputation': 44137, 'user_id': 15288641, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/JpR3RiD2.jpg?s=256', 'display_name': 'Youssouf Oumar', 'link': 'https://stackoverflow.com/users/15288641/youssouf-oumar'}",True,1,1669541730,1669541730,74588911,74584514,CC BY-SA 4.0,"<p>In <code>SignInDialog.js</code>, you are setting the local storage in that <code>useEffect</code> with <code>props.open</code> as a dependency. But when you call <code>props.setOpen(false);</code> in <code>test</code>, <code>SignInDialog.js</code> get removed from the screen; hence your <code>useEffect</code> is never running. You could change <code>test</code> as below and remove that <code>useEffect</code>:</p> <pre><code>const test = () => {   let user = ""User logged in"";   setUser(user);   localStorage.setItem(""uli"", JSON.stringify(user));   props.setOpen(false); }; </code></pre> <p>Then, in <code>App.js</code>, change your <code>user</code> definition as below, so earlier at this point, you retrieve what's within local storage if there is one:</p> <pre><code>const [user, setUser] = useState(   localStorage.getItem(""uli"") ? JSON.parse(localStorage.getItem(""uli"")) : null ); </code></pre> <p><a href=""https://codesandbox.io/s/musing-bose-o7cdfr?file=/src/App.js:169-284"" rel=""nofollow noreferrer""><img src=""https://codesandbox.io/static/img/play-codesandbox.svg"" alt=""Edit angry-fast-upe615"" /></a></p>",,,false
"{'account_id': 13173718, 'reputation': 368762, 'user_id': 9515207, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3d5ccb4452ea5093f95c1da37acc764b?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'CertainPerformance', 'link': 'https://stackoverflow.com/users/9515207/certainperformance'}",False,2,1669486154,1669486154,74584537,74584504,CC BY-SA 4.0,"<p>In the first approach, every time you change the state of the <code>data</code>, you're filtering out elements from the array. If you filter out an element during one render, it will never appear again in the lifetime of the component. When creating the new state, you need to filter not the <em>current displayed array</em> (which probably has values missing), but the <em>original array</em> from storage.</p> <p>Also keep in mind that state setters are asynchronous, so</p> <pre><code>setInputValue(e.target.value); </code></pre> <p>won't change <code>inputValue</code> until the next render.</p> <pre><code>const originalData = useMemo(() => JSON.parse(localStorage.getItem(""notes"") ?? ""[]""), []); const [data, setData] = useState(originalData); const [inputValue, setInputValue] = useState("""");  const handleNoteListFilter = (e: React.ChangeEvent<HTMLInputElement>) => {     const newInputValue = e.target.value;     setInputValue(newInputValue);     const filteredNotes = originalData.filter((val) =>         val.text.toLowerCase().includes(newInputValue)     );     setData(filteredNotes); }; </code></pre>",,,false
"{'account_id': 22226004, 'reputation': 16196, 'user_id': 16462950, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gjy1a31kVAiCn_hJAWq34vNkEHuXwBWbuL00Eakf4g=k-s256', 'display_name': 'Heiko Thei&#223;en', 'link': 'https://stackoverflow.com/users/16462950/heiko-thei%c3%9fen'}",True,1,1669486973,1669486554,74584578,74584389,CC BY-SA 4.0,"<p>Either use <a href=""https://www.npmjs.com/package/express-session"" rel=""nofollow noreferrer""><code>express-session</code></a> and store the token on the <em>server</em> in <code>req.session.token</code>:</p> <pre class=""lang-js prettyprint-override""><code>(response) => {   req.session.token = response.data.access_token;   req.session.save(function() {     res.redirect(`${process.env.ORIGIN}`)   }); } </code></pre> <p>Or send the token in a session cookie directly:</p> <pre class=""lang-js prettyprint-override""><code>(response) => {   res.cookie(""token"", response.data.access_token, {     httpOnly: true,     secure: true,     sameSite: ""None""   });   res.redirect(`${process.env.ORIGIN}`) } </code></pre>",1669486973.0,,false
"{'account_id': 21391731, 'reputation': 261, 'user_id': 15755662, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GhjMiL7YFRCILniAHoBgQ9YM_e9N59oaKuclNM5qg=k-s256', 'display_name': 'codinn.dev', 'link': 'https://stackoverflow.com/users/15755662/codinn-dev'}",True,1,1669484786,1669484786,74584408,74584336,CC BY-SA 4.0,"<p>It looks like you are looking for - <a href=""https://marketplace.visualstudio.com/items?itemName=styled-components.vscode-styled-components"" rel=""nofollow noreferrer"">vscode-styled-components </a></p>",,,false
"{'account_id': 23776604, 'reputation': 1, 'user_id': 17789961, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/960a6290ffc2a7d52f83dbc6e3a3eb8a?s=256&d=identicon&r=PG', 'display_name': 'IvitoMatus', 'link': 'https://stackoverflow.com/users/17789961/ivitomatus'}",False,0,1669484038,1669483294,74584230,74584181,CC BY-SA 4.0,"<p>Usually inside functions you can't console.log the state right after setting it, because something called as asynchrony, if you really wan't to log the change you should use useEffect</p> <pre><code>useEffect(() => {console.log(selectedGenre)},[selectedGenre]) </code></pre>",1669484038.0,,false
"{'account_id': 9283741, 'reputation': 159, 'user_id': 6894272, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/N7VQw.jpg?s=256', 'display_name': 'Tarmah', 'link': 'https://stackoverflow.com/users/6894272/tarmah'}",False,0,1669483218,1669483218,74584224,74584181,CC BY-SA 4.0,"<p>the setter in useState api is an asynchronous event, therefore you can not trust that calling console.log() will give you the new state.</p> <p>The desired result can be achieved by</p> <pre><code>useEffect(() => {     console.log(selectedGenre);   },[selectedGenre]); </code></pre>",,,false
"{'account_id': 16510884, 'reputation': 89, 'user_id': 11929673, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-h4xXN2BsFA8/AAAAAAAAAAI/AAAAAAAAB5k/PWv0wDwSkcg/photo.jpg?sz=256', 'display_name': 'Pedro Cirilo', 'link': 'https://stackoverflow.com/users/11929673/pedro-cirilo'}",False,1,1721676037,1721676037,78780452,74584091,CC BY-SA 4.0,"<p>Can you use this code for server components:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>import { headers } from 'next/headers' import 'server-only'  export default function useServerPathname() {      const headersList = headers()         , origin = headersList.get('origin') || ''         , referer = headersList.get('referer') || ''         , path = referer.replace(origin, '')      if (path) {         return path     }      throw new Error() }</code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 7626969, 'reputation': 355, 'user_id': 5783141, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b37d02901ccd4c48e3587a079cba4e03?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'luk', 'link': 'https://stackoverflow.com/users/5783141/luk'}",False,1,1720449765,1720449765,78721481,74584091,CC BY-SA 4.0,"<p>In Nextjs 13+ with app router, there is better way to get ""searchParams"" like /search?q=xxxxx on the server side. See the code below.</p> <p>You can make it better by having a type (instead of any) to define your searchParams, in my case url is my domain.com/search?q=my-term and I can access this as on the code below:</p> <pre><code>interface SearchProps {   searchParams: any //define your type you expect in the url }  export default async function Search({ searchParams }: SearchProps) {  const { q } = searchParams const { posts, totalPages, totalPosts } = await searchPost(q)  return (     <main>         <h1 className=""text-4xl font-bold mt-4 mb-2"">Search result</h1>                   <p className=""my-4"">Search term: {q}</p>          <section className=""my-4"">             {posts && posts.map((post: any) => <PostSmall key={post.id} post={post} />)}         </section>     </main> ) </code></pre> <p>}</p>",,,false
"{'account_id': 13082897, 'reputation': 1244, 'user_id': 10515002, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/IYwvF.jpg?s=256', 'display_name': 'Shahrad Elahi', 'link': 'https://stackoverflow.com/users/10515002/shahrad-elahi'}",False,3,1717981768,1717981768,78600150,74584091,CC BY-SA 4.0,"<p>To access the URL from server <strong>actions</strong> and <strong>components</strong> in your Next.js project, you can use the <a href=""https://www.npmjs.com/package/next-extra"" rel=""nofollow noreferrer""><code>next-extra</code></a> package.</p> <p>First, install the package by running the following command:</p> <pre class=""lang-bash prettyprint-override""><code>npm install next-extra </code></pre> <p>Once installed, you can use the package as shown below:</p> <pre class=""lang-js prettyprint-override""><code>import { headers } from 'next/headers'; import { pathname } from 'next-extra/pathname';  export default async function Layout({ children }: Readonly<{ children: React.ReactNode }>) {   const base = `${headers().get('x-forwarded-proto')}://${headers().get('host')}`;   const fullUrl = new URL(pathname(), base); // e.g., http://localhost:3000/some/path?a=1&b=2    console.log(fullUrl);    return children; } </code></pre> <p>For the client components please refer to the official documentation: <a href=""https://nextjs.org/docs/app/api-reference/functions/use-pathname"" rel=""nofollow noreferrer"">App Router: usePathname</a>.</p> <p>I hope this helps!</p>",,,false
"{'account_id': 20815818, 'reputation': 44137, 'user_id': 15288641, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/JpR3RiD2.jpg?s=256', 'display_name': 'Youssouf Oumar', 'link': 'https://stackoverflow.com/users/15288641/youssouf-oumar'}",True,98,1710349419,1669537846,74588571,74584091,CC BY-SA 4.0,"<p>When using the <a href=""https://nextjs.org/docs/getting-started/project-structure"" rel=""noreferrer""><code>app</code></a> router (directory), the <code>pathname</code> has its hook called <code>usePathname</code>. Here is a quote from the <a href=""https://nextjs.org/docs/app/api-reference/functions/use-pathname"" rel=""noreferrer"">doc</a>:</p> <blockquote> <p>The <code>usePathname</code> hook allows you to read the current URL <strong>pathname</strong> from a <strong>Client Component</strong>.</p> </blockquote> <p>Find below an example, and notice the <code>'use client'</code> at the top:</p> <pre><code>'use client';  import { usePathname } from 'next/navigation';  export default function Page() {   const pathname = usePathname();   return <div>{pathname}</div>; } </code></pre> <p>As of now, the doc doesnât mention a way to get the <code>pathname</code> server side. However, you could use the technique inspired by this <a href=""https://github.com/vercel/next.js/issues/43704#issuecomment-1411186664"" rel=""noreferrer"">GitHub comment</a>, combining  Next.js <a href=""https://nextjs.org/docs/app/building-your-application/routing/middleware"" rel=""noreferrer"">middleware</a> and request <code>headers</code>:</p> <pre class=""lang-js prettyprint-override""><code>// middleware.js  import { NextResponse } from ""next/server"";  export function middleware(request) {   const requestHeaders = new Headers(request.headers);   requestHeaders.set(""x-pathname"", request.nextUrl.pathname);    return NextResponse.next({     request: {       headers: requestHeaders,     },   }); } </code></pre> <pre class=""lang-js prettyprint-override""><code>// app/page.js  import { headers } from ""next/headers"";  export default async function Page() {   const headersList = headers();    return <div>{headersList.get(""x-pathname"")}</div>; } </code></pre> <p>And if you are using <a href=""https://nextjs.org/docs/app/building-your-application/routing/dynamic-routes"" rel=""noreferrer"">Dynamic Routes</a> (aka the <code>[id]</code> folders), and you want to know the value of the slug, check out <a href=""https://stackoverflow.com/a/76113271/15288641"">this post</a>.</p>",1710349419.0,,false
"{'account_id': 22981273, 'reputation': 31, 'user_id': 17108157, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/JVQmOR2C.jpg?s=256', 'display_name': 'endelzz', 'link': 'https://stackoverflow.com/users/17108157/endelzz'}",False,3,1710348608,1710348608,78155531,74584091,CC BY-SA 4.0,"<p>If you want to get easily the current pathname on your client server component :</p> <p><code>page.jsx</code></p> <pre><code>export default function Page({ params }) {   const pathname = params;   console.log(pathname) // return an Object } </code></pre> <p>It works like useSearchParams in the documentation <a href=""https://nextjs.org/docs/app/api-reference/functions/use-search-params#server-components"" rel=""nofollow noreferrer"">Here</a></p> <p>Difficult to find.</p>",,,false
"{'account_id': 19816138, 'reputation': 21, 'user_id': 17003575, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/3L7s7.jpg?s=256', 'display_name': 'loqusion', 'link': 'https://stackoverflow.com/users/17003575/loqusion'}",False,2,1690852926,1690852926,76807978,74584091,CC BY-SA 4.0,"<p>One way (albeit a bit hacky) to get the <code>pathname</code> on the server side which doesn't require middleware is <a href=""https://stackoverflow.com/a/75894116/17003575"">answered here</a>:</p> <blockquote> <p>Nextjs13 app dir doesn't have a nice API for this yet. It'll be nice if the props passed down the <code>segment</code>.</p> <p>For now, you can use <code>children.props.childProp.segment</code> to get the path of your route on the server.</p> </blockquote>",,,false
"{'account_id': 21948609, 'reputation': 1, 'user_id': 16228068, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/O9RwQ.png?s=256', 'display_name': 'Savitar', 'link': 'https://stackoverflow.com/users/16228068/savitar'}",False,-3,1690476194,1690476194,76781851,74584091,CC BY-SA 4.0,"<p>Here is how I do it through the server side:</p> <pre><code>export const POST = (request: Request) => {   const pathname = new URL(request.url).pathname;   return new Response(`You requested from ${pathname}`, { status: 200 }); }; </code></pre>",,,false
"{'account_id': 16204533, 'reputation': 1471, 'user_id': 11700077, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Ei4y1.jpg?s=256', 'display_name': 'Tanmoy Bhowmick', 'link': 'https://stackoverflow.com/users/11700077/tanmoy-bhowmick'}",False,18,1688080681,1688080681,76585119,74584091,CC BY-SA 4.0,"<p>If you are looking to get the current active pathname on the server side component/page/layout, you can use headers from next/headers.</p> <pre><code>import { headers } from ""next/headers"";  export function Component() {   const headersList = headers();   const activePath = headersList.get(""x-invoke-path"");   // const activeUrl = headersList.get(""referer"");   // const activeHost = headersList.get(""host"");      return (<div>{activePath}</div>) } </code></pre>",,,false
"{'account_id': 19923261, 'reputation': 445, 'user_id': 14598570, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/LXy56.jpg?s=256', 'display_name': 'josmanuel', 'link': 'https://stackoverflow.com/users/14598570/josmanuel'}",False,0,1669508765,1669508765,74586614,74584045,CC BY-SA 4.0,"<p>Since the example in the documentation doesn't work, I looked for other methods in the documentation itself, and I managed to do exactly what I wanted by using <code>getBlob()</code></p> <p>This is my final function:</p> <pre><code>import { ref, getBlob } from 'firebase/storage' import { storage } from '../firebase/firebase.config'  getBlob(ref(storage, 'files/MyFile.pdf'))         .then((blob) => {             const href = URL.createObjectURL(blob)             const a = Object.assign(document.createElement('a'), {                 href,                 style: 'display:none',                 download: 'myFile.pdf' // This is where you set the name of the file you're about to download             })             a.click()              URL.revokeObjectURL(href)             a.remove()         }).catch((error)=>{             console.error(error)         }) </code></pre> <p>If you feel there's something I can change, you can feel free to tell me</p>",,,false
"{'account_id': 26931715, 'reputation': 314, 'user_id': 20504019, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0yY2nT897Da6A7uTBchebCNCVHp_XeZiKIS2y3=k-s256', 'display_name': 'Jay F.', 'link': 'https://stackoverflow.com/users/20504019/jay-f'}",False,0,1669482051,1669482051,74584085,74584045,CC BY-SA 4.0,"<p>I guess you are missing the reference to the storage</p> <pre><code>import { getStorage, ref, getDownloadURL } from ""firebase/storage""; const storage = getStorage(); ... </code></pre>",,,false
"{'account_id': 2432151, 'reputation': 1731, 'user_id': 2122822, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RNpbU.jpg?s=256', 'display_name': 'Azzy', 'link': 'https://stackoverflow.com/users/2122822/azzy'}",False,0,1669484806,1669484806,74584411,74583787,CC BY-SA 4.0,"<p>I made a few changes to the code they may help you finding a better solution</p> <p>Setting the initial values tab in state instead of useEffect, <a href=""https://beta.reactjs.org/learn/you-might-not-need-an-effect#updating-state-based-on-props-or-state"" rel=""nofollow noreferrer"">to reduce a render cycles</a></p> <p><a href=""https://beta.reactjs.org/learn/updating-arrays-in-state#removing-from-an-array"" rel=""nofollow noreferrer"">Creating a new array</a> on delete and add</p> <p>you can find the <a href=""https://codesandbox.io/s/jolly-cherry-ejmmqd"" rel=""nofollow noreferrer"">modified codesandbox example</a></p> <p>Using a single selected item to render the content <a href=""https://beta.reactjs.org/learn/choosing-the-state-structure#avoid-duplication-in-state"" rel=""nofollow noreferrer"">to prevent duplication</a></p> <p>the only issue was react was not flushing the changes on delete, so I had to use a hack, which you may find helpful in such cases</p> <pre><code>let tabId = 1;  const DisplayTable = ({ isNewMode, name, ...rest }) => {   return (     <div>       {isNewMode ? (         <TableSelection {...rest} />       ) : (         <div>Contents of table: {name}</div>       )}     </div>   ); };  export default function Tabs() {   const [tabsList, setTabsList] = useState([     {       id: tabId,       name: ""Select table"",       isNewMode: true     }   ]);   const [currentTab, setCurrentTab] = useState(tabId);    function newTab() {     tabId = tabId + 1; // unique id check     return {       id: tabId,       name: ""Select table"",       isNewMode: true     };   }    function addTab() {     const t = newTab();     setTabsList((tabs) => [...tabs, t]);     console.log(""++++++3"", t, t.id);     setCurrentTab(t.id);   }    async function removeTab(id) {      //  functional updaters are simpler     //  setTabsList(tabs => [...tabs.filter((a) => a.id !== id)])       // need better logic to select the right tab, this seems simeple enough to understand     const deleteIndex = tabsList.findIndex((v) => v.id === id);     //      if (deleteIndex !== -1) {       const filteredItems = tabsList.filter((a) => a.id !== id);        if (deleteIndex > 0) {         const prevId = filteredItems[deleteIndex - 1];         console.log(""prevId"", prevId);          setTabsList([...filteredItems]);         await Promise.resolve();         setCurrentTab(prevId.id);       }     }   }    const selectedItem = tabsList?.find((item) => item.id === currentTab);    // console.log(""Rendering......"", currentTab, tabsList);   return (     <div className=""p-8 h-full flex flex-col"">       <div className=""tabs"">         {tabsList.map((t) => (           <a             href=""#""             key={t.id}             className={               ""tab tab-bordered "" + (currentTab === t.id ? ""tab-active"" : """")             }             onClick={(e) => {               e.preventDefault();               setCurrentTab(t.id);             }}           >             {t.name}             <button               className=""ml-2 btn btn-ghost btn-square btn-xs""               onClick={(e) => {                 e.preventDefault();                 removeTab(t.id);               }}             >               X             </button>           </a>         ))}         <a href=""#"" className=""tab"">           <button             className=""btn btn-ghost btn-square btn-xs""             onClick={(e) => {               e.preventDefault();               addTab();             }}           >             +           </button>         </a>       </div>       {selectedItem ? (         <DisplayTable           onTableSelection={(item) => {             tabId = tabId + 1;             const d = { ...item, id: tabId, isNewMode: false };             setTabsList((t) => [...t, d]);             console.log(""table select"", d);             setCurrentTab(d.id);           }}           {...selectedItem}         />       ) : null}       {/* {tabsList.map((t) => (         <div key={t.id}>           <TableSelection />         </div>       ))} */}     </div>   ); } </code></pre> <p>Hope is helps in some way,</p> <p>Cheers</p>",,,false
"{'account_id': 15696449, 'reputation': 111, 'user_id': 11325852, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-Vc_-ZMcIoS0/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfOz8eUEHYu-Zl7ZjaxFwABBWTIKQ/mo/photo.jpg?sz=256', 'display_name': 'Hassan Baig', 'link': 'https://stackoverflow.com/users/11325852/hassan-baig'}",True,1,1669481350,1669481350,74584001,74583787,CC BY-SA 4.0,"<p>There are two problems</p> <ul> <li>Splice is mutating state directly, to prevent this, you can use spread operator to make a copy of array.</li> <li>2ndly, The Button is inside Anchor Tag and both have onClick, So when the cross button is clicked, Parent anchor onclick is also called, To prevent this, you can do e.stopPropagation().</li> </ul> <p>Here is the edits i made to the codesandbox <a href=""https://codesandbox.io/s/practical-platform-dvkxrq?file=/src/Tabs.js:3723-3738"" rel=""nofollow noreferrer"">https://codesandbox.io/s/practical-platform-dvkxrq?file=/src/Tabs.js:3723-3738</a></p>",,,false
"{'account_id': 13050171, 'reputation': 123, 'user_id': 9430769, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/7fcddae6dac329b5e1e697269587af12?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'dustin', 'link': 'https://stackoverflow.com/users/9430769/dustin'}",True,0,1670592028,1670592028,74743720,74583765,CC BY-SA 4.0,"<p>My solution was to copy the minified css files from node models and place them in my src directory then import the css from src into the component.</p> <p>Not my favourite, but it works.</p>",,,false
"{'account_id': 15696449, 'reputation': 111, 'user_id': 11325852, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-Vc_-ZMcIoS0/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfOz8eUEHYu-Zl7ZjaxFwABBWTIKQ/mo/photo.jpg?sz=256', 'display_name': 'Hassan Baig', 'link': 'https://stackoverflow.com/users/11325852/hassan-baig'}",True,1,1669479834,1669479834,74583822,74583550,CC BY-SA 4.0,"<p>There is no need to maintain currentIndex in state, For the usecase mentioned. I have used loop index for generating dynamic name for select fields.</p> <p>Here you can check on Codesandbox <a href=""https://codesandbox.io/s/romantic-chatterjee-6odhyn?file=/index.js"" rel=""nofollow noreferrer"">https://codesandbox.io/s/romantic-chatterjee-6odhyn?file=/index.js</a></p>",,,false
"{'account_id': 788593, 'reputation': 39725, 'user_id': 856498, 'user_type': 'registered', 'accept_rate': 64, 'profile_image': 'https://www.gravatar.com/avatar/ec1171f23e20c900cb69e9c6a34fe0f2?s=256&d=identicon&r=PG', 'display_name': 'cyberwombat', 'link': 'https://stackoverflow.com/users/856498/cyberwombat'}",False,2,1669654530,1669603032,74595441,74583264,CC BY-SA 4.0,"<p>It's a bug in Axios - I think dealing with gzip encoding.  You can see the issue <a href=""https://github.com/axios/axios/issues/5298"" rel=""nofollow noreferrer"">here</a>.</p> <p>Workaround:</p> <pre><code>import { createAsyncThunk } from ""@reduxjs/toolkit""; import axios from ""axios"";  export const fetchJob = createAsyncThunk(   ""users/fetchJobs"",    async () => {     const res = await axios.get(""https://jsonplaceholder.typicode.com/posts"", {       headers: { Accept: ""application/json"", ""Accept-Encoding"": ""identity"" }     });     const data = res.data;     // const res = await fetch(`https://jsonplaceholder.typicode.com/posts`);     // const data = await res.json();     console.log(res);      return data;   } );  </code></pre>",1669654530.0,,false
"{'account_id': 23084199, 'reputation': 4003, 'user_id': 17195992, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jwZTv.jpg?s=256', 'display_name': 'ivanatias', 'link': 'https://stackoverflow.com/users/17195992/ivanatias'}",True,2,1669606046,1669602036,74595343,74583264,CC BY-SA 4.0,"<p>The problem is with axios v1.2.0 itself. You need to add <code>Accept</code> and <code>Accept-Encoding</code> headers as a temporary solution until the issue is solved:</p> <pre><code>const res = await axios.get('https://jsonplaceholder.typicode.com/posts', {     headers: {       Accept: 'application/json',       'Accept-Encoding': 'identity'     } }) </code></pre> <p><a href=""https://github.com/axios/axios/issues/5298"" rel=""nofollow noreferrer"">Github discussion about this problem.</a></p>",1669606046.0,,false
"{'account_id': 21391731, 'reputation': 261, 'user_id': 15755662, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GhjMiL7YFRCILniAHoBgQ9YM_e9N59oaKuclNM5qg=k-s256', 'display_name': 'codinn.dev', 'link': 'https://stackoverflow.com/users/15755662/codinn-dev'}",True,0,1669479073,1669479073,74583718,74583217,CC BY-SA 4.0,"<p><strong>Solution</strong></p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>  const bankResponse = {     ""message"": ""Ticket category found"",     ""body"": [         {             ""id"": ""8dc31d42-edf3-4e2a-aceb-ca0dbd8001b3"",             ""name"": ""WTT"",             ""childrenName"": ""Verificar serviÃ§o de envio""         },         {             ""id"": ""a1eb77c0-a772-49e3-8775-9abe14c81002"",             ""name"": ""WTT"",             ""childrenName"": ""Deletar imagem""         },         {             ""id"": ""9cb1658c-58af-424c-9b64-e2e2f90fd26e"",             ""name"": ""WTT"",             ""childrenName"": ""Recuperar backup""         },         {             ""id"": ""4bf08032-7073-4e87-b565-90334c045ac1"",             ""name"": ""Sistemas MV"",             ""childrenName"": ""Criar usuario""         },         {             ""id"": ""bf6be5f9-d53e-4502-9236-e3c25c6e83ea"",             ""name"": ""Sistemas MV"",             ""childrenName"": ""Desbloqueio de usuario""         },         {             ""id"": ""3161ff31-d2b9-4609-8b56-ff1dc8f507fd"",             ""name"": ""Sistemas MV"",             ""childrenName"": ""Alterar senha""         },         {             ""id"": ""059f8977-1d36-4b99-9420-58431914087d"",             ""name"": ""Email"",             ""childrenName"": ""Esqueci minha senha""         },         {             ""id"": ""1b4fc962-ffd6-40f5-bebd-b35cbdca9224"",             ""name"": ""Email"",             ""childrenName"": ""CriaÃ§Ã£o de nova conta""         },         {             ""id"": ""6a26e722-63e5-4957-9eeb-36e7cc85e695"",             ""name"": ""Email"",             ""childrenName"": ""Bloqueio de conta""         }     ],     ""error"": false }  const addedResponse = (processedData, label) => processedData.filter((d)=> d.label === label)  const processBankResponse = (data) => {     const processedData = [];     for(let d of data){         const temp = addedResponse(processedData, d.name);         if(!!temp.length){              temp[0].options.push(d);         } else {              processedData.push({                 label: d.name,                 options: [d]             })         }              }     return processedData; }  console.log(processBankResponse(bankResponse.body));</code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 26698974, 'reputation': 15, 'user_id': 20306342, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/2e317d733474213201d43623e1972371?s=256&d=identicon&r=PG', 'display_name': 'jr-kick', 'link': 'https://stackoverflow.com/users/20306342/jr-kick'}",False,0,1669479743,1669479743,74583804,74583211,CC BY-SA 4.0,"<p>I could solve it finally. I'm gonna put it out here if anyone needs it in the future. Use this plugin: @react-oauth/google</p> <p>My code looks like this:</p> <p>Login Component:</p> <pre><code>import { useEffect } from ""react""; import jwtDecode from ""jwt-decode""; import { useDispatch } from ""react-redux""; import { login } from ""../redux/user""; import { setCurrentPath } from ""../redux/currentpath""; import { GoogleLogin } from '@react-oauth/google';  const Login = () => {   const dispatch = useDispatch();    useEffect(() => {     dispatch(setCurrentPath(window.location.pathname));   }, []);      /* const google = window.google;    function handleCallbackResponse(response) {     var user = jwtDecode(response.credential);     dispatch(login({ name: user.name, avatar: user.picture }));   };    useEffect(() => { */     /* global google */     /* google.accounts.id.initialize({       client_id: '650598283556-4tl875cetd7ueallsq486darhpj5e30n.apps.googleusercontent.com',       callback: handleCallbackResponse     });      google.accounts.id.renderButton(       document.getElementById('signInDiv'),       { theme: 'outline', size: 'large' }     );   }, []); */      return (     <div className=""content login"">       <div className='greeting-text'>         <h1>Welcome to <br className=""br"" /> Cat Room!</h1>         <p>Here you can talk about some very interesting topics, like milk, yarn balls, mice and many more. So don't be shy, come and join us! You can log in with Google right below this pharagraph.</p>       </div>       <div id=""signInDiv"">         <GoogleLogin           onSuccess={credentialResponse => {             console.log(credentialResponse.credential);             var user = jwtDecode(credentialResponse.credential);             dispatch(login({ name: user.name, avatar: user.picture }));           }}           onError={() => {             console.log('Login Failed');           }}         />       </div>       {/* <div id=""signInDiv"">       </div> */}     </div>   ); };   export default Login; </code></pre> <p>index.js:</p> <pre><code>import React from 'react'; import ReactDOM from 'react-dom/client'; import './index.css'; import App from './App'; import reportWebVitals from './reportWebVitals'; import store from './redux/store'; import { Provider } from 'react-redux'; import { GoogleOAuthProvider } from '@react-oauth/google';  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(   <React.StrictMode>     <Provider store={store}>       <GoogleOAuthProvider clientId=""650598283556-4tl875cetd7ueallsq486darhpj5e30n.apps.googleusercontent.com""><App /></GoogleOAuthProvider>     </Provider>   </React.StrictMode> ); </code></pre>",,,false
"{'account_id': 15696449, 'reputation': 111, 'user_id': 11325852, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-Vc_-ZMcIoS0/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfOz8eUEHYu-Zl7ZjaxFwABBWTIKQ/mo/photo.jpg?sz=256', 'display_name': 'Hassan Baig', 'link': 'https://stackoverflow.com/users/11325852/hassan-baig'}",False,1,1669478225,1669478225,74583624,74583211,CC BY-SA 4.0,"<pre><code>useEffect(() => {     if(window.google){         /* global google */         window.google.accounts.id.initialize({           client_id: '650598283556-4tl875cetd7ueallsq486darhpj5e30n.apps.googleusercontent.com',           callback: handleCallbackResponse         });              window.google.accounts.id.renderButton(           document.getElementById('signInDiv'),           { theme: 'outline', size: 'large' }         );     }  }, [window.google]); </code></pre>",,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",False,0,1669648571,1669579217,74593389,74583162,CC BY-SA 4.0,"<p>Have you tried this ?</p> <pre class=""lang-js prettyprint-override""><code>""use client"";  import ReactGlobe from ""react-globe"";  import markers from ""./markers""; import markerRenderer from ""./markerRenderer"";  const options = {     markerRenderer, };  export default function App() {     return (         <div className=""App"">             {               typeof window !== undefined ?                 <ReactGlobe                   height=""100vh""                   globeTexture=""https://raw.githubusercontent.com/chrisrzhou/react-globe/main/textures/globe_dark.jpg""                   markers={markers}                   width=""100vw""                   options={options}                 />               :                 null             }         </div>     ); } </code></pre> <p><strong>Update:</strong></p> <p>You can fix it by dynamically import your library:</p> <pre class=""lang-js prettyprint-override""><code>import dynamic from 'next/dynamic'; </code></pre> <pre class=""lang-js prettyprint-override""><code>const ReactGlobe = dynamic(import('react-globe'), { ssr: false }); </code></pre>",1669648571.0,,false
"{'account_id': 956144, 'reputation': 375, 'user_id': 981409, 'user_type': 'registered', 'accept_rate': 83, 'profile_image': 'https://www.gravatar.com/avatar/5ee98761fd4249c2ddf4b7aa3d6bbf6d?s=256&d=identicon&r=PG', 'display_name': 'David Benko', 'link': 'https://stackoverflow.com/users/981409/david-benko'}",False,1,1669578746,1669578746,74593335,74583162,CC BY-SA 4.0,"<p>I thought client components are only rendered on the browser but apparently client components <strong>can also be pre-rendered on the server</strong> and hydrated on the client.</p> <p>See this discussion: <a href=""https://github.com/vercel/next.js/discussions/42319"" rel=""nofollow noreferrer"">https://github.com/vercel/next.js/discussions/42319</a></p>",,,false
"{'account_id': 27031397, 'reputation': 1186, 'user_id': 20587701, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/aHg04.jpg?s=256', 'display_name': 'NAZIR HUSSAIN', 'link': 'https://stackoverflow.com/users/20587701/nazir-hussain'}",False,0,1669474074,1669474074,74583134,74583012,CC BY-SA 4.0,"<p>you should use axios</p> <p>set header to axios</p> <pre><code>axios.defaults.headers.common = {       'Content-Type': 'application/json',           ""auth-token"": ""eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjM3NzkzYTE2ODlkNzc3Y2E0NjIyMWEzIn0sImlhdCI6MTY2ODg0MTU4OX0.gCCy5LGk48N3k5wTPW5SOxfkfg6AKhnluCeCGwJbgrI""         } </code></pre> <p>then anywhere in your application use <code>axios.[METHOD_NAME]</code> you dont need to define header there.</p>",,,false
"{'account_id': 4903864, 'reputation': 215, 'user_id': 3951168, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/94926b68d53b4ec675d3415d5516049d?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'iaq', 'link': 'https://stackoverflow.com/users/3951168/iaq'}",True,0,1669591528,1669591041,74594551,74582666,CC BY-SA 4.0,"<p>It seems like you are using Material UI. For checkbox component you need to set the checked prop.</p> <pre><code>import Checkbox from '@mui/material/Checkbox';  const label = { inputProps: { 'aria-label': 'Checkbox demo' } };  export default function Checkboxes() {   return (     <div>       <Checkbox {...label} defaultChecked />       <Checkbox {...label} />       <Checkbox {...label} disabled />       <Checkbox {...label} disabled checked />     </div>   ); } </code></pre> <p>If you use html input tag with type checkbox, then again you have to set the checked attribute accordingly see below.</p> <pre><code><label for=""vehicle2""> I have a car</label><br>   <input type=""checkbox"" name=""vehicle3"" value=""Boat"" checked> </code></pre> <p>And lastly, you don't need a local state in your example and you can remove</p> <pre><code>const [values, setValues] = useState({     all: true,     items: []   }); </code></pre> <p>and</p> <pre><code>useEffect(() => {     if (itemList.length) {       const newValues = {         all: true,         items: itemList.map((item) => ({           select: true,           id: item.id,         })),       };       setValues(newValues);     }   }, [itemList]); </code></pre> <p>and replace with</p> <pre><code>const values = {         all: true,         items: itemList && itemList.length ? itemList.map((item) => ({           select: true,           id: item.id,         })) : [],       }; </code></pre>",1669591528.0,,false
"{'account_id': 22719812, 'reputation': 21, 'user_id': 16884475, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/LZGd9.jpg?s=256', 'display_name': 'Zehan Khan', 'link': 'https://stackoverflow.com/users/16884475/zehan-khan'}",False,0,1669572645,1669572645,74592558,74582638,CC BY-SA 4.0,"<pre class=""lang-js prettyprint-override""><code>const login = async (req, res, next) => {   try {     function generateToken(user) {       return jwt.sign(         {           id: user.id,           email: user.email,           username: user.username,         },         SECRET_KEY,         { expiresIn: ""1h"" }       );     }     const { email } = req.body.email     const user = await User.findOne({ email });     if (!user) {       console.log(""User not found."");       res.status(404).json({ error: ""User not found!"" })     } else {       const match = bcrypt.compare(password, user.password);       if (!match) {         console.log(""Wrong password."");         res.status(401).json({ error: ""Wrong Password!"" })       }       if (match) {         const token = generateToken(user);         res.status(200).json({ token });       }     }   } catch (error) {     return res.status(500).json({ error: error.message });   } }; </code></pre>",,,false
"{'account_id': 22663016, 'reputation': 131, 'user_id': 16835827, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJzwo6DRbrig7PrxRVtl0IgSNRP-9JxZZfLwN8en=k-s256', 'display_name': 'khalid hossain', 'link': 'https://stackoverflow.com/users/16835827/khalid-hossain'}",True,0,1669567633,1669567633,74591915,74582638,CC BY-SA 4.0,"<p>You need to add the following code in your login controller .</p> <pre><code>const {email} = req.body.email;  const user = await User.findOne({ email }); </code></pre> <p>And i can see from your comment that when you are submitting the form you are getting nothing back ! I can see that you are returning the token . Instead you have to add the following code if everything goes well.</p> <pre><code>res.json({token: token}) </code></pre> <p>Or</p> <pre><code>res.status(200).json({token}) </code></pre> <p>If everything is fine then you will get a response like this:</p> <pre><code>{  token: ""eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"" } </code></pre> <p>One more thing to handle</p> <pre><code>if(!user) {   //here you should use either of the following line    //next('No such user found')   res.status(404).send('No user found with that email') }  if (!match) {     //here you should use either of the following line    //next('Password Mismatch')   res.status(400).send('Password Mismatch')   } </code></pre> <p>Why is that ? Because if you don't handle this type of errors your app will not respond! Cause it will stuck in the middleware lifecycle !</p>",,,false
"{'account_id': 8723294, 'reputation': 16536, 'user_id': 6525724, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/CZEkk.jpg?s=256', 'display_name': 'Nick', 'link': 'https://stackoverflow.com/users/6525724/nick'}",True,0,1669469767,1669469767,74582648,74582604,CC BY-SA 4.0,"<p>You don't want to be resetting <code>handleClick</code> inside the test or else you'll lose reference to the actual click handler mock that you've declared in the higher scope.</p> <pre class=""lang-js prettyprint-override""><code>it('calls onClick prop when clicked', () => {   const buttonText = ""buttonText""   fireEvent.click(screen.getByText(buttonText))   expect(handleClick).toHaveBeenCalledTimes(1) }) </code></pre> <p>You may also need to reset the click count between tests. You can do this with <code>clearAllMocks</code>:</p> <pre class=""lang-js prettyprint-override""><code>afterEach(() => {   jest.clearAllMocks(); }) </code></pre>",,,false
"{'account_id': 16567662, 'reputation': 133, 'user_id': 11971765, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c3800f1ef40536b17f30cff3b9af58d6?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Tom_Ra', 'link': 'https://stackoverflow.com/users/11971765/tom-ra'}",False,1,1669539940,1669470455,74582731,74582599,CC BY-SA 4.0,"<p>You can put the state and handle click event in the upper component and pass the onClick function to it's child components. when button is clicked the state will change in the GrandParent and then you can use the ""click"" state for conditional rendering of whatever component you like, in the grandparent component</p> <ul> <li>I would suggest in this case to call the state</li> </ul> <pre><code>const [isButtonClicked, setIsButtonClicked] = useState(true); </code></pre> <p>so that is more clear..</p> <pre><code>Import {Parent} from './Parent'; Import React, {useState} from 'react';  type GrandParentProps =  {    ... }  export const GrandParent = ({ ... }: GrandParentProps) => {  const [click, setClick] = useState(true);  const handleClick = () => {   setClick(!click); }  return (     <>       {passedProp ? <h1> show this title </h1> : null}       <Parent onClick={handleClick}/>        {click && <SomeComponent />}     </>   ); };   Import React from 'react'; Import {Child} from './Child';  type ParentProps =  {    onClick: () => void; }        export const Parent = ({ onClick }: ParentProps) => {           return (        <Child onClick={onClick} />     );   };   Import React, {useState} from 'react';  type ChildProps =  {   onClick: () => void; }        export const Child = ({ onClick }: ChildProps) => {          return (         <button onClick={onClick}>on click return false</button>     ); }; </code></pre>",1669539940.0,,false
"{'account_id': 2486870, 'reputation': 752, 'user_id': 2165146, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d86a4f146987e88b71bf203fd77ce207?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'muhammed ozbilici', 'link': 'https://stackoverflow.com/users/2165146/muhammed-ozbilici'}",False,0,1669496533,1669496533,74585562,74582521,CC BY-SA 4.0,"<p>First of all, your url name is not good case for rest endpoint naming. You can check a good documentation for that:</p> <p><a href=""https://learn.microsoft.com/en-us/azure/architecture/best-practices/api-design"" rel=""nofollow noreferrer"">Rest Api Rules</a></p> <p>So it should be something like this:</p> <pre><code>@GetMapping(value = ""/images/image/{userName}"") </code></pre> <p>Instead of <code>userName</code>, use <code>userId</code> or similar to that which you can use it for database search with index and more suitable for unique identification for requests.</p> <pre><code>@ResponseBody @GetMapping(value = ""/images/image/{userName}"", produces = MediaType.IMAGE_JPEG_VALUE) public ResponseEntity<byte[]> retrieveImage(@PathVariable String userName) throws IOException {    InputStream inputStream = servletContext.getResourceAsStream(pathOfImageFile);    // This method can return inputStream    // freelancerService.retrieveImageFromFileSystem(userName);    return new ResponseEntity<byte[]>(IOUtils.toByteArray(ininputStream, HttpStatus.CREATED); } </code></pre>",,,false
"{'account_id': 16178769, 'reputation': 317, 'user_id': 11680820, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c4b9c6627ae9dd3fd0d01a9c84ac40a0?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Tjm92', 'link': 'https://stackoverflow.com/users/11680820/tjm92'}",False,0,1669469422,1669469422,74582601,74582512,CC BY-SA 4.0,"<p>You need to store the data from the response in state. The empty array in the useState is initially empty. However, once the axios call has been made and returned some data, the useEffect function will be called and cause the task list array to be populated. The result of which can then be iterated over and displayed on the front end.</p> <pre><code>let taskList = axios.post('http://localhost:8080/Todo',request)     .then(resp=>{         alert(resp.data.message);     })     .catch( err=>{         console.log(err);     })   const [tasks, setTasks] = useState([]);  useEffect(() => {     setTasks(taskList); }, [taskList]);       return (          <div >         <h1>ToDo List</h1>         <form onSubmit={handleSubmit}>             <input type=""text"" placeholder="" Add item..."" name=""list"" value={toDos} onChange={(e)=>setToDos(e.target.value)}/>             {tasks.map(() => {                 return (                     <div>                         <h1>{tasks}</h1>                     </div>                 )             })}             <button id=""btn"" type=""submit"">Add</button>         </form>         </div>     ); }   export default Todo; </code></pre>",,,false
"{'account_id': 5222664, 'reputation': 4180, 'user_id': 4175647, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://www.gravatar.com/avatar/69dd515b78f4fc289d2866d0d3ff57f2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Nick Roz', 'link': 'https://stackoverflow.com/users/4175647/nick-roz'}",False,0,1669472304,1669472304,74582928,74582462,CC BY-SA 4.0,"<p>If all the permissions are at the backend part, some of requests must return 401 and your frontend part must respond accordingly (render a popup e.g, show a message).</p> <p>If you are trying to hide some unavailable parts (menu items, buttons, pages) beforehand, your frontend part must get a list of user roles / permissions from the back beforehand and render page using this infromation. You can provide this along with authentication request or as a separate request.</p> <hr /> <p>I, personally, prefer <code>pundit</code> over <code>cancancan</code></p>",,,false
"{'account_id': 13839246, 'reputation': 39, 'user_id': 10757011, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/FJOzw.jpg?s=256', 'display_name': 'Courtney Mill', 'link': 'https://stackoverflow.com/users/10757011/courtney-mill'}",False,0,1669482642,1669482642,74584152,74582441,CC BY-SA 4.0,"<p>Unless there is a good reason why you want to achieve this using Javascript, I would do it with CSS instead. Limit the width of the div or span containing the title. You  could use max-width for example.</p> <p>Something like this:</p> <pre><code><span style={{maxWidth:100}} >   <p>{artist.name}</p> </span> </code></pre>",,,false
"{'account_id': 9924407, 'reputation': 26, 'user_id': 10905161, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-QipYmiAyNgg/AAAAAAAAAAI/AAAAAAAAACk/COWh6-pvwV8/photo.jpg?sz=256', 'display_name': 'Shayaan Farooqi', 'link': 'https://stackoverflow.com/users/10905161/shayaan-farooqi'}",False,0,1669469335,1669469335,74582594,74582409,CC BY-SA 4.0,"<p>It's hard to help you out without a reproducible example in <a href=""https://stackblitz.com/"" rel=""nofollow noreferrer"">stackblitz</a> etc.</p>",,,false
"{'account_id': 8854852, 'reputation': 15936, 'user_id': 6612932, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://i.sstatic.net/Q3mwe.jpg?s=256', 'display_name': 'rocambille', 'link': 'https://stackoverflow.com/users/6612932/rocambille'}",True,0,1669467590,1669467590,74582383,74582361,CC BY-SA 4.0,"<p>To be working, NavLinks should be nested inside a Router component. So your Navbar containing the links should move from outside the router:</p> <pre><code><Navbar/> <BrowserRouter>   <Routes>     ... </code></pre> <p>To inside the router:</p> <pre><code><BrowserRouter>   <Navbar/>   <Routes>     ... </code></pre>",,,false
"{'account_id': 7142980, 'reputation': 344827, 'user_id': 5459839, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/lUUgh.png?s=256', 'display_name': 'trincot', 'link': 'https://stackoverflow.com/users/5459839/trincot'}",True,1,1669470238,1669469965,74582675,74582299,CC BY-SA 4.0,"<p>You could convert the array to a list of key/value pairs, flatten it, and then use a regex to extract the optional ""NOT"" prefix from it. Then you are left with a key in either case. With this key look up the corresponding IDs from the data array. If a ""NOT"" was found, filter those data IDs so those that are given in the array are excluded:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const filter = (data, filters) =>     Object.fromEntries(         filters.flatMap(Object.entries).map(([action, ids]) => {             let [, not, key] = action.match(/(NOT )?(.*)/);             let allids = data[key].map(({id}) => id);             if (typeof allids[0] == ""number"") ids = ids.map(Number);             if (not) {                 ids = new Set(ids);                 return [key, allids.filter(id => !ids.has(id))];             }             return [key, ids];         })     );  // Your example inputs: const array = [{DEVICE_SIZE: ['036', '048', '060', '070'],},{DEVICE_VOLTAGE: ['1', '3'],},{'NOT DEVICE_DISCHARGE_AIR': ['S'],},{'NOT DEVICE_REFRIGERANT_CIRCUIT': ['H', 'C'],},]; const data = {DEVICE_SIZE: [{ id: 20, name: 'Size 20' },{ id: 36, name: 'Size 36' },{ id: 40, name: 'Size 40' },{ id: 20, name: 'Size 48' },{ id: 60, name: 'Size 60' },{ id: 70, name: 'Size 70' },],DEVICE_VOLTAGE: [{ id: 1, name: 'Voltage 1' },{ id: 2, name: 'Voltage 2' },{ id: 3, name: 'Voltage 3' },{ id: 4, name: 'Voltage 4' },{ id: 5, name: 'Voltage 5' },],DEVICE_DISCHARGE_AIR: [{ id: 'E', name: 'Discharge E' },{ id: 'S', name: 'Discharge S' },{ id: 'T', name: 'Discharge T' },],DEVICE_REFRIGERANT_CIRCUIT: [{ id: 'C', name: 'Refrigerant C' },{ id: 'E', name: 'Refrigerant E' },{ id: 'H', name: 'Refrigerant H' },{ id: 'M', name: 'Refrigerant M' },],};  const result = filter(data, array); console.log(result);</code></pre>  </div>  </div>  </p>",1669470238.0,,false
"{'account_id': 11347730, 'reputation': 297, 'user_id': 8319730, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/rf3SC.jpg?s=256', 'display_name': 'fum4', 'link': 'https://stackoverflow.com/users/8319730/fum4'}",True,0,1669474659,1669466714,74582268,74582163,CC BY-SA 4.0,"<p>Updating state is best seen <strong>like</strong> an asynchronous operation. You cannot set state in a function / effect and expect it to immediately be updated, on the spot. Well, it technically is, but you won't see the updates in your ""already-running"" function.</p> <p>I am pretty sure that if you extract your log in the component root it will display the appropriate value after the login function finishes executing and the component properly sets the new state.</p> <p>If you do need the value in the function you should directly use <code>res.data</code>.</p> <p><strong>A deeper dive:</strong></p> <p>Whenever your login function runs it forms a closure around your <strong>current</strong> values (including <code>currentUser</code> which is <code>undefined</code> at the moment).</p> <p>When you update the <code>currentUser</code> in the login function you basically inform react that you need to update that value. It will handle this in the background, preparing the state for the next render, but your login function will keep running with whatever values it started with. Your ""new"" state values will not be available until you run the function again. This is because the already-running function ""closed over"" old values, so it can only reference those.</p> <p>As a side note, if you use a <code>ref</code> for instance you would not have this problem. Why? Because refs do not participate in the react lifecycle. When you modify a <code>ref</code> it changes on the spot. You will have the updated value precisely on the next line. State does not work like that, it is coupled to the component lifecycle, so it will update on the next render.</p>",1669474659.0,,false
"{'account_id': 16655015, 'reputation': 662, 'user_id': 12036671, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AAuE7mCaPRfczBrHte382JWjj9A1JB8jte1lpkBeIuqx_A=k-s256', 'display_name': 'Sandil Ranasinghe', 'link': 'https://stackoverflow.com/users/12036671/sandil-ranasinghe'}",True,2,1669463860,1669463860,74581966,74581893,CC BY-SA 4.0,"<p>Generally an effect is applied after every single render. However react allows you to customize that by passing an array with values as an optional second argument. In your case, that is <code>[count < 2]</code>. When you pass such a value, the effect is applied <em>only</em> when that value changes.</p> <p>In your case, the effect would run only when the boolean <code>count < 2</code> which is True initially, changes to False when count is 2.</p> <p>Take a look at the official documentation for <code>useEffect</code> here <a href=""https://reactjs.org/docs/hooks-effect.html#tip-optimizing-performance-by-skipping-effects"" rel=""nofollow noreferrer"">https://reactjs.org/docs/hooks-effect.html#tip-optimizing-performance-by-skipping-effects</a></p>",,,false
"{'account_id': 26262438, 'reputation': 128, 'user_id': 19933529, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AItbvmnROdl3iXSBlOHyFbvwWb8W7Z9jHnc2Gv0ROyvM=k-s256', 'display_name': 'Alex', 'link': 'https://stackoverflow.com/users/19933529/alex'}",False,2,1669463478,1669463478,74581922,74581893,CC BY-SA 4.0,<p>Because the condition result (county < 2) doesn't change when the count changes from 0 to 1.</p>,,,false
"{'account_id': 11347730, 'reputation': 297, 'user_id': 8319730, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/rf3SC.jpg?s=256', 'display_name': 'fum4', 'link': 'https://stackoverflow.com/users/8319730/fum4'}",True,1,1669472760,1669472012,74582895,74581821,CC BY-SA 4.0,"<p>As <strong>@ksav</strong> mentioned you are overwriting your theme in the second <code>useEffect</code>.</p> <p>Simplifying the flow a bit, a specific fix for your code would be:</p> <pre><code>const ThemeProvider = ({ children }: ThemeProviderInterface) => {   const [theme, setTheme] = useState<ThemeOpt>(localStorage.getItem('theme') || 'light'); // directly initialising with local storage or default value    useEffect(() => {     if (theme) {       localStorage.setItem('theme', theme)     }   }, [theme]); // every time the theme state updates we also update in local storage    return (     <ThemeContext.Provider value={{ theme, setTheme }}>       {children}     </ThemeContext.Provider>   ); } </code></pre> <p><strong>@arp</strong> said something interesting though. You can and <strong>should</strong> update your data in the <code>onClick</code> handler as an effect is not necessary here. An effect will cause the local storage to be updated only after the state is set and the component re-renders, which is not needed. More than that, if you changed another state instead of modifying local storage then this would also cause an extra render (see <a href=""https://reactjs.org/blog/2022/03/29/react-v18.html#new-feature-automatic-batching"" rel=""nofollow noreferrer"">automatic batching</a>, which would not work with your code as updates are decoupled).</p> <p>The conclusion is that you don't have to wait for the state to be updated in order to know that you should also update the local storage. You can do both of them at the same time in the <code>onClick</code> handler. This increases performance and is the recommended approach.</p>",1669472760.0,,false
"{'account_id': 4081983, 'reputation': 797, 'user_id': 3352254, 'user_type': 'registered', 'accept_rate': 65, 'profile_image': 'https://www.gravatar.com/avatar/5fac2559c87d28f6964fa379062b8b12?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'smaica', 'link': 'https://stackoverflow.com/users/3352254/smaica'}",False,2,1669551567,1669551567,74589950,74581802,CC BY-SA 4.0,"<p>Thanks to @Duniyadnd comment I calculated the first and last index where the data crosses the y-Axis and then push the plotBands like so:</p> <pre><code>var plotBand = [] for (var i = 1; i < crossings.length; i++) {     if(i%2!=0){         plotBand.push({from: crossings[i-1], to: crossings[i], color: color})     } } </code></pre>",,,false
"{'account_id': 27053119, 'reputation': 51, 'user_id': 20606224, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu2Bie3jLPnm7I7MZHuaFoomS-WUZ9CHj0-JjUlY=k-s256', 'display_name': 'Sujay', 'link': 'https://stackoverflow.com/users/20606224/sujay'}",True,5,1669476445,1669476445,74583426,74581787,CC BY-SA 4.0,"<pre><code>it(""should call onClose when the timer is done "", async () => {   jest.useFakeTimers();   const testOnClose = jest.fn();   render(     <Snackbar       open       message=""Snackbar component""       onClose={testOnClose}       testId=""test-snackbar""     />   );   act(() => {     jest.advanceTimersByTime(2000);   });   expect(testOnClose).toHaveBeenCalled(); }); </code></pre> <p>Answer which i found is use act from react test library .</p>",,,false
"{'account_id': 2183634, 'reputation': 18955, 'user_id': 1932552, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/4032e830e15235362af1988e2fccfdf3?s=256&d=identicon&r=PG', 'display_name': 'Yosvel Quintero', 'link': 'https://stackoverflow.com/users/1932552/yosvel-quintero'}",True,0,1669471899,1669469302,74582587,74581767,CC BY-SA 4.0,"<p>You can create a temporary object <code>obj1</code> with <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map"" rel=""nofollow noreferrer"">Array.prorotype.map()</a> and <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce"" rel=""nofollow noreferrer"">Array.prorotype.reduce()</a> from the arrays <code>data.Candidates</code> and <code>data.Jobopenings</code> but keeping track of the repeated data by <code>Email</code> and finally get the result array value with <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Object/values"" rel=""nofollow noreferrer"">Object.values()</a></p> <p><strong>Code</strong>:</p> <pre><code>useEffect(() => {   const obj1 = [...data.Candidates, ...data.Jobopenings]     .map((o) => ({       Email: o.Email,       Recruiter: o.Recruiter,       jobopeningTotal: o.jobopeningTotal || 0,       Hired: o.Hired || 0,       Total: o.Total || 0,       clientsubmitted: o.clientsubmitted || 0,       interviewscheduled: o.interviewscheduled || 0,     }))     .reduce((a, c) => {       a[c.Email] = a[c.Email] || {         Email: c.Email,         Recruiter: c.Recruiter,         jobopeningTotal: 0,         Hired: 0,         Total: 0,         clientsubmitted: 0,         interviewscheduled: 0,       };       a[c.Email].jobopeningTotal += c.jobopeningTotal;       a[c.Email].Hired += c.Hired;       a[c.Email].clientsubmitted += c.clientsubmitted;       a[c.Email].interviewscheduled += c.interviewscheduled;       a[c.Email].Total += c.Total;       return a;     }, {});   const data1 = Object.values(obj1);    setAllData(data1); }, []); </code></pre> <p>And here is teh <strong>Stackblitz</strong>: <a href=""https://stackblitz.com/edit/react-wy9d7t?file=src/App.js"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/react-wy9d7t?file=src/App.js</a></p>",1669471899.0,,false
"{'account_id': 27031397, 'reputation': 1186, 'user_id': 20587701, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/aHg04.jpg?s=256', 'display_name': 'NAZIR HUSSAIN', 'link': 'https://stackoverflow.com/users/20587701/nazir-hussain'}",False,0,1669471625,1669471300,74582816,74581767,CC BY-SA 4.0,"<p>you can use lodash for it</p> <pre><code>let result = _.unionBy(data.Candidates,Â data.Jobopenings,Â ""Email"") result =result.map((item,index)=>{  return {...item, jobopeningTotal:_.find(data.Jobopenings,{Email:item.Email}).jobopeningTotal } })  console.log(""Your desired output"",result); </code></pre> <p>Thank you!</p>",1669471625.0,,false
"{'account_id': 9924407, 'reputation': 26, 'user_id': 10905161, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-QipYmiAyNgg/AAAAAAAAAAI/AAAAAAAAACk/COWh6-pvwV8/photo.jpg?sz=256', 'display_name': 'Shayaan Farooqi', 'link': 'https://stackoverflow.com/users/10905161/shayaan-farooqi'}",False,0,1669468453,1669468453,74582488,74581767,CC BY-SA 4.0,"<p>You want some way to merge the 2 arrays together such that items with repeated <code>Keys</code> (Email in your case) get combined and others get inserted. You can probably find a bunch of libs that already have such helper functions, or you can write a short one yourself.</p> <p>This should do what you want:</p> <pre><code>useEffect(() => {     function merge(arrayOne, arrayTwo, key) {       let result = [...arrayOne];       arrayTwo.forEach((entryTwo) => {         let existing = result.find((entry) => entry[key] === entryTwo[key]);         if (existing) {           Object.assign(existing, entryTwo);           return;         }         result.push(entryTwo);       });       return result;     }     setAllData(merge(data.Candidates, data.Jobopenings, 'Email'));   }, []); </code></pre>",,,false
"{'account_id': 27043327, 'reputation': 1, 'user_id': 20597869, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/629cb49c3bab43f13c04822fa1639c54?s=256&d=identicon&r=PG', 'display_name': 'mb_const', 'link': 'https://stackoverflow.com/users/20597869/mb-const'}",False,0,1669468444,1669468444,74582484,74581637,CC BY-SA 4.0,"<p>instead of</p> <pre><code>const user = jwt.verify(accessToken, process.env.JWT_AUTH_SECRET); </code></pre> <p>try this:</p> <pre><code>const user = await promisify(jwt.verify)(accessToken, process.env.JWT_AUTH_SECRET); </code></pre>",,,false
"{'account_id': 21415549, 'reputation': 142, 'user_id': 15774855, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/m6EX7.jpg?s=256', 'display_name': 'huzaifac137', 'link': 'https://stackoverflow.com/users/15774855/huzaifac137'}",True,1,1669477965,1669477965,74583589,74581602,CC BY-SA 4.0,"<p>In your cors middleware set the origin to true and credentials to true.</p> <pre><code>const cors = require(""cors""); </code></pre> <pre><code>app.use(cors({origin : true , credentials :true})) </code></pre>",,,false
"{'account_id': 10705011, 'reputation': 641, 'user_id': 7879109, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/1480449992026266/picture?type=large', 'display_name': 'Jonathan Wieben', 'link': 'https://stackoverflow.com/users/7879109/jonathan-wieben'}",False,0,1669463503,1669463503,74581925,74581371,CC BY-SA 4.0,"<p>Next does not automatically inject Google Tag Manager scripts into your project.</p> <p>I would expect something else is injecting those tags into your page, possibly a browser extension. To confirm this you can open the page in an incognito window and check if you can still find the tag.</p>",,,false
"{'account_id': 2432151, 'reputation': 1731, 'user_id': 2122822, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RNpbU.jpg?s=256', 'display_name': 'Azzy', 'link': 'https://stackoverflow.com/users/2122822/azzy'}",False,0,1669462123,1669461259,74581661,74581337,CC BY-SA 4.0,"<p>A simpler method</p> <pre><code>// gets two results wit the equals let filteredList = []; for (const item of arrobj1) {  // include TASK === item.id to get the expected answer  const inArray = arrobj2.find(e => e.ISACTIVE && e.TASK === item.id &&  e.SERVICE === item.grp);   if (inArray) {     filteredList.push(item)   } }  console.log(filteredList) </code></pre> <p>with filters in the question it returns two items e => e.ISACTIVE &&  e.SERVICE === item.grp</p> <pre><code>0: Object    id: ""SetupFS""    grp: ""fs""    title: ""xxx"" 1: Object    id: ""ExtendFS""    grp: ""fs""    title: ""yyy"" </code></pre> <p>Hope it helps</p> <p>but if this is not what was expected, I'll delete the answer</p>",1669462123.0,,false
"{'account_id': 16455662, 'reputation': 16791, 'user_id': 11887902, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/OOnO5.jpg?s=256', 'display_name': 'Mina', 'link': 'https://stackoverflow.com/users/11887902/mina'}",False,1,1669460880,1669459072,74581446,74581337,CC BY-SA 4.0,"<p>You don't need <code>filter</code> for second item, you need to check if the item with corresponding <code>index</code> in <code>arrobj1</code> with <code>grp</code> value equal to <code>SERVICE</code> value in <code>arrobj2</code></p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>var arrobj1=[   {     id:""SetupFS"",     grp:""fs"",     title: ""xxx""   },   {     id:""ExtendFS"",     grp:""fs"",     title: ""yyy""   },   {     id:""RebootServer"",     grp:""os"",     title: ""yyy""   }, ]  var arrobj2=[ {id:1, ISACTIVE:true, TASK:'SetupFS', SERVICE: ""fs"" },  {id:2, ISACTIVE:false, TASK:'RebootServer', SERVICE:""os"" },  {id:3, ISACTIVE:false, TASK:'ExtendFS', SERVICE: ""fs"" },  ]  let result = arrobj2.filter((item, i) =>   item.SERVICE === arrobj1[i].grp );  console.log(result)</code></pre>  </div>  </div>  </p>",1669460880.0,,false
"{'account_id': 30599852, 'reputation': 1, 'user_id': 23456318, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/KnxbkTdG.png?s=256', 'display_name': 'Mirajul Islam', 'link': 'https://stackoverflow.com/users/23456318/mirajul-islam'}",False,0,1725651404,1725651404,78958542,74581335,CC BY-SA 4.0,"<p>In your MERN stack projects, consider using Firebase authentication. It will help you interact with users, manage user updates, and maintain user sessions effectively.</p>",,,false
"{'account_id': 22994704, 'reputation': 1, 'user_id': 17119675, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GgWiBdVI8e5-F61YFSsBY6TgH10pDWZgi52CVDT=k-s256', 'display_name': 'Anas Hasna', 'link': 'https://stackoverflow.com/users/17119675/anas-hasna'}",False,0,1689946651,1689946651,76738501,74581335,CC BY-SA 4.0,<p>search about http only cookie which sends the token in cookie for further more security</p>,,,false
"{'account_id': 27052732, 'reputation': 11, 'user_id': 20605869, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b4d76505aab87d39b25717e0b583545c?s=256&d=identicon&r=PG', 'display_name': 'Adam Arthur', 'link': 'https://stackoverflow.com/users/20605869/adam-arthur'}",False,1,1669461374,1669461374,74581677,74581303,CC BY-SA 4.0,"<p>Let's assume we have a MongoDB collection that looks like this:</p> <p>{ ""first_name"":""Sally"", ""last_name"":""McDaniels"", ""email"":""sally.mcdaniels@emails.com"", ""username"":""sassysally"" }</p> <p>There are several scenarios possible.  First, do the fields exist in the collection?  In other words, it seems to me we need to check for two conditions:</p> <ol> <li>That an expected field is actually in the document AND</li> <li>That the fields contains a string with a length > 0</li> </ol> <p>My approach to situations like this is to first write the Mongo Query and test it in the console, and then write the Javascript.  Let's start by creating some sample data.</p> <pre><code>use test-db db.profiles.insert({    ""first_name"":""Sally"",    ""last_name"":""McDaniels"",    ""email"":""sally.mcdaniels@emails.com"",    ""username"":""sassysally""  });  db.profiles.insert({    ""first_name"":"""",    ""last_name"":"""",    ""email"":"""",    ""username"":""anonymous-12345""  });  db.profiles.insert({    ""first_name"":""John"",    ""email"":"""",    ""username"":""anonymous-678910""  });  db.profiles.find({}) </code></pre> <p>This inserts sample records that we can use to test our query against.</p> <p>First, I need a generic query that will select all records that either have the fields = """" or that do not exist in the record.</p> <pre><code>db.profiles.find(   {       $or:        [           { last_name: { $eq: """" } },           { last_name: { $exists: false } }         ]    }) </code></pre> <p>This query will return ALL records where last_name is either """" or does not exist in the database.  We repeat this pattern for all fields we want to check.</p> <p>Finally, we need to constrain the query against a specific user and test against all fields we want confirmed to exist and be non-zero.  In this example I'll constrain it by the _id, but you could do it with whatever unique identifier you have for the logged in user.</p> <pre><code>db.profiles.find({ $and : [     {""_id"" : ObjectId(""6381f2c234f9141e153df6f7"")},     { $or:        [           { first_name: { $eq: """" } },           { first_name: { $exists: false } },          { last_name: { $eq: """" } },           { last_name: { $exists: false } },          { email: { $eq: """" } },           { email: { $exists: false } },          { username: { $eq: """" } },           { username: { $exists: false } },        ] },   ] }); </code></pre> <p>If the query returns a record -- then you know that the profile is incomplete.  Now that you have the Mongo Query, in Node.js I would make a function like this:</p> <pre><code>    async function checkProfileComplete(_id) {         var query =           {           $and :           [           {""_id"" : mongoose.Types.ObjectId(_id),            { $or:             [               { first_name: { $eq: """" } },               { first_name: { $exists: false } },              { last_name: { $eq: """" } },               { last_name: { $exists: false } },              { email: { $eq: """" } },               { email: { $exists: false } },              { username: { $eq: """" } },               { username: { $exists: false } },             ]            },          ]         };          // Query the database and put the result into an array         var profileCompleteAr = await mongoose.connection.db           .collection(""profiles"")           .find(query).toArray();            // Check if the array has anything in it.  If it does,         // it means the profile has missing or incomplete fields.         if(profileCompleteAr.length > 0){           return false;         } else {           return true;         }     } </code></pre> <p>Please note that the code above is pseudo-code, but this approach should work.</p>",,,false
"{'account_id': 2371392, 'reputation': 43243, 'user_id': 2075944, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/CGDE9.png?s=256', 'display_name': 'phry', 'link': 'https://stackoverflow.com/users/2075944/phry'}",False,0,1669455450,1669455450,74581094,74581048,CC BY-SA 4.0,"<p>Firstly: please post code, not screenshots. I will not give you code in the answer, because I would have to type it from your screenshots - that makes answering very hard.</p> <p>On to the question itself: your type annotations remove type information here. Don't write so many annotations.</p> <p>For example:</p> <pre class=""lang-js prettyprint-override""><code>const foo = 5; const bar: number = 5 </code></pre> <p>In the first case, the compiler knows something is a <code>number</code> and also <code>5</code>. In the second case, you told the compiler it is <code>number</code>, so the compiler throws away the information about <code>5</code>.</p> <p>Your annotations of <code>createSlice</code> do the same - TS could infere most types from usage, but your manual annotations remove all that extra info and so TypeScript goes back to generic things that do not have details about payload etc.</p> <p>Please see the <a href=""https://redux-toolkit.js.org/api/createSlice"" rel=""nofollow noreferrer"">TypeScript code examples in the createApi documentation</a> for information on which types you actually need to write. Essentially: all you need to type is your <code>initialState</code> and case reducer action function arguments. Nothing else.</p>",,,false
"{'account_id': 26526600, 'reputation': 767, 'user_id': 20159503, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu08sxEylqtUlnHJaRpROfik_k5_MIyZt0WT__eH=k-s256', 'display_name': 'Mark Munene', 'link': 'https://stackoverflow.com/users/20159503/mark-munene'}",True,0,1669459618,1669459618,74581505,74581044,CC BY-SA 4.0,"<p>You can listen to document changes using <code>onSnapshot</code></p> <p>For more information <a href=""https://firebase.google.com/docs/firestore/query-data/listen"" rel=""nofollow noreferrer"">https://firebase.google.com/docs/firestore/query-data/listen</a></p> <pre><code>import { onSnapshot, collection } from ""firebase/firestore"";  onSnapshot(collection(db, ""YourCollectionName""), (snapshot) => {   //snapshot.docs will contain the realtime updated changes  console.log(""new data"" snapshot.docs) }); </code></pre>",,,false
"{'account_id': 1206572, 'reputation': 340, 'user_id': 1176062, 'user_type': 'registered', 'accept_rate': 50, 'profile_image': 'https://www.gravatar.com/avatar/b47db91bfa13cd104ebf413a2ec728a5?s=256&d=identicon&r=PG', 'display_name': 'Ashley Simons', 'link': 'https://stackoverflow.com/users/1176062/ashley-simons'}",False,0,1669465265,1669465265,74582110,74581011,CC BY-SA 4.0,"<p>This seems to have done the trick...</p> <pre><code>import { useTransition, animated, config } from 'react-spring'; // ... const transitions = useTransition(mice, {     config: { ...config.molasses, duration: 100 },     from: {       position: 'absolute', left: 0, top: 0,     },     enter: item => [       { left: item.x, top: item.y },     ],     leave: item => [       { left: item.x, top: item.y },     ],     update: item => [       { left: item.x, top: item.y },     ],     keys: item => item.key,     delay: 0,   }) </code></pre>",,,false
"{'account_id': 18438623, 'reputation': 1, 'user_id': 13431819, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/VqBA6.jpg?s=256', 'display_name': 'krishnaacharyaa', 'link': 'https://stackoverflow.com/users/13431819/krishnaacharyaa'}",False,31,1727735050,1688480826,76613628,74580728,CC BY-SA 4.0,"<h4>There are 3 different variants of params</h4> <ol> <li>params  <code>(/blog/1)</code> <ul> <li>single params</li> <li>multiple params</li> </ul> </li> <li>searchParams <code>(/blog?postId=123)</code> <ul> <li>single search params</li> <li>multiple search params</li> </ul> </li> <li>Both params and searchParams <code>(/blog/1?postId=123)</code></li> </ol> <hr /> <h4>There are multiple ways to handle this</h4> <ol> <li>For params - <a href=""https://nextjs.org/docs/app/api-reference/functions/use-params"" rel=""nofollow noreferrer""><code>useParams()</code></a></li> </ol> <pre><code>'use client'   import { useParams } from 'next/navigation'   export default function ExampleClientComponent() {   const params = useParams()     // Route -> /shop/[tag]/[item]   // URL -> /shop/shoes/nike-air-max-97   // `params` -> { tag: 'shoes', item: 'nike-air-max-97' }   console.log(params)     return <></> } </code></pre> <ol start=""2""> <li>For searchParams - <a href=""https://nextjs.org/docs/app/api-reference/functions/use-search-params"" rel=""nofollow noreferrer""><code>useSearchParams()</code></a></li> </ol> <pre><code>'use client'   import { useSearchParams } from 'next/navigation'   export default function SearchBar() {   const searchParams = useSearchParams()     const search = searchParams.get('search')     // URL -> `/dashboard?search=my-project`   // `search` -> 'my-project'   return <>Search: {search}</> } </code></pre> <ol start=""3""> <li>Both params and search Params using <code>any</code> type</li> </ol> <pre><code>'use client'  export default function BlogPost(props: any) {      // URL -> blog/a/b?param1=IamfirstParam&param2=IamsecondParam     return <div>{props}</div>;     // Output ->    //{    //  params: { blogId: [ 'a', 'b' ] },    //  searchParams: { param1: 'IamfirstParam', param2: 'IamsecondParam' }    //} } </code></pre> <ol start=""4""> <li>Both params and search Params using <code>defined</code> type</li> </ol> <pre><code>'use client';  // URL -> blog/a/b?param1=IamfirstParam&param2=IamsecondParam  export default function BlogPost({     params,     searchParams, }: {     params: { blogId: string[] };     searchParams: { param1: string; param2: string }; }) {       return (         <div>             {params.blogId[0]}             {params.blogId[1]}             {searchParams.param1}             {searchParams.param2}         </div>     ); } </code></pre> <p>For all possibility of dynamic params refer: <a href=""https://stackoverflow.com/a/76609568/13431819"">How to do dynamic routes with Next.js 13?</a></p>",1727735050.0,,false
"{'account_id': 25354895, 'reputation': 49, 'user_id': 19171180, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/ssGAM.jpg?s=256', 'display_name': 'Long.H', 'link': 'https://stackoverflow.com/users/19171180/long-h'}",False,0,1704316644,1704316644,77754692,74580728,CC BY-SA 4.0,"<ul> <li><p>If your Navbar is a server component, you can try to pass params from the parent component. In Nextjs 13, Page and Layout will have a params field in props that indicates params of URL. You can have a look at this <a href=""https://nextjs.org/docs/app/api-reference/file-conventions/page"" rel=""nofollow noreferrer"">doc</a>. Example:</p> <pre class=""lang-js prettyprint-override""><code>export default async function Page({params}) {       const { slug } = params;    return <Navbar slug={slug} /> }  export default async function Navbar ({ slug }) {   return <p>Slug: {slug}</p> } </code></pre> </li> <li><p>If you use any hook like useParams hook. The component will become a client component at runtime.</p> </li> </ul>",,,false
"{'account_id': 27239478, 'reputation': 109, 'user_id': 20765883, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/3PI4I.jpg?s=256', 'display_name': 'Santiago Al&#233;', 'link': 'https://stackoverflow.com/users/20765883/santiago-al%c3%a9'}",False,10,1701987122,1685712728,76390630,74580728,CC BY-SA 4.0,"<p>I don't know if the question is still relevant but you can use <code>NextRequest</code> included methods <code>nextUrl.searchParams.get</code> or <code>getAll</code> if it's an array.</p> <pre class=""lang-js prettyprint-override""><code>import { NextResponse, NextRequest } from 'next/server';  export async function GET(request: NextRequest) {      const queryParam = request.nextUrl.searchParams.get(""queryParam"");      return NextResponse.json({ message: 'Query parameter value is ' + queryParam }, { status: 200 }); } </code></pre> <p>I used it in an endpoint but the same goes for pages, must warn that <code>NextRequest</code> can only be used in server components, for client ones you need <code>useRouter</code> with the <code>'use client'</code>.</p>",1701987122.0,,false
"{'account_id': 12417160, 'reputation': 499, 'user_id': 9046022, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-QEIoAnAcBbg/AAAAAAAAAAI/AAAAAAAAAwY/NI-srpeaDlQ/photo.jpg?sz=256', 'display_name': 'Alexis Breton', 'link': 'https://stackoverflow.com/users/9046022/alexis-breton'}",False,26,1700044375,1672001642,74915836,74580728,CC BY-SA 4.0,"<p>To get the URL parameters in a Server Component in <strong>Next.js 13</strong>, you can use the <code>searchParams</code> argument of the Page function.</p> <p><em>URL</em></p> <pre class=""lang-none prettyprint-override""><code>localhost:3000/?slug </code></pre> <p><em>/app/page.js</em></p> <pre><code>export default function Page({searchParams}) {    return <Navbar slug={searchParams}></Navbar> } </code></pre> <p><em>navbar.js</em></p> <pre><code>export default function Navbar(props) {    return <p>Slug: {props.slug}</p> } </code></pre> <p>More info: <a href=""https://beta.nextjs.org/docs/api-reference/file-conventions/page"" rel=""noreferrer"">https://beta.nextjs.org/docs/api-reference/file-conventions/page</a></p>",1700044375.0,,false
"{'account_id': 14020662, 'reputation': 3299, 'user_id': 10126955, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/1470e44dbb2f18b9309297caa686b467?s=256&d=identicon&r=PG', 'display_name': 'Criminal_Affair_At_SO', 'link': 'https://stackoverflow.com/users/10126955/criminal-affair-at-so'}",False,2,1693423603,1693423603,77011015,74580728,CC BY-SA 4.0,"<p>The official docs are very clear on this: <a href=""https://nextjs.org/docs/app/api-reference/functions/use-search-params#server-components"" rel=""nofollow noreferrer"">https://nextjs.org/docs/app/api-reference/functions/use-search-params#server-components</a></p> <p><strong>Pages</strong></p> <p>To access search params in Pages (Server Components), use the <code>searchParams</code> prop.</p> <p><strong>Layouts</strong></p> <p>Unlike Pages, Layouts (Server Components) do not receive the <code>searchParams</code> prop. This is because a shared layout is not re-rendered during navigation which could lead to stale <code>searchParams</code> between navigations.</p> <p>Instead, use the Page <code>searchParams</code> prop or the <code>useSearchParams</code> hook in a Client Component, which is re-rendered on the client with the latest <code>searchParams</code>.</p> <p><em>So simply make a small client component that will be re-rendered at every navigation and reference it from your layout.</em></p>",,,false
"{'account_id': 10251107, 'reputation': 1559, 'user_id': 7565335, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/10202817259030121/picture?type=large', 'display_name': 'OndÅej Å evÄ&#237;k', 'link': 'https://stackoverflow.com/users/7565335/ond%c5%99ej-%c5%a0ev%c4%8d%c3%adk'}",False,7,1692645500,1688924252,76648745,74580728,CC BY-SA 4.0,"<p>In order to get <code>params</code> and <code>searchParams</code> in server side component using typescript in Next.js 13, you should define what params and searchParams do you expect. For example:</p> <pre class=""lang-js prettyprint-override""><code>// /app/category/[slug]/page.tsx // Request URL localhost:3000/category/news?page=2  export default function PostsCategory({ params, searchParams }: { params: { slug: string }; searchParams: { page: string } }) {   const posts = getPostsByTag(params.slug, ['title', 'date', 'excerpt', 'image', 'slug', 'tags']);   const currentPage = searchParams && searchParams.page ? Number(searchParams.page) : 1;   const { slug } = params;    return (     <main>       <PaginatedPosts posts={posts} page={currentPage} title={`${slug}`} />     </main>   ); } </code></pre>",1692645500.0,,false
"{'account_id': 8743919, 'reputation': 401, 'user_id': 6540009, 'user_type': 'registered', 'accept_rate': 59, 'profile_image': 'https://www.gravatar.com/avatar/89218b87579f3bea5d8f44f9c17f0d2b?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Daniel Boyer', 'link': 'https://stackoverflow.com/users/6540009/daniel-boyer'}",False,13,1676139617,1676139617,75422340,74580728,CC BY-SA 4.0,"<p>Another way is to use the hook <code>useSearchParams</code>.</p> <p>From the <a href=""https://beta.nextjs.org/docs/api-reference/use-search-params"" rel=""noreferrer"">documentation</a>:</p> <pre><code>import { useSearchParams } from 'next/navigation';  export default function Page() {   const searchParams = useSearchParams();    // E.g. `/dashboard?page=2&order=asc`   const page = searchParams.get('page');   const order = searchParams.get('order');    return (     <div>       <p>Page: {page}</p>       <p>Order: {order}</p>     </div>   ); } </code></pre>",,,false
"{'account_id': 25921731, 'reputation': 887, 'user_id': 19644223, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AItbvmmPIOIb6X_-fPKRFDWsrJpijYfz_LyVXv6J3Quz=k-s256', 'display_name': 'Vivaan Kumar', 'link': 'https://stackoverflow.com/users/19644223/vivaan-kumar'}",False,4,1669451834,1669451834,74580785,74580728,CC BY-SA 4.0,<p>Had to use <code>usePathname</code></p> <pre><code>import { usePathname } from 'next/navigation'; </code></pre>,,,false
"{'account_id': 22443703, 'reputation': 625, 'user_id': 16647860, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gji_dTFu8oaZMekwEkAC4Jyktv7D1cV56nHG_yn6g=k-s256', 'display_name': 'Mohit Ashliya', 'link': 'https://stackoverflow.com/users/16647860/mohit-ashliya'}",False,0,1669452250,1669452250,74580819,74580707,CC BY-SA 4.0,"<p>Here I got the problem You are facing, I am not fully sure, but In my case I was console.log(result) withing the fucntion that was changing state, but it was always one step behind. why was that? because in React it is considered as side effect. So If you console.log(result) in useEffect passing the value in dependency array then, it will console log the same value that instantly changed. In backgorund the state is updating exactly the same time but useEffect detects it as exactly as it is changed. You can write any logic in useEffect as well or in the function which you are updating. So there should not be any problem writing logic in the function which you are callilng on click.</p>",,,false
"{'account_id': 12320475, 'reputation': 153, 'user_id': 9760560, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-ippQIB9SEf8/AAAAAAAAAAI/AAAAAAAAAFU/dMvtlrjvGVA/photo.jpg?sz=256', 'display_name': 'Raqun Bob', 'link': 'https://stackoverflow.com/users/9760560/raqun-bob'}",False,0,1669451491,1669451491,74580749,74580707,CC BY-SA 4.0,"<p>if you use useEffect with an empty array it will act as componentDidMount and componentWillUnmount so it will only invoke itself on first component creation and when it is about to unmount.</p> <p><a href=""https://reactjs.org/docs/react-component.html#componentdidmount"" rel=""nofollow noreferrer"">https://reactjs.org/docs/react-component.html#componentdidmount</a></p>",,,false
"{'account_id': 9275452, 'reputation': 2417, 'user_id': 6888239, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/lXTOp.jpg?s=256', 'display_name': 'Mehul Thakkar', 'link': 'https://stackoverflow.com/users/6888239/mehul-thakkar'}",False,0,1669449770,1669449770,74580623,74580551,CC BY-SA 4.0,"<p>The image path you have entered seems to be wrong here.</p> <p>Try changing the image path as mentioned here => <a href=""https://i.sstatic.net/tSzu9.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/tSzu9.png"" alt=""enter image description here"" /></a></p>",,,false
"{'account_id': 5061479, 'reputation': 105, 'user_id': 11185806, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-gbun8zGws-4/AAAAAAAAAAI/AAAAAAAAAEA/U3QjC4ZKjZI/photo.jpg?sz=256', 'display_name': 'Muhammad Shafique Attari', 'link': 'https://stackoverflow.com/users/11185806/muhammad-shafique-attari'}",False,0,1669535213,1669448020,74580475,74580358,CC BY-SA 4.0,"<p>Resolved this one to change this</p> <pre><code>   const [ClientsList, setUsersList] = useState({});        ///To////     const [ClientsList, setUsersList] = useState([]);  </code></pre> <p>This direction given by</p> <p><a href=""https://stackoverflow.com/users/17565505/script0"">https://stackoverflow.com/users/17565505/script0</a> thanks a lot</p>",1669535213.0,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",True,2,1669449005,1669449005,74580549,74580358,CC BY-SA 4.0,"<p>The problem is with your initial value of the ClinetsList state. the inital value is an empty object but you're trying to execute .map function on it.</p> <p>So your app will crash. In order to fix it, change the initial value to an empty array:</p> <pre class=""lang-js prettyprint-override""><code>const [ClientsList, setUsersList] = useState([]); </code></pre> <p>There is another problem in your useEffect dependency. It should be an empty array ([]) and not ([""""]) in order to be executed only 1 time:</p> <pre class=""lang-js prettyprint-override""><code>React.useEffect(() => {           let BaseURL = 'https://******.com/taxplanner/rest-apis/users/clientslist';                  fetch(BaseURL, {     method: 'POST',     data: {id:loggedIn}   })   .then((response) => response.json())   .then((res) => {     setUsersList(res.clients);                   })   .catch((error) => {     console.log(error);   }); }, []); </code></pre> <p>And also it's better to have same names for your state and setState function like this:</p> <pre class=""lang-js prettyprint-override""><code>const [usersList, setUsersList] = useState([]);  </code></pre>",,,false
"{'account_id': 2432151, 'reputation': 1731, 'user_id': 2122822, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RNpbU.jpg?s=256', 'display_name': 'Azzy', 'link': 'https://stackoverflow.com/users/2122822/azzy'}",True,0,1669450997,1669449353,74580584,74580307,CC BY-SA 4.0,"<p>Quick fix</p> <pre><code> useEffect(() => {      let isValidScope = true;      socket &&       socket.on(""recieveMail"", ({ mail }: any) => {          // if message received when component unmounts         // stop setting state in scope previous render cycle         if (!isValidScope) { return; }          const localActiveTab = activeTab;         if (mail.mailType === localActiveTab) {           dispatch(addMail(mail));         }       });        return () => {              isValidScope = false;              // disconnect code             // socket.disconnect()       }    }, [socket, dispatch, activeTab]); </code></pre> <p>Slighty better maintainable solution</p> <pre><code>  const activeTabRef = useRef(activeTab);   activeTabRef.current = activeTab;     useEffect(() => {          let isValidScope = true;          socket &&           socket.on(""recieveMail"", ({ mail }: any) => {              // if message received when component unmounts             // stop setting state in scope previous render cycle             if (!isValidScope) { return; }              // the socket connect/reconnect will trigger when             // activeTab state changes, if you dont desire that             // use a useRef to refer to latest value in useEffect event handler             const localActiveTab = activeTabRef.current;             if (mail.mailType === localActiveTab) {               dispatch(addMail(mail));             }           });            return () => {                  isValidScope = false;                  // disconnect code                 // socket.disconnect()           }        }, [socket]);      // dispatch is generally stable reference, can be skipped from depedency array      // if dispatch is not stable, try using a reference with useRef      // remove activeTab, if you dont connect/reconnect on activeTab change       </code></pre> <p>more about <a href=""https://beta.reactjs.org/learn/lifecycle-of-reactive-effects"" rel=""nofollow noreferrer"">useEffect life cycle</a>, to get an idea why</p> <ul> <li>A new effect is created after every render</li> <li>How the cleanup for previous effect occurs before executing of current useEffect</li> </ul> <p>You can read about why isValid is set <a href=""https://beta.reactjs.org/learn/synchronizing-with-effects#fetching-data"" rel=""nofollow noreferrer"">synchronizing with effects</a></p> <p>Why it was running 3 times in <a href=""https://beta.reactjs.org/learn/synchronizing-with-effects#how-to-handle-the-effect-firing-twice-in-development"" rel=""nofollow noreferrer"">dev mode</a></p> <p>If you are intererested in taking a deep dive, consider reading a blog post by <a href=""https://overreacted.io/a-complete-guide-to-useeffect/#each-render-has-its-own-everything"" rel=""nofollow noreferrer"">Dan on useEffect</a>, its old but explanation the details to build a good mental model about useEffects and functional components.</p> <p><a href=""https://beta.reactjs.org/learn/separating-events-from-effects#declaring-an-event-function"" rel=""nofollow noreferrer"">useEvent</a> can solve the problem but it is in <a href=""https://github.com/reactjs/rfcs/blob/useevent/text/0000-useevent.md"" rel=""nofollow noreferrer"">RFC</a></p> <p>you can check my answer about a implementation to build a <a href=""https://stackoverflow.com/q/74551749/2122822"">custom useEvent</a> till it becomes stable</p> <p>Hope it helps, cheers</p>",1669450997.0,,false
"{'account_id': 27051256, 'reputation': 21, 'user_id': 20604579, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0iaIjiIBbPTjJSqSoN0ypai66gQhvwam3EXhA-=k-s256', 'display_name': 'Samuel Smith', 'link': 'https://stackoverflow.com/users/20604579/samuel-smith'}",False,1,1669448070,1669448070,74580478,74580202,CC BY-SA 4.0,"<p>This might not solve anyone elses issue but it might be worth a try if you absolutely cant find your answer anywhere:</p> <p>oddly enough even though I had access to all my drives, after I physically disconnected and re-connected them all I no longer had the error.</p>",,,false
"{'account_id': 17567156, 'reputation': 3020, 'user_id': 12743692, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jG5eJ.png?s=256', 'display_name': 'dreambold', 'link': 'https://stackoverflow.com/users/12743692/dreambold'}",False,1,1669445505,1669444974,74580255,74580202,CC BY-SA 4.0,"<p><em>You can try</em></p> <pre><code>npm cache clean --force npm i create-react-app </code></pre> <p><em>You can delete both node_modules and package-lock.json</em></p> <pre><code>run npm i web-vitals --save-dev run npm install </code></pre> <p>and then you can use npm run build and npm start again.</p> <p><em>If these don't work, you can try</em></p> <pre><code>yarn cache clean yarn install </code></pre> <p>and then <code>npx create-react-app your-app.</code> Hope it helps!</p>",1669445505.0,,false
"{'account_id': 34116488, 'reputation': 3, 'user_id': 26394488, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/056c0f778aa8ec2f8a385246338d85a0?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'mrz', 'link': 'https://stackoverflow.com/users/26394488/mrz'}",False,0,1725550222,1722767142,78830792,74580173,CC BY-SA 4.0,<p>In my case changing the type from ejs modules to old common js syntax worked. I think the server must not be compatible with the module version.</p>,1725550222.0,,false
"{'account_id': 8186639, 'reputation': 125, 'user_id': 6162262, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/10209400501466163/picture?type=large', 'display_name': 'tbotalla', 'link': 'https://stackoverflow.com/users/6162262/tbotalla'}",False,0,1700599392,1700599392,77525826,74580173,CC BY-SA 4.0,"<p>For anyone using this from the command line, you could try using nvm. For example: nvm use 16</p>",,,false
"{'account_id': 18847691, 'reputation': 223, 'user_id': 13747531, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gjut5ARH4XPGWbXWwiu7ATTteYmhtKzlqqU85TE=k-s256', 'display_name': 'Navid Barsalari', 'link': 'https://stackoverflow.com/users/13747531/navid-barsalari'}",False,2,1681020528,1681020528,75969026,74580173,CC BY-SA 4.0,<p>if use node 10.-.- we must install serve 13.0.0</p> <p>if use node 14.-.- we must install serve 14.0.0</p>,,,false
"{'account_id': 17790043, 'reputation': 21, 'user_id': 12919418, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e09f563dad4b60cff24b504fefef3ce2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Ell', 'link': 'https://stackoverflow.com/users/12919418/ell'}",False,2,1670243455,1670243455,74688237,74580173,CC BY-SA 4.0,<p>I had same error and changing the node version on my dockerfile solved it.</p> <p>FROM node:8-alpine ---> FROM node:14-alpine</p>,,,false
"{'account_id': 25232826, 'reputation': 1760, 'user_id': 19067773, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/gj1RO.jpg?s=256', 'display_name': 'Shahed', 'link': 'https://stackoverflow.com/users/19067773/shahed'}",False,0,1669444706,1669444170,74580190,74580151,CC BY-SA 4.0,"<ol> <li>I suggest using <code>try catch</code> block instead of <code>.then</code>,<code>.catch</code> while using <code>async await</code>.</li> <li>Getting <code>TypeError</code> because access something in <code>res</code> which doesn't exist</li> </ol> <pre class=""lang-js prettyprint-override""><code>const sendRequest = async () => {   if (!name || !email || !password) return;   const user = { name, email, password };   try {     const res = await axios.post(""/api/v1/auth/register"", {       user,     });    const data = await res?.data ;    return data ?? ""not found"";   } catch (err) {     console.log(err);   } }; </code></pre>",1669444706.0,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",True,0,1669443872,1669443872,74580165,74580151,CC BY-SA 4.0,"<p>the respnse result might be an error. Hence it's not returning a data property. Check if data exists and no need to await again</p> <pre><code> if(res.data)     return data;   return [] // or an object. whatever the standard response </code></pre> <p>also, no need to use <code>then</code> here since the result is already resolved</p> <pre><code>const result = sendRequest() if(result) setMloggi(true) </code></pre>",,,false
"{'account_id': 10231989, 'reputation': 10591, 'user_id': 7552340, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Pnjcy.jpg?s=256', 'display_name': 'Damzaky', 'link': 'https://stackoverflow.com/users/7552340/damzaky'}",True,1,1669444456,1669444456,74580214,74580069,CC BY-SA 4.0,"<p>I haven't tested this code, but basically, you need to add a listener when there is a change in the accounts with this code on a first page load hook:</p> <pre><code>window.ethereum.on('accountsChanged', function (accounts) {   setAccount(accounts[0].toUpperCase()); }); </code></pre> <p>I'm not an expert with react, but I think you could add another <code>useEffect()</code> for initialization purpose like so:</p> <pre><code>useEffect(() => {     window.ethereum.on('accountsChanged', function (accounts) {         setAccount(accounts[0].toUpperCase());     }); }, []); </code></pre>",,,false
"{'account_id': 22136785, 'reputation': 99, 'user_id': 16387398, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/HYfHl.jpg?s=256', 'display_name': 'Elvis Ohemeng Gyaase', 'link': 'https://stackoverflow.com/users/16387398/elvis-ohemeng-gyaase'}",True,2,1669452221,1669444490,74580216,74580049,CC BY-SA 4.0,"<p>From your error message, I would suggest this</p> <ul> <li>Remove <code>handleSubmit</code> if you are not using it</li> <li>Remove  <code>handleChange</code></li> </ul> <p>I do not know why you defined the <code>handleSubmit</code>  function and <code>handleChange</code> function for, But I hope this helps.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>import { ChangeEvent, useState } from ""react"";  type Props = {   label: string;   placeholder?: string;   onChange: (e?:Event) => void;   name?: string;   value?: any; };  export const TextField = ({   label,   onChange,   placeholder,   name,   value, }: Props) => {   const [inputs, setInputs] = useState({});   const handleChange = (event: any) => {     const targetName = event.target.name;     const targetValue = event.target.value;     setInputs((values) => ({ ...values, [targetName]: targetValue }));     onChange(event);   };   const handleSubmit = (event: any) => {     event.preventDefault();     console.log(inputs);   };   return (     <div style={{ width: ""100%"" }}>       <div className=""text-sm my-2"">{label}</div>       <input         className=""border-blue-200 border-2 rounded focus:ring-blue-200 focus:border-blue-200 focus:outline-none px-2""         style={{           height: ""45px"",           maxWidth: ""280px"",           width: ""100%"",           backgroundColor: ""#0D0D0D"",         }}         placeholder={placeholder}         onChange={handleChange}         name={name}         value={value}       />     </div>   ); };</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdnjs.cloudflare.com/ajax/libs/react/16.6.3/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.6.3/umd/react-dom.production.min.js""></script></code></pre>  </div>  </div>  </p>",1669452221.0,,false
"{'account_id': 5965079, 'reputation': 4553, 'user_id': 4689036, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jzUG2.jpg?s=256', 'display_name': 'GMKHussain', 'link': 'https://stackoverflow.com/users/4689036/gmkhussain'}",False,0,1669442355,1669442355,74580067,74580049,CC BY-SA 4.0,"<p>Try like this !</p> <pre class=""lang-js prettyprint-override""><code>onChange={handleChange} </code></pre>",,,false
"{'account_id': 17567156, 'reputation': 3020, 'user_id': 12743692, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jG5eJ.png?s=256', 'display_name': 'dreambold', 'link': 'https://stackoverflow.com/users/12743692/dreambold'}",False,1,1669442476,1669441735,74580031,74580003,CC BY-SA 4.0,"<p>This is a result of the new npm version including the audit command.</p> <p>It isn't some new issue with the CLI, npm just introduced new functionality in npm to warn users about vulnerabilities in the packages they're installing - so there's no ""new"" vulnerability, it's just that now npm is now warning you about vulnerabilities that already existed: <a href=""https://blog.npmjs.org/"" rel=""nofollow noreferrer"">https://blog.npmjs.org/</a></p> <p>If you have run <code>npm audit</code> and got vulnerabilities, then you can have different scenarios:</p> <p>Security vulnerabilities found with suggested updates</p> <ul> <li><p>Run the npm audit fix subcommand to automatically install compatible updates to vulnerable dependencies.</p> </li> <li><p>Run the recommended commands individually to install updates to vulnerable dependencies. (Some updates may be semver-breaking changes; for more information, see ""SEMVER warnings"".)</p> </li> </ul> <p>Security vulnerabilities found requiring manual review</p> <ul> <li>If security vulnerabilities are found, but no patches are available, the audit report will provide information about the vulnerability so you can investigate further.</li> </ul> <p>You can read more about it <a href=""https://docs.npmjs.com/getting-started/running-a-security-audit#reviewing-and-acting-on-the-security-audit-report"" rel=""nofollow noreferrer"">here</a>.</p> <p>Even after running <code>npm audit fix</code> if it is not fixed, then you can <em>Turn off</em> <code>npm audit</code>. Use the below command to turn off the <code>npm audit</code>.</p> <p>When installing a single package:</p> <pre><code>npm install example-package-name --no-audit </code></pre> <p>To turn off npm audit when installing all packages:</p> <pre><code>npm set audit false </code></pre> <p>It will set the audit setting to false in your user and global <code>npmrc</code> config files.</p> <p><em>If you still want to fix them, you can refer to <a href=""https://itnext.io/fixing-security-vulnerabilities-in-npm-dependencies-in-less-than-3-mins-a53af735261d"" rel=""nofollow noreferrer"">this</a> article about how to.</em></p>",1669442476.0,,false
"{'account_id': 2432151, 'reputation': 1731, 'user_id': 2122822, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RNpbU.jpg?s=256', 'display_name': 'Azzy', 'link': 'https://stackoverflow.com/users/2122822/azzy'}",True,3,1678726324,1669444393,74580207,74579953,CC BY-SA 4.0,"<p>This will help</p> <pre><code>useEffect(() => {     let isValid = true;     let intervalCall;      const getCurrencyConversionRates = async () => {         console.log(""Retrieving list of currency conversion rate"");         await retrieveCurrencyConversionRateFunction();         // after await if the component unmounts, and this scope          // becomes stale, skip futher execution            // so the interval wont be started, and wont break in dev mode where useEffect runs twice         if (!isValid) { return; }           //Gets new information every 6 seconds          intervalCall = setInterval( async () => {             console.log(""Getting new currency conversion rates!"");             const currTime = new Date().toLocaleTimeString();             console.log(""Time -> ""+currTime);             await retrieveCurrencyConversionRateFunction();              // might want to check valid scope inside              // retrieveCurrencyConversionRateFunction              // by passing it a flag to skip execution on a unmounted component scope          }, 60*100);           //Have to wait until currencyConversionRateFunction is loaded before the map function is called on it in the render view otherwise will have error         setLoading(false);     }      getCurrencyConversionRates();     //Clear interval     return () => {         console.log(""CLEARING CURRENCY INTERVAL HERE"");         isValid = false              // if interval was not stared, dont clear it         if (intervalCall) {  clearInterval(intervalCall); }          console.log(intervalCall);               };  },[]); </code></pre> <p>more about <a href=""https://beta.reactjs.org/learn/lifecycle-of-reactive-effects"" rel=""nofollow noreferrer"">useEffect life cycle</a>, to get an idea why</p> <ul> <li>A new effect is created after every render</li> <li>The cleanup for previous effect occurs before executing of current <code>useEffect</code></li> </ul> <p>You can read about why isValid is set <a href=""https://beta.reactjs.org/learn/synchronizing-with-effects#fetching-data"" rel=""nofollow noreferrer"">synchronizing with effects</a></p> <p>If you are intererested in taking a deep dive, consider reading a blog post by <a href=""https://overreacted.io/a-complete-guide-to-useeffect/#each-render-has-its-own-everything"" rel=""nofollow noreferrer"">Dan on useEffect</a>, its old but explans the details to build a good mental model about <code>useEffect</code> and functional components.</p> <p>Hope it helps, cheers</p>",1678726324.0,,false
"{'account_id': 9727257, 'reputation': 63, 'user_id': 7213731, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5149700a534eb0ed9e0dbc0269c94e73?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'svs', 'link': 'https://stackoverflow.com/users/7213731/svs'}",True,0,1678388825,1678388825,75689026,74579909,CC BY-SA 4.0,"<p>I eventually ended up doing this by creating a custom hook which would be loaded every time user navigates to a new page and if that is a page where direct navigation is not allowed , user would then be taken back to the landing page.</p> <p>Since all my routes are defined on a single react component I only had to call the hook in one component.</p> <pre><code>export function useNav(isValidNav) {   const navigate = useNavigate();   const currentPath = window.location.pathname.substring(1),     isDirectNavAllowed =       currentPath === PAGE_X ||       currentPath === PAGE_Y ||   useEffect(() => {     if (isValidNav !== true && isDirectNavAllowed !== true) {       navigate(""/"", { replace: true });     }   }, [isValidNav]); } </code></pre> <p>isValidNav is a prop that is passed through the state component of navigate hook , if a redirect to a page happened properly( i.e by interacting with the web app correctly rather than editing the url)</p> <pre><code>navigate(`/${pathname}`, { state: { isValidNav: true } }); </code></pre>",,,false
"{'account_id': 23084199, 'reputation': 4003, 'user_id': 17195992, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jwZTv.jpg?s=256', 'display_name': 'ivanatias', 'link': 'https://stackoverflow.com/users/17195992/ivanatias'}",True,13,1669852286,1669448511,74580510,74579757,CC BY-SA 4.0,"<p>The issue is that Next.js pre-renders pages by default, which means they are rendered on the server first and then sent to the client to be <a href=""https://en.wikipedia.org/wiki/Hydration_(web_development)"" rel=""noreferrer"">hydrated</a>.</p> <p>The error comes when you're setting the default value of the state based on this condition: <code>typeof window !== 'undefined'</code>.</p> <p>Consider the following example:</p> <pre><code>const Page = () => {   const [name, setName] = useState(typeof window !== 'undefined' ? 'Peter' : 'Rick')      return <h1>{name}</h1> }  export default Page </code></pre> <p>This code will throw an error of the type <code>Error: Text content does not match server-rendered HTML.</code></p> <p>If you inspect the page's source, you will see that the name rendered on the server was ""Rick"" while on the client-side's first render the name rendered was ""Peter"". There must be a match between the server-side rendered content and the client-side first render's content.</p> <p>What you can do is move the <code>localStorage</code> data gathering and parsing logic to another <code>useEffect</code> instead and set the state in there. This solves the issue because <code>useEffect</code> only runs on the client-side, therefore you will effectively match both server-side and client-side first render content.</p> <pre><code>export default function Page({ data1 }) {   const [bookmark, setBookmark] = useState([])    const addToBookmark = (ayatLs) => {     setBookmark([...bookmark, ayatLs])   }    useEffect(() => {     if (bookmark.length === 0) return     localStorage.setItem('bookmark', JSON.stringify(bookmark))   }, [bookmark])    useEffect(() => {     const bookmarkFromLocalStorage = localStorage.getItem('bookmark')      const parsedBookmark =       bookmarkFromLocalStorage !== null       ? JSON.parse(bookmarkFromLocalStorage)       : []      setBookmark(parsedBookmark)   }, [])    return (     <>       <div className='modal-body'>         <ul>           {bookmark.map((x) => (             <li key={x.nomor}>{x.tr}</li>           ))}         </ul>       </div>     </>   ) } </code></pre>",1669852286.0,,false
"{'account_id': 974639, 'reputation': 1121, 'user_id': 996314, 'user_type': 'registered', 'accept_rate': 67, 'profile_image': 'https://i.sstatic.net/4L1Os.png?s=256', 'display_name': 'Rokit', 'link': 'https://stackoverflow.com/users/996314/rokit'}",False,0,1669440522,1669440522,74579949,74579728,CC BY-SA 4.0,"<p>React <a href=""https://reactjs.org/docs/strict-mode.html"" rel=""nofollow noreferrer"">strict mode</a> can be the cause of multiple log messages appearing when you don't expect them because it triggers multiple renders. Try removing it from your <code>index.js</code> and see if you still have the issue, though I would recommend keeping it on.</p>",,,false
"{'account_id': 20134901, 'reputation': 35, 'user_id': 14766223, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GgeM4oSuTC1GMG7QyIGivCoTvn6zIpDgusQZejr=k-s256', 'display_name': 'Andrew', 'link': 'https://stackoverflow.com/users/14766223/andrew'}",False,0,1669493392,1669493392,74585287,74579585,CC BY-SA 4.0,"<p>Turns out nothing was wrong with the code itself, rather the index.html and  vite config. To fix:</p> <p>index.html, between <div id=root'> and <script type='module'..> add:</p> <pre><code><script>     window.global = window;     var exports = {}; </script> </code></pre> <p>in vite.config.ts add:</p> <pre><code>export default defineConfig({     plugins: [react()],     resolve: {         alias: {             './runtimeConfig': './runtimeConfig.browser',         },     }, }); </code></pre>",,,false
"{'account_id': 13259231, 'reputation': 397, 'user_id': 9574351, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/10213563452794701/picture?type=large', 'display_name': 'Yeo Bryan', 'link': 'https://stackoverflow.com/users/9574351/yeo-bryan'}",False,1,1669438516,1669438516,74579819,74579544,CC BY-SA 4.0,"<p>The issue is as Jayce444 has identified, as I was using <code>Nav.link</code> with it's <code>href</code> value to navigate it doesn't unmount the components.</p> <p>In order to navigate to the different pages of the application whilst still using bootstrap's <code>Nav.link</code> component, it should be written as <code><Nav.Link as={Link} to={/}>Home</Nav.Link></code> which allows the bootstrap <code>Nav.Link</code> element to render the <code>Link</code> element but still utilize the bootstrap styling</p> <p><a href=""https://stackoverflow.com/questions/54843302/reactjs-bootstrap-navbar-and-routing-not-working-together"">ReactJS Bootstrap Navbar and Routing not working together</a></p>",,,false
"{'account_id': 14465375, 'reputation': 53, 'user_id': 10766263, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/22s8i.jpg?s=256', 'display_name': 'Opay Hero', 'link': 'https://stackoverflow.com/users/10766263/opay-hero'}",False,1,1669437304,1669433318,74579507,74579472,CC BY-SA 4.0,"<p>Found some example on net. Basically displaying star icon based on previous set data (for display only, use <code>disabled=true</code> prop, check the commented implementation of component).</p> <p><a href=""https://codepen.io/benjaminreid/pen/vNVwPW"" rel=""nofollow noreferrer"">https://codepen.io/benjaminreid/pen/vNVwPW</a></p> <p>And here step by step guideline with same concept <a href=""https://dev.to/michaelburrows/create-a-custom-react-star-rating-component-5o6"" rel=""nofollow noreferrer"">https://dev.to/michaelburrows/create-a-custom-react-star-rating-component-5o6</a></p> <p>Edit: @Ray answer also quite simpler. You can accustom style display for decimal rating. By having 5 star as <code>--rating=1</code> (5/5=1 or rating/5)</p>",1669437304.0,,false
"{'account_id': 318715, 'reputation': 27151, 'user_id': 636077, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d7567fa8bd8d37173c923c75d259f104?s=256&d=identicon&r=PG', 'display_name': 'ray', 'link': 'https://stackoverflow.com/users/636077/ray'}",False,4,1669433891,1669433585,74579527,74579472,CC BY-SA 4.0,"<p>You could set a CSS custom property on the containing element indicating the rating as a percentage, and then use that to fill the appropriate number of stars.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.demo {   display: inline-flex;   flex-direction: column; }  .stars {   position: relative;   display: inline-block; }  .bg {   opacity: 0.35;   filter: grayscale(1); }  .stars::after {   content: 'â­â­â­â­â­';   position: absolute;   top: 0;   left: 0;   width: calc(100% * var(--rating));   overflow: hidden; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div class=""demo"">   <div class=""stars"" style=""--rating: 0.1"">     <div class=""bg"">â­â­â­â­â­</div>   </div>    <div class=""stars"" style=""--rating: 0.2"">     <div class=""bg"">â­â­â­â­â­</div>   </div>    <div class=""stars"" style=""--rating: 0.4"">     <div class=""bg"">â­â­â­â­â­</div>   </div>    <div class=""stars"" style=""--rating: 0.5"">     <div class=""bg"">â­â­â­â­â­</div>   </div>    <div class=""stars"" style=""--rating: 0.6"">     <div class=""bg"">â­â­â­â­â­</div>   </div>    <div class=""stars"" style=""--rating: 0.8"">     <div class=""bg"">â­â­â­â­â­</div>   </div>    <div class=""stars"" style=""--rating: 1"">     <div class=""bg"">â­â­â­â­â­</div>   </div> </div></code></pre>  </div>  </div>  </p>",1669433891.0,,false
"{'account_id': 26931715, 'reputation': 314, 'user_id': 20504019, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0yY2nT897Da6A7uTBchebCNCVHp_XeZiKIS2y3=k-s256', 'display_name': 'Jay F.', 'link': 'https://stackoverflow.com/users/20504019/jay-f'}",True,1,1669433159,1669433159,74579496,74579467,CC BY-SA 4.0,"<p>This is caused by Flex. Either wrap the icons with a div or add <code>flex-shrink: 0</code> to <code>.exp__details-icons</code> class.</p> <pre><code><article className=""exp__details"">     <div>         <AiOutlineCheckCircle className=""exp__details-icons"" />     </div>     <div>         <h4>Shakespearian Literature</h4>         <small className=""text-light"">Mastered</small>     </div> </article> </code></pre> <p><a href=""https://i.sstatic.net/Qsn7Q.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/Qsn7Q.png"" alt=""enter image description here"" /></a></p>",,,false
"{'account_id': 1198376, 'reputation': 608, 'user_id': 1169603, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/53552db817a955b5d30eba0f01748bd4?s=256&d=identicon&r=PG', 'display_name': 'Marakoss', 'link': 'https://stackoverflow.com/users/1169603/marakoss'}",True,1,1669432049,1669432049,74579446,74579445,CC BY-SA 4.0,<p>TLDR: Disable the antialiasing that is enabled by default for iOS devices in GLView component.</p> <p>When creating GLView pass <strong>msaaSamples</strong> property and set it to <strong>0</strong> (default: 4)</p> <pre><code>      <GLView         msaaSamples={0}         onContextCreate={.... </code></pre> <p>This will bring the performance close to the Android simulator.</p> <p><strong>Why this helps?</strong></p> <p>I am just guessing its some memory issue. Mobile retina displays on its own use like 2K pixels. Adding 4 times Multisample anti-aliasing (short msaa) quadruples the amount of video memory needed to store one frame.</p> <p>Note: Feel free to add more comments how to squeeze more performance out of it and I can incorporate it in this answer.</p>,,,false
"{'account_id': 19128589, 'reputation': 101, 'user_id': 14710067, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/2e89814617e7527b56f7ade4f40a9958?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Richard Lucas', 'link': 'https://stackoverflow.com/users/14710067/richard-lucas'}",False,0,1669433581,1669433581,74579526,74579426,CC BY-SA 4.0,"<p>Well... is not quite a answear for the issue itself, but rather a better approach for the issue. I had passed the states for the parent component, and it made not really necessary to use useEffect hook, and the code got like:</p> <pre><code>  const [username, setUsername] = useState('');   const [password, setPassword] = useState('');   const [passwordActive, setPasswordActive] = useState(false);    const handleDelete = () => {     if (!passwordActive) {       setUsername(prev => prev.slice(0, -1));     } else {       setPassword(prev => prev.slice(0, -1));     }   };    const handleInsert = (key: any) => {     if (passwordActive) {       setPassword(prev => prev + key);     } else {       setUsername(prev => prev + key);     }   };    return (     <View style={styles.view}>       <View style={styles.container_title}>         <View style={styles.rows}>           <Text> Logo lanchecard</Text>           <Text> Texto 2</Text>         </View>       </View>       <View style={styles.container}>         <View style={styles.column}>           <View style={styles.card}>             <LoginFormCard               username={username}               password={password}               setPasswordActive={setPasswordActive}             />           </View>         </View>         <View style={styles.column}>           <View style={styles.card}>             <NumericKeyboard               handleKeyPressed={pressed => {                 handleInsert(pressed);               }}               deleteKeyPressed={handleDelete}             />           </View>         </View>       </View>     </View>   ); }``` </code></pre>",,,false
"{'account_id': 1209109, 'reputation': 8189, 'user_id': 1178016, 'user_type': 'registered', 'accept_rate': 73, 'profile_image': 'https://i.sstatic.net/HOI7f.png?s=256', 'display_name': 'xehpuk', 'link': 'https://stackoverflow.com/users/1178016/xehpuk'}",True,1,1669433729,1669433729,74579539,74579410,CC BY-SA 4.0,"<p>In your first try, you have this line:</p> <pre><code>this.setState({list:response.hits}) </code></pre> <p>This should (probably) be:</p> <pre><code>this.setState({list:response.data.hits}) </code></pre> <p>This resolves your (first) <code>TypeError</code>.</p> <p>Then you try to render it like this:</p> <pre><code><p>{this.state.list}</p> </code></pre> <p>What is React supposed to do with this? It won't magically create HTML elements for your array.</p> <p>Mapping over the array is the correct way to render an element per item in the array. But:</p> <pre><code>return<li key={key}>{value}</li> </code></pre> <p><code>value</code> is a plain object. How is React supposed to render it? And consider using a real key, not just the array index.</p> <p>Your change of <code>getData()</code> makes it forget <code>this</code>. You probably meant to bind it in the constructor instead of <code>setState()</code>. This resolves your second <code>TypeError</code>. Or change it back to an arrow function.</p>",,,false
"{'account_id': 13173718, 'reputation': 368762, 'user_id': 9515207, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3d5ccb4452ea5093f95c1da37acc764b?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'CertainPerformance', 'link': 'https://stackoverflow.com/users/9515207/certainperformance'}",True,3,1669430267,1669430267,74579341,74579330,CC BY-SA 4.0,"<p>Component instances should almost never be put into state, because then their props and own state won't update naturally. You need to be calling <code><Child checkHandler={checkHandler} state1={state1} /</code> whenever the parent re-renders so that when the parent values change, the child can re-render with its new props.</p> <p>The checkbox is also not checked by default, yet you do <code>const [state1, setState1] = React.useState(true);</code> - better to be consistent. Consider adding the <code>checked</code> prop to the child.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function Parent(props) {     const [state1, setState1] = React.useState(true);     function checkHandler(event) {         setState1(event.target.checked);     }     return (         <div>             Text #1: {state1 ? ""true"" : ""false""}             <Child checkHandler={checkHandler} state1={state1} />         </div>     ); }  function Child({     state1,     checkHandler }) { return (     <div>         Text #2: {state1 ? ""true"" : ""false""}         <form>             <input type=""checkbox"" id=""checkbox"" onChange={checkHandler} checked={state1} />             <label htmlFor=""checkbox"">Check</label>         </form>     </div>   ); }  ReactDOM.createRoot(document.querySelector('.react')).render(<Parent />);</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script crossorigin src=""https://unpkg.com/react@18/umd/react.development.js""></script> <script crossorigin src=""https://unpkg.com/react-dom@18/umd/react-dom.development.js""></script> <div class='react'></div></code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 1092869, 'reputation': 21274, 'user_id': 1087119, 'user_type': 'registered', 'accept_rate': 50, 'profile_image': 'https://i.sstatic.net/CMEVE.png?s=256', 'display_name': 'Christian Fritz', 'link': 'https://stackoverflow.com/users/1087119/christian-fritz'}",False,1,1669430235,1669430235,74579340,74579330,CC BY-SA 4.0,"<p>No need to put the entire component into the state -- it won't work either. Just give the state variable as a prop to the child.</p> <pre><code>function Parent(props) {   const [state1, setState1] = useState(true);   function checkHandler(event) {     setState1(event.target.checked);   }   return (     <div>       Text #1: {state1 ? ""true"" : ""false""}       <Child checkHandler={checkHandler} state1={state1} />     </div>   ); }  export default Parent;  function Child({ state1, checkHandler }) {   return (     <div>       Text #2: {state1 ? ""true"" : ""false""}       <form>         <input type=""checkbox"" id=""checkbox"" onChange={checkHandler} />         <label for=""checkbox"">Check</label>       </form>     </div>   ); }  export default Child; </code></pre>",,,false
"{'account_id': 26931715, 'reputation': 314, 'user_id': 20504019, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0yY2nT897Da6A7uTBchebCNCVHp_XeZiKIS2y3=k-s256', 'display_name': 'Jay F.', 'link': 'https://stackoverflow.com/users/20504019/jay-f'}",True,2,1669431509,1669430395,74579351,74579286,CC BY-SA 4.0,<p>You need to target the <code><li></code>s that contain a link with the active class.</p> <p>Like this:</p> <pre><code>li:has(.sidebar__content-link.active):hover:after {     display: block;     content: attr(data-after); } </code></pre>,1669431509.0,,false
"{'account_id': 26931715, 'reputation': 314, 'user_id': 20504019, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0yY2nT897Da6A7uTBchebCNCVHp_XeZiKIS2y3=k-s256', 'display_name': 'Jay F.', 'link': 'https://stackoverflow.com/users/20504019/jay-f'}",True,0,1669431296,1669431296,74579403,74579271,CC BY-SA 4.0,<p>There is a typo in e.preventDefault(); in handleLogin function thus your form is submitted without a payload. I hope this fixes it.</p>,,,false
"{'account_id': 13876012, 'reputation': 269, 'user_id': 10017656, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/92f2a984650e656f276c8be55116a45c?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Edtimer', 'link': 'https://stackoverflow.com/users/10017656/edtimer'}",False,1,1669481456,1669429340,74579288,74579151,CC BY-SA 4.0,"<p>to extract the value we can use a hook called useRouter from next/router. if we have a file called [newsId].tsx , we can get newsId value in the following manner.</p> <pre><code>//[newsId].tsx import {useRouter} from 'next/router  function DetailPage(){ const router = useRouter();  //gives us the value in url  console.log(router.query.newsId;)  return <h1>hello</h1> } export default DetailPage </code></pre> <p>note that the double values where one is undefined is because the component is loaded initially without the value then again when it gets the value. If you want it to render once you can refer to this answer. <a href=""https://stackoverflow.com/questions/61040790/userouter-withrouter-receive-undefined-on-query-in-first-render"">useRouter/withRouter receive undefined on query in first render</a></p>",1669481456.0,,false
"{'account_id': 11467508, 'reputation': 27624, 'user_id': 8405310, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/oTdtMh9A.jpg?s=256', 'display_name': 'TkDodo', 'link': 'https://stackoverflow.com/users/8405310/tkdodo'}",False,3,1669475819,1669475819,74583361,74579151,CC BY-SA 4.0,"<p>As others have said, the value you get from <code>useRouter().query</code> is an empty object on the first render. The router also exposes an <a href=""https://nextjs.org/docs/api-reference/next/router#router-object"" rel=""nofollow noreferrer"">isReady flag</a> to indicate that the router is ready to use. You can combine this with the <code>enabled</code> option of react-query to defer the actual request:</p> <pre><code>const router = useRouter() const { id } = router.query  useQuery({   queryKey: ['my-query', id],   queryFn: () => fetchMyQuery(id)   enabled: router.isReady }) </code></pre> <p>you could also pass <code>Boolean(id)</code> or <code>!!id</code> to <code>enabled</code> to just disable the query when you have no id for whatever reason.</p>",,,false
"{'account_id': 26931715, 'reputation': 314, 'user_id': 20504019, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0yY2nT897Da6A7uTBchebCNCVHp_XeZiKIS2y3=k-s256', 'display_name': 'Jay F.', 'link': 'https://stackoverflow.com/users/20504019/jay-f'}",False,2,1669429513,1669429513,74579301,74579151,CC BY-SA 4.0,"<p>You can use useEffect to check if the id is available, then run the rest of your code.</p> <pre><code>useEffect(() => {     if (!id) return;     console.log(id); }, [id]); </code></pre> <p>If reactStrictMode in the next.config.js file is set to true, it will run your code twice. This is only in development mode.</p>",,,false
"{'account_id': 9283741, 'reputation': 159, 'user_id': 6894272, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/N7VQw.jpg?s=256', 'display_name': 'Tarmah', 'link': 'https://stackoverflow.com/users/6894272/tarmah'}",True,1,1669428767,1669428767,74579252,74579138,CC BY-SA 4.0,"<p>I assume that your current reducer will look like this</p> <pre><code>import { configureStore } from '@reduxjs/toolkit'; import counterReducer from '../features/counter/counterSlice';  export default configureStore({   reducer: {     counter: counterReducer,     // ... more reducers   }, }); </code></pre> <p>So instead of this approach we can make use of <a href=""https://redux.js.org/api/combinereducers"" rel=""nofollow noreferrer"">combinereducers</a></p> <pre><code>const combinedReducer = combineReducers({   counter: counterReducer,   // ... more reducers }); </code></pre> <p>Followed by</p> <pre><code>const rootReducer = (state, action) => {   if (action.type === 'counter/logout') { // check for action type      state = undefined;   }   return combinedReducer(state, action); };  export default configureStore({   reducer: rootReducer,   middleware: [...getDefaultMiddleware()] }); </code></pre> <p>Here is my <a href=""https://codesandbox.io/s/reset-state-redux-toolkit-forked-9wt9mt?file=/src/store.ts"" rel=""nofollow noreferrer"">working example</a> where you can see that the inital value gets back to default . You can add as many reducers as you want and all will return to default initial value based on a single action.</p>",,,false
"{'account_id': 1523408, 'reputation': 4034, 'user_id': 1514049, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/1c960a26826934bed45e27b5ca3d9824?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'segFault', 'link': 'https://stackoverflow.com/users/1514049/segfault'}",True,1,1669425749,1669425749,74579065,74578965,CC BY-SA 4.0,"<p>You may be running into an infinite loop since you have defined an <code>install</code> script in your <code>package.json</code>. For more details on <a href=""https://docs.npmjs.com/cli/v9/using-npm/scripts"" rel=""nofollow noreferrer"">npm <code>scripts</code> configuration have a look here</a>.</p> <p>You might also be facing similar issues with some of the other scripts you have defined, e.g. <code>build</code> also calls itself <code>npm run build</code>. You should build the project code as part of the <code>build</code> script. See the CRA source build script for reference: <a href=""https://github.com/facebook/create-react-app/blob/d960b9e38c062584ff6cfb1a70e1512509a966e7/package.json#L8"" rel=""nofollow noreferrer"">https://github.com/facebook/create-react-app/blob/d960b9e38c062584ff6cfb1a70e1512509a966e7/package.json#L8</a></p> <p>Try removing the <code>install</code> script and run the commands manually when you need to install dependencies for your project. The updated scripts:</p> <pre><code>""scripts"": {     ""start"": ""node server/server.js"",     ""dev"": ""concurrently \""cd server && npm run watch\"" \""cd client && npm start"",     ""build"": ""cd client && npm run build"",     ""seed"": ""cd server && npm run seed"",     ""test"": ""echo \""Error: no test specified\"" && exit 1"",     ""eject"": ""react-scripts eject""   }, </code></pre> <p>As a side note/question, why don't you run <code>npm i</code> from the root of the project and then run your <code>build</code> and <code>seed</code> commands?</p> <p>Only installing dependencies will not build your app, in most cases.</p>",,,false
"{'account_id': 24061179, 'reputation': 11, 'user_id': 18038402, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJxorjz85Emq3MdehTLpuUppYL8S5R-mUYlC6mYn=k-s256', 'display_name': 'Elissei Hilakivi', 'link': 'https://stackoverflow.com/users/18038402/elissei-hilakivi'}",False,0,1669464775,1669464775,74582058,74578805,CC BY-SA 4.0,"<pre><code>import React, { useState } from 'react'; import './App.css'; import Button from '@mui/material/Button'; import TextField from '@mui/material/TextField'; import AppBar from '@mui/material/AppBar'; import Toolbar from '@mui/material/Toolbar'; import Typography from '@mui/material/Typography'; import IconButton from '@mui/material/IconButton'; import DeleteIcon from '@mui/icons-material/Delete'; import Tooltip from '@mui/material/Tooltip'; import SaveIcon from '@mui/icons-material/Save'; import { DataGrid, GridColDef } from '@mui/x-data-grid';  export default function App() { const [todo, setTodo] = useState({description: '', date: ''}); const [todos, setTodos] = useState([]);  const inputChanged = (event) => {   setTodo({...todo, [event.target.name]: event.target.value}); }  const addTodo = () => {   const newTodo = {...todo, id: new Date().toString()}   setTodos([...todos, newTodo]);   setTodo({description: '', date: ''}); }  const deleteTodo = (row) => {   setTodos(todos.filter((todo, index) => index !== row.tabIndex)); }  const columns = [   {field: 'description', headerName: 'Description', width: 200},   {field: 'date', headerName: 'Date', width: 200},   {     field: "" "",     headerName: "" "",     width: 200,     sortable: false,     align: ""center"",     renderCell: (params) => {       console.log(params)         return (         <IconButton              size='small'         color='error'               onClick={() => deleteTodo(params)}>           <Tooltip title=""Delete todo"">             <DeleteIcon />           </Tooltip>         </IconButton>       )     }    } ]  return ( <div className=""App"">   <AppBar position=""static"">     <Toolbar>       <Typography variant=""h6"">         Todolist       </Typography>      </Toolbar>    </AppBar>    <TextField      style={{marginRight: 10}}     variant=""standard""      label=""Description""      name=""description""      value={todo.description}      onChange={inputChanged}     />    <TextField      variant=""standard""     style={{marginRight: 10}}      label=""Date""      name=""date""      value={todo.date}      onChange={inputChanged}    />    <Button       style= {{margin: 10}}       startIcon={<SaveIcon />}      color=""primary""       variant=""outlined""       onClick={addTodo}>      Add    </Button>    <div style={{ height: 300, width: '40%', margin: 'auto' }}>      <DataGrid        rows={todos}        columns={columns}        getRowId={row => row.id}              />     </div> </div> ); } </code></pre>",,,false
"{'account_id': 3085023, 'reputation': 611, 'user_id': 2612357, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/70758d769a6c6140be52ad19b579ad77?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'theCJCsoccer', 'link': 'https://stackoverflow.com/users/2612357/thecjcsoccer'}",True,0,1669422566,1669422566,74578863,74578781,CC BY-SA 4.0,"<p>Try this, uncomment out the console.log to verify data if screen is white.</p> <pre><code> return (     <>       {categories.map(function (category, i) {         // console.log(category.category );         // console.log(category.sub );         return (           <>             <h6 key={i}>{category.category}</h6>             <>               {category.sub.map(function (sub, j) {                 // console.log(category.category + '' + sub.name);                 return <p key={j}> {sub.name}</p>;               })}             </>           </>         );       })}    </>  ); </code></pre> <p>Data:</p> <pre><code>let categories = [   {     category: 'Mobiles',     sub: [       {         name: 'Apple',       },       {         name: 'Samsung',       },     ],   },   {     category: 'Televisions',     sub: [       {         name: 'Lg',       },       {         name: 'Sony',       },     ],   }, ]; </code></pre>",,,false
"{'account_id': 20066672, 'reputation': 421, 'user_id': 14712252, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RktL0.jpg?s=256', 'display_name': 'Farbod Shabani', 'link': 'https://stackoverflow.com/users/14712252/farbod-shabani'}",False,1,1669426126,1669426126,74579083,74578731,CC BY-SA 4.0,"<p>You can use this <code>findIndex</code> function to see if the label exists in side your labels list or not. The way you can use it is :</p> <pre><code>const labelIndex = labelsList.findIndex((labelInSide) => labelInSide.id === label.id); if(labelIndex < 0) {setLabelsList([...labelsList, {         color: label.color, id: label.id, name: label.name, textColor: label.textColor     }])} </code></pre> <p>I think this should help you.</p>",,,false
"{'account_id': 2867804, 'reputation': 1809, 'user_id': 2461748, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/63fe174bb61340aeefc533c259951285?s=256&d=identicon&r=PG', 'display_name': 'antokhio', 'link': 'https://stackoverflow.com/users/2461748/antokhio'}",False,0,1669452116,1669452116,74580808,74578562,CC BY-SA 4.0,"<p>such questions is better to ask on <a href=""https://forum.strapi.io/"" rel=""nofollow noreferrer"">https://forum.strapi.io/</a> or on strapi community discord. The stack overflow is more of a code technical question, <code>e.g. this function does not i would expect it to be doing</code>.</p> <p>so the basic steps are following:</p> <ol> <li>setup URL in <code>.env</code></li> </ol> <pre><code>... URL=http://localhost:1337 </code></pre> <p><code>http://localhost:1337</code> this should be your strapi actual url if you don't have .env create it in root of your project</p> <ol start=""2""> <li>make sure the url set in config/server.js <code>/config/server.js</code></li> </ol> <pre><code>module.exports = ({env}) => {   ...   url: env(""URL"", ""http://localhost:1337""), } </code></pre> <ol start=""3""> <li>To actually send an email, you need an email plugin: <a href=""https://market.strapi.io/providers/@strapi-provider-email-nodemailer"" rel=""nofollow noreferrer"">https://market.strapi.io/providers/@strapi-provider-email-nodemailer</a></li> </ol> <p><code>yarn add @strapi/provider-email-nodemailer</code></p> <p>after it's installed create file <code>config/plugins.js</code> with following contents:</p> <pre><code>module.exports = ({ env }) => ({   // ...   email: {     config: {       provider: 'nodemailer',       providerOptions: {         host: env('SMTP_HOST', 'smtp.example.com'),         port: env('SMTP_PORT', 587),         auth: {           user: env('SMTP_USERNAME'),           pass: env('SMTP_PASSWORD'),         },         // ... any custom nodemailer options       },       settings: {         defaultFrom: 'hello@example.com',         defaultReplyTo: 'hello@example.com',       },     },   },   // ... }); </code></pre> <p>in your .env (step 1) add following configurations: <code>.env</code></p> <pre><code>SMTP_HOST=smtp.example.com SMTP_PORT=587 SMTP_USERNAME=myEmailUsername SMTP_PASSWORD=myEmailPassword </code></pre> <p>also don't forget to set your email address to this two fileds:</p> <pre><code>defaultFrom: 'hello@example.com', defaultReplyTo: 'hello@example.com', </code></pre> <ol start=""5""> <li>then i've recommend doing <code>yarn build</code> <code>yarn develop</code></li> </ol> <p>if all is good, you should be able to send test email: <a href=""https://i.sstatic.net/13qTv.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/13qTv.png"" alt=""enter image description here"" /></a></p> <p>docs <a href=""https://docs.strapi.io/developer-docs/latest/plugins/users-permissions.html#email-validation"" rel=""nofollow noreferrer"">https://docs.strapi.io/developer-docs/latest/plugins/users-permissions.html#email-validation</a></p> <ol start=""6""> <li><p>then go to <code>Email Templates</code> and setup Shipper email with exact one you are using</p> </li> <li><p>then in <code>Advanced settings</code> you need to setup <code>Redirection url</code></p> </li> </ol> <p>Then it should work ;)</p>",,,false
"{'account_id': 13173718, 'reputation': 368762, 'user_id': 9515207, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3d5ccb4452ea5093f95c1da37acc764b?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'CertainPerformance', 'link': 'https://stackoverflow.com/users/9515207/certainperformance'}",False,3,1669418486,1669418486,74578573,74578551,CC BY-SA 4.0,"<p>The additional anonymous callback isn't needed here. Doing it your way is fine.</p> <p>It <em>would</em> be useful to have such an anonymous callback if:</p> <ul> <li><p>The function being called was a member of an object, and it needs a <code>this</code> context of the object, and the function isn't bound. For example, the following would look pretty suspicious in a class component:</p> <pre><code>onClick={this.handleClick} </code></pre> <p>(see <a href=""https://stackoverflow.com/questions/20279484/how-to-access-the-correct-this-inside-a-callback"">here</a> for many pages on the subject)</p> </li> <li><p>You want to make sure the function is called with a particular argument or arguments, and not with others. For example, you might have</p> <pre><code><button onClick={() => changeValue(1)}>click1</button> <button onClick={() => changeValue(2)}>click 2</button> </code></pre> <p>Or, you might possibly want to omit the <a href=""https://reactjs.org/docs/handling-events.html"" rel=""nofollow noreferrer"">default React event</a> that gets passed as the first argument to an event handler. But, in this case, no arguments are used in <code>incrementScore</code> or <code>decrementScore</code>, so it doesn't matter.</p> </li> </ul> <p>Additionally, note that you only need to use the callback form of a state setter, eg:</p> <pre><code>setScore(prevScore => prevScore + 1); </code></pre> <p>when the state value that the enclosing function <a href=""https://stackoverflow.com/questions/111102/how-do-javascript-closures-work"">closes over</a> may be stale - if the state setter has been called previously, and the component hasn't re-rendered yet. But for a state that changes only once when a button is clicked, the state value has no chance of being stale. So, if you wanted, in this case, you could simplify</p> <pre><code>const incrementScore = () => {   setScore(prevScore => prevScore + 1); } </code></pre> <p>to</p> <pre><code>const incrementScore = () => {   setScore(score + 1); } </code></pre>",,,false
"{'account_id': 10972271, 'reputation': 311, 'user_id': 8340982, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/293c103fbad9ea900f0baa77abb8bfe1?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'chesterkmr', 'link': 'https://stackoverflow.com/users/8340982/chesterkmr'}",True,1,1669419517,1669419517,74578659,74578445,CC BY-SA 4.0,"<p>Checked your code.</p> <p>And checked API documentation and i found that you using API incorrectly.</p> <p>I would change API_URL from <code>https://api.openbrewerydb.org/breweries?by_city&per_page</code> to <code>https://api.openbrewerydb.org/</code></p> <ol> <li><p>API_URL - Url defined incorrectly,you did assign endpoint url with 2 empty parameters <code>by_city</code> & <code>per_page</code> which are being sent empty.</p> </li> <li><p>Now to fix your issue and properly use endpoint URL should be updated. From <code>fetch(</code>${API_URL}&s=${city}<code>);</code> to fetch(<code>${API_URL}/breweries?by_city=${city}</code>);</p> </li> </ol> <p>Hope it helps!</p>",,,false
"{'account_id': 18159713, 'reputation': 13249, 'user_id': 13211263, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/r5sEF.jpg?s=256', 'display_name': 'lpizzinidev', 'link': 'https://stackoverflow.com/users/13211263/lpizzinidev'}",True,0,1669470003,1669470003,74582676,74578433,CC BY-SA 4.0,"<p>You have a few problems, both on front-end and back-end.<br> Try to change your component like this:</p> <pre><code>class Billing extends Component {   constructor() {     super();     this.state = {       clients: [],       clientdetails: '',       paymentReferenceCode: '',       paymentType: '',       paymentDescription: '',       procedureAmount: '',       paymentDiscount: '',       AmountPaid: '',       Total: '',     };     this.handleSubmit = this.handleSubmit.bind(this);     this.handleChange = this.handleChange.bind(this);     this.handleChangeClientDetails = this.handleChangeClientDetails.bind(this);   }    componentDidMount() {     this.loadData();   }    handleChange(event) {     this.setState({       ...this.state,       [event.target.name]: event.target.value,     });   }    handleChangeClientDetails(newValue) {     this.setState({       ...this.state,       clientdetails: newValue._id     })   }    loadData = () => {     axios       .get('http://localhost:4000/clients', {         headers: {           'Access-Control-Allow-Origin': true,           'Access-Control-Allow-Credentials': true,           'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',           crossorigin: true,         },         responseType: 'json',       })       .then((result) => {         console.log(result.data);         this.setState({           ...this.state,           clients: result.data,         });       })       .catch((error) => {         console.log(error);       });   };    customFilter = (option, searchText) => {     if (option.data.fullName.toLowerCase().includes(searchText.toLowerCase()))       return true;     return false;   };    handleSubmit(event) {     event.preventDefault();     const entry = {       paymentReferenceCode: this.state.paymentReferenceCode,       paymentType: this.state.paymentType,       paymentDescription: this.state.paymentDescription,       procedureAmount: this.state.procedureAmount,       paymentDiscount: this.state.paymentDiscount,       AmountPaid: this.state.AmountPaid,       Total: this.state.Total,     };     if (!this.state.clientdetails) {       console.log('Select client');       return;     }     axios.post(`http://localhost:4000/Bill/addbill/${this.state.clientdetails}`, entry).then((response) => {       console.log(response.data);     });     this.setState({       clientdetails: '',       paymentReferenceCode: '',       paymentType: '',       paymentDescription: '',       procedureAmount: '',       paymentDiscount: '',       AmountPaid: '',       Total: '',     });   }   render() {     const displayNone = { display: 'none' };     return (       <div>         <div className='container'>           <div className='form-div'>             <p className='text-capitalize'>Billing</p>             <Box               component='form'               onSubmit={this.handleSubmit}               noValidate               sx={{ mt: 1 }}             >               <Select                 closeMenuOnSelect={true}                 hideSelectedOptions={true}                 options={this.state.clients}                 filterOption={this.customFilter}                 isClearable={true}                 search={true}                 components={{ IndicatorSeparator: () => null }}                 placeholder={'Select Client'}                 getOptionLabel={(option) => `${option.fullName} ${option._id}`}                 onChange={this.handleChangeClientDetails} />               ...           </div>         </div>       </div>     );   } }  export default Billing; </code></pre> <p>And add the parameter to the POST route:</p> <pre><code>router.post(""/addbill/:id"", ... ); </code></pre>",,,false
"{'account_id': 25724379, 'reputation': 51, 'user_id': 19480959, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/2c083429ff5d9d975abf02b1c0833108?s=256&d=identicon&r=PG', 'display_name': 'dkunrath', 'link': 'https://stackoverflow.com/users/19480959/dkunrath'}",False,0,1669464542,1669464542,74582034,74578433,CC BY-SA 4.0,"<p>At your router you're using <code>req.params.id</code> but it's never declared, since your <code>clientdetails</code> uses the <code>clientid</code>, it'll be <code>null</code>. Easy to fix.</p> <pre class=""lang-js prettyprint-override""><code>router.post(""/addbill"",async(req,res)=>{     try {         console.log(req.params);                 const clientid = await clients.findOne({ _id: req.params.id }); </code></pre> <p>should be</p> <pre class=""lang-js prettyprint-override""><code>//                    /-- req.params.id router.post(""/addbill/:id"",async(req,res)=>{     try {         console.log(req.params);                 const clientid = await clients.findOne({ _id: req.params.id }); </code></pre> <p>just remember that now your route will <strong>need</strong> the <code>/clientid</code> at the end.</p>",,,false
"{'account_id': 1602316, 'reputation': 6201, 'user_id': 1483143, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/deYNU.jpg?s=256', 'display_name': 'sed', 'link': 'https://stackoverflow.com/users/1483143/sed'}",False,0,1690124673,1690124673,76748934,74578429,CC BY-SA 4.0,"<p>Just add your library's css file import to _document.js file, ie</p> <pre><code><link rel=""stylesheet"" href=""https://unpkg.com/bulma@0.9.4/css/bulma.min.css"" /> </code></pre>",,,false
"{'account_id': 23991133, 'reputation': 1, 'user_id': 17977280, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GiZgi7-NQoGRpPewW4phfc1TwfiVZVEDRY6tgsbmqk=k-s256', 'display_name': 'James Graca-Jones', 'link': 'https://stackoverflow.com/users/17977280/james-graca-jones'}",False,0,1684587313,1684587313,76295342,74578429,CC BY-SA 4.0,"<p>I had a similar issue in v13.3.4 and loading my global.css file into a client-side component solved it. Not sure if this is an official solution, though.</p>",,,false
"{'account_id': 6615307, 'reputation': 52364, 'user_id': 5108796, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5792d442b2c7e1ecd6b4efa8c10e6c11?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'ghybs', 'link': 'https://stackoverflow.com/users/5108796/ghybs'}",True,1,1669428800,1669428800,74579254,74578417,CC BY-SA 4.0,"<blockquote> <p>this syntax [...] is saying [an] object with fields of <code>Component</code> and <code>pageProps</code> and the object is type <code>AppProps</code>?</p> </blockquote> <p>You guessed absolutely right! This is <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"" rel=""nofollow noreferrer"">destructuring assignment</a> (here of a function parameter).</p> <p>Therefore in your case, <code>AppProps</code> is the type for your class-based component as well:</p> <pre><code>class MyAppClass extends React.Component<AppProps> {   override render() {     const { Component, pageProps } = this.props     return <Component {...pageProps} />   } } </code></pre> <p><a href=""https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgIilQ3wChTgA7GJKTdJOAQTDAAUcwBnOAb1LhwAwrkiUk1AFyJiMAHQjwEcdQAqATzBIANALhgUAcyQcI3abwC+pa5gCulDMGVwAsupZgAFL2GjlEjDa+kYmnDyW0p6m3ACUfHpEMHZQlHAAPIpigXxyeQbGMVyWcAD0AHw25GgANihcPO6eQnUNcEgAHjSUACY8yOjyWQHU6dHh5QmCEAButFDAPYxEvbRe8fyCgmjKXPC+wypBIYXhcCUAvHAwABbAXHJg4XqCSSlpmf5HufmhRSUVPTWaxAA"" rel=""nofollow noreferrer"">Playground Link</a></p>",,,false
"{'account_id': 17645425, 'reputation': 16653, 'user_id': 12806961, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/XRF3u.jpg?s=256', 'display_name': 'Code on the Rocks', 'link': 'https://stackoverflow.com/users/12806961/code-on-the-rocks'}",False,1,1707055017,1707055017,77936048,74578397,CC BY-SA 4.0,"<p>I had a similar issue where by <code>FAQ.tsx</code> file with interactive dropdown wasn't working. My problem was that my <code>astro.config.mjs</code> file had react listed twice in the integrations section:</p> <pre><code>export default defineConfig({   site: ""https://codeontherocks.dev"",   integrations: [     tailwind(),     react({       include: ['**/react/*'],     }),     react(), <-- Remove this     sitemap(),     astroExpressiveCode(),     mdx(),   ], }); </code></pre> <p>After removing the react entry without the specified file path everything started working again.</p>",,,false
"{'account_id': 4703892, 'reputation': 1939, 'user_id': 3829557, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5f38a37eed5c2703f68e8b38b8622bda?s=256&d=identicon&r=PG', 'display_name': 'swithinbank', 'link': 'https://stackoverflow.com/users/3829557/swithinbank'}",True,16,1669721782,1669721782,74613485,74578397,CC BY-SA 4.0,"<p>The first thing to check would be to make sure you are hydrating your React component where youâre using it. In Astro, components ship zero JS by default, just plain HTML. Components will only be interactive in the browser if you add a <code>client:*</code> directive. This is part of Astroâs <a href=""https://docs.astro.build/en/concepts/islands/#how-do-islands-work-in-astro"" rel=""noreferrer"">âIslands Architectureâ</a>.</p> <p>To include a componentâs JS you need a client directive saying when to load it. In this example the component will load its JS when the page loads:</p> <pre><code>--- // src/pages/index.astro import SecondSection from '../components/SecondSection.jsx'; --- <SecondSection client:load /> </code></pre> <p>There are different directives like <code>client:idle</code> or <code>client:visible</code> that you can use to control exactly when a user needs the interactivity. Thereâs more about the <a href=""https://docs.astro.build/en/reference/directives-reference/#client-directives"" rel=""noreferrer"">client directives in Astroâs docs</a>.</p>",,,false
"{'account_id': 15519980, 'reputation': 1584, 'user_id': 11196441, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c97a5db1d6ddca883b712f94af110d25?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Disco', 'link': 'https://stackoverflow.com/users/11196441/disco'}",False,0,1669460173,1669460173,74581553,74578334,CC BY-SA 4.0,"<p>You are looking after a reverse geocoding service. You can start by looking into <a href=""https://nominatim.org/release-docs/develop/api/Reverse/"" rel=""nofollow noreferrer"">Nominatim</a> it is free and it is what they use in the example. However remember to read the usage policy, it is not meant for heavy use. If you know that you will make a lot i requests each second you should look for a paid alternative.</p> <p>Would recommend to build your own service that can take coordinates and pass that to the api, relaying on a package. e.g.</p> <p>I have a graphql query hook that I pass latLng that I get from leaflet -> pass it through my backend -> Nominatim.</p> <pre><code>const { data, fetching, error } = useReverseGeo(latLng); </code></pre>",,,false
"{'account_id': 22024524, 'reputation': 21, 'user_id': 16292742, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/da11301b62a70b5c8369625e19c75305?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Irvin Lee', 'link': 'https://stackoverflow.com/users/16292742/irvin-lee'}",False,0,1669682780,1669682780,74608001,74577957,CC BY-SA 4.0,"<p>for people using react typescript class components look into this link <a href=""https://stackoverflow.com/questions/69967745/react-router-v6-access-a-url-parameter"">React-router-v6 access a url parameter</a></p>",,,false
"{'account_id': 25724379, 'reputation': 51, 'user_id': 19480959, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/2c083429ff5d9d975abf02b1c0833108?s=256&d=identicon&r=PG', 'display_name': 'dkunrath', 'link': 'https://stackoverflow.com/users/19480959/dkunrath'}",False,0,1669434301,1669434184,74579569,74577957,CC BY-SA 4.0,"<p>Concerning params you can access them in a react class component using <code>this.props.match.params</code>.</p> <p>And concerning the <code>useParams</code>, two things</p> <ul> <li>yes, anything with a <code>use</code> in front of a name should be a <strong>hook</strong> and can only be used in functional components.</li> <li>no, functional components, since React v17, can have their own states, using the <code>useState</code> hook.</li> </ul> <p>just keep in mind that the you can have <strong>multiple states</strong> in functional components so you should use a state for <strong>each</strong> controlled part.</p>",1669434301.0,,false
"{'account_id': 22085991, 'reputation': 21, 'user_id': 16344827, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d2e4d158ed850d67e530eb0104dff4e6?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'yusuf-2187', 'link': 'https://stackoverflow.com/users/16344827/yusuf-2187'}",False,1,1701647409,1701647409,77596587,74577930,CC BY-SA 4.0,<p>It loads default NGINX configuration. You should add;</p> <p>RUN rm /etc/nginx/conf.d/default.conf</p> <p>to your docker file.</p> <p>It should solve your issue.</p>,,,false
"{'account_id': 26622415, 'reputation': 876, 'user_id': 20241005, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/nTyPF.png?s=256', 'display_name': 'MalwareMoon', 'link': 'https://stackoverflow.com/users/20241005/malwaremoon'}",True,1,1669430347,1669430347,74579347,74577851,CC BY-SA 4.0,"<p>To me it seems most reasonable to just merge it into one <code>useEffect</code>, but this may not make sense in full context of your code.</p> <pre class=""lang-js prettyprint-override""><code>const [userPermissions, setUserPermissions] = useState();  //Use GET from myService to save to state useEffect(() => {   myService.canUserAccess(userId)   .then(({userPermissions}) => {     if(!userPermissions){ redirect(...)}     setUserPermissions(userPermissions)   }); }); </code></pre>",,,false
"{'account_id': 2322649, 'reputation': 78, 'user_id': 2037937, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/3e19fcf5331ef8725a3de0edc8d7542d?s=256&d=identicon&r=PG', 'display_name': 'Rousnay', 'link': 'https://stackoverflow.com/users/2037937/rousnay'}",False,1,1669425733,1669417760,74578522,74577851,CC BY-SA 4.0,"<p>You can implement an extra state to check whether the promise of the asynchronous function (myService) has been resolved or not. This will skip the unwanted <code>undefined</code> results of <code>userPermissions</code> state.</p> <pre><code>const [userPermissions, setUserPermissions] = useState(); const [resolved, isResolved] = useState(false);  useEffect(() => {   (async () => {     const userPermissions = await myService.canUserAccess(userId);     setUserPermissions({ userPermissions });     isResolved(true);   })(); }, [myService]);  useEffect(() => {   if (resolved) {     if (!userPermissions) {       redirect(...)     }   } }, [resolved, userPermissions, redirect]); </code></pre>",1669425733.0,,false
"{'account_id': 946495, 'reputation': 28740, 'user_id': 973651, 'user_type': 'registered', 'accept_rate': 90, 'profile_image': 'https://www.gravatar.com/avatar/dd66c6ce85ae84cb0e0c39654f5028ba?s=256&d=identicon&r=PG', 'display_name': 'Mathew Berg', 'link': 'https://stackoverflow.com/users/973651/mathew-berg'}",False,1,1669410741,1669410741,74577888,74577851,CC BY-SA 4.0,"<p>Can you store another piece of state to know if it's loaded or not?</p> <pre><code>const [gettingUserPermissions, setGettingUserPermissions] = useState(true)  useEffect(() => {   if(gettingUserPermissions){     return; // wait until fully loaded   }   console.log(userPermissions); //This is the output   if(!userPermissions){ redirect(...)} },[gettingUserPermissions, userPermissions, redirect]); </code></pre> <p>Not sure how you're calling the initial loading of getting user permissions but I'm sure this can be adapted.</p>",,,false
"{'account_id': 17175266, 'reputation': 4764, 'user_id': 12431576, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/iAlZL.jpg?s=256', 'display_name': 'Fiston Emmanuel', 'link': 'https://stackoverflow.com/users/12431576/fiston-emmanuel'}",False,0,1669457281,1669457281,74581259,74577782,CC BY-SA 4.0,"<p>Starting from November 4th, 2022. React team at Facebook has made some changes that cause build failures on Android.</p> <p>A quick fix for you is updating the react native version to <code>0.67.5</code></p> <p>You can explore the in-depth description of the issue and published  patches per react-native version - <a href=""https://github.com/facebook/react-native/issues/35210"" rel=""nofollow noreferrer"">https://github.com/facebook/react-native/issues/35210</a></p>",,,false
"{'account_id': 10723443, 'reputation': 131, 'user_id': 7891786, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/6dxNW.png?s=256', 'display_name': 'dermeck', 'link': 'https://stackoverflow.com/users/7891786/dermeck'}",True,0,1669447153,1669447153,74580414,74577674,CC BY-SA 4.0,"<p>Maybe this solves your problem <code>return {...state, ...addedAction }</code>.</p> <p>And I'm not sure but I think this may also work:</p> <pre><code>case ""ADD_ACTION"":     return Dataformatter(state, action.actionData); </code></pre>",,,false
"{'account_id': 3188674, 'reputation': 561, 'user_id': 2693576, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/0EjNk.jpg?s=256', 'display_name': 'Sudhanshu Shekhar', 'link': 'https://stackoverflow.com/users/2693576/sudhanshu-shekhar'}",False,1,1700380914,1700380914,77510054,74577652,CC BY-SA 4.0,"<p>adsByGoogle has a property named ""loaded"" which is true when the ads are already loaded in the  element. To resolve the issue a quick check for the loaded property before pushing would resolve the issue.</p> <p>It worked by my nextjs app.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>if (adsbygoogle && !adsbygoogle.loaded)       (adsbygoogle = (window as any).adsbygoogle || []).push({});</code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 22145526, 'reputation': 604, 'user_id': 16394846, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5d6ef554b1aa5eca5b5337d0f6ddbc88?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'jacktim', 'link': 'https://stackoverflow.com/users/16394846/jacktim'}",False,2,1673013080,1673013080,75031807,74577652,CC BY-SA 4.0,"<p>I believe I have found the solution, ReactStrict Mode causes components to render twice. Thus on the first render it inserts an ad into the ins tag and then on the second attempt its already full.</p> <p>Solution - Remove React.StrictMode from <code>index.js</code></p> <p>Replace:</p> <pre><code>root.render(   <React.StrictMode>     <App/>   </React.StrictMode> ); </code></pre> <p>With:</p> <pre><code>root.render(   <App/> ); </code></pre>",,,false
"{'account_id': 8293468, 'reputation': 26, 'user_id': 6234344, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/41a188e638e2f2037f6669bdb334dea2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Baptiste Knacky', 'link': 'https://stackoverflow.com/users/6234344/baptiste-knacky'}",True,1,1669407242,1669407242,74577522,74577458,CC BY-SA 4.0,"<p>The lifecycle is the following:</p> <ol> <li>useState is set first with undefined for <code>userInProgressTasks</code></li> <li>render</li> <li>useEffect</li> </ol> <p>That's why it asks you to safeguard values with ? because they can be undefined I'd suggest always initializing your state</p> <pre><code>  const [userInProgressTasks, setUserInProgressTasks] = useState([]); </code></pre>",,,false
"{'account_id': 19583622, 'reputation': 331, 'user_id': 19368995, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GgIVegzCd-sPlvP8v7QmvF6gaF20pfLfxMG3hwjKw=k-s256', 'display_name': 'Ahmad Alfan', 'link': 'https://stackoverflow.com/users/19368995/ahmad-alfan'}",False,0,1669549610,1669549610,74589742,74577444,CC BY-SA 4.0,"<p>In many cases <code>.test()</code> would work (<a href=""https://github.com/jquense/yup#schematestname-string-message-string--function--any-test-function-schema"" rel=""nofollow noreferrer"">read the docs here</a>).</p> <p>This is the example to solve the problem:</p> <pre class=""lang-js prettyprint-override""><code>import * as yup from 'yup';  export type FormValues = {   promotionalCode: string;   requirePromotionalCode: boolean; };  export const validationSchema = yup.object().shape({   requirePromotionalCode: yup.boolean(),   promotionalCode: yup.string().test(     'requirePromotionalCode',     'Please, enter a coupon',     (value, context) => context.requirePromotionalCode && !!value   ), }); </code></pre> <p>Things to note, <code>.test()</code> expects the value <code>true</code> to pass the 'test', so the return value should be true when the <code>requirePromotionalCode</code> is true and promotionalCode <code>value</code> is not empty.</p> <p>Otherwise, the error message in the second argument would be thrown.</p> <p>Hope it helps!</p>",,,false
"{'account_id': 7381927, 'reputation': 3137, 'user_id': 5618326, 'user_type': 'registered', 'accept_rate': 48, 'profile_image': 'https://i.sstatic.net/iXxLF.jpg?s=256', 'display_name': 'Mile MijatoviÄ', 'link': 'https://stackoverflow.com/users/5618326/mile-mijatovi%c4%87'}",False,0,1669409296,1669409296,74577722,74577444,CC BY-SA 4.0,"<p>To make Yup.when work properly, you would have to add promotionalCode and and requirePromotionalCode to initialValues and to your Yup schema shape.</p> <p>In general, when using validationSchema, it is best practices to ensure that all of you form's fields have initial values so that Yup can see them immediately.</p> <p>The result would look like:</p> <p><Formik initialValues={{ promotionalCode : '', requirePromotionalCode: false }} validationSchema={Yup.object().shape({ ...</p>",,,false
"{'account_id': 14314175, 'reputation': 1186, 'user_id': 10339463, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-s8JXptmlu_I/AAAAAAAAAAI/AAAAAAAAADY/2dDZ8SLqlas/photo.jpg?sz=256', 'display_name': 'Alex Yepes', 'link': 'https://stackoverflow.com/users/10339463/alex-yepes'}",False,0,1669410521,1669406505,74577424,74577254,CC BY-SA 4.0,"<p>Just add the path directly to the prop value</p> <pre><code><Skill    imageSource={""./images/skill-logos/html.png""}    proficiency=""80""  /> </code></pre>",1669410521.0,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",False,0,1669405935,1669405935,74577366,74577254,CC BY-SA 4.0,"<p>When you want to use an image from public directory, you should not use <strong>import</strong>.</p> <p>Instead, you should do this:</p> <pre class=""lang-js prettyprint-override""><code>import React from 'react'; import Skill from './Skill';  const HtmlLogo = process.env.PUBLIC_URL + ""/image/skill-logos/html.png"";  function Skills({}: Props) {   return (     <div>         <h3>Skills</h3>         <h3>Hover over a skill for current proficiency</h3>         <div>             <Skill                imageSource={HtmlLogo}                proficiency=""80""             />         </div>     </div>   ); };   export default Skills; </code></pre> <p>Read more <a href=""https://www.geeksforgeeks.org/how-to-use-files-in-public-folder-in-reactjs/"" rel=""nofollow noreferrer"">here</a>.</p>",,,false
"{'account_id': 7676278, 'reputation': 1938, 'user_id': 5817056, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/cb13ae269aa49d343fe552148ec19d07?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Talgat Saribayev', 'link': 'https://stackoverflow.com/users/5817056/talgat-saribayev'}",False,3,1669658073,1669648378,74602663,74577147,CC BY-SA 4.0,"<p>You can use <a href=""https://storybook.js.org/docs/react/writing-stories/decorators"" rel=""nofollow noreferrer"">decorators</a> to set global view and se</p> <p>Like <a href=""https://codesandbox.io/s/wizardly-dust-vv3w2n"" rel=""nofollow noreferrer"">here</a></p> <pre class=""lang-js prettyprint-override""><code>import { useEffect } from ""react""; import ""./preview.css"";  enum MyTheme {   Light = ""light"",   Dark = ""dark"",   Tomato = ""tomato"" }  export const globalTypes = {   theme: {     name: ""Theme"",     description: ""Global theme"",     defaultValue: MyTheme.Light,     toolbar: {       icon: ""mirror"",       items: [         {           title: ""light"",           value: MyTheme.Light         },         { title: ""dark"", value: MyTheme.Dark },         { title: ""tomato"", value: MyTheme.Tomato }       ],       showName: true,       dynamicTitle: true     }   } };  const clearStyles = (element: HTMLElement) => {   for (const className of Object.values(MyTheme)) {     element.classList.remove(className);   } };  const applyStyle = (element: HTMLElement, className: string) => {   element.classList.add(className); };  const WithThemeProvider = (Story, context) => {   useEffect(() => {     const body = window.document.body;     clearStyles(body);     applyStyle(body, context.globals.theme);     return () => {       clearStyles(body);     };   }, [context.globals.theme]);    return <Story />; }; export const decorators = [WithThemeProvider]; </code></pre> <p>I know it might feel ""dirty"" to work directly with body. But it is suggested way for instance <a href=""https://storybook.js.org/tutorials/create-an-addon/react/en/decorators/"" rel=""nofollow noreferrer"">addons decorator</a>.</p>",1669658073.0,,false
"{'account_id': 2077268, 'reputation': 5943, 'user_id': 4088472, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://i.sstatic.net/VeFHT.jpg?s=256', 'display_name': 'Slava Knyazev', 'link': 'https://stackoverflow.com/users/4088472/slava-knyazev'}",True,0,1669405180,1669405180,74577270,74577128,CC BY-SA 4.0,<p>Your <code>loading</code> and <code>data</code> might be out of sync during a render. Update your ternary condition to</p> <pre><code>{loading || !data} ? ( </code></pre>,,,false
"{'account_id': 8496704, 'reputation': 844, 'user_id': 6371094, 'user_type': 'registered', 'accept_rate': 67, 'profile_image': 'https://i.sstatic.net/ktTVE.jpg?s=256', 'display_name': 'Erhan YaÅar', 'link': 'https://stackoverflow.com/users/6371094/erhan-ya%c5%9far'}",True,1,1669585372,1669584763,74593943,74577022,CC BY-SA 4.0,"<p>The error tells that youâre trying to give reference to the functional componentâs itself via using <a href=""https://reactjs.org/docs/hooks-reference.html#useref"" rel=""nofollow noreferrer"">useRef</a>.</p> <p>In order to give reference to a functional component, it should be implemented via <a href=""https://reactjs.org/docs/forwarding-refs.html"" rel=""nofollow noreferrer"">forwardRef</a> instead.</p> <p>Other than not being able to see whatâs implemented as a code on your end, the error also tells you to take a look at render function of â<strong>Home</strong>â component, since you used a reference for the input component you shared above under â<strong>./components/input.tsx</strong>â.</p> <p>I can add how to wrap your component or make an edit to the sandbox if you provide but, thereâs more likely for you to get an error of not following a naming convention for React. As per stated within <a href=""https://reactjs.org/docs/components-and-props.html#rendering-a-component"" rel=""nofollow noreferrer"">React documentation</a>;</p> <p><em>Always start component names with a capital letter</em></p> <p>** That means as per the component name Input, you should name your file as Input.tsx</p>",1669585372.0,,false
"{'account_id': 17567156, 'reputation': 3020, 'user_id': 12743692, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jG5eJ.png?s=256', 'display_name': 'dreambold', 'link': 'https://stackoverflow.com/users/12743692/dreambold'}",True,0,1669403531,1669403531,74577081,74576962,CC BY-SA 4.0,"<p>You can use <code>useContext</code> to implement your idea. Here's the live demo for <code>useContext</code></p> <p><a href=""https://codesandbox.io/s/hardcore-borg-eox8qp?file=/src/App.js"" rel=""nofollow noreferrer"">https://codesandbox.io/s/hardcore-borg-eox8qp?file=/src/App.js</a></p>",,,false
"{'account_id': 25806091, 'reputation': 1, 'user_id': 19547606, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/6PZ0T.jpg?s=256', 'display_name': 'Abhishek Chandrasenan', 'link': 'https://stackoverflow.com/users/19547606/abhishek-chandrasenan'}",False,-3,1669402408,1669402408,74576934,74576820,CC BY-SA 4.0,"<blockquote> <p>My intention is to run some code whenever the state updates, inside of a useEffect hook,</p> </blockquote> <p>This can be done by passing downn the state in the dependecy array of useEffect.</p> <pre><code>const [nameArray, setNameArray] = useState([]);  useEffect(() => { // things you want to do },[nameArray]); </code></pre>",,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",True,1,1669402127,1669402127,74576893,74576820,CC BY-SA 4.0,"<p>Yes you can but if the indexes are not changed.</p> <p>You can hold your previous state and in your useEffect, iterate through your new array and check if the element at index i is equal to the corresponding element in previous state or not:</p> <pre class=""lang-js prettyprint-override""><code>const [myArray, setMyArray] = useState([]); const [myPreviousArray, setMyPreviousArray] = useState([]);  // Assume we have a function that updates the state const handleArrayDataChange = (newValue) => {   setMyPreviousArray([...myArray]);   setMyArray(newValue); }  useEffect(() => {   myArray.forEach((item, index) => {    if(JSON.stringify(item) !== JSON.stringify(myPreviousArray[index])) {     // The item is updated    }   }); }, [myArray]); </code></pre>",,,false
"{'account_id': 308139, 'reputation': 11735, 'user_id': 619830, 'user_type': 'registered', 'accept_rate': 75, 'profile_image': 'https://www.gravatar.com/avatar/f4d00b0a82e9307b1d68b29867fee4e5?s=256&d=identicon&r=PG', 'display_name': 'ch4mp', 'link': 'https://stackoverflow.com/users/619830/ch4mp'}",True,0,1669417514,1669402594,74576959,74576748,CC BY-SA 4.0,"<p>You should use an OAuth2 / OIDC client library to handle login and token management in your React app: get authorization code, exchange code for tokens, handle tokens refreshing and last authorize requests (add access-token as Authorization header).</p> <p>Spring applications with <code>@RestControllers</code> are resource-servers. See <a href=""https://github.com/ch4mpy/spring-addons/tree/master/samples/tutorials"" rel=""nofollow noreferrer"">those tutorials</a> to configure security.</p> <p>Be aware that using Google identities in your resource-server might require to configure it with introspection (rather than JWT decoder). This has serious performance impact and is a little touchy (introspection endpoint is not standard and you'll have to provide a custom introspector in security conf). You should consider using an intermediate authorization-server capable of federating Google identities. Many OIDC solutions include ""social login"" which would allow you to consume Google identities (as well as Facebook, Twitter, Github, etc.) and also create accounts for users without a Google account. Keycloak is a famous on premise solution but you can also find SaaS like Auth0, Amazon Cognito and many others.</p>",1669417514.0,,false
"{'account_id': 24651991, 'reputation': 203, 'user_id': 18549005, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJw6JxSzl7RTruBAFzZDC4nbeGsG5gAPjlauH_8p=k-s256', 'display_name': 'Hadi Zouhbi', 'link': 'https://stackoverflow.com/users/18549005/hadi-zouhbi'}",True,2,1669401983,1669401983,74576876,74576738,CC BY-SA 4.0,"<p>I was able to fix it. Basically the uri in the config was ""/auth/facebook/callback"" and This uri was not included under valid Oauth Redirect URLs so i needed to add that in the valid Oauth Redirect URLs section like so:</p> <p><a href=""https://crop-disease-backend.herokuapp.com/auth/facebook/callback"" rel=""nofollow noreferrer"">https://crop-disease-backend.herokuapp.com/auth/facebook/callback</a></p> <p>Now it works like a charm.</p>",,,false
"{'account_id': 9615381, 'reputation': 2374, 'user_id': 7138366, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/6HxROj5B.jpg?s=256', 'display_name': 'Marko Savic', 'link': 'https://stackoverflow.com/users/7138366/marko-savic'}",False,2,1669973302,1669973302,74653482,74576718,CC BY-SA 4.0,"<p>You have to initialize icons in the root of your App:</p> <pre class=""lang-js prettyprint-override""><code>import { initializeIcons } from '@fluentui/font-icons-mdl2';  initializeIcons(); </code></pre> <p>More info <a href=""https://developer.microsoft.com/en-us/fluentui#/styles/web/icons"" rel=""nofollow noreferrer"">here.</a></p>",,,false
"{'account_id': 23410407, 'reputation': 100, 'user_id': 17472207, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/612ef5f856ea826277795ea882166c1a?s=256&d=identicon&r=PG', 'display_name': 'Marlon', 'link': 'https://stackoverflow.com/users/17472207/marlon'}",True,2,1669584588,1669583800,74593859,74576675,CC BY-SA 4.0,<p>use <code>onPointerEnter</code> instead of <code>onClick</code></p>,1669584588.0,,false
"{'account_id': 2432151, 'reputation': 1731, 'user_id': 2122822, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RNpbU.jpg?s=256', 'display_name': 'Azzy', 'link': 'https://stackoverflow.com/users/2122822/azzy'}",True,1,1669407095,1669407095,74577502,74576641,CC BY-SA 4.0,"<p>can this work</p> <pre><code>  async componentDidMount() {     try {         const res = await ReviewerService.getReviewers();         // got the data        const reviewers = res.data;         // not parse the responses for each reviewer        const mappedReviewers = reviewers?.map(reviewer => {          try {                  const parsedResponses = JSON.parse(reviewer.responses)                  // do you need to convert parsedResponses to an array ??                 return {                  ...reviewer,                  responses: parsedResponses                }            } catch(error) {                  return {                  ...reviewer,                  responses: [] //                }            }           });                 this.setState({ reviewers: mappedReviewers})            } catch (error) {        // log errors       }     }     </code></pre> <p>Hope this helps you to sort out the issue</p>",,,false
"{'account_id': 4151614, 'reputation': 515, 'user_id': 3403908, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/bd3fb9dd7d0647850e4957d72045c2f1?s=256&d=identicon&r=PG', 'display_name': 'Calixto', 'link': 'https://stackoverflow.com/users/3403908/calixto'}",False,1,1669405189,1669405189,74577273,74576641,CC BY-SA 4.0,"<p>I think that you array returned by</p> <blockquote> <p>ReviewerService.getReviewers()</p> </blockquote> <p>should be in json format, treated or parsed, before, setted in setState:</p> <pre><code>data = [ {id: 1, firstName: 'John', lastName: 'Doe', email: 'johndoe@aol.com', responses: '{""q1"":""yes"",""q2"":""no"",""q3"":""yes"",""rating"":4}'}         ,{id: 2, firstName: 'bob', lastName: 'jefferson', email: 'bob@aol.com', responses: '{""q1"":""bob"",""q2"":""yes"",""q3"":""yes"",""rating"":5}'} ]; </code></pre> <p>Then you do this, putting array in a json treated object format</p> <pre><code>async componentDidMount() { await ReviewerService.getReviewers().then((res) => {   this.setState({ reviewers: res.data }); }); </code></pre> <p>When you do:</p> <pre><code>this.setState({ reviewers: res.data }); </code></pre> <p>You area putting on this.state.reviewers, all list and all objects nested in.</p> <p>You could access this.state on this component like this method below:</p> <pre><code>getResponsesOfReviewersOnArrayByIndex = (index) => {     return this.state.reviewers[index].responses } </code></pre> <p>Or just in some method access,</p> <pre><code>this.state.reviewers[i].firstName </code></pre> <p>You can try this to understand better the JSON parse function:</p> <pre class=""lang-js prettyprint-override""><code>const reviewersData = '[{""name"":""neymar""}, {""name"":""junior""}]'; const reviewers = JSON.parse(reviewersData);  console.log(reviewers[0].name); </code></pre>  <p>In this <a href=""https://www.w3schools.com/jsref/jsref_parse_json.asp"" rel=""nofollow noreferrer"">W3Schools</a> to see more examples of JSON.parse()</p> <p>Hope this helps.</p>",,,false
"{'account_id': 18303859, 'reputation': 1, 'user_id': 13328059, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/4zU1U.jpg?s=256', 'display_name': 'Henry Chea', 'link': 'https://stackoverflow.com/users/13328059/henry-chea'}",False,0,1671730612,1671730612,74892021,74576485,CC BY-SA 4.0,"<p>If you'd like to use both you can set them to load based on the files in the parent dir. Add this under your for loop and remove <code>""denols""</code> from your <code>servers</code> map.</p> <pre><code>lspconfig.denols.setup {   root_dir = lspconfig.util.root_pattern(""deno.json"", ""deno.jsonc""),   on_attach = on_attach,   capabilities = capabilities } </code></pre> <p>If you want you can also do something similar for the typescript lsp (<code>tsserver</code>)</p> <pre><code>lspconfig.tsserver.setup{   on_attach = on_attach,   capabilities = capabilities,   root_dir = lspcofig.util.root_pattern(""package.json"", ""tsconfig.json"", ""jsconfig.json"") } </code></pre> <p>This should help resolve the conflicts when using both, just make sure that when you are using Deno you have a <code>deno.json</code> or <code>deno.jsonc</code> in the root dir for the lsp to work correctly.</p>",,,false
"{'account_id': 26259170, 'reputation': 51, 'user_id': 19930779, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/POoSi.png?s=256', 'display_name': 'Dylan Adam', 'link': 'https://stackoverflow.com/users/19930779/dylan-adam'}",False,1,1669467950,1669467950,74582420,74576485,CC BY-SA 4.0,"<p>I solved my problem, there was a conflict between tsserver and denols, I deactivated denols given that I am in a node project.</p> <pre class=""lang-lua prettyprint-override""><code>local on_attach = require(""plugins.configs.lspconfig"").on_attach local capabilities = require(""plugins.configs.lspconfig"").capabilities  local lspconfig = require ""lspconfig"" local servers = {   ""html"",   ""intelephense"",   ""solargraph"",   ""cssls"",   ""jsonls"",   ""tsserver"",   -- ""denols"",   ""tailwindcss"" }  for _, lsp in ipairs(servers) do   lspconfig[lsp].setup {     on_attach = on_attach,     capabilities = capabilities,   } end </code></pre>",,,false
"{'account_id': 26931715, 'reputation': 314, 'user_id': 20504019, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0yY2nT897Da6A7uTBchebCNCVHp_XeZiKIS2y3=k-s256', 'display_name': 'Jay F.', 'link': 'https://stackoverflow.com/users/20504019/jay-f'}",True,1,1669401473,1669401473,74576798,74576461,CC BY-SA 4.0,"<p>Separate function for add and remove would do the job.</p> <pre><code>function App() {     const data = [         { id: 1, name: ""Jay"", phone: ""1111111111"" },         { id: 2, name: ""Mike"", phone: ""2222222222"" },         { id: 3, name: ""Bob"", phone: ""3333333333"" },     ];      const [userData] = useState(data);     const [faveUsers, setFaveUsers] = useState([]);      const onClickHandleAdd = (user) => {         const newFaveUsers = [...faveUsers, user];         setFaveUsers(newFaveUsers);     };     const onClickHandleRemove = (user) => {         const newFaveUsers = faveUsers.filter((u) => u.id !== user.id);         setFaveUsers(newFaveUsers);     };      return (         <>             <Table                 data={userData}                 onClickHandler={onClickHandleAdd}                 buttonText=""Add""             />             <Table                 data={faveUsers}                 onClickHandler={onClickHandleRemove}                 buttonText=""Remove""             />         </>     ); } </code></pre>",,,false
"{'account_id': 26931715, 'reputation': 314, 'user_id': 20504019, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0yY2nT897Da6A7uTBchebCNCVHp_XeZiKIS2y3=k-s256', 'display_name': 'Jay F.', 'link': 'https://stackoverflow.com/users/20504019/jay-f'}",False,0,1669399576,1669399576,74576525,74576373,CC BY-SA 4.0,"<p>You may need to use React Portal. This will help you run your component outside the root and let the upload run while navigating elsewhere in your app. This is the article:</p> <p><a href=""https://reactjs.org/docs/portals.html"" rel=""nofollow noreferrer"">https://reactjs.org/docs/portals.html</a></p>",,,false
"{'account_id': 22425702, 'reputation': 4266, 'user_id': 16632344, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/aQbs8.jpg?s=256', 'display_name': 'monim', 'link': 'https://stackoverflow.com/users/16632344/monim'}",False,0,1669398329,1669398329,74576346,74576152,CC BY-SA 4.0,"<p>You can change your component like this :</p> <pre><code>import React, { useState, useEffect } from ""react""; import ""./SearchBarStyle.css""   const SearchBar= () => {      const [waterInfo, setWaterInfo] = useState( [         {title: ""About Water"", link:""https://en.wikipedia.org/wiki/Water""},         {title: ""Water (Molecule)"", link: ""https://en.wikipedia.org/wiki/Properties_of_water""},         {title: ""Water (Chemistry)"", link: ""https://pubchem.ncbi.nlm.nih.gov/compound/Water""}     ])      const [input, setInput] = useState("""")      const HandleInput = (event) => {         setInput(event.target.value)     }           useEffect(() => {       const waterInf = waterInfo.filter(wi => wi.title.toLowerCase().includes(input.toLowerCase()))       setWaterInfo(waterInf)     }, [input])     console.log(waterInfo)          return(         <div>                 <input type={""text""} value={input} onChange={HandleInput} placeholder=""About Water?"" className=""searchbar""/>             <ul className=""results"">                 {waterInfo.map((wI) => {                     return <li><a href={wI.link}target=""_blank"" className=""link"">{wI.title}</a></li>                                  })}             </ul>                      </div>     ) }  export default SearchBar </code></pre>",,,false
"{'account_id': 9283741, 'reputation': 159, 'user_id': 6894272, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/N7VQw.jpg?s=256', 'display_name': 'Tarmah', 'link': 'https://stackoverflow.com/users/6894272/tarmah'}",False,0,1669397989,1669397989,74576297,74576152,CC BY-SA 4.0,"<p>One approach can be to make use of a boolean variable which gets set based on the length of value and used inside a useEffect and eventually use the variable as a condition to render filtered results. Something like</p> <pre><code> const [renderResults, setRenderResults] = useState(false)   useEffect(() => {     if(input.length > whateverLengthYouWant) setRenderResults(true);     else setRenderResults(false);   },[input]); </code></pre> <p>And then using the variable inside return like</p> <pre><code>{renderResults && filterItems.map((wI) => {      return <li><a href={wI.link} target=""_blank"" className=""link"">{wI.title}</a></li>  })} </code></pre>",,,false
"{'account_id': 16978338, 'reputation': 160, 'user_id': 12281018, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/0bd3c48f1ee6e40eef0ba4c8fb7da34f?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'mukkumayc', 'link': 'https://stackoverflow.com/users/12281018/mukkumayc'}",True,2,1669459090,1669459090,74581450,74575928,CC BY-SA 4.0,"<p>I defined some types:</p> <pre class=""lang-ts prettyprint-override""><code>interface Param {   paramOrder: number;   paramInput: {     param: { field: string; value: string }[];   };   paramOutput: {     param: { field: string; value: string }[];   };   status: string; }  type Params = { paramList: Param[] }; </code></pre> <p>And here's code:</p> <pre class=""lang-ts prettyprint-override""><code>const updateParams = (   data: Record<string, string>, // formData   params: Params // old parameters ) => Object.entries(data).reduce(updateField, params);  // this function updates one field and returns new Params object function updateField(   { paramList }: Params,   [key, newValue]: [string, string] ): Params {   const [paramOrder, fieldToUpdate] = key.split(""|"");   return {     paramList: [ // here we define new paramList       ...paramList.map((param) =>         // if param.paramOrder matches paramOrder of the field we         // want to update, return new Param with updated field,         // otherwise return old Param         param.paramOrder === parseInt(paramOrder)           ? {               paramOrder: param.paramOrder,               paramInput: {                 param: param.paramInput.param.map(({ field, value }) =>                   field === fieldToUpdate                     ? { field, value: newValue }                     : { field, value }                 )               },               paramOutput: {                 param: param.paramOutput.param.map(({ field, value }) =>                   field === fieldToUpdate                     ? { field, value: newValue }                     : { field, value }                 )               },               status: param.status             }           : param       )     ]   }; } </code></pre>",,,false
"{'account_id': 26097201, 'reputation': 86, 'user_id': 19793170, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b5dd0403d6c154a40386d4482cccab1a?s=256&d=identicon&r=PG', 'display_name': 'KMaster', 'link': 'https://stackoverflow.com/users/19793170/kmaster'}",False,0,1669504608,1669503677,74586243,74575835,CC BY-SA 4.0,"<p>I think you have to pass <code>Promise.all([fruitsColor(), fruitsType()]</code></p> <p><code>Promise.all</code> expects Promises and you are passing functions' references.</p> <p>So, try to add the <code>()</code> to both the functions. In this way the <code>promise.all</code> will catch the <code>error</code></p> <p>throw an error there to reach your goal</p> <pre><code>export const fruitsColor = async (): Promise<any> => {   const response = await fetch(`....`);   if (!response.ok) {     throw new Error('Error happened');   }   const data = await response.json();   return data; };  export const fruitsType = async (): Promise<any> => {   const response = await fetch(`....`);   if (!response.ok) {     throw new Error('Error happened');   }   const data = await response.json();   return data; };  export const getFruitsData = async (): Promise<any> => {   return await Promise.all([fruitsColor(), fruitsType()])     .then((values) => {       const results: FruitsStoreType = {         color: values[0],         type: values[1],       };       return results;     })     .catch(() => {       throw new Error('my own error');     }); }; </code></pre>",1669504608.0,,false
"{'account_id': 27022377, 'reputation': 99, 'user_id': 20580174, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/ao5Ac.jpg?s=256', 'display_name': 'Samuel Lee', 'link': 'https://stackoverflow.com/users/20580174/samuel-lee'}",False,1,1669396318,1669396318,74576045,74575773,CC BY-SA 4.0,"<p>You need to add function to onChange Param. I added the code example.</p> <pre><code>export default function App() {       const [name, setName] = useState(""""); // useState hook    // handle change event   const handleChange = (e) => {     e.preventDefault(); // prevent the default action     setName(e.target.value); // set name to e.target.value (event)   };    // render   return (     <div>       <Form>         <Form.Group>           <Form.Control             defaultValue={name}             type=""name""             onChange={handleChange}           ></Form.Control>         </Form.Group>       </Form>     </div>   ); } </code></pre>",,,false
"{'account_id': 25969072, 'reputation': 1, 'user_id': 19684597, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/g8fwD.jpg?s=256', 'display_name': 'Sadman Sakib', 'link': 'https://stackoverflow.com/users/19684597/sadman-sakib'}",False,0,1669395932,1669395174,74575837,74575773,CC BY-SA 4.0,"<p>Replace <code>defaultValue</code> with <code>value</code></p> <p>and use the useEffect in this way <a href=""https://i.sstatic.net/L3C0X.png"" rel=""nofollow noreferrer"">React useState</a></p>",1669395932.0,,false
"{'account_id': 9283741, 'reputation': 159, 'user_id': 6894272, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/N7VQw.jpg?s=256', 'display_name': 'Tarmah', 'link': 'https://stackoverflow.com/users/6894272/tarmah'}",True,1,1669395710,1669395710,74575927,74575773,CC BY-SA 4.0,<p>Maybe you need to call the useEffect only on the component first render by adding [] at the dependency array of the useEffect</p>,,,false
"{'account_id': 195407, 'reputation': 33177, 'user_id': 438273, 'user_type': 'registered', 'accept_rate': 70, 'profile_image': 'https://www.gravatar.com/avatar/88ad8bc15f1a9e787531e9b20340973a?s=256&d=identicon&r=PG', 'display_name': 'jsejcksn', 'link': 'https://stackoverflow.com/users/438273/jsejcksn'}",False,1,1669395303,1669395303,74575863,74575680,CC BY-SA 4.0,"<p>If your component always attempts to render <strong>at least 2</strong> child nodes, then you should explicitly type the <code>children</code> parameter that way:</p> <p><a href=""https://www.typescriptlang.org/play?noUncheckedIndexedAccess=true&target=99&jsx=4&useUnknownInCatchVariables=true&exactOptionalPropertyTypes=true&ssl=15&ssc=1&pln=25&pc=2#code/JYWwDg9gTgLgBAbxgTzAUzgJTQQwMYwCiANmiGgHYwA0cK6WuBAchACZoC+cAZlBCDgByKExhCA3ACgpPAK4UCwCBTgBZZAGEBkCpRgAKMPzABnAFyIpcOHgAWwYm1EVLAbWz4YrDrU8t2NFoAOlDRHDYVYmRGLx80NwBdROlOAEpLfyJSciorG1EYOShVAB4APmsbOFDgqpsEYwgzYPtHZ0o3AAZEznqa0P7Gk1NWhycXNwBGXv7aqtKAenLUmXlFGGVVAEEwMDgDDNiCEjJ9fLhC4tUDftKNbXAVfXKERYAqfrgAP1+--++VQAKqgMEIELZxh1XHAkhI4JwhHBgKY4BQIPAcKZTMAAOYUHAAI1IdAgdFBwghbQmlHcWXifjEDIGwXpgSSKQRQjq1TgIPQqIgPDgTXQsBiQmp0KROFEyMUOhwm2JaB5vL5FKESSRKLRGLgWJx+KJJJgZPoYI8TMCjLiNpZbI4HO5X2qAGUIMU8Bg7Fi4F04GgcvoDKY0nBCXJ4DBZbi0PBRABHOTAUSogBMwQM6YAzOn0+H3os+rylg8dM8qJUbGlVkA"" rel=""nofollow noreferrer"">TS Playground</a></p> <pre class=""lang-ts prettyprint-override""><code>import {type ReactElement, type ReactNode} from 'react';  function MyComponent(props: {   children: [ReactNode, ReactNode, ...readonly ReactNode[]]; }): ReactElement {   return <>     ...     {props.children[0]}     ...     {props.children[1]}     ...   </>; } </code></pre> <p>By doing so, TypeScript will emit a compiler error diagnostic if you don't provide at least two children:</p> <pre class=""lang-ts prettyprint-override""><code>function App (): ReactElement {   return (     <MyComponent>{/*      ~~~~~~~~~~~   Type '{ children: []; }' is not assignable to type '{ children: [ReactNode, ReactNode, ...ReactNode[]]; }'.     Types of property 'children' are incompatible.       Type '[]' is not assignable to type '[ReactNode, ReactNode, ...ReactNode[]]'.         Source has 0 element(s) but target requires 2.(2322) */}     </MyComponent>   ); } </code></pre> <p>Similarly, when you only provide one child node:</p> <p><a href=""https://www.typescriptlang.org/play?noUncheckedIndexedAccess=true&target=99&jsx=4&useUnknownInCatchVariables=true&exactOptionalPropertyTypes=true#code/JYWwDg9gTgLgBAbxgTzAUzgJTQQwMYwCiANmiGgHYwA0cK6WuBAchACZoC+cAZlBCDgByKExhCA3ACgpPAK4UCwCBTgBZZAGEBkCpRgAKMPzABnAFyIpcOHgAWwYm1EVLAbWz4YrDrU8t2NFoAOlDRHDYVYmRGLx80NwBdROlOAEpLfyJSciorG1EYOShVAB4APmsbOFDgqpsEYwgzYPtHZ0o3AAZEznqa0P7Gk1NWhycXNwBGXv7aqtKAenLUmXlFGGVVAEEwMDgDDNiCEjJ9fLhC4tUDftKNbXAVfXKERYAqfrgAP1+--++-QAKg5THAAFIAZQAGnQcABzIRgoRtCaUIRwJr7NAAD3QBDB9AwQg8YnifjJgRCoSy8SSiSE-QA7g57Jc0ABHOTAURgkByYibMCkWzjDoUWgAIzk8CiMRwcFMwAo8JFqLYcCZODBTQAbsAOGxggYAEwAdgALABWNJwd6LPrVaqlNjAXXlJau913RYPHTPKiVGxpVZAA"" rel=""nofollow noreferrer"">TS Playground</a></p> <pre class=""lang-ts prettyprint-override""><code>function App (): ReactElement {   return (     <MyComponent>{/*      ~~~~~~~~~~~     This JSX tag's 'children' prop expects type '[ReactNode, ReactNode, ...ReactNode[]]'     which requires multiple children, but only a single child was provided.(2745) */}       <div></div>     </MyComponent>   ); } </code></pre> <p>But as soon as you provide at least two, the diagnostic disappears:</p> <p><a href=""https://www.typescriptlang.org/play?noUncheckedIndexedAccess=true&target=99&jsx=4&useUnknownInCatchVariables=true&exactOptionalPropertyTypes=true#code/JYWwDg9gTgLgBAbxgTzAUzgJTQQwMYwCiANmiGgHYwA0cK6WuBAchACZoC+cAZlBCDgByKExhCA3ACgpPAK4UCwCBTgBZZAGEBkCpRgAKMPzABnAFyIpcOHgAWwYm1EVLAbWz4YrDrU8t2NFoAOlDRHDYVYmRGLx80NwBdROlOAEpLfyJSciorG1EYOShVAB4APmsbOFDgqpsEYwgzYPtHZ0o3AAZEznqa0P7Gk1NWhycXNwBGXv7aqtKAenLUmXlFGGVVAEEwMDgDDNiCEjJ9fLhC4tUDftKNbXAVfUrq6tK2YAA3cqXPn-6Ng+31+i3+r3eiweOmeVAhaVWQA"" rel=""nofollow noreferrer"">TS Playground</a></p> <pre class=""lang-ts prettyprint-override""><code>function App (): ReactElement {   return (     <MyComponent>       <div></div>       <div></div>     </MyComponent>   ); } </code></pre>",,,false
"{'account_id': 1819975, 'reputation': 11642, 'user_id': 1654241, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/pZAh9.jpg?s=256', 'display_name': 'Valentin', 'link': 'https://stackoverflow.com/users/1654241/valentin'}",True,1,1669395032,1669395032,74575818,74575680,CC BY-SA 4.0,"<p>You need to tell Typescript that your component needs multiple children by putting the array brackets:</p> <pre class=""lang-js prettyprint-override""><code>function MyComponent(props: { children: React.ReactNode[] }) { // ... } </code></pre> <p>If your component accepts exactly 2 children, a <a href=""https://www.typescriptlang.org/docs/handbook/2/objects.html#tuple-types"" rel=""nofollow noreferrer"">tuple type</a> would be preferable so that Typescript will enforce having 2 children:</p> <pre class=""lang-js prettyprint-override""><code>function MyComponent(props: { children: [React.ReactNode, React.ReactNode] }) { // ... } </code></pre> <p>If your component accepts 2 or more children, you can specify a tuple with a rest element:</p> <pre class=""lang-js prettyprint-override""><code>function MyComponent(props: { children: [React.ReactNode, ...React.ReactNode[]] }) { // ... } </code></pre>",,,false
"{'account_id': 12660537, 'reputation': 15410, 'user_id': 9201587, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/paIso.png?s=256', 'display_name': 'Nick Vu', 'link': 'https://stackoverflow.com/users/9201587/nick-vu'}",False,1,1669394985,1669394985,74575808,74575680,CC BY-SA 4.0,"<p>You can use <code>ReactNode[]</code> instead of <code>ReactNode</code></p> <pre><code>function MyComponent(props: { children: React.ReactNode[] }) {   return <>     {props.children[0]}     {props.children[1]}   </>; }  function TestComponent() {   return <MyComponent>     <span>Element 1</span>     <span>Element 2</span>     {'string test'}     {2}     {true}   </MyComponent> } </code></pre> <p><a href=""https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABAWQJ4GE4FsAOCCmYUAFDgE5w4DOAXIgN6IQAWMANgCZmF0BK%20AQ2gA6fkKgA5OB3wBtALqIAvgEoGAWABQiRNyggySADwA%20LTp31ylKsJbsuhWQAZ5S8xasVqd1p25gsgCMbh5GAPQmANxa7ppaoJCwCIgAKvhUUJi4BETEavQeegbGaNl4YIRQZtoWRlQ4AmAmAKJs%20FhViEERDU01Foj1jc1tHV0ATL0jA54A5JlkMGAA5ohQGVBzcYP0EzueUGQg%20AcRZdgVVTVKQA"" rel=""nofollow noreferrer"">Playground</a></p>",,,false
"{'account_id': 9283741, 'reputation': 159, 'user_id': 6894272, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/N7VQw.jpg?s=256', 'display_name': 'Tarmah', 'link': 'https://stackoverflow.com/users/6894272/tarmah'}",True,-1,1669394439,1669394439,74575716,74575675,CC BY-SA 4.0,"<p>There must be a route for the home page of the app or a default route for all the unmentioned routes like ""*"".</p> <p>Something like</p> <pre><code><Router>   <Routes>     <Route path=""/"" element={<Home />} />     <Route component={LandingPage} exact path=""/landing-page""/>     <Route component={Page} exact path=""/page"" />     <Route path=""*"" element={<p>Path not resolved</p>} />   </Routes> </Router> </code></pre>",,,false
"{'account_id': 10723443, 'reputation': 131, 'user_id': 7891786, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/6dxNW.png?s=256', 'display_name': 'dermeck', 'link': 'https://stackoverflow.com/users/7891786/dermeck'}",False,1,1669401396,1669401396,74576789,74575674,CC BY-SA 4.0,"<p>In the older version of react-hook-form you can accomplish that by setting <code>onChange={([, data]) => data}</code> on the <code>Controller</code>.</p> <p>Here you can find examples for old and new: <a href=""https://github.com/react-hook-form/react-hook-form/discussions/3365#discussioncomment-122808"" rel=""nofollow noreferrer"">https://github.com/react-hook-form/react-hook-form/discussions/3365#discussioncomment-122808</a></p>",,,false
"{'account_id': 15519980, 'reputation': 1584, 'user_id': 11196441, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c97a5db1d6ddca883b712f94af110d25?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Disco', 'link': 'https://stackoverflow.com/users/11196441/disco'}",True,1,1669398060,1669398060,74576305,74575674,CC BY-SA 4.0,"<p>Any reason that you use such an old version of react-hook-form?</p> <p>I would recommend updating to a later version and then use the render prop on Controller.</p> <pre class=""lang-js prettyprint-override""><code><Controller   name={country}   render={(     { field: { onChange, value, ref }, fieldState: { error } },     ...other   ) => (     <Autocomplete       options={options}       getOptionLabel={(option) => option.name}       getOptionSelected={(option, value) => option._id === value._id}       onChange={(event, newValue, reason) =>         onChange(reason === ""clear"" ? null : newValue)       }       renderInput={(params) => <TextField {...params} label=""Country"" />}     />   )} />; </code></pre>",,,false
"{'account_id': 26736011, 'reputation': 23, 'user_id': 20337580, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/4ec7046f4d0185548e39b08ec4c9875c?s=256&d=identicon&r=PG', 'display_name': 'Gjin Kurtishi', 'link': 'https://stackoverflow.com/users/20337580/gjin-kurtishi'}",False,0,1669818415,1669398730,74576422,74575519,CC BY-SA 4.0,"<p>In order to install ReactJS on MacOS, you must first have NodeJS and NPM installed.</p> <p>The only way you can install NodeJS is through their official website: <a href=""https://nodejs.org/"" rel=""nofollow noreferrer"">https://nodejs.org/</a>. Installing NodeJS will also automatically download NPM on your machine. The you can check if the installation was successful:</p> <p>âââ node âversion npm âversion âââ</p> <p>If its successful you should get the version.</p> <p>Than to install react you run this command:</p> <p>âââ npm install --save react react-dom âââ</p> <p>And to create the project:</p> <p>âââ npm create-react-app nameOfProject ,,,</p>",1669818415.0,,false
"{'account_id': 24193665, 'reputation': 420, 'user_id': 18152552, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5a7ee3c1d853a76925df094686fb1fe6?s=256&d=identicon&r=PG', 'display_name': 'niltonxp', 'link': 'https://stackoverflow.com/users/18152552/niltonxp'}",False,0,1685266520,1682422298,76100681,74575427,CC BY-SA 4.0,"<p>An example using MUI version 5+</p> <pre class=""lang-js prettyprint-override""><code>export const PaperContainer = styled(Paper, {   shouldForwardProp: prop => prop !== 'gridArea',   name: 'PaperContainer', })<{ gridArea: GridArea }>(({ theme, gridArea }) => ({   gridArea,   padding: theme.spacing(6),   overflow: 'hidden', })); </code></pre>",1685266520.0,,false
"{'account_id': 3836295, 'reputation': 13172, 'user_id': 3180489, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/wUvWV.jpg?s=256', 'display_name': 'Steve G', 'link': 'https://stackoverflow.com/users/3180489/steve-g'}",True,4,1669401493,1669401493,74576803,74575427,CC BY-SA 4.0,"<p>The issue is that MUI is forwarding the <code>openFilterDrawer</code> prop that you're passing to the underlying <code>div</code>, and since <code>openFilterDrawer</code> is not a valid prop for <code>div</code>s, React is throwing that warning.</p> <p>To clear the warning, you should pass an object containing a <code>shouldForwardProps</code> function to filter the prop from the resulting <code>div</code>.  For example:</p> <pre><code>const ChipStyled = {   Container: styled(""div"", {     shouldForwardProp: (prop) => prop !== ""openFilterDrawer"" // <-- Here   })<ChipsContainerProps>(({ theme, openFilterDrawer }) => ({     //leaving out irrelevant theme code     ...(openFilterDrawer && {       transition: theme.transitions.create(""margin"", {         easing: theme.transitions.easing.easeOut,         duration: theme.transitions.duration.enteringScreen       }),       marginLeft: 0,       paddingLeft: ""0rem""     })   })) }; </code></pre>",,,false
"{'account_id': 25733886, 'reputation': 76, 'user_id': 19488997, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/646869536dbbca79bbd75b579bbf56cd?s=256&d=identicon&r=PG', 'display_name': 'Michael K', 'link': 'https://stackoverflow.com/users/19488997/michael-k'}",False,0,1669657839,1669657815,74604601,74575420,CC BY-SA 4.0,"<p>If you log <code>index</code> before that <code>saveObjects</code> call, is it uninitialized or can you see the methods in the console? This may help you track down what exactly the <code>index</code> variable is and why that method doesn't exist.</p> <pre class=""lang-js prettyprint-override""><code>console.log(index) </code></pre> <p>One thing to keep in mind if you want to save objects, you'll need a write key. I only mention this because it looks like you are using React and your write keys would be exposed in your application if anyone did some digging. If it's a non-public app it should be okay but just wanted to bring this up.</p> <p>Also, if you are just looking to browse that Index, you could always use it directly using the public credentials:</p> <pre><code>App Id: UJ5WYC0L7X API Key: 8ece23f8eb07cd25d40262a1764599b1 Index Name: Item_production </code></pre>",1669657839.0,,false
"{'account_id': 21485723, 'reputation': 26, 'user_id': 15832397, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJwUKb4kDITmyXBUkOUDB2qrXeplmHigt-efmkKx=k-s256', 'display_name': 'L&#233;on van de Klundert', 'link': 'https://stackoverflow.com/users/15832397/l%c3%a9on-van-de-klundert'}",True,1,1669390864,1669390864,74575053,74574939,CC BY-SA 4.0,<p>Have you tried using the <code>activeIndex</code> attribute for the Carousel element to conditionally render the description?</p> <p>You could get the index of the currently visible card by reading the <code>activeIndex</code> attribute and then check if the activeIndex === card index and render the corresponding description.</p> <p>Hope this helps</p>,,,false
"{'account_id': 8994421, 'reputation': 353, 'user_id': 6705349, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d24a2ca210490930063316fa3032a079?s=256&d=identicon&r=PG', 'display_name': 'Ivan Satsiuk', 'link': 'https://stackoverflow.com/users/6705349/ivan-satsiuk'}",True,-1,1669393139,1669393139,74575493,74574885,CC BY-SA 4.0,"<p>You cannot run all npm packages everywhere.</p> <p>You should use node.js javascript packages only on a server, it does not run in the browser. Those packages you want to run are supposed to run only on a server (or your local machine), not in the browser. They are supposed to have access to thinks like files, network, databases, etc.</p> <p>For this particular reason you cannot utilise them with React.</p> <p>React app is a client side javascript package, meaning it's supposed to run in a browser without an access to the OS stuff, like files, databases, etc.</p> <p>For React app to access DB, files, network or whatever, you need to have 2 separate projects. One that's running node.js (purely on server, or in terminal) and 2nd running React app. They would communicate using GET/POST network calls</p>",,,false
"{'account_id': 14229881, 'reputation': 31, 'user_id': 10651381, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/85c6fac960f369444751c71ef661a7e4?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Andranik', 'link': 'https://stackoverflow.com/users/10651381/andranik'}",True,1,1698649866,1698649866,77386749,74574760,CC BY-SA 4.0,<p>This was solved by creating a NativeModule that utilizes the iOS StoreKit Framework</p>,,,false
"{'account_id': 12058765, 'reputation': 403, 'user_id': 8818565, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/8f61da6304c452269913fbd44c231dcb?s=256&d=identicon&r=PG', 'display_name': 'putu eka mulyana', 'link': 'https://stackoverflow.com/users/8818565/putu-eka-mulyana'}",False,0,1669389389,1669389389,74574781,74574710,CC BY-SA 4.0,"<p>make sure parent component passing function <code>addPost</code></p> <pre class=""lang-js prettyprint-override""><code><MyPosts addPost={()=>{}} /> </code></pre>",,,false
"{'account_id': 22783439, 'reputation': 332, 'user_id': 16938995, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/4m8zC.png?s=256', 'display_name': 'Xiao Wang', 'link': 'https://stackoverflow.com/users/16938995/xiao-wang'}",True,0,1669773851,1669773851,74622128,74574702,CC BY-SA 4.0,"<p>I have checked your code and made updates to the file. First, there should be <code>ref</code> prop in the <code>AppCreatableSelect.jsx</code> Component.</p> <p>This is updated <code>AppCreatableSelect.jsx</code> Component code.</p> <pre><code>import React, { forwardRef } from ""react""; import { Controller } from ""react-hook-form""; import ReactSelect from ""react-select"";  const AppCreatableSelect = forwardRef(   (     {       control,       options,       fieldName,       defaultValue,       errors,       className,       selectClassList,       isSearchable = true,       isClearable = true     },     ref   ) => {     return (       <>         <Controller           name={fieldName}           className={`form-control ${className} ${             errors[fieldName] ? ""is-invalid"" : """"           }`}           control={control}           defaultValue={             options.length && options.find((row) => row.value === defaultValue)           }           selected={true}           render={({ field: { onChange, onBlur, name } }) => (             <ReactSelect               ref={ref}               isClearable={isClearable}               onBlur={onBlur} // notify when input is touched               inputRef={ref}               defaultValue={                 options.length &&                 options.find((row) => row.value.value === defaultValue)               }               onChange={onChange}               options={options}               className={selectClassList}               isSearchable={isSearchable}             />           )}         />       </>     );   } );  export default AppCreatableSelect;  </code></pre> <p>Here is the updated <code>App.js</code> Component code.</p> <pre><code>import ""./styles.css""; import AppCreatableSelect from ""./component/AppCreatableSelect""; import { useForm } from ""react-hook-form""; import { useEffect, useState, useRef } from ""react"";  export default function App() {   const [types, setTypes] = useState([]);   const [items, setItems] = useState([]);   const [colors, setColors] = useState([]);    const itemsRef = useRef();   const colorsRef = useRef();    const {     control,     watch,     formState: { errors }   } = useForm();    const watchType = watch(""types"");   const watchItems = watch(""items"");    useEffect(() => {     setTimeout(() => {       setTypes([         { label: ""Fruits"", value: ""fruits"" },         { label: ""Vegetables"", value: ""vegetables"" }       ]);     });   }, []);    useEffect(() => {     if (watchType) {       if (watchType.value === ""fruits"") {         setItems([           { label: ""Apple"", value: ""apple"" },           { label: ""Orange"", value: ""orange"" }         ]);         itemsRef.current.setValue({ label: ""Apple"", value: ""apple"" });       }       if (watchType.value === ""vegetables"") {         setItems([           { label: ""Cabbage"", value: ""cabbage"" },           { label: ""Cauliflower"", value: ""cauliflower"" }         ]);         itemsRef.current.setValue({ label: ""Cabbage"", value: ""cabbage"" });       }     }   }, [watchType]);    useEffect(() => {     if (watchItems) {       if (watchItems.value === ""apple"") {         setColors([           { label: ""Red Apple"", value: ""redApple"" },           { label: ""Green Apple"", value: ""greenApple"" }         ]);         colorsRef.current.setValue({ label: ""Red Apple"", value: ""redApple"" });       }       if (watchItems.value === ""orange"") {         setColors([           { label: ""Red Orange"", value: ""redOrange"" },           { label: ""Green Orange"", value: ""greenOrange"" }         ]);         colorsRef.current.setValue({ label: ""Red Orange"", value: ""redOrange"" });       }       if (watchItems.value === ""cabbage"") {         setColors([           { label: ""Red Cabbage"", value: ""redCabbage"" },           { label: ""Green Cabbage"", value: ""greenCabbage"" }         ]);         colorsRef.current.setValue({           label: ""Red Cabbage"",           value: ""redCabbage""         });       }       if (watchItems.value === ""cauliflower"") {         setColors([           { label: ""Red Cauliflower"", value: ""redCauliflower"" },           { label: ""Green Cauliflower"", value: ""greenCauliflower"" }         ]);         colorsRef.current.setValue({           label: ""Red Cauliflower"",           value: ""redCauliflower""         });       }     }   }, [watchItems]);    return (     <div className=""App"">       <AppCreatableSelect         control={control}         options={types}         fieldName=""types""         errors={errors}         isClearable={false}         defaultValue={types[0]}       />        <AppCreatableSelect         ref={itemsRef}         control={control}         options={items}         fieldName=""items""         errors={errors}         isClearable={false}         defaultValue={items[0]}       />        <AppCreatableSelect         ref={colorsRef}         control={control}         options={colors}         fieldName=""itemColor""         errors={errors}         isClearable={false}       />     </div>   ); }  </code></pre>",,,false
"{'account_id': 13151685, 'reputation': 1034, 'user_id': 9500119, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/8z5mX.jpg?s=256', 'display_name': 'Joel', 'link': 'https://stackoverflow.com/users/9500119/joel'}",True,1,1692808259,1692808259,76963282,74574685,CC BY-SA 4.0,"<p>For someone else is looking for a solution, I found a way forwarding the <code>drawRef</code> outside the <code>DrawControl</code> using <code>forwardRef</code>, <code>useImperativeHandle</code> and attaching that ref to my <code><DrawControl></code>.</p> <p>The working example bellow, and a complete solution on: <a href=""https://stackblitz.com/edit/vitejs-vite-bvutvb?file=src%2FDraw.tsx"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/vitejs-vite-bvutvb?file=src%2FDraw.tsx</a></p> <pre class=""lang-js prettyprint-override""><code>export const Draw = () => {   const { current: map } = useMap();   const drawRef = React.useRef<MapboxDraw>(null);    if (!map) {     return null;   }    React.useEffect(() => {     // it's ok here, drawRef is not undefined     console.log('useEffect drawRef when app is loading', drawRef);   }, [drawRef]);    const onCreateOrUpdate = React.useCallback(     (e: { features: Feature[] }) => {       // Here drawRef would not be undefined       console.log('drawRef under onCreateOrUpdate method', drawRef);     },     [drawRef]   );    return (     <DrawControl       ref={drawRef}       position=""top-right""       displayControlsDefault={false}       controls={{         polygon: true,         trash: true,       }}       defaultMode=""simple_select""       modes={{ ...MapboxDraw.modes, draw_rectangle: DrawRectangle }}       onCreate={onCreateOrUpdate}       onUpdate={onCreateOrUpdate}     />   ); }; </code></pre>",,,false
"{'account_id': 19255761, 'reputation': 907, 'user_id': 15119024, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/LyxLa.png?s=256', 'display_name': 'ClusterH', 'link': 'https://stackoverflow.com/users/15119024/clusterh'}",False,0,1669391731,1669391731,74575221,74574685,CC BY-SA 4.0,"<pre><code>const onCreateOrUpdate = React.useCallback((e: { features: Feature[] }) => {   // Here drawRef would not be undefined   console.log('drawRef under onCreateOrUpdate method', drawRef); }, [drawRef]); </code></pre>",,,false
"{'account_id': 72426, 'reputation': 594354, 'user_id': 209103, 'user_type': 'registered', 'accept_rate': 73, 'profile_image': 'https://www.gravatar.com/avatar/12d378e6a9788ab9c94bbafe242b82b4?s=256&d=identicon&r=PG', 'display_name': 'Frank van Puffelen', 'link': 'https://stackoverflow.com/users/209103/frank-van-puffelen'}",True,0,1669388781,1669388781,74574674,74574612,CC BY-SA 4.0,"<p>You need to call <code>updateListings</code> inside <code>then</code>, otherwise it will run before you modify the <code>defaultListings</code> array.</p> <p>So:</p> <pre><code>getDocs(colRef)   .then((snapshot) => {     snapshot.docs.forEach((doc) => {       defaultListings.push({ ...doc.data(), id: doc.id });     });     updateListings(defaultListings); // ð   })   .catch((err) => {     console.log(err.message);   }); </code></pre>",,"[{'tags': ['google-cloud-vision', 'google-cloud-run', 'firebase-in-app-messaging', 'google-cloud-instance-template', 'google-cloud-translate', 'cordova-plugin-firebasex', 'google-cloud-spanner', 'google-cloud-data-transfer', 'google-cloud-storage-r', 'firebase-security', 'firebase-realtime-database', 'google-cloud-sdk', 'google-cloud-launcher', 'firebase-admin', 'google-kubernetes-engine', 'recaptcha-enterprise', 'google-anthos', 'google-cloud-webrisk', 'google-app-engine-php', 'google-cloud-memorystore', 'jib', 'firebase-analytics', 'google-cloud-datastore', 'firebasesimplelogin', 'apigee', 'firebase-hosting', 'google-cloud-healthcare', 'google-cloud-transcoder', 'firebase-app-distribution', 'google-cloud-kms', 'google-cloud-test-lab', 'google-cloud-code', 'firebase-test-lab', 'firebase-ab-testing', 'google-cloud-debugger', 'google-cloud-stackdriver', 'google-app-engine', 'google-cloud-url-maps', 'google-cloud-endpoints-v2', 'google-cloud-ml', 'google-compute-engine', 'google-cloud-storage', 'react-redux-firebase', 'google-cloud-api-gateway', 'firebase-dynamic-links', 'firebase-predictions', 'react-native-firebase', 'redux-saga-firebase', 'google-cloud-dataprep', 'google-cloud-automl', 'google-migrate-for-compute-engine', 'google-cloud-logging', 'firebase-invites', 'cloud-document-ai', 'google-cloud-python', 'google-cloud-node', 'google-cloud-tools', 'firebase-extensions', 'google-app-engine-golang', 'rest-firebase', 'google-cloud-armor', 'firebase-polymer', 'nativescript-firebase', 'google-app-engine-deploy', 'firebase-cloud-messaging', 'dialogflow-cx', 'google-cloud-spanner-emulator', 'google-cloud-search', 'looker', 'firebase-crash-reporting', 'google-cloud-build', 'google-cloud-identity-aware-proxy', 'google-cloud-instances', 'google-cloud-repository', 'dialogflow-es', 'vertex-ai-search', 'google-cloud-tasks', 'google-analytics-firebase', 'google-cloud-datalab', 'firebase-storage', 'google-cloud-iot', 'google-cloud-source-repos', 'firebase-assistant', 'google-cloud-messaging', 'google-cloud-pubsublite', 'google-cloud-firestore', 'google-cloud-networking', 'google-container-optimized-os', 'google-cloud-iam', 'google-cloud-save', 'google-cloud-nl', 'google-translate', 'firebase-mlkit', 'firebase-admob', 'google-cloud-internal-load-balancer', 'firebase-notifications', 'google-cloud-cpp', 'google-cloud-filestore', 'firebase-app-check', 'google-cloud-print-privet', 'google-cloud-intellij', 'google-cloud-router', 'google-cloud-profiler', 'google-cloud-identity', 'google-app-engine-python', 'google-cloud-ai', 'google-cloud-bigtable', 'google-cloud-billing', 'gcloud', 'google-cloud-metrics', 'firebase-database', 'firebase', 'google-cloud-dataflow', 'firebase-tools', 'google-cloud-console', 'google-cloud-vertex-ai', 'firebase-cli', 'google-cloud-print', 'google-app-engine-go', 'google-cloud-talent-solution', 'google-cloud-dataproc-metastore', 'google-cloud-speech', 'google-cloud-visualstudio', 'google-container-os', 'google-container-builder', 'google-cloud-monitoring', 'google-cloud-error-reporting', 'google-cloud-ai-platform-pipelines', 'stackdriver', 'google-cloud-asset-inventory', 'google-cloud-robotics', 'google-cloud-ml-engine', 'google-cloud-dns', 'google-cloud-pubsub', 'google-bigquery', 'google-app-engine-launch', 'google-cloud-workstations', 'firebase-performance', 'google-cloud-ops-agent', 'firebase-job-dispatcher', 'google-cloud-platform', 'google-cloud-vpn', 'google-cloud-resource-manager', 'google-cloud-deploy', 'firebaseui', 'google-cloud-shell', 'google-cloud-dataproc', 'firebase-machine-learning', 'firebase-util', 'firebase-app-indexing', 'google-dataflow', 'google-cloud-scheduler', 'google-cloud-sql', 'apigee-baas', 'firebase-queue', 'google-cloud-data-fusion', 'google-cloud-network-load-balancer', 'bigtable', 'google-prediction', 'firebase-remote-config', 'looker-studio', 'google-cloud-proxy', 'google-cloud-composer', 'google-container-registry', 'google-cloud-automl-nl', 'firebase-authentication', 'google-cloud-php-client', 'google-cloud-endpoints', 'google-cloud-powershell', 'google-cloud-http-load-balancer', 'google-cloud-interconnect', 'google-cloud-language', 'google-fusion-tables', 'google-cloud-recommendation', 'google-cloud-tpu', 'google-cloud-shell-editor', 'google-cloud-cdn', 'google-cloud-load-balancer', 'google-cloud-dlp', 'google-app-engine-patch', 'google-cloud-marketplace', 'maven-jib', 'google-cloud-trace', 'google-cloud-functions', 'google-cloud-registry', 'dialogflow-es-fulfillment', 'firebase-console'], 'external_links': [{'type': 'support', 'link': 'https://stackoverflow.com/contact?topic=15'}], 'description': 'A collective for developers who utilize Google Cloudâs infrastructure and platform capabilities. This collective is organized and managed by the Stack Overflow community.', 'link': '/collectives/google-cloud', 'name': 'Google Cloud', 'slug': 'google-cloud'}]",false
"{'account_id': 7507125, 'reputation': 377, 'user_id': 5703304, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-WHVQioSFjTw/AAAAAAAAAAI/AAAAAAAAAEQ/dZ8IxUPqWlM/photo.jpg?sz=256', 'display_name': 'Masoud Sadeghi', 'link': 'https://stackoverflow.com/users/5703304/masoud-sadeghi'}",False,-1,1675843838,1675843838,75382875,74574526,CC BY-SA 4.0,<p>set</p> <pre><code> secure: false </code></pre> <p>in development mode.</p>,,,false
"{'account_id': 17559007, 'reputation': 859, 'user_id': 12737879, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/JcF2z.jpg?s=256', 'display_name': 'Aleksandar', 'link': 'https://stackoverflow.com/users/12737879/aleksandar'}",True,1,1669399697,1669399697,74576542,74574526,CC BY-SA 4.0,"<p>Because when you are using the <code>post</code> Axios shorthand method the second argument has to be the <code>data</code> you want to send to the server, and in the third argument you pass the <code>options</code> object:</p> <pre><code>const testCookiesPostMethod = (e) => {         e.preventDefault();         axios.post('auth/test',              {}, //here a data to be sent             {              withCredentials: true,             headers: {                 Accept: 'application/json',                 'Content-Type': 'application/json',               },         });     } </code></pre>",,,false
"{'account_id': 8306545, 'reputation': 55471, 'user_id': 6243352, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/193965abcb7230d85c6264e55e2f0bda?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'ggorlen', 'link': 'https://stackoverflow.com/users/6243352/ggorlen'}",False,0,1669409281,1669392536,74575382,74574508,CC BY-SA 4.0,"<p>Y_T has the right idea in <a href=""https://stackoverflow.com/a/74575138/6243352"">this answer</a>. There's no need for <code>useEffect</code>, but if you <em>do</em> use one, it should use <code>isMouseDown</code> in the capture group so that it triggers adding/removing the move listener at the appropriate time. <code>clearRect</code> is optional. Something like (click and drag to draw):</p> <pre class=""lang-js prettyprint-override""><code>useLayoutEffect(() => {   if (!mouseDown) {     return;   }    const canvas = canvasRef.current;   const ctx = canvas.getContext(""2d"");   const onMouseMove = e => {     ctx.clearRect(0, 0, canvas.width, canvas.height);     ctx.beginPath();     ctx.arc(e.offsetX, e.offsetY, 20, 0, 2 * Math.PI);     ctx.stroke();   };   canvas.addEventListener(""mousemove"", onMouseMove);    return () => {     ctx.clearRect(0, 0, canvas.width, canvas.height);     canvas.removeEventListener(""mousemove"", onMouseMove);   }; }, [mouseDown]); </code></pre> <p>But since React gives <code>onMouseMove</code>, we can just use that instead of managing it ourselves:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const App = () => {   const [mouseDown, setMouseDown] = React.useState(false);   const canvasRef = React.useRef(null);    const handleMouseMove = e => {     if (!mouseDown) {       return;     }      const rect = e.target.getBoundingClientRect();     const offsetX = e.clientX - rect.left;     const offsetY = e.clientY - rect.top;     const canvas = canvasRef.current;     const ctx = canvas.getContext(""2d"");     //ctx.clearRect(0, 0, canvas.width, canvas.height); // optional     ctx.beginPath();     ctx.arc(offsetX, offsetY, 20, 0, 2 * Math.PI);     ctx.stroke();   };    return (     <canvas       onMouseDown={() => setMouseDown(true)}       onMouseUp={() => setMouseDown(false)}       onMouseMove={handleMouseMove}       ref={canvasRef}       width=""720""       height=""480""     ></canvas>   ); }  ReactDOM.createRoot(document.querySelector(""#app""))   .render(<App />);</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script crossorigin src=""https://unpkg.com/react@18/umd/react.development.js""></script> <script crossorigin src=""https://unpkg.com/react-dom@18/umd/react-dom.development.js""></script> <div id=""app""></div></code></pre>  </div>  </div>  </p>",1669409281.0,,false
"{'account_id': 20792788, 'reputation': 181, 'user_id': 15270555, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-Ejg0_DY-iKk/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuclzFm-ypn7_z5usLNDJP1SK8GTGSA/s96-c/photo.jpg?sz=256', 'display_name': 'Y_T', 'link': 'https://stackoverflow.com/users/15270555/y-t'}",False,1,1669391278,1669391278,74575138,74574508,CC BY-SA 4.0,"<p>I made some changes inside your code:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const App = () => {   const [mouseData, setMouseData] = React.useState({ x: 0, y: 0 });   const canvasRef = React.useRef(null);   const ctx = React.useRef(null);    React.useEffect(() => {     if(canvasRef.current) {       ctx.current = canvasRef.current.getContext(""2d"");       canvasRef.current.width = 720;       canvasRef.current.height = 480;     }    }, [canvasRef])    function Draw(e) {             ctx.current.beginPath();       ctx.current.fillStyle = ""red"";       ctx.current.arc(mouseData.x, mouseData.y, 20, 0, 2 * Math.PI);       ctx.current.stroke();   }   const SetPos = (e) => {     setMouseData({         x: e.clientX,         y: e.clientY,     }); };     return (     <div className=""App"">       <canvas id=""canvas1"" ref={canvasRef}       onMouseEnter={(e) => SetPos(e)}       onMouseMove={(e) => SetPos(e)}       onMouseDown={(e) => SetPos(e)}       onMouseMove={(e) => Draw(e)}       ></canvas>       <h1>{JSON.stringify(mouseData)}</h1>     </div>   ); }  ReactDOM.createRoot(     document.getElementById(""root"") ).render(     <App /> );</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div id=""root""></div> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.1.0/umd/react.development.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.1.0/umd/react-dom.development.js""></script></code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 19896922, 'reputation': 208, 'user_id': 14577847, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/9e31972e4f9767a6b10b44f697c5967e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Alex', 'link': 'https://stackoverflow.com/users/14577847/alex'}",False,0,1669387975,1669387975,74574534,74574461,CC BY-SA 4.0,"<p>Have you tried the <code>scrolling=""no""</code>?</p> <pre><code><iframe scrolling=""no"" src=""http://www.google.com"" width=""400px"" height=""300""></iframe> </code></pre>",,,false
"{'account_id': 20792788, 'reputation': 181, 'user_id': 15270555, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-Ejg0_DY-iKk/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuclzFm-ypn7_z5usLNDJP1SK8GTGSA/s96-c/photo.jpg?sz=256', 'display_name': 'Y_T', 'link': 'https://stackoverflow.com/users/15270555/y-t'}",False,0,1669387869,1669387869,74574513,74574176,CC BY-SA 4.0,<p>Just fix ur onAdd function to this:</p> <p>onAdd={(item: Person | Person[]) => { const persons = Array.isArray(item) ? item.map(element => element.name) : [item.name]; }}</p>,,,false
"{'account_id': 4687875, 'reputation': 83797, 'user_id': 3794812, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/91da5cf982069e22d3bd0b514dfb45e2?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Nicholas Tower', 'link': 'https://stackoverflow.com/users/3794812/nicholas-tower'}",False,2,1669387671,1669387671,74574466,74574176,CC BY-SA 4.0,"<p>Typescript is pointing out a real issue in your code.</p> <pre><code>onAdd?: (entity: Person| Person[]) => void; </code></pre> <p>This type means that when you call onAdd, you might be passing in a <code>Person</code>, or you might be passing in a <code>Person[]</code>. No way to know in advance. As a result, any function that's passed as the <code>onAdd</code> prop needs to be able to handle both cases.</p> <pre><code>onAdd={(item: Person[]) => {   const persons = item.map((el) => el.name); }} </code></pre> <p>This function will break if called with an individual person. If <code>item</code> is an individual person, then it won't have a <code>.map</code> method, and you'll get a runtime exception. So, typescript detects that the functions are incompatible, and gives you the error.</p> <p>The likely fix is to change your function so it can work with individual person objects:</p> <pre><code>onAdd={(item: Person | Person[]) => {   const persons = Array.isArray(item) ? item.map(el => el.name) : [item.name]; }} </code></pre> <p>Another possibility is that <code>(entity: Person | Person[]) => void;</code> is not the type you meant, but in that case i'll need more information about what your goal is in order to suggest a solution.</p>",,,false
"{'account_id': 26253693, 'reputation': 41, 'user_id': 19926088, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/64d8ad41bc468c46b8aec6fdb6eec962?s=256&d=identicon&r=PG', 'display_name': 'Benjam&#237;n Alonso Larenas Bravo', 'link': 'https://stackoverflow.com/users/19926088/benjam%c3%adn-alonso-larenas-bravo'}",True,1,1669475940,1669475940,74583377,74574043,CC BY-SA 4.0,"<p>I recently made a proyect related to a cart and I did somethings a little bit different, the <em><strong>initialState</strong></em> has to be an empty array and inside de reduceds we should apply de logic of the cart and <em><strong>quantity</strong></em> variable and the <em><strong>find</strong></em> method with <em><strong>spreed operator</strong></em> to write something like this:</p> <pre><code>const initialState = [];  const cartSlice = createSlice({  name: ""cart"",  initialState, reducers: {  addItemToCart: (state, {payload}) => {    const {id} = payload;    const doesItemExist = state.find((item) => item.id === id);    if(doesItemExist){     return state.map((item) => {      if(item.id === id){        return {         ...item,         quantity: item.quantity + 1        }        }       return item;     })                       } else {     state.push({       ...payload, quantity: 1     })   } },  </code></pre> <p>The remove reducer takes part of the logic from thew add reducer but decremeting the quantity.</p> <pre><code> removeItemFromCart: (state, {payload}) => {    return state.map((item) => {      if(item.id === id){        return {         ...item,         quantity: item.quantity - 1        }        }       return item;     })   },  }, });         </code></pre>",,,false
"{'account_id': 26949445, 'reputation': 81, 'user_id': 20518918, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu1s21paG15yMzi7b30I5cSv-iphfcnqfUnvaxoB7w=k-s256', 'display_name': 'ati', 'link': 'https://stackoverflow.com/users/20518918/ati'}",False,0,1669402397,1669402397,74576931,74573972,CC BY-SA 4.0,"<p>I solved it by:</p> <pre><code>function App() {   return (     <BrowserRouter>     <Navigation />       <Routes>         <Route exact path=""/"" element={<Music />}/>           <Route path=""novel"" element={<Novel />} />           <Route path=""cinema"" element={<Cinema />} />        </Routes>     </BrowserRouter>   ); } </code></pre> <p>Changing the code to this. The menu works to it's quite amazing.</p>",,,false
"{'account_id': 15617032, 'reputation': 1, 'user_id': 11266973, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-lsqfZfI7w7M/AAAAAAAAAAI/AAAAAAAASxc/8I59cKq_mjc/photo.jpg?sz=256', 'display_name': 'Sebastian Vuye', 'link': 'https://stackoverflow.com/users/11266973/sebastian-vuye'}",False,0,1669388372,1669388372,74574602,74573908,CC BY-SA 4.0,<p>No none is redundant. The <code>currentUser</code> property in the <code>INITIAL_STATE</code> object is the initial state for your useReducer hook while the other <code>currentUser</code> is the initial state for your useContext hook.</p>,,,false
"{'account_id': 15775589, 'reputation': 6083, 'user_id': 11383441, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/39f1ed481e4e7af2240b9612e8a8e0d1?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Kalana', 'link': 'https://stackoverflow.com/users/11383441/kalana'}",False,0,1669557030,1669557030,74590569,74573431,CC BY-SA 4.0,"<p>For the Auth0 Authentication Startup.cs should manage like this</p> <p><strong>ConfigureServices</strong></p> <pre><code>services.AddAuthentication(options =>             {                 options.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;                 options.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;              }).AddJwtBearer(options =>             {                 options.Authority = ""https://<Your-Domain>.auth0.com/""                 options.Audience =<Client ID>             }); </code></pre> <p><strong>Configure</strong></p> <pre><code>public void Configure(IApplicationBuilder app, IWebHostEnvironment env)         {             if (env.IsDevelopment())             {                 app.UseDeveloperExceptionPage();             }              app.UseRouting();             app.UseCors(""AllowAnyCorsPolicy"");              app.UseHttpsRedirection();              app.UseAuthentication();             app.UseRouting();             app.UseAuthorization();              app.UseDefaultFiles();             app.UseStaticFiles();             app.UseStaticFiles(new StaticFileOptions { RequestPath = ""/build"" });              app.UseEndpoints(endpoints =>             {                 endpoints.MapControllers();                 endpoints.MapFallbackToFile(""index.html"", new StaticFileOptions                 {                     OnPrepareResponse = x =>                     {                         var httpContext = x.Context;                         var path = httpContext.Request.RouteValues[""path""];                         // now you get the original request path                     }                 });             });         } </code></pre> <p>For the further knowledge follow below threads</p> <ol> <li><a href=""https://learn.microsoft.com/en-us/aspnet/core/security/authorization/limitingidentitybyscheme?view=aspnetcore-7.0"" rel=""nofollow noreferrer"">https://learn.microsoft.com/en-us/aspnet/core/security/authorization/limitingidentitybyscheme?view=aspnetcore-7.0</a></li> <li><a href=""https://stackoverflow.com/questions/62322812/using-multiple-authentication-schemes-in-asp-net-core-3-1"">Using multiple authentication schemes in ASP.NET Core 3.1?</a></li> <li><a href=""https://stackoverflow.com/questions/73214521/asp-net-core-6-add-multiple-authentication-schemes-with-multiple-authorization"">ASP.NET Core 6 : add multiple authentication schemes with multiple authorization policies along with dependency injection</a></li> </ol>",,,false
"{'account_id': 15519980, 'reputation': 1584, 'user_id': 11196441, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c97a5db1d6ddca883b712f94af110d25?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Disco', 'link': 'https://stackoverflow.com/users/11196441/disco'}",False,1,1669386394,1669382845,74573545,74573412,CC BY-SA 4.0,"<p>I don't really understand why you check for first index/last based on if the total length is even/uneven. However if you want to get all indices you can use a reducer.</p> <pre class=""lang-js prettyprint-override""><code>const string = ""random $text$""; const charToFind = ""$""; // Get all indexes of char charToFind in string let indexes = [...string].reduce((previous, current, i) => {   // Checks if current value is equal to charToFind otherwise return previous   return current === charToFind ? [...previous, i] : previous; }, []);  </code></pre> <p>EDIT: Per OPs new requirements in the comments this is what I could come up with. However its a bit overcomplicated, and will not always work.</p> <pre class=""lang-js prettyprint-override""><code>// This only take to account of one change, it will not work with paste etc. const findChar = (newState: string, oldState: string, lastKnownIndices: number[], charToFind: string) => {   // Find first diff between old and new state   const firstDiffIndex = newState     .split("""")     .findIndex((char, index) => char !== oldState[index]);    // Check if we have added or removed a char    const isCharAdded = newState.length > oldState.length;   // Update last known indices,    let newIndices = lastKnownIndices.map((index) => {     if (index >= firstDiffIndex) {       return isCharAdded ? index + 1 : index - 1;     }     return index;   }).filter((index) => {     // Remove indices that are no longer valid     return newState[index] === charToFind;   });    // If we added a char, check if it is the char we are looking for   if (isCharAdded && newState[firstDiffIndex] === charToFind) {     newIndices = [firstDiffIndex, ...newIndices]   }    return {     newIndices,     newState,     lastIndex: newIndices.length > 0 ? newIndices[0] : -1   } }  const noCharsToFind = findChar(""random text"", ""random tex"", [], ""$"") console.log(noCharsToFind)  const addedOneCharToFind = findChar(""random $text"", noCharsToFind.newState, noCharsToFind.newIndices, ""$"") console.log(addedOneCharToFind)  const addedOneMoreCharToFind = findChar(""random $text$"", addedOneCharToFind.newState, addedOneCharToFind.newIndices, ""$"") console.log(addedOneMoreCharToFind)  const removedOneCharToFind = findChar(""random text$"", addedOneMoreCharToFind.newState, addedOneMoreCharToFind.newIndices, ""$"") console.log(removedOneCharToFind) </code></pre> <p><a href=""https://www.typescriptlang.org/play?#code/PTAEBUAsEsGdQPYDsA2BPUAXAhgawKZYKjYDGpCArkpogGaJKGmTZIDm%20ANKNLQO7QUKUEgQCEAJ1yhBmSKAAO2WJkL5MpAHQAoCklWg60JABMAwq0mgAvKAAUTfgGUcagFyhVkk%20x4IUU1dsDy9MHw4eFBVMAGkxfiQASTNoUnxYTyRKAFsAI3xJAG0AXR4WbElwBAAxE1NPb18ASlsAPlAAbx1QUBBQOrMjaElDU2g6BgLMfnx8JERAkiGnMJD8HtB9Q2NRzAARCboU03wAD1tRfBc3Dd7erVhFFD57ACI35s2H4zMT8-s9gqkh49XOrRsHWBoAAhDY7AEgrcimCziVmgBuHSbfqWfCkGQTWSEVgAN0I2FMp1MiGsknwOQQ5Jp2C2VlAm22tDglkqAEEqfgaXYnME1FoUPN2PJQB1EWL8BKpfIsb1%20gBVRSmdagaKGXAJBb1NIZHibSW0JwnE3wOx6uKG63pWBaHLYRSA1EQjrde68Bj2VGyuy7VSHSb-M6tX1%200D0zCUSRG2C8yQC6mgAD8vDM51AAGpQABGUCeIMAWmLqvuAF9vnGNImjbmztWa80tMYUGpJJ6W96uvX%20gAlBlMwjG51YVi0SqEMS65Ccayk7AvUz1%20NNq43dYolslWzwtmVaqDUxtzHYtVgJIMWYkQUsk8gtn4wkMPi8eDyZjsh9zouCC4L4RhSJsRKBimVjpkKoAAGTwTuCpFKGBxHJGh7wnYwJnvU0b1laqRTnYqEjGGGEtjwWg0UR4zOiUmx1psW5JoOfp0TaXCEdcCrcX69qRlk1xOhkSocDKHQAAxZjuomwEUUmHp45ZFkxOjMVyogIKmsB4UMIb1Km7ySGwpgIDkWDnJgbw8G8plmBZVlnLZoClHZAAknx6MgsABIqKAIOwjg6VYem1Ph2JaZS1IAPJMKm%20nCsMZjGfZZlOR5ahnDZPBiLpSVaKKtx5aFlTheeRUicRpqgG8XlfNs-kSkF9gxUK8X4IlEVmF8PkGLOT6dQAslIXVWElly-BYVgmRlllZdZXk8O1pidd1lXFesK1DQlE09aYVX8PJnneU1kotcFq0jWNG2Rf1hj0oyzLrft55TUZs3pY5lnZZgy2PnFTCjfSd1mEdfGAx1wO3W99RHSddUNQ9zWBcFT3jmte2ngdXxAA"" rel=""nofollow noreferrer"">Here is a link to playground if you want to test more cases</a></p>",1669386394.0,,false
"{'account_id': 4944718, 'reputation': 27015, 'user_id': 4116300, 'user_type': 'registered', 'accept_rate': 82, 'profile_image': 'https://i.sstatic.net/AmEPY.png?s=256', 'display_name': 'Roh&#236;t J&#237;ndal', 'link': 'https://stackoverflow.com/users/4116300/roh%c3%act-j%c3%adndal'}",True,1,1669385253,1669382951,74573569,74573412,CC BY-SA 4.0,"<p>As you just want to add a space after first occurance of <code>$</code> in the input string. You can simply achieve that by using <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace"" rel=""nofollow noreferrer""><code>String.replace()</code></a> method instead of looking for <code>index</code> as If <code>pattern</code> in replace function is a string, only the first occurrence will be replaced. The original string is left unchanged.</p> <p>Live Demo <strong>:</strong></p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function checkIndex(e) {   const val = e.target.value;   console.log(val.replace('$', '$ ')); }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><input type=""text"" id=""val"" onBlur=""checkIndex(event)""/></code></pre>  </div>  </div>  </p> <p><strong>Update :</strong> Here is the workaround solution but not a good practice to do. For demo, I am using an input and after getting the index, I am replacing the <code>$</code> with some other character so that I can get the index of current/newly added  <code>$</code>.</p> <p>Demo <strong>:</strong></p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function checkIndex(e) {   const val = e.target.value;   if (/$/.test(val)) {     console.log(val.indexOf('$'))     document.getElementById('val').value = val.replaceAll('$', '-')   } }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><input type=""text"" id=""val"" onBlur=""checkIndex(event)""/></code></pre>  </div>  </div>  </p>",1669385253.0,,false
"{'account_id': 26802057, 'reputation': 27, 'user_id': 20393875, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/6dND4.jpg?s=256', 'display_name': 'SHERAWAT LOKESH', 'link': 'https://stackoverflow.com/users/20393875/sherawat-lokesh'}",False,0,1669739576,1669438332,74579809,74573411,CC BY-SA 4.0,"<p>i made it work what you have to do is remove <code>BrowserRoute or Router</code> from the file and paste it to main parent file eg.<code>app.js</code> file</p> <pre><code>add Router to app.js or  parent file add cover the code In Router </code></pre> <pre><code><div>  <Router>  <---------//just Like this---           <div key=""navbar"" className=""navbar""><Navbar /></div>               <div key=""search-box"" className=""search-box"">                 <SearchBar carddata={cards} onChangeSet={setSearchData}/>               </div>               <div>                  <Cards key=""cards"" carddata={cards} SearchingDataResult={searchData}/>               </div>                             </Router> <---------here---- </div> </code></pre>",1669739576.0,,false
"{'account_id': 25724379, 'reputation': 51, 'user_id': 19480959, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/2c083429ff5d9d975abf02b1c0833108?s=256&d=identicon&r=PG', 'display_name': 'dkunrath', 'link': 'https://stackoverflow.com/users/19480959/dkunrath'}",False,0,1669433180,1669388399,74574609,74573411,CC BY-SA 4.0,"<p>The error means you are trying to use hook <code>useNavigate</code> outside of a <code>Router</code>. The most common is in <code>react-router-dom</code> package as <code>BrowserRouter</code>, then you have <code>Routes</code> and <code>Route</code> component.</p> <p>Should be something like this (the Router could be here in App or another file, like in the  <code>index.js</code>):</p> <pre><code>import { BrowserRouter as Router, Route, Routes } from ""react-router-dom"";  import ExamplePage from ""./components/ExamplePage""; import SearchBar from ""./components/SearchBar"";  function App () {   return (     <div className=""App"">       <Router>        {/* <--- the component needed, Router */}         <SearchBar /> {/* <--- your component  with the useNavigate inside the Router */}         <Routes>           <Route path=""/my-page"" element={<ExamplePage />} />         </Routes>       </Router>     </div>   ) };  export default App; </code></pre> <p>Then your component should work.</p>",1669433180.0,,false
"{'account_id': 192523, 'reputation': 1108, 'user_id': 433714, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/59677d4c32a3026c0a05ac366da636fa?s=256&d=identicon&r=PG', 'display_name': 'vixducis', 'link': 'https://stackoverflow.com/users/433714/vixducis'}",True,0,1701268567,1701268567,77572091,74573350,CC BY-SA 4.0,"<p>It looks like this was a bug in typescript itself, as the above code works as expected since typescript 4.9.</p>",,,false
"{'account_id': 22555107, 'reputation': 1, 'user_id': 16743636, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GguXB3md8iul3GzEjeyxmtWpo2t8Mnnhj6-ZK6rFg=k-s256', 'display_name': 'Sai Ram Nadigoti', 'link': 'https://stackoverflow.com/users/16743636/sai-ram-nadigoti'}",False,0,1669384136,1669384136,74573805,74573346,CC BY-SA 4.0,"<p>Code sandbox link: This link may help: <a href=""https://codesandbox.io/s/emoji-picker-react-4-forked-h846rd?file=/src/App.tsx"" rel=""nofollow noreferrer"">https://codesandbox.io/s/emoji-picker-react-4-forked-h846rd?file=/src/App.tsx</a></p> <p>Onclick handler has to be Emoji and Event, not Event and then emoji</p>",,,false
"{'account_id': 26608602, 'reputation': 328, 'user_id': 20229075, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/7fd90a30ba9ff9fe591f5dd3653fa980?s=256&d=identicon&r=PG', 'display_name': 'Marios', 'link': 'https://stackoverflow.com/users/20229075/marios'}",True,1,1669383549,1669383549,74573686,74573346,CC BY-SA 4.0,"<p>You may find it helpful but the way I personally did it on my project were I also used <code>emoji-picker-react</code> and <code>MaterialUI</code> is through native materialUI emoji icon button like this:</p> <pre><code><div className=""chat_footer"">         {!emojiPicker ? (           <InsertEmoticonIcon onClick={() => setEmojiPicker((prev) => !prev)} />         ) : (           <>             <InsertEmoticonIcon               onClick={() => setEmojiPicker((prev) => !prev)}             />             <EmojiPicker               searchDisabled=""true""               previewConfig={{ showPreview: false }}               emojiStyle=""google""               onEmojiClick={(e) => setInput((input) => input + e.emoji)}               height={400}               width=""40%""             />           </>         )} </code></pre> <p>As I said, <code>InsertEmoticonIcon</code> is a MaterialUI icon which I <code>import</code></p>",,,false
"{'account_id': 23456512, 'reputation': 3, 'user_id': 17511912, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/515b82b95ce19c4bb380157f687f27da?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Shan Du', 'link': 'https://stackoverflow.com/users/17511912/shan-du'}",True,0,1670585319,1670290705,74696335,74573303,CC BY-SA 4.0,"<p>found the answer i changed:</p> <pre><code><video ref={videoRef} onClick={onVideoPress} className='w-1/2 mx-auto'>   <source src=""/../uploads/a_videoUpload.mp4"" type=""video/mp4"" /> </video> </code></pre> <p>to this:</p> <pre><code><video ref={videoRef} onClick={onVideoPress} className='w-1/2 mx-auto' src=`/uploads/${course. Video}` /> </code></pre>",1670585319.0,,false
"{'account_id': 8784893, 'reputation': 12619, 'user_id': 6567275, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e298067d69d9ef222a00222374549af1?s=256&d=identicon&r=PG', 'display_name': 'Thomas', 'link': 'https://stackoverflow.com/users/6567275/thomas'}",False,0,1669384283,1669384283,74573838,74573272,CC BY-SA 4.0,"<p><code>JSON.parse()</code> will always create a new object, so <code>const initFetch = useCallback()</code> will also update on every single render. And since <code>initFetch</code> is new, <code>useEffect()</code> will also run it on every single render.</p> <pre><code>const { user } = useAuth();  const {     responsable,     editor,     matricula } = user;  useEffect(() => {     const respDc = JSON.parse(responsable);     const editDc = JSON.parse(editor);      for (let dc of respDc) {         dispatch(getTopicsByDcResponsable({ dc: dc, token: accessToken }));     }      for (let dc of editDc) {         dispatch(getTopicsbyDcentroEdit({ dc: dc, token: accessToken }));     }  }, [responsable, editor, accessToken, dispatch]); </code></pre>",,,false
"{'account_id': 20300860, 'reputation': 83, 'user_id': 14890293, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/885139165560200/picture?type=large', 'display_name': 'Mohammed Maheswer', 'link': 'https://stackoverflow.com/users/14890293/mohammed-maheswer'}",True,0,1669447564,1669447564,74580444,74573246,CC BY-SA 4.0,"<p>Ok Issue is Solved i have not destructured formik properly thats why its saying undefined variable setFieldValue,now when i send setFieldValue function in prop it works..</p>",,,false
"{'account_id': 22563767, 'reputation': 11, 'user_id': 16751074, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b35e7ead820f8a3868afd1fd30c69e9b?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Subham Shyamal Bharadwaz', 'link': 'https://stackoverflow.com/users/16751074/subham-shyamal-bharadwaz'}",False,1,1677819720,1677819720,75623337,74573241,CC BY-SA 4.0,<p>Use the <em>callback_url</em> property in <strong>options</strong> :</p> <pre><code>const options= {  // code  callback_url: '/home' } </code></pre>,,,false
"{'account_id': 2589008, 'reputation': 937, 'user_id': 2244093, 'user_type': 'registered', 'accept_rate': 23, 'profile_image': 'https://i.sstatic.net/bijRS.jpg?s=256', 'display_name': 'danielassayag', 'link': 'https://stackoverflow.com/users/2244093/danielassayag'}",False,0,1727441600,1727441600,79031447,74573236,CC BY-SA 4.0,"<p>To pass props from the root layout to the page.jsx component in Next.js 13 without modifying the layout itself, you can use a higher-order component to wrap your Page component with the necessary session data.</p> <p>Create a wrapping component that contain your server data.</p> <pre><code>// components/withSession.js import { getSession } from '@api/user';  export default function withSession(Component) {   return async function WithSession(props) {     const session = await getSession(); // Fetch session data     return <Component {...props} session={session} />;   }; } </code></pre> <p>And export Page with the wrapper component.</p> <pre><code>// page.js import withSession from '@components/withSession';  async function Page({ session }) {   // Now you can use the session prop in your component   return (     <div>       {/* Your page content using session data */}     </div>   ); }  export default withSession(Page); </code></pre>",,,false
"{'account_id': 7224356, 'reputation': 4785, 'user_id': 5513532, 'user_type': 'registered', 'accept_rate': 82, 'profile_image': 'https://i.sstatic.net/H3Tx6.jpg?s=256', 'display_name': 'Eric Burel', 'link': 'https://stackoverflow.com/users/5513532/eric-burel'}",False,3,1707759104,1707759104,77983273,74573236,CC BY-SA 4.0,"<p>Accepted answer is a hack and should be avoided. You don't pass value from layout to page, instead you get the value in the page component directly.</p> <p>You can optionally cache the value in the layout, using React ""cache"" function. See <a href=""https://stackoverflow.com/questions/66106408/retrieve-data-server-side-and-save-in-context-with-next-js"">this question about server context</a>, the answers explains how you can then pass a value from the page to its own children without relying on props drilling.</p>",,,false
"{'account_id': 21186962, 'reputation': 113, 'user_id': 15580124, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/4283fa84085954172364c0f42c04f0ec?s=256&d=identicon&r=PG', 'display_name': 'majid behzadnasab', 'link': 'https://stackoverflow.com/users/15580124/majid-behzadnasab'}",False,1,1698574992,1698574992,77382859,74573236,CC BY-SA 4.0,"<p>you can handle it like this</p> <pre><code>const layout = ({children}: { children: React.ReactNode }) => { const tabs = [     {         prefix: 'single',         link: router.business.simcards.simcardsList,         icon: (props) => {return( <SingleSimcardSVG {...props}/> )},         isActive: false     },     ] const childrenWithTabs = React.Children.toArray(children).map((child) => {     if (React.isValidElement(child) && typeof child.type === 'function') {         return React.cloneElement(child, { tabs } as any);     }     return child; }); return (     <>         {childrenWithTabs}     </> )}  export default layout </code></pre> <p>and in your child can access to props.tabs</p>",,,false
"{'account_id': 17968329, 'reputation': 69, 'user_id': 13057744, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GgP5kyn0a5LqGdrPL8QLvk5mjoC9varDKccF6zirA=k-s256', 'display_name': 'Vasp', 'link': 'https://stackoverflow.com/users/13057744/vasp'}",False,1,1692437053,1692437053,76934400,74573236,CC BY-SA 4.0,"<p>You can just utilize React Context:</p> <pre class=""lang-js prettyprint-override""><code>// layout.tsx  import React from 'react';  export const PageContext = React.createContext(null);  export default function SomeLayout({children}) {    const [search, setSearch] = React.useState('foo');    return <PageContext.Provider value={search}>{children}</PageContext.Provider> } </code></pre> <pre><code>// page.tsx  import React from 'react'; import PageContext from '../layout.tsx';  export default function SomePage() {    const search = React.useContext(PageContext);    console.log(search);    return null; } </code></pre>",,,false
"{'account_id': 20236293, 'reputation': 259, 'user_id': 14841373, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/eab51ebfa3f18380450c4af075aa0d3c?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'asavor', 'link': 'https://stackoverflow.com/users/14841373/asavor'}",False,5,1686096016,1681757116,76038321,74573236,CC BY-SA 4.0,"<p>To pass props from your Layout component(RootLayout for you case) to page.jsx.</p> <p><code>//app/blog/layout.jsx</code></p> <pre><code>export interface items {   foo: string;   bar: string; }  export default function RootLayout({   children,   params, }: {   children: React.ReactNode;   params: {     foo: string;     items: items;     age: number;    }; }) {    params.foo = ""bar""; //string example    params.items = { foo: ""bar"", bar: ""foo"" }; //object example    params.age= 1; //number example    return (     <html lang=""en"" className="""">       <body>{children}</body>     </html>   ); } </code></pre> <p><code>//app/blog/page.jsx</code></p> <pre><code>export default function Dashboard({   params, }: {   params: { foo: string; items: items; age: number }; }) {   console.log(params.foo); //bar   console.log(params.items); //{foo: 'bar', bar: 'foo'}   console.log(params.age); //1   return (     <div></div>   ); } </code></pre>",1686096016.0,,false
"{'account_id': 14206439, 'reputation': 48073, 'user_id': 10262805, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/zQvN3.jpg?s=256', 'display_name': 'Yilmaz', 'link': 'https://stackoverflow.com/users/10262805/yilmaz'}",True,23,1684464101,1669488396,74584771,74573236,CC BY-SA 4.0,"<p>According to the <a href=""https://beta.nextjs.org/docs/routing/pages-and-layouts#layouts"" rel=""noreferrer"">next13 docs</a> you cannot:</p> <blockquote> <p>It's not possible to pass data between a parent layout and its children. However, you can fetch the same data in a route more than once, and React will automatically dedupe the requests without affecting performance.</p> </blockquote> <p>Because the layout component refers to a component that defines the overall structure and arrangement of other components within an application or a specific section of the UI. it is not designed to implement state management. its whole purpose is to reduce the time to first render to increase the user experience</p> <p>But I found a way. In <code>Rootlayout</code>, <code>console.log(props)</code></p> <pre><code>export default function RootLayout(props) {   console.log(""props in layout"",props)   return (         <div>           {props.children}         </div>   );} </code></pre> <p>this is what you will see</p> <pre><code>props in layout {   children: {     '$$typeof': Symbol(react.element),     type: {       '$$typeof': Symbol(react.module.reference),       filepath: '/home/tesla//node_modules/next/dist/client/components/layout-router.js',       name: '',       async: false     },     key: null,     ref: null,     props: {       parallelRouterKey: 'children',       segmentPath: [Array],       error: undefined,       errorStyles: undefined,       loading: undefined,       loadingStyles: undefined,       hasLoading: false,       template: [Object],       templateStyles: undefined,       notFound: [Object],       notFoundStyles: undefined,       childProp: [Object],       rootLayoutIncluded: true     },     _owner: null,     _store: {}   },   // THIS IS HOW WE PASS PROPS   params: {} } </code></pre> <p>Many properties are not extensible but <code>params</code>. we can dynamically add properties to this object. for example</p> <pre><code>     props.params.newProp = ""testing""; </code></pre> <p>Now visit <code>page.js</code> and</p> <pre><code>const Page = (props) => {   console.log(""props in page"", props);   return ()} </code></pre> <p>you will see that props is added to the <code>params</code> object</p> <p><a href=""https://i.sstatic.net/Ru385.png"" rel=""noreferrer""><img src=""https://i.sstatic.net/Ru385.png"" alt=""enter image description here"" /></a></p> <p>No matter what I tried, <code>page.tsx</code> had only two props: <code>params</code> and <code>searchParams</code>. <code>searchParams</code> is automatically populated if you have query parameters on url. So, I think <code>params</code> are the only way to pass props from the root layout. you can pass functions too</p>",1684464101.0,,false
"{'account_id': 10803851, 'reputation': 33, 'user_id': 7946810, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/CqMuN.jpg?s=256', 'display_name': 'Abir Imtiaz', 'link': 'https://stackoverflow.com/users/7946810/abir-imtiaz'}",True,0,1669476606,1669476606,74583448,74573153,CC BY-SA 4.0,<p>My issue was with the server. I added this to my config file:</p> <pre><code>location / {   if (!-e $request_filename){     rewrite ^(.*)$ /index.html break;   } } </code></pre>,,,false
"{'account_id': 11770437, 'reputation': 23535, 'user_id': 8613630, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/GUjUU.png?s=256', 'display_name': 'Tobias S.', 'link': 'https://stackoverflow.com/users/8613630/tobias-s'}",True,2,1669380637,1669380637,74573081,74572951,CC BY-SA 4.0,"<p>You can use a tuple type. This makes typing multiple parameters with a single type possible.</p> <pre><code>const renderItem = (...[item, index]: [string, number]) => {} </code></pre> <p>Or give each parameter its own explicit type.</p> <pre><code>const renderItem = (item: string, index: number) => {} </code></pre> <hr /> <p><a href=""https://www.typescriptlang.org/play?#code/MYewdgzgLgBATgUzAEwXAklBBbGBeGACgDpSBtASy2wBoYKUEAPAXQC4Yzo4GBzOsAFdsAIzQsAlPgB8MAN4BfIA"" rel=""nofollow noreferrer"">Playground</a></p>",,,false
"{'account_id': 195407, 'reputation': 33177, 'user_id': 438273, 'user_type': 'registered', 'accept_rate': 70, 'profile_image': 'https://www.gravatar.com/avatar/88ad8bc15f1a9e787531e9b20340973a?s=256&d=identicon&r=PG', 'display_name': 'jsejcksn', 'link': 'https://stackoverflow.com/users/438273/jsejcksn'}",False,0,1669380707,1669380707,74573094,74572853,CC BY-SA 4.0,"<p>Although you don't show it in the code in your question, you seem to already have the value that you're asking about in a <code>styles</code> object at the property <code>date</code> â you use even use it to assign it to the input's <code>id</code> attribute in your code:</p> <pre class=""lang-jsx prettyprint-override""><code><input {/*...*/} id={styles[""date""]} {/*...*/} /> </code></pre> <p>That said, the idiomatic way to obtain a reference to an element is to use a <a href=""https://reactjs.org/docs/hooks-reference.html#useref"" rel=""nofollow noreferrer"">ref</a>, like this:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div id=""root""></div><script src=""https://cdn.jsdelivr.net/npm/react@18.2.0/umd/react.development.js""></script><script src=""https://cdn.jsdelivr.net/npm/react-dom@18.2.0/umd/react-dom.development.js""></script><script src=""https://cdn.jsdelivr.net/npm/@babel/standalone@7.20.4/babel.min.js""></script> <script type=""text/babel"" data-type=""module"" data-presets=""env,react"">  const {useEffect, useRef, useState} = React;  function App () {   const dateElementRef = useRef(null); // 1. Create the ref here   const [dateValue, setDateValue] = useState('2022-11-25');    useEffect(() => {     // 3. Use the ref to refer to the element in this effect callback function:     if (dateElementRef.current) {       console.log('This is the date element:', dateElementRef.current);     }   }, []);    return (     <div>       <label>         <strong>Date:</strong>         <input           type=""date""           ref={dateElementRef} // 2. Assign it to the element here           onChange={ev => setDateValue(ev.target.value)}           value={dateValue}         />       </label>     </div>   ); }  const reactRoot = ReactDOM.createRoot(document.getElementById('root'));  reactRoot.render(<App />);  </script></code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 9615381, 'reputation': 2374, 'user_id': 7138366, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/6HxROj5B.jpg?s=256', 'display_name': 'Marko Savic', 'link': 'https://stackoverflow.com/users/7138366/marko-savic'}",True,0,1669973906,1669973906,74653618,74572838,CC BY-SA 4.0,"<p>If I understand well you have <strong>duplicate values</strong> inside <code>rooms array</code>, you can remove duplicates:</p> <pre class=""lang-js prettyprint-override""><code>const data = [   { id: 1, location: 'New York' },   { id: 2, location: 'New York' },   { id: 3, location: 'Chicago' },   { id: 4, location: 'California' }, ]  const noDuplicates = data.filter((roomInfo, i, arr) => arr.findIndex(x => x.location === roomInfo.location) === i) </code></pre>",,,false
"{'account_id': 20354698, 'reputation': 179, 'user_id': 14930500, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-6B6jTosPoYk/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuckF8jorXLs955bbVThBuKzxnouAGQ/s96-c/photo.jpg?sz=256', 'display_name': 'Daniel Smith', 'link': 'https://stackoverflow.com/users/14930500/daniel-smith'}",True,1,1669385105,1669385105,74573985,74572813,CC BY-SA 4.0,"<pre><code>import ""./styles.css""; const foodItems = [   { item: ""cake"", calories: 120, datetime: ""2022-11-16 07:51:26"" },   { item: ""chicken"", calories: 250, datetime: ""2022-11-16 13:48:46"" },   { item: ""pizza"", calories: 420, datetime: ""2022-11-25 11:13:42"" } ];  const foodItemsGroupedByDate = {};  foodItems.map((foodItem) => {   const date = foodItem.datetime.split("" "")[0];   foodItemsGroupedByDate[date] = foodItemsGroupedByDate[date] || [];   foodItemsGroupedByDate[date].push({     item: foodItem.item,     calories: foodItem.calories   }); });  const foodItemsArray = Object.entries(foodItemsGroupedByDate);  function RenderFoodItems({ items, date }) {   return (     <>       <div>{date}</div>       {items.map((item) => {         return <div>{item.item} - {item.calories}</div>;       })}     </>   ); } export default function App() {   return (     <div className=""App"">       {foodItemsArray.map((item) => {         return <RenderFoodItems date={item[0]} items={item[1]} />;       })}     </div>   ); } </code></pre> <p>Try something like this, tested in codesandbox.</p>",,,false
"{'account_id': 21820209, 'reputation': 2045, 'user_id': 16116506, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/E1zGO.png?s=256', 'display_name': 'Wraithy', 'link': 'https://stackoverflow.com/users/16116506/wraithy'}",False,1,1669382979,1669380642,74573083,74572813,CC BY-SA 4.0,"<p>React under hood transforms JSX <code><div><h2>text</h2</div></code> into</p> <pre><code>React.createElement('div', undefined, React.createElement('h2',undefined,'text')) </code></pre> <p>what are you trying to do is impossible with this architecture.</p> <p>Instead you need to find some other approach. Maybe group data by date and then render. Something like</p> <pre><code>function renderHistory () { const grouped = props.history.reduce((acc,item)=>{   const dateAdded = item.datetime.split("" "")[0];    return {...acc, [dateAdded]: [...acc[dateAdded], item]}   },{});    return Object.keys(grouped).map((dayAdded) => {      return (      <div key={dayAdded}>         <h2>{dateAdded}</h2>        { grouped[dayAdded].map((item)=>(          <li key={item.item+dayAdded}>{item.item} - {item.calories} calories</li>)          )}       </div>     )    }) } </code></pre>",1669382979.0,,false
"{'account_id': 27044988, 'reputation': 26, 'user_id': 20599297, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu37Pmu__QiPEAuTdOCGfaQjrYdn7CGZ3SR_GDY=k-s256', 'display_name': 'Ayan Naseer', 'link': 'https://stackoverflow.com/users/20599297/ayan-naseer'}",True,1,1669382474,1669382474,74573454,74572809,CC BY-SA 4.0,"<p>I thought you forget ""/"" before route path Like this</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from ""react""; import { BrowserRouter, Routes, Route, Outlet } from ""react-router-dom"";  function App() {   return (     <BrowserRouter>       <Routes>         <Route path=""/invoices"" element={<Invoices />}>           <Route path=""/:invoiceId"" element={<Invoice />} />           <Route path=""/sent"" element={<SentInvoices />} />     </BrowserRouter>   ); }  function Invoices() {   return (     <div>       <h1>Invoices</h1>       <Outlet />     </div>   ); }  function Invoice() {   return <h1>Invoice </h1>; }  function SentInvoices() {   return <h1>Sent Invoices</h1>; }  export default App;</code></pre>  </div>  </div>  </p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from ""react""; import { BrowserRouter, Routes, Route, Outlet } from ""react-router-dom"";  function App() {   return (     <BrowserRouter>       <Routes>         <Route path=""invoices"" element={<Invoices />}>           <Route path="":invoiceId"" element={<Invoice />} />           <Route path=""sent"" element={<SentInvoices />} />         </Route>       </Routes>     </BrowserRouter>   ); }  function Invoices() {   return (     <div>       <h1>Invoices</h1>       <Outlet />     </div>   ); }  function Invoice() {   return <h1>Invoice </h1>; }  function SentInvoices() {   return <h1>Sent Invoices</h1>; }  export default App;</code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 15320558, 'reputation': 54, 'user_id': 19879044, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-aY3mAAmNYFg/AAAAAAAAAAI/AAAAAAAAHP4/Qjhg9aFpkEA/photo.jpg?sz=256', 'display_name': 'evilcore29', 'link': 'https://stackoverflow.com/users/19879044/evilcore29'}",False,2,1669380414,1669380414,74573041,74572809,CC BY-SA 4.0,"<p>You missed <a href=""https://reactrouter.com/en/main/router-components/browser-router"" rel=""nofollow noreferrer"">BrowserRouter</a>.</p> <p>Try this:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from ""react""; import { BrowserRouter, Routes, Route, Outlet } from ""react-router-dom"";  function App() {   return (     <BrowserRouter>       <Routes>         <Route path=""invoices"" element={<Invoices />}>           <Route path="":invoiceId"" element={<Invoice />} />           <Route path=""sent"" element={<SentInvoices />} />         </Route>       </Routes>     </BrowserRouter>   ); }  function Invoices() {   return (     <div>       <h1>Invoices</h1>       <Outlet />     </div>   ); }  function Invoice() {   return <h1>Invoice </h1>; }  function SentInvoices() {   return <h1>Sent Invoices</h1>; }  export default App;</code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",False,0,1669379567,1669379567,74572864,74572772,CC BY-SA 4.0,"<p>You have ref in username component, you need to create and pass it down, that way you will have an ability to change a content of h1 element.</p> <p>So here is steps to implement this (I wouldn't write a code for you because writing code by yourself is very important for studying):</p> <ol> <li>Create ref in app.js and pass it to username component via myref prop.</li> <li>You need to get value of input and here you have two options: The first one is to make it controllable using state, or second option is to use another ref and pass it into your input.</li> <li>In clickHandler, take your input value (from state or from ref that you passed into input), and modify content of h1 using ref that you passed into myref prop into username component</li> </ol> <p>Done!</p>",,,false
"{'account_id': 26647918, 'reputation': 368, 'user_id': 20262622, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5872d8ef45f9edc2387ec46e120bb9bc?s=256&d=identicon&r=PG', 'display_name': 'Flewz', 'link': 'https://stackoverflow.com/users/20262622/flewz'}",False,0,1669379732,1669379732,74572900,74572735,CC BY-SA 4.0,"<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.cont {   width: 100px;   height: 100px;   border: 1px red solid;   overflow: hidden; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div class=""cont"">   <img width=""100%"" src=""https://upload.wikimedia.org/wikipedia/en/thumb/9/93/Burj_Khalifa.jpg/1200px-Burj_Khalifa.jpg"" /> </div>  <hr>  <img width=""200px"" src=""https://upload.wikimedia.org/wikipedia/en/thumb/9/93/Burj_Khalifa.jpg/1200px-Burj_Khalifa.jpg"" /></code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 27044988, 'reputation': 26, 'user_id': 20599297, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu37Pmu__QiPEAuTdOCGfaQjrYdn7CGZ3SR_GDY=k-s256', 'display_name': 'Ayan Naseer', 'link': 'https://stackoverflow.com/users/20599297/ayan-naseer'}",False,0,1669379478,1669379478,74572846,74572735,CC BY-SA 4.0,<p>You can simply wrap image in a div and define the size of div in css and a overflow:hidden property to that div.</p> <pre><code>.myBlackBox{         width: 500px;         border: 5px solid red;         overflow: hidden;         height: 500px;     } </code></pre> <p>My div css properties.</p>,,,false
"{'account_id': 1405688, 'reputation': 7305, 'user_id': 1333479, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/8ad62a25686796c42fedbe3ddedce1f1?s=256&d=identicon&r=PG', 'display_name': 'Fran&#231;ois Zaninotto', 'link': 'https://stackoverflow.com/users/1333479/fran%c3%a7ois-zaninotto'}",True,1,1669713500,1669713500,74611639,74572463,CC BY-SA 4.0,"<p>There is no rule for applying operators in filters in react-admin (see <a href=""https://marmelab.com/react-admin/FilteringTutorial.html#filter-operators"" rel=""nofollow noreferrer"">https://marmelab.com/react-admin/FilteringTutorial.html#filter-operators</a> for details). The filter is passed to <code>dataProvider.getList()</code>, so it is is your dataProvider's responsibility to handle these operators.</p> <p>You could e.g. set a filter named <code>ids_not_in</code>in your input:</p> <pre><code><ReferenceInput source=""company_id"" reference=""companies""  filter={{ ids_not_in: [1, 2, 3}} >     <AutocompleteInput label=""Employer"" /> </ReferenceInput> </code></pre> <p>Then, in your dataProvider, translate that filter to operators that your API can understand.</p>",,,false
"{'account_id': 22852294, 'reputation': 30666, 'user_id': 16997707, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jYbDw.png?s=256', 'display_name': 'Fody', 'link': 'https://stackoverflow.com/users/16997707/fody'}",True,2,1669405366,1669405366,74577297,74572294,CC BY-SA 4.0,"<p>The difference is between <code>attribute</code> and <code>property</code>.</p> <p>Under the hood <code>cy.getByTestId('save').should('be.disabled')</code> is checking that the element has <strong>property</strong> <code>disabled</code>. The standard button translates the <strong>attribute</strong> <code>disabled</code> into a corresponding property, so it passes the above assertion.</p> <p>The custom button obviously does not have that behavior, so it might be difficult to treat <code>custom-button</code> the same as <code>button</code>.</p> <hr /> <p>One thing that works for your sample is</p> <pre class=""lang-js prettyprint-override""><code>cy.getByTestId('save').should('have.attr', 'disabled') </code></pre> <p>This should work for all occurrences of <code>custom-button</code> (if my assumption about it's behavior is correct).</p> <p>If you have trouble with standard <code>button</code>, you can check both:</p> <pre class=""lang-js prettyprint-override""><code>cy.getByTestId('save').should($el => {   return $el.attr('disabled').length > 0 || $el.prop('disabled').length > 0 }) </code></pre> <p>You can make a custom assertion if that's a pain to code everywhere.</p> <hr /> <p>IMO using <code>.find('button')</code> isn't optimal, since it's an internal implementation of the <code>custom-button</code>.</p>",,,false
"{'account_id': 17739443, 'reputation': 2567, 'user_id': 17917809, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/3qDsh.jpg?s=256', 'display_name': 'jjhelguero', 'link': 'https://stackoverflow.com/users/17917809/jjhelguero'}",False,0,1669393882,1669393882,74575623,74572294,CC BY-SA 4.0,"<p>As the comments state, you only retrieve the <code>custom-button</code> element and not the <code>button</code>, which has the <code>disabled</code> attr.</p> <p>The working solution is fine.</p> <pre class=""lang-js prettyprint-override""><code>cy.getByTestId('save').find('button').should('be.disabled') cy.getByTestId('save').contains(/save/i).should('be.disabled') // find based on text instead </code></pre> <p>You can check if in your design-system repo if a data-testid can be passed to the component or add the change yourself, which could be a more cumbersome process.</p>",,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",False,1,1669376759,1669376759,74572346,74572221,CC BY-SA 4.0,"<p>If you are using latest react, then you need another way of render your application.</p> <p>I'm not sure if this will help, but it worth to try</p> <pre><code>const root = ReactDOM.createRoot(document.getElementById('root')); root.render(   <React.StrictMode>     <App />   </React.StrictMode> ); </code></pre>",,,false
"{'account_id': 24109555, 'reputation': 190, 'user_id': 18080318, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/006cf1e62220eba7b1685ace4a26907f?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'oykn', 'link': 'https://stackoverflow.com/users/18080318/oykn'}",False,0,1669376734,1669376734,74572342,74572221,CC BY-SA 4.0,<p>You can write your index like this</p> <pre><code>    import { BrowserRouter } from 'react-router-dom';     const root = ReactDOM.createRoot(   document.getElementById('root') as HTMLElement ); root.render(       <BrowserRouter>       <React.StrictMode>         <App />       </React.StrictMode>       </BrowserRouter> );  reportWebVitals(); </code></pre>,,,false
"{'account_id': 25688874, 'reputation': 1267, 'user_id': 19450576, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/9ff44e12815fa19391ab0dd9caddff8c?s=256&d=identicon&r=PG', 'display_name': 'Vin Xi', 'link': 'https://stackoverflow.com/users/19450576/vin-xi'}",True,25,1669376924,1669376924,74572370,74572123,CC BY-SA 4.0,"<p>Here is a <a href=""https://codesandbox.io/s/inspiring-smoke-m5324c?file=/src/App.js"" rel=""noreferrer"">sandbox</a> for simulation!</p> <p>Assuming</p> <pre><code>let a = 0; const ref = useRef(0); const [state,setState] = useState(0); </code></pre> <p>Now let's say you use 2 buttons with these click functions</p> <pre><code>const firstClick = () => {  a = 2;  ref.current = 2; }  const secondClick = () => {  setState(2); } </code></pre> <p>The first click will modify both the ref and the variable.</p> <p>The Second click will cause a re-render because of a state change.</p> <p>However if you are printing both ref and variable in a div or text then you will see only ref still persists its value, because React functions form a closure on their variables.</p> <p>Wherever you need to manipulate Dom or store state without re-rendering on change, ref is your go-to. If you are making logical calculations then go for variables</p>",,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",False,3,1669376429,1669376429,74572283,74572123,CC BY-SA 4.0,"<p>If you need some data to be stored and changed, use state. (for example tracking input value, some opened\closed states of modal windows etc.)</p> <p>If you need some data to be calculated and displayed, use variables. (imagine you have filters, and some data that needs to be filtered, filters will be stored in some state variable, and you might want to create a variable <code>filteredData</code> that needs to be calculated every re-render)</p> <p>In case if you need to manipulate DOM, or use some value outside of react lifecycle, use refs. (for example you need to have previous value of your state variable, or for some reason destroy some component or change it styles)</p>",,,false
"{'account_id': 25232826, 'reputation': 1760, 'user_id': 19067773, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/gj1RO.jpg?s=256', 'display_name': 'Shahed', 'link': 'https://stackoverflow.com/users/19067773/shahed'}",False,12,1669376150,1669376150,74572224,74572123,CC BY-SA 4.0,"<p>Variable declared using <code>useRef</code> doesn't get included in the react life cycle which means if any state updates the value defined using <code>useRef</code> doesn't change that's the advantage.Whereas variable declared without using <code>useRef</code> gets reclared upon component re-render.</p> <p>There is an alternate approach to solve the issue, as that will pollute the global space which may cause unexpected things The approach is to declare variable outside the component.</p>",,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",False,1,1669378724,1669378724,74572701,74572096,CC BY-SA 4.0,"<p>I created a working sandbox for you <a href=""https://codesandbox.io/s/practical-sara-flce0x?file=/src/App.js"" rel=""nofollow noreferrer"">here</a></p> <p>I was able to recreate your behavior and when I put everything into state it just start working. I hope that sandbox will help you. Now you can modify label.</p>",,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",True,1,1669375294,1669375294,74572052,74572026,CC BY-SA 4.0,"<p>need to check if the user is undefined or not. use the <code>?</code> operator</p> <pre><code>useEffect(() => {   const id = props.session?.user?.id   if(id) setId(id) }, [props.session]) </code></pre>",,,false
"{'account_id': 19853413, 'reputation': 21, 'user_id': 14543443, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GixFq04KbkqTErBGLN5rpc3HIm9Z8CIAmH8sM0sDw=k-s256', 'display_name': 'prantosh Verma', 'link': 'https://stackoverflow.com/users/14543443/prantosh-verma'}",False,0,1712949511,1712949511,78318332,74571914,CC BY-SA 4.0,"<p>use import statement as</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-html lang-html prettyprint-override""><code>import {styled} from styled-components; </code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 26608602, 'reputation': 328, 'user_id': 20229075, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/7fd90a30ba9ff9fe591f5dd3653fa980?s=256&d=identicon&r=PG', 'display_name': 'Marios', 'link': 'https://stackoverflow.com/users/20229075/marios'}",True,0,1669374863,1669374863,74571971,74571850,CC BY-SA 4.0,"<p>It should be like this:</p> <pre><code>const q = query(collection(db, 'lists', 'my lists', currentList),  orderBy('queryPreference')); </code></pre>",,,false
"{'account_id': 26802057, 'reputation': 27, 'user_id': 20393875, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/6dND4.jpg?s=256', 'display_name': 'SHERAWAT LOKESH', 'link': 'https://stackoverflow.com/users/20393875/sherawat-lokesh'}",False,0,1669374691,1669374691,74571934,74571800,CC BY-SA 4.0,<p>use <strong>body-parser</strong> for if you don't want to pass data using url.</p>,,,false
"{'account_id': 19918538, 'reputation': 80, 'user_id': 14594930, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/cdf106e93c97f12f786624053e0d8e14?s=256&d=identicon&r=PG', 'display_name': 'Nasir', 'link': 'https://stackoverflow.com/users/14594930/nasir'}",False,0,1669374349,1669374349,74571856,74571800,CC BY-SA 4.0,"<p>Build react application it will give you index.html and static files. Add that index.html file and static files to your application. Configure pathes inside index.html file to static files as assets, CSS etc. You can load index.html in your application this will be react app inside your application.</p>",,,false
"{'account_id': 25420548, 'reputation': 89, 'user_id': 19226647, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/4fbd5df852e9c4fcde5536b56a50f9a3?s=256&d=identicon&r=PG', 'display_name': 'David manga', 'link': 'https://stackoverflow.com/users/19226647/david-manga'}",False,0,1669387664,1669386783,74574302,74571795,CC BY-SA 4.0,"<p>I think it is because you are not passing the  event to the function when writing <code>onKeyDown</code>, try passing the event to the function like this and see if it would work:</p> <pre><code><input     onKeyDown={(e)=>searchResult(e)}     className=""search-input w-100   br bb fw4""     type=""text""     placeholder=""Search here...""   ></input> </code></pre>",1669387664.0,,false
"{'account_id': 25232826, 'reputation': 1760, 'user_id': 19067773, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/gj1RO.jpg?s=256', 'display_name': 'Shahed', 'link': 'https://stackoverflow.com/users/19067773/shahed'}",False,0,1669374684,1669374350,74571857,74571795,CC BY-SA 4.0,<p>There is no <code>value</code> attribute in your<code>input</code> tag to update.</p> <pre><code><input value={somestate} onChange={e=> setState(e.target.value)} /> </code></pre> <p>This will update the value in your input as   you type.</p>,1669374684.0,,false
"{'account_id': 18920006, 'reputation': 450, 'user_id': 13804256, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Q6OCM.jpg?s=256', 'display_name': 'exphoenee', 'link': 'https://stackoverflow.com/users/13804256/exphoenee'}",False,-1,1669374615,1669374615,74571924,74571795,CC BY-SA 4.0,"<p>I made you an example, but i couldn't tor try it if you share the content of carddate array, maybe i can solve and explain it more detailed!</p> <p>You cen read more about the controlled inputs here: <a href=""https://reactjs.org/docs/forms.html"" rel=""nofollow noreferrer"">https://reactjs.org/docs/forms.html</a></p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>import React, {useState, useEffect} from ""react"";  const SearchBar = ({ carddata}) => {   const [searchValue, setSearchValue]    let arr = [];      useEffect()=>{     function searchResult() {       if (e.key === ""Enter"") {         if (searchValue === """") return;             arr = [];           carddata.filter((result) => {             if (`${result.heading}`.toLowerCase().match(e.target.value)) {                 arr.push(result);                 console.log(arr)           }         });       }     }, [searchValue]   }    return (     <div className=""flex"">       <input         onChange={e=>setSearchValue(e.target.value)}         className=""search-input w-100 br bb fw4""         type=""text""         placeholder=""Search here...""         value=""searchValue""       />        <SearchIcon         className=""search-icon h2 br bb hover-black""         style={{ fill: ""red"" }}         sx={{ fontSize: 40 }}       />     </div>   ); };  export default SearchBar;</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdnjs.cloudflare.com/ajax/libs/react/16.6.3/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.6.3/umd/react-dom.production.min.js""></script></code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 5480961, 'reputation': 877, 'user_id': 4357444, 'user_type': 'registered', 'accept_rate': 83, 'profile_image': 'https://graph.facebook.com/100000601604619/picture?type=large', 'display_name': 'Mark Barton', 'link': 'https://stackoverflow.com/users/4357444/mark-barton'}",False,0,1684832522,1684832522,76312977,74571785,CC BY-SA 4.0,"<p>Have you run <code>npm i</code>? Though the imports are in your package.json file, you may not have installed them.</p>",,,false
"{'account_id': 15519980, 'reputation': 1584, 'user_id': 11196441, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c97a5db1d6ddca883b712f94af110d25?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Disco', 'link': 'https://stackoverflow.com/users/11196441/disco'}",True,0,1669380394,1669380394,74573039,74571782,CC BY-SA 4.0,"<p>You use a hook during a render, dont do that. The setState will trigger a rerender. I cant se the state, however it looks like they all share the same variant. Change the function to just return the variant instead of setting at state that you do not need and use otherwise.</p> <pre class=""lang-js prettyprint-override""><code>const setDayCellVariant = useCallback(   (day) => {     return supabaseloaded &&       reservationsdata.some(         (d) => d.n_between_dates === dayjs(day).format(""YYYY-MM-DD"")       )       ? ""reserved""       : ""dafault type"";   },   [supabaseloaded, reservationsdata] ); </code></pre>",,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",False,0,1669373965,1669373965,74571783,74571649,CC BY-SA 4.0,"<p>This is how I would make this.</p> <p>Imagine that you have component with form, component with map and some parent component that contain both of them.</p> <p>I would use some useState in parent component that will handle change of selected lat and lng and provide this data to my form.</p> <p>Then in form I'll use useEffect, so whenever those data is changed it will <code>setFieldValue</code> in form.</p> <p>All this stuff will look like that (abstract example): Parent component</p> <pre><code>const [coords, setCoords] = useState(null)  return (   <>     <Form coords={coords} />     <Map onChange={setCoords} />   </> ) </code></pre> <p>Form</p> <pre><code>useEffect(() => {   if(coords !== null) {     setFieldValue(""lat"", coords.lat)     setFieldValue(""lng"", coords.lng)   } }, [coords]) </code></pre> <p>This should work because setFieldValue can set values for fields in every moment of time, even after initialization. I'm not sure what problems have you had with useEffect and setFieldValue, so if my answer didn't helped you, provide some more code examples</p>",,,false
"{'account_id': 5916539, 'reputation': 1261, 'user_id': 4655177, 'user_type': 'registered', 'accept_rate': 78, 'profile_image': 'https://www.gravatar.com/avatar/07af988150e974fcf11399073992c6a5?s=256&d=identicon&r=PG', 'display_name': 'Xiduzo', 'link': 'https://stackoverflow.com/users/4655177/xiduzo'}",False,0,1669385450,1669385450,74574050,74571647,CC BY-SA 4.0,"<p>I think you need to validate if neither of the edges of your element is touching the current view of the user. This also requires you to include the scroll position of the user.</p> <p>Check out <a href=""https://codesandbox.io/s/gallant-lichterman-wxnfrf?file=/src/App.js"" rel=""nofollow noreferrer"">https://codesandbox.io/s/gallant-lichterman-wxnfrf?file=/src/App.js</a> which checks if the red box is inside of the viewport or not.</p> <p>Also, you do not need to put an ID to the element you would like to observe, have a look at <a href=""https://reactjs.org/docs/hooks-reference.html#useref"" rel=""nofollow noreferrer"">https://reactjs.org/docs/hooks-reference.html#useref</a> for more information on using references in React.</p>",,,false
"{'account_id': 15519980, 'reputation': 1584, 'user_id': 11196441, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c97a5db1d6ddca883b712f94af110d25?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Disco', 'link': 'https://stackoverflow.com/users/11196441/disco'}",True,1,1669374087,1669374087,74571806,74571552,CC BY-SA 4.0,"<p>Since you only use states, you could just set the shipping address on click on the button.</p> <pre class=""lang-js prettyprint-override""><code><button onClick={()=> setShippingAddress({...bilingAddress, type: ""Shipping""})}>Use Billing Address</button> </code></pre>",,,false
"{'account_id': 5171544, 'reputation': 20752, 'user_id': 5385381, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/f560c65835516423c4d1bf7f8c1dab49?s=256&d=identicon&r=PG', 'display_name': 'ksav', 'link': 'https://stackoverflow.com/users/5385381/ksav'}",False,1,1669442466,1669442466,74580078,74571547,CC BY-SA 4.0,"<p>Use <code>ReactDOMServer.renderToString</code> with <code>iframe</code>'s <code>srcDoc</code> attribute.</p> <pre><code>import ReactDOMServer from ""react-dom/server"";  export default function App() {   return (     <div className=""App"">       <iframe         name=""iframe-form""         title=""This is an iframe form.""         srcDoc={ReactDOMServer.renderToString(<Form />)}       />     </div>   ); }  const Form = () => {   return (     <form target=""iframe-form"">       <div>         <label htmlFor=""name"">Name</label>         <input type=""text"" id=""name"" />       </div>       <div>         <label htmlFor=""email"">Email</label>         <input type=""email"" id=""email"" />       </div>       <button>Submit</button>     </form>   ); }; </code></pre> <p><a href=""https://codesandbox.io/s/react-iframe-with-inline-content-nz0hwn?fontsize=14&hidenavigation=1&theme=dark"" rel=""nofollow noreferrer""><img src=""https://codesandbox.io/static/img/play-codesandbox.svg"" alt=""Edit react iframe with inline content"" /></a></p>",,,false
"{'account_id': 26515263, 'reputation': 610, 'user_id': 20149906, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/z2tX4.png?s=256', 'display_name': 'Gonzalo Cugiani', 'link': 'https://stackoverflow.com/users/20149906/gonzalo-cugiani'}",True,2,1669442066,1669442066,74580055,74571547,CC BY-SA 4.0,"<p>According to the React documentation, '<strong>React Portals</strong>' allow us to render children into a DOM node that exists outside of the parent componentâs DOM hierarchy. Basically, <a href=""https://blog.logrocket.com/learn-react-portals-example/"" rel=""nofollow noreferrer"">portals let us render children</a> wherever we want to.</p> <p>So the large explanation would be create a portal:</p> <pre><code>ReactDOM.createPortal(child, container) </code></pre> <blockquote> <p>In this case, the child is a React <strong>element</strong>, <strong>fragment</strong>, or <strong>string</strong>, and the container is the <code>DOM</code> location or node to which the portal should be rendered.</p> <blockquote> <p>With a React portal, we can choose where to place a DOM node in the DOM hierarchy, the portalâs contents are also considered children of the parentâs <strong>virtual DOM</strong>.</p> </blockquote> </blockquote> <p><strong>MyComponent.js</strong></p> <pre class=""lang-js prettyprint-override""><code>import React from 'react'  function MyComponent() {     return (         <div>             <p style={{color: 'red'}}>Testing to see if my component renders!</p>         </div>     ) }  export default MyComponent; </code></pre> <p>Now, letâs create a file called <strong>CustomIframe.js</strong> and write the following code:</p> <pre class=""lang-js prettyprint-override""><code>import React, { useState } from 'react' import { createPortal } from 'react-dom'  const CustomIframe = ({   children,   ...props }) => {   const [contentRef, setContentRef] = useState(null)    const mountNode =     contentRef?.contentWindow?.document?.body    return (     <iframe {...props} ref={setContentRef}>       {mountNode && createPortal(children, mountNode)}     </iframe>   ) }  export default CustomIframe; </code></pre> <blockquote> <p>We created a ref with the <code>useState()</code> Hook, therefore, once the state is updated, the component will re-render.</p> <blockquote> <p>We also got access to the iframe document body, then created a portal to render the children <strong>passed to iframe in this body</strong> instead:</p> </blockquote> </blockquote> <pre><code>import './App.css'; import CustomIframe from './CustomIframe'; import MyComponent from './MyComponent'; function App() {     return (     <CustomIframe title='A custom made iframe'>         <MyComponent />       </CustomIframe>   ); }  export default App; </code></pre> <p>You can pass any React app or component as a child of <code>CustomIframe</code>, and it should work fine.</p> <p>The React app or component will become <strong>encapsulated</strong>, meaning you can develop and maintain it independently.</p> <blockquote> <p>You can also achieve the same encapsulation as above using a library called react frame component. To install it, run the following command:</p> </blockquote> <pre class=""lang-terminal prettyprint-override""><code>npm install --save react-frame-component </code></pre> <p>Encapsulate your component as follows:</p> <pre class=""lang-js prettyprint-override""><code>import Frame from 'react-frame-component';  function App() {    return (     <div className='App'>         <p>Iframes in React</p>         <Frame >            <MyComponent />         </Frame>     </div>   ); }  export default App; </code></pre>",,,false
"{'account_id': 18877508, 'reputation': 401, 'user_id': 20539156, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b59d54dc3d0f3a0f6dcaeabdece9ec96?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'AbsoluteZero', 'link': 'https://stackoverflow.com/users/20539156/absolutezero'}",False,1,1669372114,1669372114,74571374,74571300,CC BY-SA 4.0,"<p>I threw that code into my current project and it works.</p> <pre><code>interface Props {   data: {     info: any;     results: any[];   } }  const Page: NextPage<Props> = ({ data }) => {    console.log(data); // { info: {...}, results: Array(20)}    // ... }  export const getServerSideProps = async () => {   const res = await fetch('https://rickandmortyapi.com/api/character');   const data = await res.json();    return { props: { data } }; }; </code></pre>",,,false
"{'account_id': 12660537, 'reputation': 15410, 'user_id': 9201587, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/paIso.png?s=256', 'display_name': 'Nick Vu', 'link': 'https://stackoverflow.com/users/9201587/nick-vu'}",False,0,1669373491,1669371501,74571252,74571118,CC BY-SA 4.0,"<p>You can keep your state in an object, and then only update field state when the <code>updatedUser</code> and <code>user</code> state values are different.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>//use `import` in your real component instead //import { useState } from 'react'; const { useState } = React;  //fake your user prop const userProp = {     name: ""Name"",     lang: ""English"",   }  function App(props) {      const [user, setUser] = useState(props.user);   const [updatedUser, setUpdatedUser] = useState({});    const handleChange = (e) => {     const newlyUpdatedUser = {       ...updatedUser,     }     if(props.user[e.target.name] === e.target.value) {        delete newlyUpdatedUser[e.target.name]     } else {       newlyUpdatedUser[e.target.name] = e.target.value     }     setUpdatedUser(newlyUpdatedUser);     setUser({        ...user,        [e.target.name]: e.target.value     })   };      console.log(updatedUser)    return (     <React.Fragment>       <label>         Name:         <input value={user.name} name=""name"" onChange={handleChange} />       </label>       <label>         Lang:         <input value={user.lang} name=""lang"" onChange={handleChange} />       </label>     </React.Fragment>   ); }  ReactDOM.render(<App user={userProp} />, document.getElementById(""root""));</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdnjs.cloudflare.com/ajax/libs/react/16.8.0/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.8.0/umd/react-dom.production.min.js""></script> <div id=""root""></div></code></pre>  </div>  </div>  </p>",1669373491.0,,false
"{'account_id': 17591279, 'reputation': 41, 'user_id': 12763092, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/UyMoS.jpg?s=256', 'display_name': 'Sabir Hassan', 'link': 'https://stackoverflow.com/users/12763092/sabir-hassan'}",False,0,1669372924,1669372924,74571556,74571118,CC BY-SA 4.0,"<p>Instead of having multiple state variables, you can have a single state variable like</p> <p><code>const [state, setState] = useState(props.user)</code></p> <p>and then change handler should look like</p> <pre><code>const handleChange = (e) => {     setState({       ...state,       [e.target.name]: e.target.value,     });   }; </code></pre> <p>finally, when submitting the form you can make your body data for post request like</p> <pre><code>const handleSubmit = () => {   const requestData = {}      for (const [key, value] of Object.entries(state)){     if(props.user[key] !== value) {       requestData[key] = value     }   }    axios.post('some api url', responseData) } </code></pre>",,,false
"{'account_id': 8994421, 'reputation': 353, 'user_id': 6705349, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d24a2ca210490930063316fa3032a079?s=256&d=identicon&r=PG', 'display_name': 'Ivan Satsiuk', 'link': 'https://stackoverflow.com/users/6705349/ivan-satsiuk'}",False,0,1669373277,1669373277,74571634,74571056,CC BY-SA 4.0,"<p>I'd test whether your <code>filterPredicate</code> works correctly. It should filter out what you are expecting to be filtered out and other way around. E.g. change the case of filters array, etc.</p> <p>Let's say other engineer refactors this function. You need to be sure it still works as expected.</p>",,,false
"{'account_id': 19225695, 'reputation': 9, 'user_id': 14048642, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/6ab0a95ab651fb53b393023a21f07f27?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'ItecStudent', 'link': 'https://stackoverflow.com/users/14048642/itecstudent'}",False,0,1669372246,1669372246,74571405,74570988,CC BY-SA 4.0,"<p>You can try the <a href=""https://www.npmjs.com/package/html-react-parser"" rel=""nofollow noreferrer"">html-react-parser</a> library. I have used it and I can style inline my content.</p> <pre><code> import parse from 'html-react-parser'   <div       style={{ color: 'black' }}  >      {parse(item?.content)}  </div> </code></pre>",,,false
"{'account_id': 18905868, 'reputation': 76, 'user_id': 13793027, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GhzyS_jwW0owSnZSoVJ7T-Isrg5GOrBTz79_y3a0Q=k-s256', 'display_name': 'shuo', 'link': 'https://stackoverflow.com/users/13793027/shuo'}",False,0,1704700598,1704700598,77777765,74570910,CC BY-SA 4.0,"<p>you can disable the preview panel by commenting out the <code><SandpackPreview /></code> component.</p> <pre class=""lang-js prettyprint-override""><code>import {   SandpackProvider,   SandpackLayout,   SandpackPreview,   SandpackCodeEditor, } from ""@codesandbox/sandpack-react"";      <SandpackProvider template=""react"" files={files}>       <SandpackLayout>         <SandpackCodeEditor           showTabs           showLineNumbers           showInlineErrors           wrapContent         />         {/* <SandpackPreview /> */}       </SandpackLayout>     </SandpackProvider> </code></pre>",,,false
"{'account_id': 26571246, 'reputation': 151, 'user_id': 20197439, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/0Yci2.jpg?s=256', 'display_name': 'sllmn', 'link': 'https://stackoverflow.com/users/20197439/sllmn'}",False,1,1669485232,1669483415,74584245,74570910,CC BY-SA 4.0,"<p>I did not receive an answer, so I will share my configuration, which I found optimal.</p> <p><strong>Component:</strong></p> <pre><code>//imports import {   SandpackCodeEditor,   SandpackCodeViewer,   SandpackLayout,   SandpackProvider,   useActiveCode,   useSandpack, } from ""@codesandbox/sandpack-react""; import prettier from ""prettier""; import parserBabel from ""prettier/parser-babel""; import { useCallback, useEffect, useRef, useState } from ""react""; import { SubHeader } from ""../text/SubHeader"";  //ðCSS const yourTheme = {   colors: {     surface1: ""#011627"",     surface2: ""#011627"",     surface3: ""#011627"",     clickable: ""#6988a1"",     base: ""#808080"",     disabled: ""#4D4D4D"",     hover: ""#c5e4fd"",     accent: ""#c5e4fd"",     error: ""#ffcdca"",     errorSurface: ""#811e18"",   },   syntax: {     plain: ""#d6deeb"",     comment: {       color: ""#374151"",       fontStyle: ""italic"",     },     keyword: {       color: ""#c792ea"",       fontStyle: ""italic"",     },     tag: ""#93C5FD"",     punctuation: ""#64748B"",     definition: ""#93C5FD"",     property: {       color: ""#FBBF24"",       fontStyle: ""italic"",     },     static: ""#38BDF8"",     string: ""#64748B"",   },   font: {     body: '-apple-system,  BlinkMacSystemFont, ""Segoe UI"", Roboto, Helvetica, Arial, sans-serif, ""Apple Color Emoji"", ""Segoe UI Emoji"", ""Segoe UI Symbol""',     mono: '""Noto Sans Mono"", ""DejaVu Sans Mono"", Menlo, Consolas, ""Liberation Mono"", Monaco, ""Lucida Console"", monospace',     size: ""14px"",     lineHeight: ""22px"",   }, };  const Prettier = ({ codemirrorInstance }) => {   const [prettierCode, setPrettierCode] = useState("""");   const { sandpack } = useSandpack();   const activeCode = useActiveCode();    const runPrettier = useCallback(() => {     if (activeCode.code) {       try {         const formatted = prettier.format(activeCode.code, {           parser: ""babel"",           plugins: [parserBabel],         });          setPrettierCode(formatted);       } catch {}     }   }, [activeCode.code]);    useEffect(() => {     const debounce = setTimeout(runPrettier, 100);     return () => {       clearInterval(debounce);     };   }, [runPrettier]);    useEffect(() => {     if (prettierCode) {       const cmInstance = codemirrorInstance.current.getCodemirror();        if (cmInstance) {         const trans = cmInstance.state.update({           selection: cmInstance.state.selection,           changes: {             from: 0,             to: cmInstance.state.doc.length,             insert: prettierCode,           },         });          cmInstance.update([trans]);       }        sandpack.updateFile(sandpack.activePath, prettierCode);        setPrettierCode(null);     }   }, [prettierCode]);    return null; };  export default function CodeBlock(props) {   const codemirrorInstance = useRef();    return (     <>        <div className=""m-2 flex flex-col rounded-2xl border border-gray-200 p-0 dark:border-gray-800"">         <SandpackProvider           theme={yourTheme}           files={{             ""App.js"": props.children,           }}           template=""react""         >           <div className=""flex rounded-2xl bg-gray-900 dark:bg-gray-900"">             <SandpackLayout               style={{                 padding: ""20px 20px 0px"",                 border: 0,               }}             >               <div className=""flex min-w-[375px] max-w-[900px]"">                 <SandpackCodeViewer                   // readOnly={false}                   // showReadOnly={false}                   ref={codemirrorInstance}                 />               </div>               <Prettier codemirrorInstance={codemirrorInstance} />             </SandpackLayout>           </div>         </SandpackProvider>       </div>     </>   ); } </code></pre> <p><strong>Usecase:</strong></p> <pre><code><CodeBlock>  {`<Badge    iconLeft={<MdLunchDining size={12} />}    iconRight={<MdArrowForward size={12} />}    tuning={""""}    // onClick={}    >    Large Badge   </Badge>`} </CodeBlock> </code></pre> <p><strong>How it looks:</strong></p> <p><a href=""https://i.sstatic.net/43RfU.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/43RfU.png"" alt=""How it looks"" /></a></p> <p>This may be useful for creating your own documentation. âï¸</p>",1669485232.0,,false
"{'account_id': 43074, 'reputation': 247249, 'user_id': 125734, 'user_type': 'registered', 'accept_rate': 80, 'profile_image': 'https://i.sstatic.net/Qy7qV.png?s=256', 'display_name': 'Titian Cernicova-Dragomir', 'link': 'https://stackoverflow.com/users/125734/titian-cernicova-dragomir'}",True,2,1669370513,1669370513,74571052,74570862,CC BY-SA 4.0,"<p>You can make the <code>ITextInputProps</code> type generic and the <code>InputElement</code> name generic. For <code>name</code> we can use the <code>Path</code> generic type from <code>useFormContext</code>. <code>keyof T</code> would also work, except <code>register</code> expects a <code>Path<T></code>, and while that will include <code>keyof T</code>, while <code>Path</code> still has unresolved type parameters (such as <code>T</code>) typescript won't be able to follow that relationship.</p> <p>When you instantiate the component, you will have to specify the argument explicitly: <code> <InputElement<TSongFormData> label=""Song Name"" name=""name"" /></code></p> <p>You can also create a specialized version of input field for a specific type using an instantiation expression in newer versions of TS:</p> <pre><code>const SongInputElement = InputElement<TSongFormData> </code></pre> <p>Putting it all together we get:</p> <pre><code> interface ITextInputProps<T> extends React.InputHTMLAttributes<HTMLInputElement> {   label?: string;   name: Path<T>; }  const InputElement = <T extends FieldValues>({ name, label, ...restProps }: ITextInputProps<T>) => {   const { register } = useFormContext<T>();   return (     <div>       <label htmlFor={name}>{label}</label>       <input id={name} {...restProps} {...register(name)} />     </div>   ); };    const SongForm = () => {   const { watch, handleSubmit } = useFormContext<TSongFormData>();    return (     <InputElement<TSongFormData> label=""Author"" name=""author"" />   ); };  const SongFormV2 = () => {     const { watch, handleSubmit } = useFormContext<TSongFormData>();   const SongInputElement = InputElement<TSongFormData>   return (     <SongInputElement label=""Song Name"" name=""name"" />   ) }; </code></pre> <p><a href=""https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcA5FDvmQFCiSxwDecAYsFgDYAmAaspwCuWVABo4ABWQwAFuMGosraCADCEAHYwsAD3gBfOERJwARJTwwAtDIgQA1lYIrTAbho0A9J5SdOcWSw4MGIwdAgCFA04YA0wQXguLBAsLThcZGiAIyCwNEVuLx8NZBSjDh44VFtBSpyUOHssAE84CLgAFQBlTQBzZSgQABFpZDotLCgCPCCASQ7dGFm4hIlQ1AAeDoA+OEXU7nRsSwA6ZfiYAAkOgFkAGQBBGBgoYCyEkQ3r+-OEgFFOMlUjBdkwaHA4JxkDlOAB+ABcVResV67ghJRSiKksi223c+g8uE0qHgvxgAKBaQAvHAtns9Ad0OwuHwBMJUNsABQsDFYcRQmHiE7CygktYQMJwfSI+aLMnisK4gCUcCpoPB6WJ8BYlF6wBJkylqrgCiUKnUEz0uM5SrRcEoMEEUGinI1EI23GAADdtm6IbSBVw4DIYCBOAMqUxefptkxA5x9BtPPHff7-RtYhcYtxI9HmMKTqKYArUIYmAXdfrtFBObylYZPKn055PT6NbaaPp3B5dAx4DBmmAgt0+gNhqNjWD0aUsIiSa8NKiNcgErYoAikQulxDUEJehv5yi7bg1woD8jF3asq9uL0sOet3bOM1XrhUBuWCTMgAvZBzi+9FKADaAC6+LdkSGgknAPSLmOxo2qq6oQpB0EsAA7tIJ7iDImTcICXSCFkIDAAYxqmmOFraFaI5wSoIwwMgXIdhqDpOi6fobE2aYbM4gx+mmljAJoVKmKYAn+rgUKoKgAByM6ib0N5wEpwDcFYRKcKgVgAEwqcgYBWM0VgAGz6YZOhWAAHOJaZppohHEaRka4Ro+FYI5JEwJynLcKMKpqpqUEQICJycBAvScqYfmMaY4gxcgSr1hJ3F2RsZIUikWhbLB-T0aMuzxqJuVwPJKSmHAvKibyFWNhJ7oZYCWUwDlo75YxhXQlwokPKu0AVVVpgrrI-VwHVdnppmCQBIOWCiagRFebVqXup4fEgCttIhFgsYAFJdAA8rJJyHouwAEM0nKYTAJ42uIGi1Jw4g6fWSbbalSZNh2XaElqMFtYMvB6TSiGBVOQVoXA13YcGeEEYtpFGjSFHmpo1EtbReWDAxTE2sef25Y1lLwDSRPNa1dHYwVrFYI6zpwK6PGbbxKj1Sg+DCRoom2RN6TSXJCmmKp3AqTeGkhdpem9AZRmmeZViWTZbMOQjMAuXDHmqz5CUBbsqEhVgYURVFCVxXAOvJRNm3uoTKzkk1wKQl1nDFX0pUzgNgs1WN1u0rbFyZY7RWmL1I1QJ7KSicNa7LWzGZ2zNQ7zarscTUm63M+9TD7UdJ0Aedl3QzId2VY9z2vZ472ceNcDfa4QA"" rel=""nofollow noreferrer"">Playground Link</a></p>",,,false
"{'account_id': 18438623, 'reputation': 1, 'user_id': 13431819, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/VqBA6.jpg?s=256', 'display_name': 'krishnaacharyaa', 'link': 'https://stackoverflow.com/users/13431819/krishnaacharyaa'}",False,23,1727735065,1688447863,76609568,74570835,CC BY-SA 4.0,"<p>In the latest <code>App Router</code> of Nextjs <code>13.4</code>, It can be done in the following way.</p> <p><strong>Summary</strong></p> <ol> <li><p>single param (<code>blog/123</code>)</p> <ul> <li>Use: <code>[blogId]</code></li> </ul> </li> <li><p>multiple params (<code>blog/a/b</code>)</p> <ul> <li>Use: <code>[...blogId]</code></li> </ul> </li> <li><p>optional params (<code>blog/</code> or <code>blog/a</code>)</p> <ul> <li>Use: <code>[[...blogId]]</code></li> </ul> </li> </ol> <h2><a href=""https://i.sstatic.net/e4l5N.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/e4l5N.png"" alt=""enter image description here"" /></a></h2> <h5>â  Caution : You cannot use both optional params and multiple params at the same time</h5> <hr /> <h3>Invoking</h3> <pre><code> export default function Home() {     return (         <div className=""flex flex-col gap-4"">             <Link href={""/blog/123""} className=""bg-green-400 w-fit rounded-lg p-4"">                 Single param             </Link>             <Link href={""blog/a/b""} className=""bg-blue-400 w-fit rounded-lg p-4"">                 Multiple Params             </Link>             <Link href={""blog""} className=""bg-amber-400 w-fit rounded-lg p-4"">                 Optional             </Link>         </div>     ); } </code></pre> <h3>Receiving</h3> <ol> <li><h4>Single parameter</h4> <pre><code>export default function BlogPost({ params }: { params: { blogId: string } }) {  return <h1>{params.blogId}</h1>; }   </code></pre> </li> <li><h4>Multiple Parameters</h4> <pre><code>export default function BlogPost({ params }: { params: { blogId: string[] } }) {  console.log(params);  return (      <div className="""">          {params.blogId[0]}          {params.blogId[1]}      </div>   ); } </code></pre> </li> </ol> <hr /> <p><strong>Useful Links:</strong></p> <ul> <li><p><a href=""https://stackoverflow.com/a/76613628/13431819"">Get URL Params (Next.js 13)</a></p> </li> <li><p><a href=""https://nextjs.org/docs/app/building-your-application/routing/dynamic-routes"" rel=""nofollow noreferrer"">Nexjs Dynamic routes</a></p> </li> </ul>",1727735065.0,,false
"{'account_id': 80425, 'reputation': 703, 'user_id': 227443, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/DUPvn.png?s=256', 'display_name': 'Jerome Leclanche', 'link': 'https://stackoverflow.com/users/227443/jerome-leclanche'}",False,28,1703737556,1669386967,74574345,74570835,CC BY-SA 4.0,"<p><a href=""https://nextjs.org/docs/app/api-reference/file-conventions/page"" rel=""nofollow noreferrer"">https://nextjs.org/docs/app/api-reference/file-conventions/page</a></p> <p>So: <code>app/dashboard/[id]/page.jsx</code></p> <p>Your <code>Page</code> function can take a <code>params</code> argument:</p> <pre><code>export default function Page({ params, searchParams }) {     return <div>ID: {params.id}</div> } </code></pre>",1703737556.0,,false
"{'account_id': 16514367, 'reputation': 776, 'user_id': 11932259, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/FrPiC.jpg?s=256', 'display_name': 'Muhammad Usama Rabani', 'link': 'https://stackoverflow.com/users/11932259/muhammad-usama-rabani'}",False,0,1684422855,1684422855,76282149,74570835,CC BY-SA 4.0,<p>use this below approach and this worked for me.</p> <pre><code>app/dashboard/[id]/page.jsx  </code></pre>,,,false
"{'account_id': 25745846, 'reputation': 11, 'user_id': 19499075, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/0244c91eaa7492e5f91b1bd3766fc24c?s=256&d=identicon&r=PG', 'display_name': 'ameer', 'link': 'https://stackoverflow.com/users/19499075/ameer'}",False,1,1683715554,1683675523,76214003,74570835,CC BY-SA 4.0,"<p>you can use the getLayout function to define a custom layout for a page, including dynamic routes. Here's an example of how you can use <code>getLayout</code> to apply the <code>DashboardLayout</code> to all pages under the <code>/dashboard</code> route:</p> <p>Define your custom DashboardLayout component:</p> <pre class=""lang-js prettyprint-override""><code>     import React from 'react';      import Navbar from '../components/Navbar';        const DashboardLayout = ({ children }) => {        return (      <>        <Navbar />        <main>{children}</main>      </>    );  };    export default DashboardLayout; </code></pre> <p>In your dynamic route file <code>(pages/dashboard/[id].jsx)</code>, define the getLayout function to return the <code>DashboardLayout</code>:</p> <pre class=""lang-js prettyprint-override""><code>        import DashboardLayout from '../../layouts/DashboardLayout';          const DashboardPage = ({ id }) => {       return <h1>Dashboard page with ID: {id}</h1>;     };          DashboardPage.getLayout = function getLayout(page) {       return <DashboardLayout>{page}</DashboardLayout>;     };          export default DashboardPage; </code></pre> <p>Note that the <code>getLayout</code> function takes in the page as an argument, representing the page component wrapped with the layout. You can then return the <code>DashboardLayout</code> component with the page as its child.</p> <p>To extract the id parameter from the URL, you can use the <code>useRouter</code> hook from the <code>next/router</code> module:</p> <pre class=""lang-js prettyprint-override""><code>   import { useRouter } from 'next/router';    import DashboardLayout from '../../layouts/DashboardLayout';          const DashboardPage = () => {       const router = useRouter();       const { id } = router.query;            return <h1>Dashboard page with ID: {id}</h1>;     };          DashboardPage.getLayout = function getLayout(page) {       return <DashboardLayout>{page}</DashboardLayout>;     };          export default DashboardPage; </code></pre> <p>In this example, we use the <code>useRouter</code> hook to access the query object containing the dynamic route parameters. We can then extract the id parameter from the query object and use it in our component.</p> <p>With these changes, your dynamic route should now use the <code>DashboardLayout</code> component.</p>",1683715554.0,,false
"{'account_id': 4903864, 'reputation': 215, 'user_id': 3951168, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/94926b68d53b4ec675d3415d5516049d?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'iaq', 'link': 'https://stackoverflow.com/users/3951168/iaq'}",False,0,1669778610,1669778610,74622533,74570833,CC BY-SA 4.0,"<pre><code>    function useCreationTrunk() {                  return useMutation((note) => fetch(`api/createNote`, {                 method: 'POST',                 body: note             }).then(res => res.json()), {                     onSuccess: (resData) => {                     console.log(resData)                     }             });     } </code></pre> <p>Then you can use this hook in your component.</p> <pre><code>const { isLoading, isSuccess, isError, data, error, mutate } = useCreationTrunk(); const note = {...} useCreationTrunkMutation.mutate(note); console.log(data); </code></pre>",,,false
"{'account_id': 2138826, 'reputation': 53, 'user_id': 1897992, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/8gMRj.png?s=256', 'display_name': 'Florian', 'link': 'https://stackoverflow.com/users/1897992/florian'}",False,0,1669369688,1669369688,74570886,74570767,CC BY-SA 4.0,"<p>OK I have found a solution:</p> <p>You can simply check if minifying has been enabled for your js code, which would only be the case in production. E.g. I have disabled logging with this simple trick. The element.type.name will be renamed by minifying.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const MyElement = ({isProduction}) => (<div>Environment: {isProduction?'Production':'Development'}</div>);  const MyElementEl = React.createElement(MyElement); const isProduction = (MyElementEl.type.name !== 'MyElement');  if(isProduction) //will be true when your js sources are minified      console = { ...console, logX: console.log, log: () =>{ } };      ReactDOM.render(<MyElement isProduction={isProduction}/>, document.getElementById(""app""));</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdnjs.cloudflare.com/ajax/libs/react/16.6.3/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.6.3/umd/react-dom.production.min.js""></script> <body> <div id=""app"" /> </body></code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 11865310, 'reputation': 30895, 'user_id': 8682983, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/acd4353f892e1de4f03d8e8b34b313f7?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'LeeLenalee', 'link': 'https://stackoverflow.com/users/8682983/leelenalee'}",True,0,1669375152,1669375152,74572014,74570679,CC BY-SA 4.0,"<p>This is because you likely are using we pack 4 which does not support static properties, so you will need to update to webpack 5, or use the babel/preset-env config with the babel loader to transpile it</p>",,,false
"{'account_id': 16212572, 'reputation': 95, 'user_id': 11706125, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/f5e816febd6680b200466c0064d2f9e8?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Liyang', 'link': 'https://stackoverflow.com/users/11706125/liyang'}",False,0,1690809706,1690799575,76802767,74570608,CC BY-SA 4.0,"<p>the important thing is <strong>offline_access</strong>, it will give <strong>refresh_token</strong></p> <blockquote> <p>scope:<a href=""https://analysis.windows.net/powerbi/api/.default"" rel=""nofollow noreferrer"">https://analysis.windows.net/powerbi/api/.default</a> <strong>offline_access</strong></p> </blockquote> <p>refer to here <a href=""https://learn.microsoft.com/EN-US/azure/active-directory/develop/scopes-oidc"" rel=""nofollow noreferrer"">https://learn.microsoft.com/EN-US/azure/active-directory/develop/scopes-oidc</a></p> <p><a href=""https://i.sstatic.net/r4vCD.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/r4vCD.png"" alt=""enter image description here"" /></a></p>",1690809706.0,,false
"{'account_id': 24283882, 'reputation': 13473, 'user_id': 18229928, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/xeNOh.jpg?s=256', 'display_name': 'Rukmini', 'link': 'https://stackoverflow.com/users/18229928/rukmini'}",True,0,1669450004,1669450004,74580633,74570608,CC BY-SA 4.0,"<p><em><strong>I tried to reproduce the same in my environment (Postman) and got the results successfully like below:</strong></em></p> <p>I generated <strong>tokens for PowerBi</strong> by using the below parameters:</p> <pre class=""lang-json prettyprint-override""><code>GET https://login.microsoftonline.com/TenantID/oauth2/v2.0/token  client_id:ClientID client_secret:***** grant_type:authorization_code scope:https://analysis.windows.net/powerbi/api/.default offline_access redirect_uri:redirect_uri code:code </code></pre> <p><img src=""https://i.sstatic.net/gTCnE.png"" alt=""enter image description here"" /></p> <p><strong>To refresh the access token, I used the below parameters:</strong></p> <pre class=""lang-json prettyprint-override""><code>GET https://login.microsoftonline.com/TenantID/oauth2/v2.0/token  client_id:ClientID client_secret:**** grant_type:refresh_token refresh_token: refresh_token </code></pre> <p><img src=""https://i.sstatic.net/vGwU6.png"" alt=""enter image description here"" /></p> <p>To refresh the access token in your React App, try the below sample code:</p> <pre class=""lang-js prettyprint-override""><code>let config = {         type: 'report',         tokenType: models.TokenType.Aad,         accessToken: â***** â¦â,         embedUrl: âhttps: â¦â,         eventHooks: {             accessTokenProvider: getNewAccessToken         }     }; let embedContainer = $('#embedContainer')[0]; report = powerbi.embed(embedContainer, config); </code></pre> <p>To know more in detail, <strong>refer</strong> the below MsDoc:</p> <p><a href=""https://learn.microsoft.com/en-us/javascript/api/overview/powerbi/refresh-token"" rel=""nofollow noreferrer"">Refresh the access token in Power BI embedded analytics </a></p>",,,false
"{'account_id': 21820209, 'reputation': 2045, 'user_id': 16116506, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/E1zGO.png?s=256', 'display_name': 'Wraithy', 'link': 'https://stackoverflow.com/users/16116506/wraithy'}",False,1,1669368658,1669368658,74570676,74570589,CC BY-SA 4.0,"<p>If I understand what are you trying to achieve, use conditional rendering using ternary operator:</p> <pre><code><SafeAreaView style={styles.container}>   <Pressable onPress={() => goToDetail(props)}>     <Image       style={styles.image}       on       source={{         uri: props.urlToImage,       }}     />   </Pressable>   <View style={{ paddingHorizontal: 20, paddingBottom: 10 }}>     <Text style={styles.title}>{!!props.title ? : props.title : ""empty title placeholder""}</Text>     <Text style={styles.deskripsi} numberOfLines={3}>       {props.description}     </Text>     <View style={styles.data}>       <Text style={styles.h2}>         source:<Text style={styles.sumber}> {props.sourceName}</Text>       </Text>       <Text style={styles.tanggal}>         {moment(props.publishedAt).format(""MMM Do YY"")}       </Text>     </View>   </View> </SafeAreaView> </code></pre>",,,false
"{'account_id': 27043199, 'reputation': 1, 'user_id': 20597762, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0Z_PXYg4Irqhavj6hk2KB3I3gROUBEdlCgWvQ=k-s256', 'display_name': 'Anil Saxena', 'link': 'https://stackoverflow.com/users/20597762/anil-saxena'}",False,0,1669664405,1669664405,74605718,74570587,CC BY-SA 4.0,"<p>Fixed now. the new property that I was adding isSelected : 'true', I kept the true in string but it had to be Boolean that caused this ordeal not to fix.</p>",,,false
"{'account_id': 13310440, 'reputation': 847, 'user_id': 9608873, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-jTJshXzWC-s/AAAAAAAAAAI/AAAAAAAAAUI/nC9eSzIynfY/photo.jpg?sz=256', 'display_name': 'Ragnar', 'link': 'https://stackoverflow.com/users/9608873/ragnar'}",False,0,1669611082,1669369542,74570857,74570587,CC BY-SA 4.0,"<p>you are passing a single ref to all so it saves only last value and overwrites  all previous ones. you have to create as many refs as the length of your items</p> <pre><code>  import * as React from 'react'; import { Text, View, StyleSheet,Pressable } from 'react-native'; import Constants from 'expo-constants';   export default function App() {   const data = [{name:'wqh',id:12},{name:'dj',id:1212}]   const invoiceTitleRef = [] //Array of refs     const onChange = (index, selectedTitle) => {     console.log(index, selectedTitle) //you have your index and selected value of the item     console.log('Selected Title => ', invoiceTitleRef[index].getSelectedTitle())   }    return (     <View style={{ marginTop: 50,flex:1,backgroundColor:'green' }}>       {data.map((item, index) => (          <InvoiceTitle           index={index}           ref={ref => invoiceTitleRef[index]=ref}           key={item.id} title={item.name}           onChange={onChange} />       ))}     </View>   ) }  const InvoiceTitle = React.forwardRef(({     title,     onChange,     index,     ...props }: InvoiceTitleProps, ref) => {      const[selectedTitle, setSelectedTitle] = React.useState('')      React.useImperativeHandle(ref, () => ({        getSelectedTitle : () => title     }))     const onClick = () => {       setSelectedTitle(title)       onChange(index,selectedTitle)     }         return (         <Pressable          onPress={onClick}              style = {({pressed}) => [styles.titleContainer,              {backgroundColor : 'red', opacity : pressed ? 0.5 : 1}]}>            <Text>{title}</Text>        </Pressable>     ) })   const styles = StyleSheet.create({   container: {     flex: 1,     justifyContent: 'center',     paddingTop: Constants.statusBarHeight,     backgroundColor: '#ecf0f1',     padding: 8,   },   paragraph: {     margin: 24,     fontSize: 18,     fontWeight: 'bold',     textAlign: 'center',   },   titleContainer:{     margin:20,     padding:20   } }); </code></pre> <p><strong>another way :-</strong> this way you don't need to use ref. you have index and value in your onChange method inside parent component and now you know which item is pressed you can save in array or just use it.(don't need to use any refs )</p>",1669611082.0,,false
"{'account_id': 8111089, 'reputation': 881, 'user_id': 6111165, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-86FdlUs7ug4/AAAAAAAAAAI/AAAAAAAAAiI/iP2VRMP-NUY/photo.jpg?sz=256', 'display_name': 'Carlos Jafet Neto', 'link': 'https://stackoverflow.com/users/6111165/carlos-jafet-neto'}",False,0,1669370203,1669370203,74570993,74570472,CC BY-SA 4.0,<p>Did you try adding a return statement before getEarningCodesForCompany:</p> <pre><code>const getCodesById = (Id) => get(`${BASE_URL}/${companyId}/codes`);  export function* getTableById(action) {  const Id = yield select(getCurrentCustomeId); return getEarningCodesForCompany(companyId).then((response) => {     console.log(response) //It shows correct array of objects from api       return response;     }); } </code></pre>,,,false
"{'account_id': 3299850, 'reputation': 445, 'user_id': 2776270, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/5q1il.jpg?s=256', 'display_name': 'tetta', 'link': 'https://stackoverflow.com/users/2776270/tetta'}",False,0,1669368437,1669368437,74570614,74570472,CC BY-SA 4.0,"<pre><code>export function* getTableById(action) {     const Id = yield select(getCurrentCustomeId);     const codes = yield call(getEarningCodesForCompany, companyId);     console.log(codes) } </code></pre>",,,false
"{'account_id': 7378660, 'reputation': 365, 'user_id': 5616238, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/1519206588392222/picture?type=large', 'display_name': 'AIMEUR Amin', 'link': 'https://stackoverflow.com/users/5616238/aimeur-amin'}",False,3,1669517962,1669517962,74587178,74570405,CC BY-SA 4.0,"<p>I've had this problem before, and you're not doing anything wrong, this error is just related to the SVG you're using, it's from react-icons/hi and I've noticed that whenever I use an icon from that specific part of the library (<code>react-icons/hi</code>) that warning shows up! so that warning won't hurt your app or anything but if you want it to go away just choose another svg from a different part of the library, like <code>FaChevronDown</code> or <code>IoChevronDownOutline</code>.</p> <p>Hope this was helpful.</p>",,,false
"{'account_id': 26855626, 'reputation': 28, 'user_id': 20439979, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu2HqJQ1riOW_4Ihq8A3RWsfLq9OQAIYtQAs2tXm=k-s256', 'display_name': 'Jayesh Aherwal', 'link': 'https://stackoverflow.com/users/20439979/jayesh-aherwal'}",False,0,1669369883,1669369883,74570931,74570405,CC BY-SA 4.0,"<p>I guess your icon is having focusable element.your issue is seems of syntax but it might be because of different taking place. please refer this <a href=""https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden#:%7E:text=The%20aria%2Dhidden%20attribute%20can,children%20from%20the%20accessibility%20tree"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden#:~:text=The%20aria%2Dhidden%20attribute%20can,children%20from%20the%20accessibility%20tree</a>.</p>",,,false
"{'account_id': 1776719, 'reputation': 5391, 'user_id': 1620380, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e2bc6454684e2ad5160d435ff2272ad9?s=256&d=identicon&r=PG', 'display_name': 'maksimr', 'link': 'https://stackoverflow.com/users/1620380/maksimr'}",False,0,1669989584,1669932069,74648650,74570266,CC BY-SA 4.0,"<p>You can mock fetch or XMLHttpRequest which used by axios. jasmine has official <a href=""https://github.com/jasmine/jasmine-ajax"" rel=""nofollow noreferrer"">jasmine-ajax</a> library which allows mocking XMLHttpRequest object <strong>but not</strong> fetch. I think that in 99% axios will pick the <code>fetch</code> instead of old XMLHttpRequest so I recommend to use something like <a href=""http://www.wheresrhys.co.uk/fetch-mock/"" rel=""nofollow noreferrer""><code>fetch-mock</code></a></p> <pre class=""lang-js prettyprint-override""><code>it(""should show data on click me"", /*â ï¸*/async () => {     /*â ï¸*/fetchMock.mock('/my-url', {data: {disc: 'foo'}});     const wrapper = mount(<MyComponent />);     let elem = wrapper.find(MyComponent);     let btn = elem.find('[data-testid=""update""]');     btn.at(0).simulate(""click"");     elem = elem.update();      // because fetch async we should wait response     expectAsync(/*â ï¸*/(await waitFor(""table"")).length).toBe(1);       function waitFor(selector) {         return new Promise((resolve) => {            checkSelector();            function checkSelector() {              const result = elem.find(selector);              if (result.length) return resolve(result);              setTimeout(checkSelector);            }         });     } }); </code></pre>",1669989584.0,,false
"{'account_id': 22744990, 'reputation': 233, 'user_id': 16905893, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/FZzZw.jpg?s=256', 'display_name': 'Spyr0', 'link': 'https://stackoverflow.com/users/16905893/spyr0'}",True,0,1669371977,1669371977,74571344,74569993,CC BY-SA 4.0,"<p>The <code>z-index</code> of a positioned element and any flex elements that are descended from it is determined by the <code>z-index</code> CSS attribute. Elements with bigger <code>z-index</code> overlap smaller ones.</p> <p>Example:</p> <pre><code>.ClassName { z-index: 2; }  .ClassName2 { z-index: 1; } </code></pre> <p>In this case <code>.ClassName</code> has a higher <code>z-index</code> then the <code>ClassName2</code> element, so it would be visible on top of <code>.ClassName2</code> element.</p>",,,false
"{'account_id': 22330938, 'reputation': 111, 'user_id': 16552231, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/15a1def9fcae5be039e02a8471d28428?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'leo', 'link': 'https://stackoverflow.com/users/16552231/leo'}",False,0,1669366129,1669366129,74570207,74569993,CC BY-SA 4.0,<p>Apply a <code>z-index</code> to the menu so it will stack on top of the position absolute circles. As long as the <code>z-index</code> of the me nu is higher than the one of the background you should be fine.</p>,,,false
"{'account_id': 30089540, 'reputation': 11, 'user_id': 23059283, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ACg8ocIn36eIa-lLH6WWiYy5aRkdmzb5hViA9NJhQZUZNlJV=k-s256', 'display_name': 'dev ado', 'link': 'https://stackoverflow.com/users/23059283/dev-ado'}",False,1,1712176393,1712060804,78261290,74569846,CC BY-SA 4.0,"<p>To integrate a modal within a full-screen component using Material-UI, you can utilize the Backdrop component along with Fade for the transition effect. Here's the Example of the code provided:</p> <pre><code><Backdrop     aria-labelledby=""transition-modal-title""     aria-describedby=""transition-modal-description""     open={true} // This controls whether the backdrop is open or not     slots={{ backdrop: Backdrop }} // Customizing the slots to use Backdrop     slotProps={{         backdrop: {             timeout: 500, // Timeout for the backdrop transition         },     }}     sx={{ zIndex: 9999 }} // Customizing the styles using sx prop >     <Fade in={""open""}> // Applying a fade transition, ""open"" here should be a boolean indicating whether to apply the transition or not         <Box             className=""FadeModal""             sx={{                 position: ""absolute"",                 top: ""50%"",                 left: ""50%"",                 transform: ""translate(-50%, -50%)"",                 width: 400,                 bgcolor: ""background.paper"",                 border: ""none"",                 borderRadius: ""8px"",                 boxShadow: 24,             }}         >             {/* Modal content */}             {/* Grid and Typography components for the title and description */}             {/* Button to close the modal */}         </Box>     </Fade> </Backdrop> </code></pre> <p>You can modify this code The reason why only the backdrop is working and the modal content is not displaying properly within the full-screen mode might be due to the stacking context and positioning of the elements. When using the Backdrop component along with a modal, it's essential to ensure that the modal content is positioned correctly relative to the backdrop and the viewport.</p> <p>The backdrop will open above all render position as a new custom modal</p>",1712176393.0,,false
"{'account_id': 13302313, 'reputation': 1005, 'user_id': 9603417, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/aJfoP.png?s=256', 'display_name': 'Paul-Marie', 'link': 'https://stackoverflow.com/users/9603417/paul-marie'}",False,1,1669364307,1669364307,74569895,74569846,CC BY-SA 4.0,"<p>Are you sure it doesn't work ? maybe your modals are well displayed but behind your fullscreen component (did you use devtool's element inspector to check the html / css to see if your modal was here ?). You might need to enrich your modal's css to make it visible ahead of fullscreen component, a mere <code>z-index: 2</code> on the modal' style could help ?</p>",,,false
"{'account_id': 13846112, 'reputation': 736, 'user_id': 9995234, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-VaXl3NI4S7A/AAAAAAAAAAI/AAAAAAAAPeU/NpAWrVxcM2g/photo.jpg?sz=256', 'display_name': 'Saumyajit', 'link': 'https://stackoverflow.com/users/9995234/saumyajit'}",False,0,1728206779,1728203325,79058660,74569837,CC BY-SA 4.0,"<p>The most efficient way would be to use <a href=""https://github.com/photopea/UTIF.js"" rel=""nofollow noreferrer"">https://github.com/photopea/UTIF.js</a>. Arguably the best decoder for tiff files and offers more functionality as compared to tiff.js.</p> <p>In your case -</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>import UTIF from ""utif""; Promise.all(promises)   .then((values) => {     let images = [];     values.forEach((res) => {       if (res.imageBuffer) {         const blob = new Blob([new Uint8Array(res.imageBuffer.Body.data)], {           type: res.imageBuffer.ContentType,         });         let url = URL.createObjectURL(blob);          if (res.imageBuffer.ContentType === ""image/tiff"") {           let arraybuffer = res.imageBuffer;           let pages = UTIF.decode(arraybuffer);           UTIF.decodeImage(arraybuffer, pages[0]);           const rgba = UTIF.toRGBA8(pages[0]);           const myCanvas = document.createElement(""canvas"");           myCanvas.width = pages[0].width;           myCanvas.height = pages[0].height;           const ctx = myCanvas.getContext(""2d"");           if (ctx === null) {             throw new Error(""Could not load canvas 2d context"");           }           const imageData = ctx.createImageData(canvas.width, canvas.height);           for (let i = 0; i < rgba.length; i++) {             imageData.data[i] = rgba[i];           }           ctx.putImageData(imageData, 0, 0);           url = myCanvas.toDataURL('image/png');         }         images.push({           blobURL: url,           date: res.attachment_source_date,           ...res,         });       }     });     setImages(images);   })   .catch((err) => {     console.error(err);   });</code></pre>  </div>  </div>  </p> <p>Check out these examples for ref -</p> <p><a href=""https://github.com/johnthad/utif-demo/blob/master/thumbnails-lzw.html"" rel=""nofollow noreferrer"">https://github.com/johnthad/utif-demo/blob/master/thumbnails-lzw.html</a> <a href=""https://codesandbox.io/p/sandbox/xqk18krqo"" rel=""nofollow noreferrer"">https://codesandbox.io/p/sandbox/xqk18krqo</a></p>",1728206779.0,,false
"{'account_id': 24872279, 'reputation': 1, 'user_id': 18746645, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gi11LW-nYhzzm1GpPtKe4h_rU9GjOsimpVsLXEK=k-s256', 'display_name': 'Aleksandr Bautin', 'link': 'https://stackoverflow.com/users/18746645/aleksandr-bautin'}",False,0,1685273443,1685273443,76351264,74569830,CC BY-SA 4.0,"<p>Try add <code>""homepage"": """"</code> at your package.json file. Had the same problem, this solution helped me</p>",,,false
"{'account_id': 28636225, 'reputation': 21, 'user_id': 21926338, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AGNmyxaKh_I7Z5Q3ZMEylQ5TqUXTu5vYq630u88FZaqjrA=k-s256', 'display_name': 'Alexander', 'link': 'https://stackoverflow.com/users/21926338/alexander'}",False,2,1684507110,1684507110,76290098,74569592,CC BY-SA 4.0,"<pre><code>import React from 'react'; import i18next from 'i18next'; import '../internationalization/i18next'; import {   Navigate,   IndexRouteObject,   NonIndexRouteObject,   createBrowserRouter, } from 'react-router-dom'; import { LayoutAuth } from '../components'; import { SignIn } from '../containers';  type CustomRouteObjectParams = {     category?: 'authorization' | 'administration';     title?: string; };  type CustomIndexRouteObject = IndexRouteObject & CustomRouteObjectParams;  type CustomNonIndexRouteObject = Omit<NonIndexRouteObject, 'children'> &     CustomRouteObjectParams & {         children?: (CustomIndexRouteObject | CustomNonIndexRouteObject)[];     };  type CustomRouteConfig = CustomIndexRouteObject | CustomNonIndexRouteObject;  export const routes: CustomRouteConfig[] = [{     path: '/auth',     category: 'authorization',     title: i18next.t('routes:auth'),     element: <LayoutAuth />,     children: [         {           index: true,           element: <Navigate to=""signin"" />,         },         {           path: '*',           element: <Navigate to=""signin"" />,         },         {           path: 'signin',           title: i18next.t('routes:signin'),           element: <SignIn />,         },       ], }]  export const router = createBrowserRouter(routes);  export type TRoutes = typeof routes; </code></pre>",,,false
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,3,1669678675,1669678675,74607624,74569592,CC BY-SA 4.0,"<p>I'd suggest a more conventional RRD way of ""injecting"" behavior by recommending creating a route component that takes the additional parameter as a prop and handles the logic accordingly.</p> <p>Example:</p> <pre><code>const PermissionLayout = ({ permission }) => {   const hasPermission = ... permission logic ...    return hasPermission ? <Outlet /> : <Navigate to=""/"" replace />; }; </code></pre> <pre><code>const router = createBrowserRouter([   {     element: <PermissionLayout permission={['edit']} />     children: [       {         path: ""/"",         element: <Dashboard />,       }     ],   },   ... ]);  const AdminRoutes: FunctionComponent = () => {   return <RouterProvider router={router} />; };          export default AdminRoutes; </code></pre>",,,false
"{'account_id': 6897165, 'reputation': 7542, 'user_id': 5298696, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-_Lk3Kq_mN2c/AAAAAAAAAAI/AAAAAAAAAEQ/4UXPTXc6z6U/photo.jpg?sz=256', 'display_name': 'CollinD', 'link': 'https://stackoverflow.com/users/5298696/collind'}",True,1,1669370558,1669370558,74571068,74569592,CC BY-SA 4.0,"<p>You should be able to declare this object as a different type that extends <code>RouteObject</code> if you want to use it for other things as well.</p> <pre><code>type CustomRouteConfig = RouteObject & { permission: string[] }  const routeConfig: CustomRouteConfig[] = [{   path: '/',   element: <Dashboard />,   permission: ['edit'], //custom param }];  // note: you don't want to instantiate this router // inside a functioncomponent body. // at least stick it in a useEffect, but most likely // this should be static. const router = createBrowserRouter(routeConfig);  export const AdminRoutes: FunctionComponent = () =>    <RouterProvider router={router} /> </code></pre>",,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",False,1,1692395471,1669362128,74569587,74569559,CC BY-SA 4.0,"<p>You need to access the person object first in the main JSON data:</p> <pre><code>const { id, person, city, email, joiningDate, role } = curElem; const {name, avatar} = person </code></pre>",1692395471.0,,false
"{'account_id': 22330938, 'reputation': 111, 'user_id': 16552231, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/15a1def9fcae5be039e02a8471d28428?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'leo', 'link': 'https://stackoverflow.com/users/16552231/leo'}",False,0,1669365559,1669365559,74570115,74569544,CC BY-SA 4.0,<p>To achieve smooth scroll with a ref you can do something like this</p> <pre><code>const elementRef = useRef(null);  const onClick = () => {   elementRef.current.scrollIntoView({behavior: 'smooth'}); } </code></pre> <p>Unfortunately the smooth behaviour is not supported across all browsers so you will need to install <code>smoothscroll-polyfill</code></p>,,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",False,1,1669361871,1669361871,74569550,74569537,CC BY-SA 4.0,"<p>Add initial values in the state variable</p> <pre><code>const [personName, setPersonName] = React.useState(['Oliver Hansen']); // or [names[0]] </code></pre>",,,false
"{'account_id': 26877426, 'reputation': 361, 'user_id': 20458458, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/QTyWi.jpg?s=256', 'display_name': 'kuuhak-u', 'link': 'https://stackoverflow.com/users/20458458/kuuhak-u'}",False,0,1669362425,1669362133,74569588,74569478,CC BY-SA 4.0,"<p>Try this maybe it  helps</p> <pre><code>import * as React from ""react"";  import {   Box,   ListItem,   ListItemIcon,   ListItemText,   Drawer } from ""@material-ui/core"";  const SidebarData = [   {     title: ""Home"",     icon: <HomeIcon />,     link: ""/home""   },   {     title: ""Computer Support"",     icon: <ComputerIcon />,     link: ""/computer""   } ];  const sideList = () => (   <Box>     {SidebarData.map((listItem, index) => (       <ListItem button key={index}>         <ListItemIcon>{listItem.icon}</ListItemIcon>         <ListItemText primary={listItem.title}  onClick={() => {              window.location.pathname = listItem.link;            }} />       </ListItem>     ))}   </Box> );  export default function App() {   const [open, setOpen] = React.useState(false);    const handleToggle = () => {     setOpen(!open);   };    return (     <div className=""Sidebar"">       <button onClick={handleToggle}>show</button>        <Drawer open={open} anchor=""right"" onClick={handleToggle}>         {sideList()}       </Drawer>     </div>   ); } </code></pre>",1669362425.0,,false
"{'account_id': 19255761, 'reputation': 907, 'user_id': 15119024, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/LyxLa.png?s=256', 'display_name': 'ClusterH', 'link': 'https://stackoverflow.com/users/15119024/clusterh'}",False,0,1669363415,1669363415,74569781,74569436,CC BY-SA 4.0,"<p>As you can see in your code, <code>getDocumentProps</code> is not function component (You did not return JSX element) or custom Hook(custom Hook should start name with <code>use</code>, for example: <code>useGetDocumentProps</code>). It's just javascript function. So you are breaking react hook rules.</p> <p>In my opinion, you can change the name with <code>useGetDocumentProps</code> and use it as custom Hook and return your data and error/loading. And then import in your main Component to get your data like that:</p> <pre><code>import { useGetDocumentProps } from './your custom hook path here'  const YourComponentName = (pageProps) => {   const { loading, error, title, description, author, type, image } = useGetDocumentProps()   if (loading) return (<p>Loading...</p>)  if (error) return (<p>{`Oops there has been an error: ${error}`}</p>)      return (     <>{'Your logic here with data'}</>   ) }  export default YourComponentName </code></pre>",,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",True,1,1669373498,1669373498,74571679,74569285,CC BY-SA 4.0,"<p>Thats very abstract situation, but here is how I would do it.</p> <ol> <li>Plan what filters you want to have, try to imagine how it should look and work.</li> <li>Get some data set from backend or from hardcoded data, so you will have what to work with.</li> <li>Create component that will display that items.</li> <li>Create UI for filters</li> <li>Then you add logic for filters. On select some filter, you will filter data that comes into your component that provides data to component that display items. Filter that data and your component will display filtered data.</li> </ol> <p>So all structure might look like this:</p> <pre><code>const ParentComponent = () => {   const [filters, setFilters] = useState({})   const data = ...    const filteredData = applyFilters(data, filters)    return (     <div>       <DisplayItems data={filteredData} />       <Filters ... />     </div>    ) } </code></pre> <p>Its just a basic example for little understanding.</p> <p>Hope it helps</p>",,,false
"{'account_id': 3338251, 'reputation': 20138, 'user_id': 2805154, 'user_type': 'registered', 'accept_rate': 75, 'profile_image': 'https://i.sstatic.net/DGXwB.png?s=256', 'display_name': 'Michel Floyd', 'link': 'https://stackoverflow.com/users/2805154/michel-floyd'}",False,1,1669412233,1669412233,74578020,74569241,CC BY-SA 4.0,"<p>In a refetch the query and the list of variables are fixed but the <em>values</em> of the variables and <code>fetchPolicy</code> can be different. I suggest you use:</p> <pre class=""lang-js prettyprint-override""><code>gql`query   Products (     $afterCursor: String,      $search: String     $first: Int!,   ){     products (       afterCursor: $afterCursor,       first: $first,       search: $search     ) {       items {         email            } `; </code></pre> <p>for both the initial query and refetch but use a value of <code>null</code> or <code>undefined</code> for <code>$search</code> for the initial query. Of course your resolver would need to expect that.</p>",,,false
"{'account_id': 25667033, 'reputation': 1201, 'user_id': 19431815, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/0uNix.png?s=256', 'display_name': 'Priyen Mehta', 'link': 'https://stackoverflow.com/users/19431815/priyen-mehta'}",False,0,1669623811,1669623811,74597808,74569207,CC BY-SA 4.0,"<p>The best and easiest way will be to change class Component, to a functional Component and use the useForm hook.</p> <p>And Still You want same i used like this (Note: this is my example you can change it as per your requirment):</p> <p>Seprate File for hook version:</p> <pre><code>import React from 'react'  import { Button, Form, FormGroup, Label, Input } from 'reactstrap'; import { useForm } from 'react-hook-form';  const SignInHook = () => {  const { register, handleSubmit, errors } = useForm(); const onSubmit = data => console.log(data); console.log(errors);  return ( <>   <div>     <Form onSubmit={handleSubmit(onSubmit)}>          <Label>Email : </Label>         <Input type=""email"" placeholder=""email"" name=""email"" ref={register({required: true, pattern: /^\S+@\S+$/i})}></Input>          <Label>Password : </Label>         <Input type=""password"" placeholder=""password""  name=""password"" ref={register({required: true, min: 8, maxLength: 20})}></Input>      </Form>   </div> </> ) }  export default SignInHook </code></pre> <p>And Use it inside my Class Component:</p> <pre><code>import React from 'react'; import SignInHook from './SignInHook';  class SignIn extends React.Component {  render() {  return (   <div>     <SignInHook></SignInHook>   </div> ); }}  export default SignIn; </code></pre>",,,false
"{'account_id': 26589509, 'reputation': 389, 'user_id': 20212948, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/9084d8d2ed062a104d28986983461480?s=256&d=identicon&r=PG', 'display_name': 'Anu', 'link': 'https://stackoverflow.com/users/20212948/anu'}",True,2,1669619148,1669367873,74570505,74569207,CC BY-SA 4.0,"<p>Actually, hooks have to be used inside the body of the functional component. you are using it inside the HOC and HOC is a function, not a functional component, but what HOC returns is a component (here functional component). So <strong>just move the useForm inside return,</strong> instead of directly using it inside HOC. something like this.</p> <pre><code>   export const ClassHookFormWrap = (Component) => {    return (props) => {    const form = useForm();    console.log(""form"", form, Component)       return <Component form={form} {...props}  />;    }; }; </code></pre> <p>Let me know if it doesn't work.</p> <p>Add the returning component a name to avoid eslint error.</p> <pre><code>export const ClassHookFormWrap = (Component) => {   return function Wrap(props) {     const form = useForm();     console.log(""form"", form, Component);     return <Component form={form} {...props} />;   }; }; </code></pre>",1669619148.0,,false
"{'account_id': 16566797, 'reputation': 101, 'user_id': 11971137, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/7551dc48a18f04a29f51f14b484af120?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'arvir', 'link': 'https://stackoverflow.com/users/11971137/arvir'}",False,0,1669367775,1669367775,74570489,74569207,CC BY-SA 4.0,"<p>Hooks are supposed to be used inside a component or inside a custom hook. A HOC is basically a function which returns a component. So in order to get this working you can move the useForm hook into the return function like this</p> <pre><code>export const ClassHookFormWrap = (Component) => {    return (props) => {       const form = useForm();       console.log(""form"", form, Component)       return <Component form={form} {...props}  />;    }; }; </code></pre>",,,false
"{'account_id': 26877426, 'reputation': 361, 'user_id': 20458458, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/QTyWi.jpg?s=256', 'display_name': 'kuuhak-u', 'link': 'https://stackoverflow.com/users/20458458/kuuhak-u'}",True,1,1669364357,1669364357,74569904,74569200,CC BY-SA 4.0,"<p>Are you sure you in the right folder?? because it seems like you running the npm in Direct-messaging-app-app folder and npm not able to find the package.json file in it , that's why you getting this error I think</p> <p>you need to be in chat-app folder or where your package.json file is , to run the npm command</p>",,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",True,2,1669380381,1669374792,74571959,74569174,CC BY-SA 4.0,"<p>So I take a look at your example and found few strange things.</p> <p>To make your component work as expected, first of all, remove childComponent from App.js.</p> <p>Then remove <code>display: none</code> from your print component. And after that everything works as expected.</p> <p>You actually have few childComponents, one hidden and one that you actually see, and you provide ref to one that hidden.</p> <p>** UPDATED **</p> <p>You need to create ref in parent component and pass it down to your print component and do not render a one more child component in print component</p>",1669380381.0,,false
"{'account_id': 27031397, 'reputation': 1186, 'user_id': 20587701, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/aHg04.jpg?s=256', 'display_name': 'NAZIR HUSSAIN', 'link': 'https://stackoverflow.com/users/20587701/nazir-hussain'}",False,1,1669359486,1669359486,74569220,74569160,CC BY-SA 4.0,"<p>did you install the libraries</p> <pre><code>npm install --save chart.js react-chartjs-2 </code></pre> <p>check:<a href=""https://react-chartjs-2.js.org/#quickstart"" rel=""nofollow noreferrer"">here</a></p>",,,false
"{'account_id': 27031397, 'reputation': 1186, 'user_id': 20587701, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/aHg04.jpg?s=256', 'display_name': 'NAZIR HUSSAIN', 'link': 'https://stackoverflow.com/users/20587701/nazir-hussain'}",False,2,1669359126,1669359059,74569176,74569094,CC BY-SA 4.0,"<p>you should use relative path of file for href,</p> <p>ex: <code>href={""../../assets/files/my-file.xlsx""}</code> and dont do this ""<code>download={""my-file.xlsx""}</code>"" instead write <code>download={true}</code> or only download</p>",1669359126.0,,false
"{'account_id': 25708656, 'reputation': 128, 'user_id': 19467552, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/886d9a351ac5c1173f8da5107df1235e?s=256&d=identicon&r=PG', 'display_name': 'AmeriNam20', 'link': 'https://stackoverflow.com/users/19467552/amerinam20'}",True,1,1669365115,1669365115,74570037,74569073,CC BY-SA 4.0,"<p>[SOLVED]</p> <p>Due to new docs the v9> firebase has changed the serverTimestamp() function.</p> <pre><code>import { useSession } from 'next-auth/react'; import { EmojiHappyIcon } from '@heroicons/react/outline'; import { CameraIcon, VideoCameraIcon } from '@heroicons/react/solid'; import { db } from '../firebase'; import { collection, serverTimestamp, addDoc } from 'firebase/firestore';  function InputBox() {     const { data: session } = useSession();      const inputRef = useRef(null);      const sendPost = (e) => {         e.preventDefault();         if (!inputRef.current.value) return;          try {             const docRef = addDoc(collection(db, 'posts'), {                 message: inputRef.current.value,                 name: session.user.name,                 email: session.user.email,                 image: session.user.email,                 timestamp: serverTimestamp(),             });             console.log(docRef.id);         } catch (e) {             console.log('ERROR ADDING DOC:', e);         }          inputRef.current.value = '';     }; </code></pre> <p>I threw in a try/catch to handle the issue.</p> <p>timestamp: firebase.firestore.FieldValue.serverTimestamp() -> timestamp: serverTimestamp()</p> <p>also need to import {serverTimestamp} from 'firebase/firestore'</p>",,,false
"{'account_id': 23203964, 'reputation': 3452, 'user_id': 17298437, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/9fc22b186d2cb03f7bd7127f861d8936?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Fabian Strathaus', 'link': 'https://stackoverflow.com/users/17298437/fabian-strathaus'}",False,1,1669357450,1669357450,74568985,74568958,CC BY-SA 4.0,"<p>Your HTML tags do not open and close properly. Your code</p> <pre><code><>   <BrowserRouter>     <h2>hello</h2>   <BrowserRouter/> </> </code></pre> <p>Basically contains two opening <code>BrowserRouter</code> elements, where the second one is a self-closing one (containing <code>/</code> at the end of the tag). You probably want to have a closing tag, so moving <code>/</code> to the start of the tag should be enough in order to close it again.</p> <p>Therefore you should use:</p> <pre><code><>   <BrowserRouter>     <h2>hello</h2>   </BrowserRouter> </> </code></pre>",,,false
"{'account_id': 23663791, 'reputation': 189, 'user_id': 17691526, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d11a48b078b97bda3d5415acfe75bb09?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Mayank Gupta', 'link': 'https://stackoverflow.com/users/17691526/mayank-gupta'}",False,2,1669359745,1669359745,74569257,74568890,CC BY-SA 4.0,"<p>Yes, it is because when you reload the app the useEffect will trigger and you have an empty array in your favorite for the first time so it set the empty array in local storage. You can fix it by adding a simple check</p> <pre><code>  useEffect(() => {     if(favourites.length > 0){       localStorage.setItem(""favourites"", JSON.stringify(favourites));     }   }, [favourites]); </code></pre> <p>By this setItem only work when there is something in the favorites state</p>",,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",True,2,1669356804,1669356804,74568899,74568890,CC BY-SA 4.0,"<p>Make sure to set item if array is not empty</p> <pre><code> useEffect(() => {     if(favourites.length) localStorage.setItem(""favourites"", JSON.stringify(favourites));   }, [favourites]); </code></pre>",,,false
"{'account_id': 16056172, 'reputation': 346, 'user_id': 11588445, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-KDqcEesYQK4/AAAAAAAAAAI/AAAAAAAACrc/ZuPthMAJR2E/photo.jpg?sz=256', 'display_name': 'Vania Oliveira', 'link': 'https://stackoverflow.com/users/11588445/vania-oliveira'}",False,1,1691542210,1691542210,76863924,74568887,CC BY-SA 4.0,"<p>I went through the same issue here and after some digging I discover you can add <code>BlurView</code> inside <code>tabBarBackground</code> on the navigator. I am using expo, so the library I imported is called `expo-blur'</p> <p>Checkout my code:</p> <pre><code>import { BlurView } from 'expo-blur'; import { View } from 'react-native'; ....  const MenuBlur = () => {   return (     <View style={{ flex: 1 }}>       <View         style={{           width: '100%',           height: 55,           borderRadius: 90,           borderTopColor: 'white',           borderBottomColor: 'white',           overflow: 'hidden',         }}       >         <BlurView           intensity={10}           style={{ flex: 1, backgroundColor: ' rgba(61, 53, 105, 0.4)' }}         />       </View>     </View>   ); }; </code></pre> <p>Then on your navigator:</p> <pre><code><Navigator       initialRouteName=""home""       screenOptions={{         tabBarActiveBackgroundColor: COLORS.MIRAGE[750],         tabBarInactiveTintColor: COLORS.MIRAGE[900],         tabBarActiveTintColor: COLORS.WHITE[200],         tabBarBackground: () => <MenuBlur />,         tabBarStyle: {           position: 'absolute',           marginHorizontal: '17%',         },         tabBarItemStyle: {           borderRadius: 100,           marginHorizontal: 20,           height: 50,           marginTop: 2,         },       }}     > <Screen ... ... </Navigator> </code></pre> <p>This is how it looks:</p> <p><a href=""https://i.sstatic.net/ODPWk.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/ODPWk.png"" alt=""enter image description here"" /></a></p>",,,false
"{'account_id': 20431753, 'reputation': 215, 'user_id': 14990516, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jcIP1.png?s=256', 'display_name': 'Asmeeta Rathod', 'link': 'https://stackoverflow.com/users/14990516/asmeeta-rathod'}",True,0,1669361663,1669361663,74569517,74568887,CC BY-SA 4.0,"<p>You can set glassmorphism effect using opacity but the Screen is rendering above bottom tab, so we couldn't see the transparency of bottom tabs.</p>",,,false
"{'account_id': 17421783, 'reputation': 45, 'user_id': 12627235, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AAuE7mB5xlnphe_jwAVu_-ugXYhGXZtNQaO8FXNf-c9rMg=k-s256', 'display_name': 'Asharon Baltazar', 'link': 'https://stackoverflow.com/users/12627235/asharon-baltazar'}",False,0,1675193669,1675193669,75302281,74568848,CC BY-SA 4.0,"<p>Based on the path in the first screenshot, it seems like your JSX code is written in a <code>.ts</code> file.</p> <p>You should change the file type to <code>.tsx</code>, and it should compile successfully without type errors.</p>",,,false
"{'account_id': 20728477, 'reputation': 1118, 'user_id': 15221145, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/us01E.jpg?s=256', 'display_name': 'Maximilian Dietel', 'link': 'https://stackoverflow.com/users/15221145/maximilian-dietel'}",False,1,1669365093,1669365093,74570035,74568814,CC BY-SA 4.0,<p>The FlatList takes an array as input so you can just add a value (probably a key or something) to the array every time you press the button and then render an Input for every value in the array</p>,,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",False,-1,1669375279,1669375279,74572046,74568771,CC BY-SA 4.0,"<p>Your question is a little unclear actually, so my answer might not help actually.</p> <p>First of all, if you have multiple users in defaultArr.users, do not use array of arrays, use array of objects, it would be much simpler this way:</p> <pre><code>defaultArr = {   users: [     {       add: false,       checkPassword: false,       ...     }   ] } </code></pre> <p>Now you can just map through getcheckvalue and easily check all properties</p>",,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",True,6,1669367431,1669353808,74568625,74568603,CC BY-SA 4.0,"<p>use <code>reduce</code> method</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const list = [ {id:""B1"",name:""Belacost"",group:""Quim""},   {id:""B1"",name:""Medtown"",group:""Bik""},   {id:""B1"",name:""Regkim"",group:""Dum""},   {id:""C1"",name:""CSet"",group:""Core""},   {id:""D1"",name:""Merigo"",group:""Dian""},   {id:""D1"",name:""Chilland"",group:""Ground""},   {id:""N1"",name:""Fiwkow"",group:""Vig""}, ]   const result = list.reduce((acc, item ) => {       const isExisting = acc.some(i => i.id === item.id)      if(isExisting){      return [...acc, {...item, id: """"}]   }      return [...acc, item]  }, [])  console.log(result)</code></pre>  </div>  </div>  </p>",1669367431.0,,false
"{'account_id': 3830865, 'reputation': 13496, 'user_id': 3176419, 'user_type': 'registered', 'accept_rate': 50, 'profile_image': 'https://www.gravatar.com/avatar/466729f27456b80a1d22d82e5c676c79?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'flyingfox', 'link': 'https://stackoverflow.com/users/3176419/flyingfox'}",False,4,1669354240,1669354240,74568665,74568603,CC BY-SA 4.0,"<p>We can also do it with <code>Array.map</code> and <code>Array.some()</code></p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>let data = [ {id:""B1"",name:""Belacost"",group:""Quim""},   {id:""B1"",name:""Medtown"",group:""Bik""},   {id:""B1"",name:""Regkim"",group:""Dum""},   {id:""C1"",name:""CSet"",group:""Core""},   {id:""D1"",name:""Merigo"",group:""Dian""},   {id:""D1"",name:""Chilland"",group:""Ground""},   {id:""N1"",name:""Fiwkow"",group:""Vig""}, ]  let result = data.map((e,i,a) =>{   let exists = a.slice(0,i).some(d => d.id === e.id)   e.id = exists? """": e.id   return e }) console.log(result)</code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 22579309, 'reputation': 11, 'user_id': 16764206, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/YvEWK.jpg?s=256', 'display_name': 'Emanoel Mattos Ribeiro', 'link': 'https://stackoverflow.com/users/16764206/emanoel-mattos-ribeiro'}",False,1,1669516516,1669516217,74587083,74568505,CC BY-SA 4.0,"<p>I was probably using tools I know little about the wrong way. I ended up discovering the useCallback and monitoring the ref property more accurately. The final functional result looks like this:</p> <pre><code>    const useOutsideListener = (): [   RefObject<HTMLDivElement>,   (node: HTMLDivElement) => void   ] => {   const ref = useRef<HTMLDivElement | null>(null);    const setRef = useCallback((node: HTMLDivElement) => {     ref.current = node;   }, [ref.current]);    return [ref, setRef] } </code></pre> <p>Using useEffect, I monitored the ref object state changes, and for a simple check, removed the style class.</p> <pre><code>  useEffect(() => {     if(ref.current?.attributes[1].value === 'true') {              document.body.addEventListener('touchstart', function handleOutside(event) {         setTimeout(() => {           const menuButton = (event.target as HTMLElement).parentElement;           if(menuButton !== ref.current) {             ref.current?.querySelector('nav')?.classList.remove(styles['active']);             document.body.removeEventListener('touchstart', handleOutside);         }}, 75);       });     };        }, [ref.current?.attributes[1].value]);  </code></pre>",1669516516.0,,false
"{'account_id': 25241637, 'reputation': 1328, 'user_id': 19075433, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJwJoUqlc5jSahb4DFCth-1te3HgyJRp6hPpg9Ns=k-s256', 'display_name': 'Vaidehi Jamankar', 'link': 'https://stackoverflow.com/users/19075433/vaidehi-jamankar'}",True,3,1669977005,1669977005,74654294,74568475,CC BY-SA 4.0,"<p>TheâOriginalContentSnapdata ()â,returns an object, which you can't iterate over ,please check this helpful <a href=""https://firebase.google.com/docs/reference/node/firebase.firestore.DocumentSnapshot"" rel=""nofollow noreferrer"">DocumentSnapshot</a> document regarding the details of the Snapshot data variables and data types,on the returned object. You should make sure your resulting object has items and it must be an array. Then, change your iterator, so it generates an array based on your fetch results.</p> <p>Check the below for similar examples which will be helpful:</p> <ul> <li><a href=""https://stackoverflow.com/questions/71090914/uncaught-typeerror-object-is-not-iterable-cannot-read-property-symbolsymbol-i"">Uncaught Typeerror Object is not iterable</a></li> <li><a href=""https://stackoverflow.com/questions/64003971/uncaught-in-promise-typeerror-undefined-is-not-iterable"">Type error undefined is not iterable</a></li> <li><a href=""https://stackoverflow.com/questions/70583891/uncaught-typeerror-object-is-not-iterable-cannot-read-property-symbolsymbol-i"">Object is not iterable cannot read property symbol</a></li> <li><a href=""https://stackoverflow.com/questions/71323412/uncaught-typeerror-object-null-is-not-iterable-cannot-read-property-symbolsym"">Object null is not iterable cannot read property symbol</a></li> </ul>",,,false
"{'account_id': 2077268, 'reputation': 5943, 'user_id': 4088472, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://i.sstatic.net/VeFHT.jpg?s=256', 'display_name': 'Slava Knyazev', 'link': 'https://stackoverflow.com/users/4088472/slava-knyazev'}",True,0,1669355362,1669355362,74568764,74568457,CC BY-SA 4.0,"<p>Do as the warning suggests and switch <code>ReactDOM.render</code> to <code>ReactDOM.createRoot</code>: <a href=""https://reactjs.org/blog/2022/03/08/react-18-upgrade-guide.html"" rel=""nofollow noreferrer"">https://reactjs.org/blog/2022/03/08/react-18-upgrade-guide.html</a></p>",,,false
"{'account_id': 23663791, 'reputation': 189, 'user_id': 17691526, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d11a48b078b97bda3d5415acfe75bb09?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Mayank Gupta', 'link': 'https://stackoverflow.com/users/17691526/mayank-gupta'}",True,0,1669355846,1669355846,74568815,74568265,CC BY-SA 4.0,"<p>Its because you are using inside a tag which has not to much content in it If you want to apply the color on the full screen you have to use the class ""<strong>w-screen and min-h-screen</strong>"" by which that tag gets the full width of the screen and full height</p>",,,false
"{'account_id': 29638898, 'reputation': 1, 'user_id': 22715515, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/8108c50fb64baba7b0a54285d1f2bdd0?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Rodrigo Schneider', 'link': 'https://stackoverflow.com/users/22715515/rodrigo-schneider'}",False,0,1696930794,1696930692,77264594,74568211,CC BY-SA 4.0,"<p>This line of code is responsible for creating a new task in a to-do list. First, it checks if there are already elements in the todoList. If the list is empty (todoList.length === 0), the function sets the ID to 1. Otherwise, the code checks the last element in todoList, retrieves its ID, and adds 1 to define the ID of the new task. For example, if the list already contains one element, the list's length will be 1, but the position of the first element in the todoList array is 0. So, to create the next task, the code accesses the ID of the last element using todoList[todoList.length - 1].id and adds 1 to set the ID for the new task.</p>",1696930794.0,,false
"{'account_id': 20066672, 'reputation': 421, 'user_id': 14712252, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/RktL0.jpg?s=256', 'display_name': 'Farbod Shabani', 'link': 'https://stackoverflow.com/users/14712252/farbod-shabani'}",True,0,1669350357,1669350357,74568346,74568211,CC BY-SA 4.0,"<p>Okay, it's really simple. You need to generate a special id for every task. one of the easiest ways you can do that is to generate an id from 1 to how many you want or need. here <code>todoList.length === 0 ? 1 : todoList[todoList.length -1].id + 1</code> you first check if there is any task assigned or not. if not you generate the first id and it's 1. from here each task you add will get the last task id and add 1 number to it. so by this definition, the first task will have 1 as id and the second will have 2 as id.</p>",,,false
"{'account_id': 2077268, 'reputation': 5943, 'user_id': 4088472, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://i.sstatic.net/VeFHT.jpg?s=256', 'display_name': 'Slava Knyazev', 'link': 'https://stackoverflow.com/users/4088472/slava-knyazev'}",False,1,1669350233,1669350233,74568338,74568210,CC BY-SA 4.0,"<p>No. Browsers heavily limit websites' ability to communicate with other websites client-side for security reasons.</p> <p>Generally* speaking, it is a misconception that CORS limits what resources your application can access like a blacklist, instead, it is closer to whitelist.</p> <p>If you need to reliably perform cross-origin requests, you need to do it server-side.</p>",,,false
"{'account_id': 19583622, 'reputation': 331, 'user_id': 19368995, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GgIVegzCd-sPlvP8v7QmvF6gaF20pfLfxMG3hwjKw=k-s256', 'display_name': 'Ahmad Alfan', 'link': 'https://stackoverflow.com/users/19368995/ahmad-alfan'}",True,0,1669551866,1669551866,74589990,74568187,CC BY-SA 4.0,"<p>From what I understand, <code>JSON.parse()</code> will turn your original date object into a string. Here's a quick proof:</p> <p><a href=""https://i.sstatic.net/ZTwbQ.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/ZTwbQ.png"" alt=""enter image description here"" /></a></p> <p>A possible solution to make it works is to convert back each start and end date into a Date object. The downside is it requires a <code>.map()</code> (which can be expensive if you have a lot of event data).</p> <p>Here's how to get it done:</p> <pre class=""lang-js prettyprint-override""><code>  const obtenerDatos = () => {    const items = JSON.parse(localStorage.getItem(`${turno}`));     if (items) {       const events = items.map(item => ({        ...item,        start: new Date(item.start),        end: new Date(item.end)       }))       setAllEvents(events);     }    } </code></pre> <p>Hope it helps!</p>",,,false
"{'account_id': 18854646, 'reputation': 809, 'user_id': 13752922, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/4e472f86e1ed3eb47138162492f08980?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Alita', 'link': 'https://stackoverflow.com/users/13752922/alita'}",False,0,1669355620,1669348531,74568186,74568185,CC BY-SA 4.0,"<p>A couple proposed solutions:</p> <ul> <li><a href=""https://github.com/lottie-react-native/lottie-react-native/issues/665#issuecomment-1327037532"" rel=""nofollow noreferrer"">it occurs b/c of device id -- use patch-package to fix</a></li> </ul>",1669355620.0,,false
"{'account_id': 23215199, 'reputation': 1583, 'user_id': 17308201, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Ec3Le.jpg?s=256', 'display_name': 'Layhout', 'link': 'https://stackoverflow.com/users/17308201/layhout'}",True,0,1669352147,1669352147,74568485,74568131,CC BY-SA 4.0,"<p>i messing around with your code a bit. try this</p> <pre class=""lang-js prettyprint-override""><code>import ""./styles.css""; import { Select } from ""antd""; import { useState } from ""react"";  export default function App() {    const [listStaff, setListStaff] = useState([     { id: 1, name: ""Walter White"" },     { id: 2, name: ""Jesse Pinkman"" },     { id: 3, name: ""Gus Fring"" },     { id: 4, name: ""Saul Goodman"" },     { id: 5, name: ""John Doe"" },     { id: 6, name: ""Skyler White"" }   ]);    const [selectedStaff, setSelectedStaff] = useState(new Array(4).fill(null));    const handleChangeStaff = (id, i) => {     setSelectedStaff(p => {       const newSelectedStaff = [...p];       newSelectedStaff[i] = id === undefined ? null : listStaff.find(ls => ls.id === id);       return newSelectedStaff;     });   };    return (     <div className=""App"">       {new Array(4).fill("""").map((_, i) => (          <Select         allowClear         placeholder={`Choose staff #${i+1}`}         onChange={(id) => handleChangeStaff(id, i)}         key={i}       >         {listStaff.filter(ls => selectedStaff.find(ss => ss !== null && ss.id === ls.id) === undefined).map(ls => (             <Select.Option key={ls.id} value={ls.id}>               {ls.name}             </Select.Option>          ))}       </Select>       ))}     </div>   ); }  </code></pre>",,,false
"{'account_id': 19225695, 'reputation': 9, 'user_id': 14048642, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/6ab0a95ab651fb53b393023a21f07f27?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'ItecStudent', 'link': 'https://stackoverflow.com/users/14048642/itecstudent'}",False,0,1669366812,1669366812,74570329,74568074,CC BY-SA 4.0,"<p>Your <strong>isPackage</strong> type is already a boolean so you can just pass it to the <strong>disabled</strong> property of <strong>select</strong> tag.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>// Get a hook function const {useState} = React;  const App = () => {     const [isPackage, setIsPackage] = useState(false);    const handlerPresentationSelected = () => {     setIsPackage(!isPackage);   };        return (          <div>             <button onClick={handlerPresentationSelected}>Click</button>             <select disabled={!isPackage}>               <option value=""dog"">Dog</option>               <option value=""cat"">Cat</option>               <option value=""hamster"">Hamster</option>               <option value=""parrot"">Parrot</option>               <option value=""spider"">Spider</option>               <option value=""goldfish"">Goldfish</option>             </select>             <h1>{String(isPackage)}</h1>         </div>     ); };  // Render it ReactDOM.createRoot(     document.getElementById(""root"") ).render(     <App/> );</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div id=""root""></div> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.1.0/umd/react.development.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.1.0/umd/react-dom.development.js""></script></code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 26852198, 'reputation': 7407, 'user_id': 20436957, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/88ZOB.png?s=256', 'display_name': 'John Li', 'link': 'https://stackoverflow.com/users/20436957/john-li'}",False,0,1669352107,1669347658,74568109,74568074,CC BY-SA 4.0,"<p>Based on the description of the question:</p> <blockquote> <p>when isPackage is true requires it to be enabled but when it is false it is disabled</p> </blockquote> <p>It would seem to indicate that perhaps this line should be the other way around:</p> <pre><code><select disabled = { isPackage ? true : false }> </code></pre> <p>In addition, it seems that a <code>required</code> property should also be set when <code>isPackage</code> is <code>true</code>. With this added, the logic could be put in this way:</p> <pre><code>// If isPackage is true, the select is required, and not disabled // If isPackage is false, the select is not required, and is disabled  <select {...{[isPackage ? ""required"" : ""disabled""]: true}}> </code></pre> <p>And to toggle <code>isPackage</code> based on previous value on the button:</p> <pre><code><button onClick={() => setIsPackage((prev) => !prev)}> </code></pre> <p>Here is a quick example to visualize the changes:</p> <p>(It can run in the snippets for convenience)</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const App = () => {   const [isPackage, setIsPackage] = React.useState(false);    return (     <div className=""app"">       <h3>{`isPackage is: ${isPackage}`}</h3>       <button onClick={() => setIsPackage((prev) => !prev)}>         Toggle isPackage ð       </button>       <h3>         Toggle isPackage to set select <span>disabled</span> or{"" ""}         <span>required</span>       </h3>       <select         {...{           [isPackage ? ""required"" : ""disabled""]: true,         }}       >         <option>Option 1</option>         <option>Option 2</option>       </select>       <span>* required</span>     </div>   ); };  ReactDOM.render(<App />, document.querySelector(""#root""));</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>h3 > span:first-of-type {   color: grey; }  h3 > span:last-of-type {   color: crimson; }  select:disabled + span {   opacity: 0; }  select:required + span {   opacity: 1;   color: crimson; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div id=""root""></div> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.1.0/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.1.0/umd/react-dom.production.min.js""></script></code></pre>  </div>  </div>  </p> <p>Hope this will help.</p>",1669352107.0,,false
"{'account_id': 16742251, 'reputation': 13127, 'user_id': 12101554, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3cce987ffb6039e9bd8889bc9445bec3?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Samathingamajig', 'link': 'https://stackoverflow.com/users/12101554/samathingamajig'}",False,0,1669348024,1669348024,74568139,74568074,CC BY-SA 4.0,"<p>Per this answer, <a href=""https://stackoverflow.com/a/8311341/12101554"">https://stackoverflow.com/a/8311341/12101554</a>, you have to set <code>disabled</code> on the <code><option></code> tags, not the <code><select></code> tag.</p> <pre><code>const [isPackage, setIsPackage] = useState(false)  return (   <div className=""App"">     <button onClick={() => setIsPackage((cur) => !cur)}>toggle isPackage: {isPackage.toString()}</button>     <br />     <select>       <option disabled={isPackage}>a</option>       <option disabled={isPackage}>b</option>     </select>   </div> ); </code></pre> <p>If your options are in an array, then just set that property on the <code><select></code> in the <code>.map</code></p>",,,false
"{'account_id': 17784410, 'reputation': 10856, 'user_id': 12914833, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/mNLi2.jpg?s=256', 'display_name': 'Chris Hamilton', 'link': 'https://stackoverflow.com/users/12914833/chris-hamilton'}",True,0,1669348951,1669348210,74568159,74568058,CC BY-SA 4.0,"<p>Next serves a SPA, but it does not serve the entire application at once. It will not serve the html / css / js bundle for a route if it is not needed yet. It will however prefetch the bundle for a route if a link is visible in the viewport. From <a href=""https://nextjs.org/docs/api-reference/next/link"" rel=""nofollow noreferrer"">https://nextjs.org/docs/api-reference/next/link</a></p> <blockquote> <p>prefetch - Prefetch the page in the background. Defaults to true. Any <code><Link /></code> that is in the viewport (initially or through scroll) will be preloaded. Prefetch can be disabled by passing prefetch={false}. When prefetch is set to false, prefetching will still occur on hover. Pages using Static Generation will preload JSON files with the data for faster page transitions. Prefetching is only enabled in production.</p> </blockquote> <p>Once the bundle for that route is received, it will not request it again (assuming this is a static route, ie. not using <code>getServerSideProps</code>), so navigating away from and back to this route will be faster after the first load / prefetch.</p> <p>If you want to prefetch your routes manually you can use <code>router.prefetch</code>: <a href=""https://nextjs.org/docs/api-reference/next/router#routerprefetch"" rel=""nofollow noreferrer"">https://nextjs.org/docs/api-reference/next/router#routerprefetch</a></p> <p>Once all of your routes have been fetched, the application will act as a standard SPA, since your client now has the entire application bundle.</p>",1669348951.0,,false
"{'account_id': 17214765, 'reputation': 88, 'user_id': 12463093, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/lJrwc.png?s=256', 'display_name': 'zerot69', 'link': 'https://stackoverflow.com/users/12463093/zerot69'}",True,2,1669346732,1669346732,74568040,74568013,CC BY-SA 4.0,"<p>I assume you are using the lastest version of <code>chartjs</code> and <code>react-chartjs-2</code>, which are v4.0.1 and v5.0.1 respectively. Try downgrading to <code>""chart.js"": ""^3.9.1""</code> and <code>""react-chartjs-2"": ""^4.3.1""</code>. This might happen when migrating chartjs from v3 to v4.</p> <p>And please keep in mind that you need to use chartjs in ClientOnly, because chartjs is DOM canvas based.</p>",,,false
"{'account_id': 12660537, 'reputation': 15410, 'user_id': 9201587, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/paIso.png?s=256', 'display_name': 'Nick Vu', 'link': 'https://stackoverflow.com/users/9201587/nick-vu'}",False,4,1669345825,1669345825,74567972,74567910,CC BY-SA 4.0,"<p>You can use <a href=""https://reactjs.org/docs/react-component.html#componentdidmount"" rel=""nofollow noreferrer""><code>componentDidMount</code></a> to replace your <code>useEffect</code>. Along with it, you didn't clean up your mouse event which may cause unexpected mouse behaviours, although the component was unmounted, so I'd suggest you should use <a href=""https://reactjs.org/docs/react-component.html#componentwillunmount"" rel=""nofollow noreferrer""><code>componentWillUnmount</code></a> to clean up your mouse event too.</p> <pre><code>class YourComponent extends React.Component {   mouseDown(event) {     if (!panelRef.current?.contains(event.target)) {       console.log(""hello"");     }   }    componentDidMount() {     document.addEventListener(""mousedown"", this.mouseDown);   }    componentWillUnmount() {     document.removeEventListener(""mousedown"", this.mouseDown);   }    render() {     return <h1>Your JSX</h1>;   } } </code></pre>",,,false
"{'account_id': 12225294, 'reputation': 1784, 'user_id': 8923126, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/qT9Qa.jpg?s=256', 'display_name': 'Zain Khan', 'link': 'https://stackoverflow.com/users/8923126/zain-khan'}",False,3,1681413117,1681413117,76009036,74567891,CC BY-SA 4.0,"<p>Try <code>destroyInactiveTabPane</code> prop on Tabs.</p> <pre class=""lang-js prettyprint-override""><code>const App = () => {   const [tab, setTab] = React.useState(1);    return (     <Tabs       onChange={(key) => {         setTab(key);       }}       type=""card""       accessKey={tab}       items={items}       destroyInactiveTabPane={true} // add this prop     />   ); };  </code></pre>",,,false
"{'account_id': 17784410, 'reputation': 10856, 'user_id': 12914833, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/mNLi2.jpg?s=256', 'display_name': 'Chris Hamilton', 'link': 'https://stackoverflow.com/users/12914833/chris-hamilton'}",True,2,1669346283,1669346283,74568007,74567891,CC BY-SA 4.0,"<p>The array is being recreated on every render of <code>App</code>. <code>App</code> gets rendered every time <code>setTab</code> is called with a different value. If you don't want that to happen, you can declare the array outside the component, or use <code>useMemo</code>.</p> <pre><code>const items = new Array(3).fill(null).map((_, i) => {   const id = String(i + 1);   return {     label: `Tab ${id}`,     key: id,     children: (       <div>         {console.log(`children ${id}`)}         <span>-----------------{id}</span>       </div>     )   }; })  const App = () => {   const [tab, setTab] = React.useState(1);    return (     <Tabs       onChange={(key) => {         setTab(key);       }}       type=""card""       accessKey={tab}       items={items}     />   ); }; </code></pre> <p>OR</p> <pre><code>const App = () => {   const [tab, setTab] = React.useState(1);    const items = useMemo(     () =>       new Array(3).fill(null).map((_, i) => {         const id = String(i + 1);         return {           label: `Tab ${id}`,           key: id,           children: (             <div>               {console.log(`children ${id}`)}               <span>-----------------{id}</span>             </div>           ),         };       }),     [] // empty dependency array means never run again   );    return (     <Tabs       onChange={(key) => {         setTab(key);       }}       type=""card""       accessKey={tab}       items={items}     />   ); }; </code></pre>",,,false
"{'account_id': 220201, 'reputation': 21354, 'user_id': 477480, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3d4925d09aa1681314bb99939d733d05?s=256&d=identicon&r=PG', 'display_name': 'Josh Justice', 'link': 'https://stackoverflow.com/users/477480/josh-justice'}",True,1,1669422320,1669422320,74578853,74567824,CC BY-SA 4.0,"<p>If you want to avoid testing every implementation detail and only test the things a user cares about, you would need to do an end-to-end test with a tool like Cypress against a real backend and real database. The realism of these tests have a lot of value. But there are downsides as well: they can be slow and less reliable, so it isn't realistic to fully cover all code paths of a large application with them.</p> <p>As soon as you drop down to component tests, you are already testing some things the user doesn't care about: if you pass props to the component or mock out a backend, the user doesn't care about those props or backend API. But it's a worthwhile tradeoff because it allows you to have faster tests that cover more edge cases.</p> <p>In component tests I would recommend testing the component's inputs and outputs. If an onSubmit function is defined inside your component's render function, then I would not run an assertion against it; that's definitely an implementationn detail. Instead, I would test the result of that function running. But if onSubmit is passed in as a prop of the function, then I would pass in a mock function and check that it was called, yes. If it's a function defined in another module, things get fuzzier: you can decide whether you want to mock that module or test against the real implementation of that function.</p> <p>There are always tradeoffs in testing; the above are some of the things you can consider when deciding how to test a specific case.</p>",,,false
"{'account_id': 13173718, 'reputation': 368762, 'user_id': 9515207, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3d5ccb4452ea5093f95c1da37acc764b?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'CertainPerformance', 'link': 'https://stackoverflow.com/users/9515207/certainperformance'}",False,2,1669344027,1669344027,74567858,74567816,CC BY-SA 4.0,"<p>Objects with the same contents aren't equal to each other. For another example outside of React:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>let outerObj; const Component = () => {   const obj = {};   if (outerObj) {     // Second execution     console.log(outerObj === obj);   } else {     // First execution     outerObj = obj;   } }; Component(); Component();</code></pre>  </div>  </div>  </p> <p>Your <code>App</code> is called twice, and each time it's called, the <code>const v1 = { key1: { key2: 2 } };</code> creates a new object - just like the snippet above runs <code>const obj = {}</code> twice, creating an object that isn't equal to the one generated in the prior call.</p> <p>Your <code>v1.key1</code> changes every render, so</p> <pre><code>  useEffect(() => {     console.log(""=useEffect="");     setTryone(3);   }, [v1.key1]); </code></pre> <p>may as well be</p> <pre><code>  useEffect(() => {     console.log(""=useEffect="");     setTryone(3);   }); </code></pre> <p>which runs the effect every render. After the change from 2 to 3, there's a rerender, so the effect runs again.</p> <p>You need to create a stable reference for <code>v1</code> somehow - use <code>useMemo</code>, <code>useState</code>, or <code>useRef</code>.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function App() {   console.log(""start"");   const v1 = React.useMemo(() => ({ key1: { key2: 2 } }), []);   const [tryone, setTryone] = React.useState(2);    React.useEffect(() => {     console.log(""=useEffect="");     setTryone(3);   }, [v1.key1]);    return (     <div className=""App"">       <h1>Hello CodeSandbox</h1>     </div>   ); }  ReactDOM.createRoot(document.querySelector('.react')).render(<App />);</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script crossorigin src=""https://unpkg.com/react@18/umd/react.development.js""></script> <script crossorigin src=""https://unpkg.com/react-dom@18/umd/react-dom.development.js""></script> <div class='react'></div></code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 6577570, 'reputation': 4106, 'user_id': 5082978, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/1t9s6.png?s=256', 'display_name': 'Walter Northwoods', 'link': 'https://stackoverflow.com/users/5082978/walter-northwoods'}",False,0,1669434952,1669434952,74579614,74567761,CC BY-SA 4.0,"<p>As documented at: <a href=""https://gojs.net/latest/intro/extensions.html"" rel=""nofollow noreferrer"">https://gojs.net/latest/intro/extensions.html</a> and at: <a href=""https://gojs.net/latest/api/symbols/PackedLayout.html"" rel=""nofollow noreferrer"">https://gojs.net/latest/api/symbols/PackedLayout.html</a>, you should copy the extension file into your project and update its <strong>import</strong> statement to refer to the same GoJS library file.</p>",,,false
"{'account_id': 19225695, 'reputation': 9, 'user_id': 14048642, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/6ab0a95ab651fb53b393023a21f07f27?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'ItecStudent', 'link': 'https://stackoverflow.com/users/14048642/itecstudent'}",False,0,1669369675,1669369675,74570881,74567588,CC BY-SA 4.0,"<p>I believe it is called multiple select. There is a similar question here: <a href=""https://stackoverflow.com/questions/30190588/html-select-multiple-as-dropdown"">HTML: Select multiple as dropdown</a>.</p> <p>You can also use other library like <a href=""https://www.npmjs.com/package/react-select"" rel=""nofollow noreferrer"">React-Select</a></p>",,,false
"{'account_id': 12258229, 'reputation': 771, 'user_id': 10681992, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/85c2e9db7c6b523ca779d1d6b167fd25?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Glech', 'link': 'https://stackoverflow.com/users/10681992/glech'}",True,1,1669384046,1669384046,74573791,74567571,CC BY-SA 4.0,"<p><a href=""https://codesandbox.io/p/sandbox/morning-lake-7hj8mg"" rel=""nofollow noreferrer"">https://codesandbox.io/p/sandbox/morning-lake-7hj8mg</a></p> <p>Calling component as a function doesn't work properly with hooks Use way I provided or <code>React.createElement(component)</code></p>",,,false
"{'account_id': 20728477, 'reputation': 1118, 'user_id': 15221145, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/us01E.jpg?s=256', 'display_name': 'Maximilian Dietel', 'link': 'https://stackoverflow.com/users/15221145/maximilian-dietel'}",False,0,1669365451,1669365451,74570091,74567554,CC BY-SA 4.0,<p>Upload image from image picker to Google Cloud Storage -> Receive Image Url returned after successful upload -> Save it in Firestore -> Receive image url from firestore when you need it</p>,,,false
"{'account_id': 11347730, 'reputation': 297, 'user_id': 8319730, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/rf3SC.jpg?s=256', 'display_name': 'fum4', 'link': 'https://stackoverflow.com/users/8319730/fum4'}",True,4,1669347755,1669339341,74567536,74567440,CC BY-SA 4.0,"<p>It would be best to reference strictly the values that you actually use in the effect, as granular as possible. Many times these will be primitives which means that you don't even have to worry about them unnecessarily changing.</p> <p>If you do have to reference objects or other structures such as arrays then you need to make sure their reference stays the same. You should always be aware why your references change and prevent this when not necessary. Besides helping your effects work seamlessly it will most probably also positively impact your app performance.</p> <p>Don't forget to extract your variables outside the component whenever possible (i.e. when not using <code>props</code> or <code>state</code>). This way you will not need to add them as dependencies.</p> <p>Also, using memoization up the components chain is always an option (<code>useMemo</code>, <code>useCallback</code> and soon <code>useEvent</code>), just don't overuse it unnecessarily! :)</p>",1669347755.0,,false
"{'account_id': 11347730, 'reputation': 297, 'user_id': 8319730, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/rf3SC.jpg?s=256', 'display_name': 'fum4', 'link': 'https://stackoverflow.com/users/8319730/fum4'}",False,0,1669338477,1669338079,74567455,74567409,CC BY-SA 4.0,"<p>I don't think you can. There is very limited information about what goes on in a browser outside of your app. Many of these functionalities are available through particular APIs instead of being directly exposed.</p> <p>I suggest using <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage"" rel=""nofollow noreferrer"">session storage</a> as this is its default behaviour and intended use.</p> <p>This remind me that you can only know that a 'POP' action was dispatched when a user clicks the back or forward buttons. You cannot know which one of them was pressed though.</p>",1669338477.0,,false
"{'account_id': 1209109, 'reputation': 8189, 'user_id': 1178016, 'user_type': 'registered', 'accept_rate': 73, 'profile_image': 'https://i.sstatic.net/HOI7f.png?s=256', 'display_name': 'xehpuk', 'link': 'https://stackoverflow.com/users/1178016/xehpuk'}",False,1,1669344704,1669344704,74567902,74567254,CC BY-SA 4.0,"<p>This specific problem has nothing to do with the <code>fetch</code>es, it is simpler.</p> <p>You declared your functional component as <code>async</code>:</p> <pre><code>export default async function App() { </code></pre> <p>The consequence is that it doesn't return a React element but a Promise that resolves to a React element, which React can't handle.</p> <p>Remove the <code>async</code>:</p> <pre><code>export default function App() { </code></pre>",,,false
"{'account_id': 7531998, 'reputation': 451, 'user_id': 5892016, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/vUOfk.jpg?s=256', 'display_name': 'Bipin', 'link': 'https://stackoverflow.com/users/5892016/bipin'}",True,1,1669338068,1669338068,74567454,74567254,CC BY-SA 4.0,"<pre><code>import { StatusBar } from ""expo-status-bar""; import { useEffect, useState } from ""react""; import { StyleSheet, Image, Text, View } from ""react-native"";  export default function App() {   const [isLoading, setLoading] = useState(true);   const [isLoadingMp, setLoadingMp] = useState(true);   const [data, setData] = useState([]);   const [mpData, setMpData] = useState([]);   let memberId = 0;    useEffect(() => {     const callApi = async ()=>{//defining a async function to call the API              setLoading(true);//maybe you just need one loading flag       try{        const result = await (await fetch(       `https://members-api.parliament.uk/api/Members/Search?Name=Boris%20Johnson`       )).json();//first api and json() its result       const memberId = result.items[0].value.id;//get the member id from it              const finalResult = await(await fetch(           `https://commonsvotes-api.parliament.uk/data/divisions.json/membervoting?memberId=${memberId}`         )).json();//second api call and json() its result         //set the state         setData(finalResult);         setMpData(result);       }catch(e){         console.log(e)       }finally{           setLoading(false);//set loading false in both the fail and success case       }     }     callApi();//calling the function   }, []);   //VIEW rendering   return (<View style={{ flex: 1, padding: 24 }}>       {isLoading ? (         <Text>Loading...</Text>       ) : (         <View style={styles.container}>           <Text>             <Image               source={{                 uri: `${mpData.items[0].value.thumbnailUrl}`,                 width: 60,                 height: 60,               }}             />             <Text>{`${mpData.items[0].value.id}\n`}</Text>              {data.map((individualData) => {               return `\nDate: ${                 individualData.PublishedDivision.Date               }\nDivision id: ${                 individualData.PublishedDivision.Date               }\nDivision title: ${                 individualData.PublishedDivision.Title               }\nVoted:  ? ""Yes"" : ""No""}\n`;             })}           </Text>           <StatusBar style=""auto"" />         </View>       )}     </View>); }  const styles = StyleSheet.create({   container: {     flex: 1,     backgroundColor: ""#fff"",     alignItems: ""center"",     justifyContent: ""center"",   }, }); </code></pre>",,,false
"{'account_id': 20641869, 'reputation': 109, 'user_id': 15154333, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gh8N7RNnIlEhrw4PAcSmstEMpo1sVAliMsa4DAoJQ=k-s256', 'display_name': 'luis miguel castro martinez', 'link': 'https://stackoverflow.com/users/15154333/luis-miguel-castro-martinez'}",False,1,1669394208,1669394208,74575679,74567248,CC BY-SA 4.0,"<p>Solution:</p> <p>onCellEditCommit doesn't work because I had editMode='row' on, in this case, you have to use onRowEditCommit which is the same dependent of editMode.</p>",,,false
"{'account_id': 10705011, 'reputation': 641, 'user_id': 7879109, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/1480449992026266/picture?type=large', 'display_name': 'Jonathan Wieben', 'link': 'https://stackoverflow.com/users/7879109/jonathan-wieben'}",True,1,1669367446,1669367446,74570433,74567152,CC BY-SA 4.0,"<p>The first parameter of <code>useSWR</code> is a unique <code>key</code> identifying the request. Since the key you are passing does not change (it's always <code>'/api/category'</code>), the data is not refreshed.</p> <p>The <code>key</code> will be as the first argument to your <code>fetcher</code>, see <a href=""https://swr.vercel.app/docs/arguments"" rel=""nofollow noreferrer"">the docs on arguments</a>.</p> <p>With these two things in mind, you could do something like this:</p> <pre><code>const getCategory = async (path) => {     const { data } = await axios.get(path);     return data.name; };  export default function ProductCard({ product, category }: ProductCardProps) {     const { data } = useSWR(`/api/category/${category}`, getCategory); </code></pre>",,,false
"{'account_id': 21929133, 'reputation': 98, 'user_id': 16211322, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/iVxeHzoj.jpg?s=256', 'display_name': 'thegera4', 'link': 'https://stackoverflow.com/users/16211322/thegera4'}",True,0,1671584717,1671584717,74870422,74567082,CC BY-SA 4.0,"<p>This issue had to do with the cookies, somehow the cookie to store the user session got lost/erased, so whenever you have something similar and you use cookies for user sessions, check if they are stored and used properly.</p>",,,false
"{'account_id': 16742251, 'reputation': 13127, 'user_id': 12101554, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3cce987ffb6039e9bd8889bc9445bec3?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Samathingamajig', 'link': 'https://stackoverflow.com/users/12101554/samathingamajig'}",True,3,1669332283,1669332283,74567071,74567028,CC BY-SA 4.0,"<p>Technically, you can do this:</p> <pre class=""lang-js prettyprint-override""><code>data.forEach(x => {   const userId = x.userId;   const to_to_user = data.filter(d=>d.userId===userId)   setTodos((oldTodos) => {...oldTodos, [userId]:to_to_user})); }); </code></pre> <p>so that you always have the most up-to-date version of <code>todos</code>.</p> <p>But instead of calling <code>setTodos</code> multiple times, you should instead create the object first and then call <code>setTodos</code> once.</p> <pre class=""lang-js prettyprint-override""><code>const newTodos = data.reduce((obj, x) => {   const userId = x.userId;   const to_to_user = data.filter(d=>d.userId===userId);   obj[userId] = to_to_user; }, {});  setTodos((oldTodos) => {...oldTodos, ...newTodos}); </code></pre> <p>Either way, the original line should be</p> <pre class=""lang-js prettyprint-override""><code>const [todos, setTodos] = useState({}); </code></pre> <p>because you're storing an object of arrays, not an array of objects or and array of arrays</p>",,,false
"{'account_id': 2322649, 'reputation': 78, 'user_id': 2037937, 'user_type': 'registered', 'accept_rate': 100, 'profile_image': 'https://www.gravatar.com/avatar/3e19fcf5331ef8725a3de0edc8d7542d?s=256&d=identicon&r=PG', 'display_name': 'Rousnay', 'link': 'https://stackoverflow.com/users/2037937/rousnay'}",False,2,1669388747,1669332055,74567054,74566968,CC BY-SA 4.0,"<p>Please implement <code>useState</code> hook to store feeds, and make your API call inside <code>useEffect</code> hook.</p> <pre><code>import { useState, useEffect } from ""react"";  function Instagram() {   const [feeds, setFeeds] = useState([]);     useEffect(() => {       const instagramData = async () => {         const url = `https:/site.com/...`;         const data = await fetch(url);         const feeds = await data.json();         setFeeds(feeds);       };       instagramData()     }, []);     return (       <>         {feeds.map((feed) => {            return (             <div key={feed.id}>               <img src={feed.media_url} alt="""" />             </div>           );         })}       </>     ); } export default Instagram; </code></pre>",1669388747.0,,false
"{'account_id': 26045760, 'reputation': 59, 'user_id': 19749827, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AFdZucqNlSbanQrFiEqneYI_HCWKkPWWxQJ2cX9hu-fE3w=k-s256', 'display_name': 'Spluli', 'link': 'https://stackoverflow.com/users/19749827/spluli'}",False,0,1669381829,1669381829,74573325,74566968,CC BY-SA 4.0,"<p><strong>Solution</strong></p> <p>Code:</p> <pre class=""lang-js prettyprint-override""><code>function Instagram() {   const [feeds, setFeed] = useState<any[]>([]);    useEffect(() => {     const instagramData = async () => {       const url = `https://graph.instagram.com/v15.0/me/media?fields=id,media_url,permalink&access_token=${process.env.REACT_APP_INSTAGRAM_KEY}`;       const data = await fetch(url).then((res) => res.json());       // const feeds = await data.json();       console.log(data);       setFeed(data);     };     instagramData();   }, []);   // console.log(feeds)   // console.log(Object.values(feeds));   return (     <>       {Object.values(feeds)[0]?.map((d: any) => { //use it as Obj, nested Obj         return (           <div key={d.id}>             <img src={d.media_url} alt="""" />           </div>         );       })}     </>   ); }  export default Instagram;  </code></pre> <p><a href=""https://i.sstatic.net/LmB1x.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/LmB1x.jpg"" alt=""Screensho Array Console"" /></a></p>",,,false
"{'account_id': 20972692, 'reputation': 76, 'user_id': 15409495, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gi_FKTVh3X6If50nYj28huq1PiEtCmpDpl1oFFX=k-s256', 'display_name': 'Muhammad Allak', 'link': 'https://stackoverflow.com/users/15409495/muhammad-allak'}",False,2,1669333665,1669331233,74566995,74566968,CC BY-SA 4.0,"<p>Call the function <code>instagramData()</code> inside <code>useEffect</code> hook</p> <pre><code>import {useEffect} from 'react';  useEffect(() =>    instagramData(); },[]) </code></pre> <p><a href=""https://codesandbox.io/s/compassionate-kowalevski-t3so1i?file=/src/App.js"" rel=""nofollow noreferrer"">solution link</a></p>",1669333665.0,,false
"{'account_id': 13681147, 'reputation': 5995, 'user_id': 9871463, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/L9U9kbdr.jpg?s=256', 'display_name': 'Dinko Pehar', 'link': 'https://stackoverflow.com/users/9871463/dinko-pehar'}",True,2,1669498042,1669498042,74585689,74566774,CC BY-SA 4.0,"<p>PNPM <code>create</code> under the hood uses <code>dlx</code> to bootstrap projects from a <em>create-</em>* or <em>@foo/create-</em>* starter kit.</p> <p>As same as you can specify version when using <code>dlx</code>, you can specify version of <code>create</code> you want to use as:</p> <pre class=""lang-bash prettyprint-override""><code>> pnpm create next-app@9.3.2 next-app > pnpm create next-app@latest next-app </code></pre> <hr /> <p>However, I didn't see in version of these dependencies change when another version of template is specified. So I manually downgraded dependencies with:</p> <pre class=""lang-bash prettyprint-override""><code>pnpm upgrade next@10 # Specifies version 10 of Next (downgrades from 13 to 10) </code></pre> <p>It may also state that peer dependencies are unmeet so you can use same approach as above until dependencies for whole project are satisfied.</p>",,,false
"{'account_id': 25605882, 'reputation': 11, 'user_id': 19379980, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/d1c77ed106747aff4d1758afabc6de98?s=256&d=identicon&r=PG', 'display_name': 'Jenniferwonder', 'link': 'https://stackoverflow.com/users/19379980/jenniferwonder'}",False,1,1711327334,1711286537,78214668,74566649,CC BY-SA 4.0,"<p>When <code><Home /></code> becomes an index child of <code><Root /></code>, its path is <code>/</code>, not <code>/home</code>, and it can't have its child element, otherwise, all pages will turn blank. To resolve this:</p> <p>Step 1: Change your router to one of the following:</p> <pre><code> // To render `<Home />` as index element of `<Root />`  const router = createBrowserRouter([    {      path: ""/"",      element: <Root />,      errorElement: <ErrorPage />,      children: [         {            // When visit `/` root path, you'll see `<Home />` rendered as a default child of `<Root />`            index: true,            element: <Home />,             // Move children outside as the sibling of <Home />         },         {            // Change path `/home/minis` to `/minis`            path: '/minis',            element: <Minis/>         },          /* existing code */       ]     },  ]);  // To render `<Home />` as common child element at `/home` and render `<Minis>` at `/home/minis`   const router = createBrowserRouter([    {      path: ""/"",      element: <Root />,      errorElement: <ErrorPage />,      children: [         {           // Remove: index: true,            path: ""/home"", // Add path here             element: <Home />,            children: [              {                 path: '/home/minis',                 element: <Minis/>              },            ]         },       /* existing code */       ]     },  ]);   </code></pre> <p>Step 2: In <code>./routes/Home</code>, import <code>Outlet</code>, like this:</p> <pre><code>import {Outlet} from ""react-router-dom""; export default function Home() {   return (     <>        /* existing code */        <Outlet />     </>      </code></pre> <p>Step 3: In <code>./routes/Root</code>, import <code>Outlet</code>, like this:</p> <pre><code>import {Outlet} from ""react-router-dom""; export default function Root() {   return (     <>        /* existing code */        <Outlet />     </>      </code></pre>",1711327334.0,,false
"{'account_id': 19100326, 'reputation': 119, 'user_id': 13948749, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/DtLCX.jpg?s=256', 'display_name': 'Phelang', 'link': 'https://stackoverflow.com/users/13948749/phelang'}",False,2,1691847547,1691847547,76889536,74566649,CC BY-SA 4.0,"<p>Adding an <code><Outlet /></code> as the element of child elements worked for me. I have made some updates to your code, for context see section on <code>path: '/home'</code>:</p> <pre><code>const router = createBrowserRouter([     {         path: '/',         element: <Root />,         errorElement: <ErrorPage />,         children: [             {                 path: '/home',                 element: <Outlet />,                 children: [                     {                            index: true,                         element: <Home />                     },                     {                         path: '/home/minis',                         element: <Minis/>                     }                 ]             },             {                 path: '/projects',                 element: <Projects />,                 errorElement: <ErrorPage />,             },             {                 path: '/certificates',                 element: <Certificates />,             },             {                 path: '/skills',                 element: <Skills />,             },             {                 path: '/contact',                 element: <Contact />,             },         ],     }, ]); </code></pre> <p>Additionaly the assumption is that <code><Root /></code> is of type <code><Outlet /></code>, see sample below:</p> <pre><code>function Root() {   return (     <div>         <div>Main navigation</div>         <div>Side Navigation</div>         <main>           <Outlet />         </main>     </div>   ); }  export default Root; </code></pre>",,,false
"{'account_id': 18576502, 'reputation': 306, 'user_id': 13537048, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-EWWWlHEGqqY/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucnWDZ32qZY3FepWU6hSH64kxw8mrw/photo.jpg?sz=256', 'display_name': 'Moris', 'link': 'https://stackoverflow.com/users/13537048/moris'}",False,6,1672610270,1672610270,74977627,74566649,CC BY-SA 4.0,"<p>Add < Outlet /> to your parent route's render method.</p> <blockquote> <p>An < Outlet > should be used in parent route elements to render their child route elements. This allows nested UI to show up when child routes are rendered. If the parent route matched exactly, it will render a child index route or nothing if there is no index route.</p> </blockquote> <p>Read more: <a href=""https://reactrouter.com/en/main/components/outlet"" rel=""noreferrer"">https://reactrouter.com/en/main/components/outlet</a></p>",,,false
"{'account_id': 6615307, 'reputation': 52364, 'user_id': 5108796, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/5792d442b2c7e1ecd6b4efa8c10e6c11?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'ghybs', 'link': 'https://stackoverflow.com/users/5108796/ghybs'}",False,1,1669435663,1669435663,74579650,74566641,CC BY-SA 4.0,"<p>The simplest way is to <a href=""https://github.com/facebook/create-react-app/pull/8177"" rel=""nofollow noreferrer""><em>not use</em></a> <code>React.FC</code>, as suggested in @nullptr's answer.</p> <p>If you really want to use it, you can add an <a href=""https://www.typescriptlang.org/docs/handbook/2/objects.html#intersection-types"" rel=""nofollow noreferrer"">intersection</a> with your extra properties that you assign later on:</p> <pre><code>const ThreeDotMenu: React.FC<DefaultProps> & {     Item: typeof Item } </code></pre> <p><a href=""https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgIilQ3wChTgA7GJKTdJOAESXoFcAbGABRzAGc4Ab1JwxcNAAtgHACZFKALjgBBKFBQBPADzJ0MAHR6MAOQiykAPjgAfRMUPGYZi6QC+5NBEr94AFUkiJCYIGABZJEo2ZScDADEAYW0Wdi5eCAFrADJhUXEASRoQZRhNMCQITDhCpBB3OABeOAAKIQlpOQU4NwBKRusRcTgiGDYoSha8obFtSynpoe1OCQ4Ufn4TFBAkBoByFAAjfggONho4A4BzAFowKFAUKE1rjmBLyXgaAA8Ya4B3aQ0XZzBag8RCKQyeSRDxgxYAek4INB2nhyLEPXcnm8vmqRRiDniSRSKE4PD4-GsTVa7ShXV6-VyQxGYwmzXmi1elghHWhlDcqK580xHlIASCIXCkTYBhqeCacoA3ORmn0GtZ2YtxUhgqEIlF0dNtNrdVKorKipZgEVUSbJfqZXLDVrAjr7dKLbUrUU4AAmW2u00Oz0gQ0BiV66VzTFAA"" rel=""nofollow noreferrer"">Playground Link</a></p>",,,false
"{'account_id': 13222871, 'reputation': 4273, 'user_id': 9549012, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/vjUyV.jpg?s=256', 'display_name': 'nullptr', 'link': 'https://stackoverflow.com/users/9549012/nullptr'}",True,1,1669433130,1669345917,74567983,74566641,CC BY-SA 4.0,"<p>You can work around this by having a <code>.Menu</code> component that acts as the parent component.</p> <pre><code>import React from 'react';  const Menu: React.FC<DefaultProps> = ({children}: any) => {     return (         <>             <ul className='absolute bg-primary-light text-white'>                 {children}             </ul>         </>     ) }  const Item: React.FC<DefaultProps> = ({children}) => {     return (         <li>{children}</li>     ) }   const ThreeDotMenu = {Menu, Item} export default ThreeDotMenu  <ThreeDotMenu.Menu>                                                                                     <ThreeDotMenu.Item>item</ThreeDotMenu.Item>                                                                                  <ThreeDotMenu.Item>item 2</ThreeDotMenu.Item></ThreeDotMenu.Menu> </code></pre> <p><a href=""https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wG4BYAKCrQgDsBneAWSToFcAuRYmAOgBiAYQA8AESSYU7ADYwACjjAMAfHAC8cABQBvNAAtgMgCZE6AX24o6ATwCUGtTqpxXcIjHZQ62l2-8iKn7+IXAisnBoMigMDAByKCBI6vgoAEYMEDLsMEhwaQDmALRgUKAoUDZFMsAF+vC5AB4wRQDuhrn4QZShvW56hiZm5sF9YQD0st19IuPTbnZUI9SUtIzwAJK5INzI6PzC4pLScooQymqaugZGpmzmDupOox5ePlqjATUqA7fDs99RotKMsaPQmHAACr6IhIMQQGCsDgaOA6JHsAA0cC2SBAyyQjUgsDgxmOsng0Nh8MRbHYVDB6zgjRRWkezx6ble3l8HNcIkpSDhCPRfHRajGEslUulMtCnzc-JhgupIpxIBUwG2swFQppHD4avFsuNJtNIXlfJ1KtpBu2Gu2cAATNqlbrVXbRi6qcKbWKgUsgA"" rel=""nofollow noreferrer"">playground</a></p> <p>If you want to use the parent without the dot, you can just let the compiler figure the types out instead of giving explicit types.</p> <pre><code> const ThreeDotMenu = ({ children }) => {   return (     <>       <ul className=""absolute bg-primary-light text-white"">{children}</ul>     </>   ); };  const Item = ({ children }) => {   return <li>{children}</li>; };  ThreeDotMenu.Item = Item;  export default function App() {   return (     <ThreeDotMenu>       <ThreeDotMenu.Item>item</ThreeDotMenu.Item>       <ThreeDotMenu.Item>item 2</ThreeDotMenu.Item>     </ThreeDotMenu>   ); } </code></pre>",1669433130.0,,false
"{'account_id': 24565506, 'reputation': 76, 'user_id': 18472704, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AATXAJwsNg7HqIG6y2NXG1PaF4M5Uwf5FQ4vJxgvE4DE=k-s256', 'display_name': 'Joseph Walsh', 'link': 'https://stackoverflow.com/users/18472704/joseph-walsh'}",True,0,1669374605,1669374605,74571920,74566598,CC BY-SA 4.0,"<p><strong>How to Start a React App and Express Backend in One Docker Container on EC2</strong></p> <p>OK, I've looked at this. The way to get a react FE and node BE to connect on an EC2 device is the following. This presumes the structure I assume you have from your dockerfile:</p> <pre><code>client   - package.json (starts a server on p 3000)   - all client files server   - package.json (starts a server on p 5000)   - all server files </code></pre> <ol> <li><p>Use the docker file you've posted above</p> </li> <li><p>In the react-app client, use your proxy line in the client's package.json with the public IP address of the EC2 device</p> </li> </ol> <pre><code>""proxy"": ""http://<IP-Address>:5000"" </code></pre> <ol start=""3""> <li><p>Make sure ports 3000 and 5000 are accessible in your EC2 security groups</p> </li> <li><p>There's no need to alter anything with where express listens</p> </li> </ol> <pre><code>app.listen(5000, () => { </code></pre> <ol start=""5""> <li>To start two servers at once, you need a script to support your docker CMD(I assume your <code>npm run remote start</code> is like this) that can start them concurrently:</li> </ol> <pre><code>    ""remote-start"": ""cd .. && cd server && npm run dev & react-scripts start"" </code></pre> <p>Now both the BE and the FE will be running when the container is deployed to your EC2 device and will be accessible via the IP address of the EC2 device.</p> <p>In testing this, I found the EC2 device might freeze when the container starts. Give it some time and it should work fine.</p> <p>As mentioned by Zac Anger, you can curl to the ports but use the IP address of the EC2 device to test if its running.</p>",,,false
"{'account_id': 16316182, 'reputation': 1, 'user_id': 11783235, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-5IPPvqMIdOs/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfmb8se8OmUKfndFRBCxLVbrDa0vA/photo.jpg?sz=256', 'display_name': 'miguel silvestre', 'link': 'https://stackoverflow.com/users/11783235/miguel-silvestre'}",True,0,1669726342,1669726342,74614398,74566563,CC BY-SA 4.0,"<p>the solution for this problem is:</p> <pre><code>export default function cars({obj}){ // <-- here you have to get the member of the dictionary     return <h1>counter: {obj.counter}</h1> // obj is undefined, why?? } export async function getServerSideProps({req,res}){     class Counter{         constructor(){             this.counter = 22         }     }     var counter = new Counter()      return {         props:         {             obj:JSON.stringify(counter)         }     } } </code></pre>",,,false
"{'account_id': 27040636, 'reputation': 36, 'user_id': 20595475, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu2crCLooVTXU6rU9h-jwnAhBgaYSDSZm4yqbSta=k-s256', 'display_name': 'Martin Lai', 'link': 'https://stackoverflow.com/users/20595475/martin-lai'}",False,0,1669343946,1669343562,74567826,74566563,CC BY-SA 4.0,<pre><code>export default function cars(props){        return <h1>counter: {JSON.parse(props.obj).counter}</h1> } </code></pre>,1669343946.0,,false
"{'account_id': 20815818, 'reputation': 44137, 'user_id': 15288641, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/JpR3RiD2.jpg?s=256', 'display_name': 'Youssouf Oumar', 'link': 'https://stackoverflow.com/users/15288641/youssouf-oumar'}",True,1,1669536302,1669443937,74580171,74566529,CC BY-SA 4.0,"<p>If you hover over <code>addEventListener</code>, TypeScript tells you that the correct definition for a click handler for the <code>window</code> object would be <code>(this: Window, ev: MouseEvent) => any</code>.</p> <p>Beyond that, for <code>hideKeyboard</code>, you would need an <code>event.target instanceof Node</code> check, as <code>contains()</code> expect a <code>Node</code> element and <code>event.target</code> is of type <a href=""https://github.com/microsoft/TypeScript/blob/main/lib/lib.dom.d.ts#L5138"" rel=""nofollow noreferrer"">EventTarget</a> | <code>null</code>.</p> <pre><code>function hideKeyboard(this: Window, event: MouseEvent):any {   if (!showKeyboard) return;    if (     keyboard.current &&     event.target instanceof Node &&     !keyboard.current.contains(event.target)   ) {     setShowKeyboard(false);   } } </code></pre>",1669536302.0,,false
"{'account_id': 20972692, 'reputation': 76, 'user_id': 15409495, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gi_FKTVh3X6If50nYj28huq1PiEtCmpDpl1oFFX=k-s256', 'display_name': 'Muhammad Allak', 'link': 'https://stackoverflow.com/users/15409495/muhammad-allak'}",False,2,1669330859,1669330859,74566963,74566352,CC BY-SA 4.0,"<ol> <li><p>when updating the state inside useEffect you need to have the dependency array [] as the second parameter in the useEffect function otherwise you will have an infinite loop as you said. in your case the dependency array is empty which means the useEffect function will run only once when the page is first loaded.</p> </li> <li><p>and for the other part of your question when you update an array in useState you can use the spread operator ... like:</p> <p><code>setBooks(books => [ ...books, res.data.data.books]);</code></p> </li> </ol>",,,false
"{'account_id': 15533929, 'reputation': 298, 'user_id': 11206583, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-Qauck5VHb8Y/AAAAAAAAAAI/AAAAAAAAE8s/etjf1dzqZ0U/photo.jpg?sz=256', 'display_name': 'Miguel Caro', 'link': 'https://stackoverflow.com/users/11206583/miguel-caro'}",True,1,1669349894,1669349894,74568314,74566332,CC BY-SA 4.0,"<p>if this is your desire output... you just need to change the width to 100% on .single-producto class</p> <p><a href=""https://i.sstatic.net/2rMgu.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/2rMgu.jpg"" alt=""enter image description here"" /></a></p>",,,false
"{'account_id': 23089931, 'reputation': 1334, 'user_id': 17200950, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/4c0e5edffd2c7d50837ddbd37828b63a?s=256&d=identicon&r=PG', 'display_name': 'Woohaik', 'link': 'https://stackoverflow.com/users/17200950/woohaik'}",True,0,1669326389,1669325834,74566410,74566314,CC BY-SA 4.0,"<p>I have this scenario currently implemented using <a href=""https://www.npmjs.com/package/husky"" rel=""nofollow noreferrer"">husky</a> and <a href=""https://www.npmjs.com/package/eslint"" rel=""nofollow noreferrer"">eslint</a>.</p> <p>In the <code>pre-commit</code> file from husky, I have this command</p> <pre><code>eslint ./src/. --fix </code></pre> <p>And in <code>.eslintrc</code> this rule</p> <pre><code>""quotes"": [     ""error"",     ""double"",     {         ""allowTemplateLiterals"": true     } ] </code></pre> <p>Eslint with the <code>--fix</code> flag will try to fix what it cans things like adding semicolons or updating quotes. With the rule I'm saying: I want all quotes to be double quotes but allow me to use template literals.</p> <p>This does not affect react props you can still have props like </p> <p>When running a commit command, husky will trigger the hook and add double quotes so the commit will have the changes.</p>",1669326389.0,,false
"{'account_id': 11567198, 'reputation': 18159, 'user_id': 8475054, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b53d8a34ea00dc35caf0ffe7177875e7?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Robin Zigmond', 'link': 'https://stackoverflow.com/users/8475054/robin-zigmond'}",True,0,1669325476,1669325476,74566372,74566269,CC BY-SA 4.0,"<p>This will work. (Although you shouldn't be using <code>map</code> if you don't want to render actual output in the UI - but I assume this is just debugging code.)</p> <pre><code>{List.category.map(({ name, id }) => {   console.log(""Output:"", name, id); })} </code></pre>",,,false
"{'account_id': 26045760, 'reputation': 59, 'user_id': 19749827, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AFdZucqNlSbanQrFiEqneYI_HCWKkPWWxQJ2cX9hu-fE3w=k-s256', 'display_name': 'Spluli', 'link': 'https://stackoverflow.com/users/19749827/spluli'}",False,0,1669324860,1669324860,74566298,74566226,CC BY-SA 4.0,<p>I had to install a package</p> <p>npm i dotenv</p> <p>.env file:</p> <pre><code>REACT_APP_INSTAGRAM_KEY= IGQ...wdy```  var: </code></pre> <p>const url = <code>https://website&access_token=${process.env.REACT_APP_INSTAGRAM_KEY}</code>;```</p>,,,false
"{'account_id': 3082061, 'reputation': 28070, 'user_id': 2610061, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/cNXQE.jpg?s=256', 'display_name': 'Carsten Massmann', 'link': 'https://stackoverflow.com/users/2610061/carsten-massmann'}",False,0,1669324543,1669324543,74566261,74566181,CC BY-SA 4.0,"<p>Just a short snippet that should help to demonstrate the actual filtering function:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>const arr=[{id:4,name:""Fred""},{id:5,name:""Harry""},{id:6,name:""Herminony""}], user={id:5, name:""Kate""};  const remusr = (u) => arr.filter(e=>e.id!=u.id);  console.log(remusr(user));</code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 7615319, 'reputation': 7647, 'user_id': 5774952, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/yZM8h.png?s=256', 'display_name': 'Zac Anger', 'link': 'https://stackoverflow.com/users/5774952/zac-anger'}",True,1,1669324340,1669324340,74566231,74566181,CC BY-SA 4.0,"<p>Without seeing your UI code it's hard to say if there's some other issue updating the UI on click, but your current <code>onClickHandlerDelete</code> doesn't seem to be correct.</p> <p>The simplest way to remove one or more items from an array based on a condition is with <code>filter</code>:</p> <pre><code>const onClickHandlerDelete = (user) =>   favourites.filter((fav) => fav.id !== user.id) </code></pre>",,,false
"{'account_id': 8652667, 'reputation': 601, 'user_id': 6477821, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/96c95d675efa2aa429e12b65c8f49593?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Sundaramoorthy Anandh', 'link': 'https://stackoverflow.com/users/6477821/sundaramoorthy-anandh'}",False,1,1669327968,1669327968,74566659,74566128,CC BY-SA 4.0,"<pre><code>import * as React from 'react'; import './style.css';  export default function Input() {   const [mins, setMins] = React.useState(null);    const handleChange = (event) => {     if (/^\d{2,}:[1-5][0-9]$/.test(event.target.value)) {       const [hr, min] = event.target.value.split(':');       setMins(parseInt(hr) * 60 + parseInt(min));     } else {       setMins(null);     }        };   return (     <div>       <input         type=""text""         onChange={handleChange}         pattern={'^([0-1]?d|2[0-3])(?::([0-5]?d))?$'}         placeholder={'Enter time in HH:MM format'}         required       />       {mins && <p>Total Minutes = {mins}</p>}     </div>   ); } </code></pre> <p>This is the snippet written for your 2 rules..</p>",,,false
"{'account_id': 15533929, 'reputation': 298, 'user_id': 11206583, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-Qauck5VHb8Y/AAAAAAAAAAI/AAAAAAAAE8s/etjf1dzqZ0U/photo.jpg?sz=256', 'display_name': 'Miguel Caro', 'link': 'https://stackoverflow.com/users/11206583/miguel-caro'}",True,0,1669351410,1669351410,74568437,74566100,CC BY-SA 4.0,"<p>this code can help you <a href=""https://codesandbox.io/s/cool-architecture-6x0x8n?file=/src/App.js"" rel=""nofollow noreferrer"">https://codesandbox.io/s/cool-architecture-6x0x8n?file=/src/App.js</a></p> <pre><code>import { useState } from ""react"";  const CartItem = ({ item, onAdd, onSubtract }) => {   return (     <li>       <p>{item.title}</p>       <p>{item.price}</p>       <p>{item.quantity}</p>       <button onClick={() => onSubtract(item.id)} disabled={!item.quantity}>         {"" ""}         -{"" ""}       </button>       <button onClick={() => onAdd(item.id)}> + </button>     </li>   ); };  const Cart = ({ cartItems, setCartItems }) => {   const onAdd = (currentId) => {     const newItems = cartItems.map((item) => {       if (item.id === currentId) {         return { ...item, quantity: item.quantity + 1 };       }       return item;     });      setCartItems(newItems);   };    const onSubtract = (currentId) => {     const newItems = cartItems.map((item) => {       if (item.id === currentId && item.quantity > 0) {         return { ...item, quantity: item.quantity - 1 };       }       return item;     });      setCartItems(newItems);   };    return (     <div>       <h2>Your Shopping Cart</h2>       <ul>         {cartItems.map((cartItem) => (           <CartItem             key={cartItem.id}             item={cartItem}             onAdd={onAdd}             onSubtract={onSubtract}           />         ))}       </ul>     </div>   ); };  export default function App() {   const [items, setItems] = useState([     {       id: 1,       title: ""Book"",       price: 7,       quantity: 1     },     {       id: 2,       title: ""pencil"",       price: 9,       quantity: 0     }   ]);    return (     <div className=""App"">       <Cart cartItems={items} setCartItems={setItems} />     </div>   ); } </code></pre>",,,false
"{'account_id': 20815818, 'reputation': 44137, 'user_id': 15288641, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/JpR3RiD2.jpg?s=256', 'display_name': 'Youssouf Oumar', 'link': 'https://stackoverflow.com/users/15288641/youssouf-oumar'}",True,1,1669359260,1669358913,74569159,74566077,CC BY-SA 4.0,"<p>Use a state called <code>imageURL</code> for example with the help of <code>useState</code> from React like below. That's the correct React way I would say.</p> <blockquote> <p>You will see some additional HTML and JavaScript code. That's so we have a working example here on Stack Overflow. What really matters here is the <code>Coffee</code> function.</p> </blockquote> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function Coffee() {   const [imageURL, setImageURL] = React.useState("""");    React.useEffect(() => {     const baseURL = ""https://api.sampleapis.com/coffee/hot"";     fetch(baseURL)       .then((resp) => resp.json())       .then((data) => setImageURL(data[0].image));   }, []);    return (     <div id=""test"">       <img src={imageURL} alt="""" />     </div>   ); }   ReactDOM.render(   <Coffee />,   document.getElementById(""root"") );</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><script src=""https://cdnjs.cloudflare.com/ajax/libs/react/16.8.0/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.8.0/umd/react-dom.production.min.js""></script> <div id=""root""></div></code></pre>  </div>  </div>  </p>",1669359260.0,,false
"{'account_id': 100363, 'reputation': 9784, 'user_id': 270592, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/OyaO5.png?s=256', 'display_name': 'thedude', 'link': 'https://stackoverflow.com/users/270592/thedude'}",False,0,1669322728,1669322728,74566055,74565989,CC BY-SA 4.0,"<p>the images you create in <code>ratings</code> don't have a key. Try changing to something like:</p> <pre><code>for (let i = 0; i < review.rating; i++) {       stars.push(React.createElement(""img"", { src: ""/images/star.svg"", key: i })); } </code></pre>",,,false
"{'account_id': 20767616, 'reputation': 3, 'user_id': 15251167, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e9d187fbc04e88040b2902ced6c8f242?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Rivoks', 'link': 'https://stackoverflow.com/users/15251167/rivoks'}",False,0,1669322522,1669322522,74566033,74565989,CC BY-SA 4.0,"<p>Try to use a string instead of a number for your id, such as:</p> <pre><code>{   id: ""mykey_1"",   rating: 3,   image: ""/images/reviews/one.jpg"",   name: ""Adam Jarod"",   jobTitle: ""Sales manager"",   review:     ""Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequatur necessitatibus voluptatem aliquid alias quia beatae non quidem dolore praesentium"", }, </code></pre>",,,false
"{'account_id': 2438076, 'reputation': 518, 'user_id': 2127432, 'user_type': 'registered', 'accept_rate': 88, 'profile_image': 'https://i.sstatic.net/MoUvm.jpg?s=256', 'display_name': 'MS1', 'link': 'https://stackoverflow.com/users/2127432/ms1'}",True,1,1670344029,1670344029,74705919,74565944,CC BY-SA 4.0,"<p>Can you create a minimal working codesandbox? Maybe you are missing the <code>height</code> in the options?</p> <pre><code>const options = {   // Other options here...   height: 400, // Set the height of the chart };  return (   <Col>     <Chart       options={options}       series={ageGroupCounts}       type=""donut""       width=""400""     />   </Col> ); </code></pre> <p>Alternatively, you can also use the responsive property to set the height of the chart based on the width of the container element. Here is an example:</p> <pre><code>const options = {   // Other options here...   responsive: [     {       breakpoint: 480,       options: {         chart: {           width: 300,           height: 200, // Set the height of the chart         },         legend: {           position: 'bottom',         },       },     },   ], };  return (   <Col>     <Chart       options={options}       series={ageGroupCounts}       type=""donut""       width=""400""     />   </Col> ); </code></pre>",,,false
"{'account_id': 23089931, 'reputation': 1334, 'user_id': 17200950, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/4c0e5edffd2c7d50837ddbd37828b63a?s=256&d=identicon&r=PG', 'display_name': 'Woohaik', 'link': 'https://stackoverflow.com/users/17200950/woohaik'}",False,1,1669322204,1669322204,74565999,74565931,CC BY-SA 4.0,"<p>Both <code>useEffect</code> will be triggered on load, you can load the data from localStorage directly with <code>useState</code></p> <p>Then on useEffect data should have something</p> <pre><code>const [data, setData] = useState<NoteType[]>(() =>  (JSON.parse(localStorage.getItem(""notes"") ?? ""[]"") as NoteType[]));  useEffect(() => {   window.localStorage.setItem(""notes"", JSON.stringify(data)); [data]); </code></pre>",,,false
"{'account_id': 100363, 'reputation': 9784, 'user_id': 270592, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/OyaO5.png?s=256', 'display_name': 'thedude', 'link': 'https://stackoverflow.com/users/270592/thedude'}",False,1,1669322184,1669321888,74565958,74565931,CC BY-SA 4.0,"<p>replace</p> <pre><code>useEffect(() => {     window.localStorage.setItem(""notes"", JSON.stringify(data));   }, [data]); </code></pre> <p>with</p> <pre><code>useEffect(() => {     if (data.length > 0) {          window.localStorage.setItem(""notes"", JSON.stringify(data));     }   }, [data]); </code></pre>",1669322184.0,,false
"{'account_id': 15594734, 'reputation': 290, 'user_id': 14157959, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/2234211916643241/picture?type=large', 'display_name': 'Timcu Alexei', 'link': 'https://stackoverflow.com/users/14157959/timcu-alexei'}",True,0,1669824506,1669824506,74630832,74565847,CC BY-SA 4.0,"<p>You have to remove <code><SafeAreaView></code> from <code>RoutinesStackNavigator.tsx</code></p> <pre><code>const Stack = createStackNavigator();  export default function RoutinesStackNavigator() {    return (     <Stack.Navigator initialRouteName=""Routines"">       <Stack.Screen name=""Routines"" component={Routines} />       <Stack.Screen name=""CreateRoutine"" component={CreateRoutine} />     </Stack.Navigator>   ); } </code></pre>",,,false
"{'account_id': 23398459, 'reputation': 1214, 'user_id': 17462012, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/K6L2R.jpg?s=256', 'display_name': 'Paiman Rasoli', 'link': 'https://stackoverflow.com/users/17462012/paiman-rasoli'}",False,-1,1670132453,1670132453,74673151,74565837,CC BY-SA 4.0,"<p>I think the package that you used is not using in React.js that is for Next.js. I suggest using <code>React-intl</code> package for supporting multi language in react applications. <a href=""https://formatjs.io/docs/react-intl/"" rel=""nofollow noreferrer"">React-intl documentation</a></p> <p>and also have a look on this blog which done localization using react-intl <a href=""https://lokalise.com/blog/react-i18n-intl/"" rel=""nofollow noreferrer"">React i18n: A step-by-step guide to React-intl</a></p>",,,false
"{'account_id': 9879125, 'reputation': 439, 'user_id': 7315793, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/4f17b30332914690f87417383d6a647f?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Alexandre Palo', 'link': 'https://stackoverflow.com/users/7315793/alexandre-palo'}",False,0,1669386188,1669386188,74574191,74565822,CC BY-SA 4.0,"<p>I can see two solutions here.</p> <p>The first one is to use the <code>L.Icon</code> custom icon from Leaflet. Especially setting a <a href=""https://leafletjs.com/reference.html#icon"" rel=""nofollow noreferrer"">div as icon</a> :</p> <pre class=""lang-js prettyprint-override""><code>var myIcon = L.divIcon({className: 'my-div-icon'}); </code></pre> <p>Creating a car should be easy enough with divs ð Then, dynamically set a rotate transform styling to the overall div icon according to the direction you want.</p> <p>The second one is to use Leaflet svg layer so you can easily create the icon you want, even complex, as svg shapes.<br /> And once again, set a rotate styling to the shape according to the direction.</p>",,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",False,0,1669324227,1669324227,74566215,74565656,CC BY-SA 4.0,"<p>In example that you provided, you use function component ChartWrapper and have a handleHover function that is actually outside of this component.</p> <p>I'm not sure how full code looks like, but currently it's not clear how you pass that data into your ChartWrapper and what is going on with state here.</p> <p>Provide full example, or just use useState inside of your ChartWrapper component, move your handleHover function into it and try it out.</p>",,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",False,0,1669319822,1669319822,74565699,74565594,CC BY-SA 4.0,"<p>Have you tried this ?</p> <pre class=""lang-js prettyprint-override""><code>cy.get('input[id=""Name""]').invoke('val').then(value => assert.equal(value, testName)); </code></pre>",,,false
"{'account_id': 22852294, 'reputation': 30666, 'user_id': 16997707, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jYbDw.png?s=256', 'display_name': 'Fody', 'link': 'https://stackoverflow.com/users/16997707/fody'}",True,5,1669319629,1669319629,74565679,74565594,CC BY-SA 4.0,"<p>Try taking the value from the child <code><input></code>.</p> <pre class=""lang-js prettyprint-override""><code>cy.get('.creation-name')  // or .create-name, maybe a typo in the question   .find('input')   .invoke('val')   .should('equal', 'Test name') </code></pre> <p>The <code>contains()</code> and text related commands won't work because it's an input, which hold the value internally.</p> <p>Text commands only work for element that have the text between tags like <code><div>Test text</div></code>.</p>",,,false
"{'account_id': 14217529, 'reputation': 37, 'user_id': 10270975, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/534365227011494/picture?type=large', 'display_name': 'Sonu Gadewar', 'link': 'https://stackoverflow.com/users/10270975/sonu-gadewar'}",False,0,1672691232,1672691232,74986761,74565565,CC BY-SA 4.0,<p>I converted the shapefile into KML online and imported it to the application.</p>,,,false
"{'account_id': 26779000, 'reputation': 1, 'user_id': 20374158, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0vhSsCusNo6CAJZwVMd9i_mtXCLdD_er-1Ud4s=k-s256', 'display_name': 'ilpiotro', 'link': 'https://stackoverflow.com/users/20374158/ilpiotro'}",False,0,1669321012,1669321012,74565849,74565481,CC BY-SA 4.0,"<p>I made it finally. Looks like I don't have to mock any calls. I need to copy my user <code>appSession</code> cookie and save it in <code>cypress/fixtures/appSessionCookie.json</code> file:</p> <pre><code>{   ""appSession"": ""<cookie-value>"" } </code></pre> <p>Then use it in tests as follows:</p> <pre><code>  before(() => {     cy.fixture('appSessionCookie').then((cookie) => {       cy.setCookie('appSession', cookie.appSession);     });   }); </code></pre> <p>This makes a user automatically logged in with Auth0.</p>",,,false
"{'account_id': 1465269, 'reputation': 12222, 'user_id': 1712294, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/798141b89e80db24a6ffea5007f79024?s=256&d=identicon&r=PG', 'display_name': 'Michal Trojanowski', 'link': 'https://stackoverflow.com/users/1712294/michal-trojanowski'}",False,0,1669816872,1669816872,74629036,74565355,CC BY-SA 4.0,"<p>You can use <code>localStorage</code> to save data that will be accessible in different tabs of your application. Data in the <code>localStorage</code> will be also available after you refresh the active tab.</p> <p>You have to keep in mind, however, that presently, keeping login data in <code>localStorage</code> is considered unsafe. The data kept there is vulnerable to Cross-Site Scripting attacks. It's OK if you're creating some applications for your own use or as a playground, but in a real-world app you would have to resort to more secure, but also more complicated setups that use backend components to store tokens (and communicate with the front using cookies).</p>",,,false
"{'account_id': 21731279, 'reputation': 69, 'user_id': 16039983, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GjzA590jS3Oyw9WY-8rfQcBO5hTFoGjb-goG-8yOQ=k-s256', 'display_name': 'Dhinesh', 'link': 'https://stackoverflow.com/users/16039983/dhinesh'}",False,0,1669318209,1669318209,74565493,74565335,CC BY-SA 4.0,"<pre><code>import React, { useState } from ""react"";  export default function App() {    const [num1, setNum1] = useState(null);   const [num2, setNum2] = useState(null);    const [result, setResult] = useState(null);    const myFunction = () => {     setResult(parseInt(num1, 10) + parseInt(num2, 10));   }    return (     <div>       <input type=""number"" onChange={(e) => setNum1(e.target.value)} />       +       <input type=""number"" onChange={(e) => setNum2(e.target.value)} />       {         result && <div>The sum of {num1} and {num2} is : {result}</div>       }       <button onClick={() => myFunction()}>Add</button>     </div>   ) }  </code></pre>",,,false
"{'account_id': 22799402, 'reputation': 195, 'user_id': 16952372, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/XAGAe.jpg?s=256', 'display_name': 'Finn', 'link': 'https://stackoverflow.com/users/16952372/finn'}",True,0,1669317954,1669317954,74565453,74565288,CC BY-SA 4.0,"<p>You can create a context in <code>App.js</code> with <code>createContext</code>, create the state and pass it into your components with the <code>Provider</code> of your context like so:</p> <pre><code>export const FavContext = createContext();  const App = () => {   const [favourites, setFavourites] = useState([]);    return (     <FavContext.Provider value={{ favourites, setFavourites }}>       <HashRouter>         <Routes>           <Route path={""/""} element={<Dashboard />} />           <Route path={""/favorites""} element={<Favorites />} />         </Routes>       </HashRouter>     </FavContext.Provider>   ); }; </code></pre> <p>Now you can access the objects passed into the components by importing the context and extract them using <code>useContext</code>:</p> <pre><code>import { FavContext } from ""../../App"";  const Favorites = () => {   const navigate = useNavigate();   const { favourites } = useContext(FavContext);    return (     <div>       <button         onClick={() => {           navigate(""/"");         }}       >         Navigate To Dashboard       </button>       {favourites?.map((user) => (         <>           <div key={user.id}>             <p>{user.id} </p>             <p>{user.name}</p>           </div>         </>       ))}     </div>   ); }; </code></pre> <p><a href=""https://codesandbox.io/s/black-rain-q9p5fn?fontsize=14&hidenavigation=1&theme=dark"" rel=""nofollow noreferrer""><img src=""https://codesandbox.io/static/img/play-codesandbox.svg"" alt=""Edit black-rain-q9p5fn"" /></a></p>",,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",True,-1,1669316421,1669316421,74565234,74565182,CC BY-SA 4.0,<p>Probably you getting error because you are trying to read from object that is undefined.</p> <p>You can make modify your condition to handle case when <code>error</code> is undefined:</p> <pre><code> if(data?.error?.message && data.error.message === 'EMAIL_NOT_FOUND'){    ...  } </code></pre> <p>That way you will make sure that <code>error</code> and <code>message</code> exist and not undefined.</p>,,,false
"{'account_id': 11875768, 'reputation': 198194, 'user_id': 8690857, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-47_HcdolAr0/AAAAAAAAAAI/AAAAAAAAB30/lD6xAXOWlu4/photo.jpg?sz=256', 'display_name': 'Drew Reese', 'link': 'https://stackoverflow.com/users/8690857/drew-reese'}",False,0,1669682382,1669682382,74607967,74565170,CC BY-SA 4.0,"<p>Route path parameters are only accessible via the <code>useParams</code> hook. If you need to access the route path parameters <em>prior</em> to rendering the routed component then you'd need to create a wrapping component that can ""sniff"" the parameters and apply any logic.</p> <p>Example:</p> <pre class=""lang-js prettyprint-override""><code>const ProfileWrapper = ({ getProfile }) => {   const { id } = useParams();   return <Profile profile={getProfile(id)} /> };  function App() {     const getProfile = id => generateProfile(     seedProfiles.find(profile => profile.id === id)   );    return (     <Routes>       <Route path=""/"" element={<h1>PROFILES</h1>} />       <Route           path=""/profile/:id""           element={<ProfileWrapper profile={getProfile} />}        />     </Routes>   ); } </code></pre> <p>However, it's more common to move this logic into the component being rendered since there are not really any parental dependencies.</p> <p>Example:</p> <pre class=""lang-js prettyprint-override""><code>import { Routes, Route } from 'react-router-dom'; import Profile from './Profile'; import '../assets/styles/App.css'; import seedProfiles from '../seedProfiles'; import generateProfile from '../helpers/profileHelper';  const Profile = () => {    const { id } = useParams();    const profile = generateProfile(seedProfiles.find(profile => profile.id === id));    return ...; } </code></pre> <pre class=""lang-js prettyprint-override""><code>import { Routes, Route } from 'react-router-dom'; import Profile from './Profile'; import '../assets/styles/App.css';  function App() {     return (     <Routes>       <Route path=""/"" element={<h1>PROFILES</h1>} />       <Route path=""/profile/:id"" element={<Profile />} />     </Routes>   ); } </code></pre>",,,false
"{'account_id': 19980284, 'reputation': 178, 'user_id': 14643631, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14GjLr69ovir-AG1H0qWiz7DPgW_LViAM10k-MKxiuA=k-s256', 'display_name': 'Sebastian Meckovski', 'link': 'https://stackoverflow.com/users/14643631/sebastian-meckovski'}",True,1,1669319858,1669317865,74565438,74565113,CC BY-SA 4.0,"<p>Not sure which UI library you are using. The first thing I noticed is that you use <code><option></code> tag without surrounding it with <code><select></code> tag</p> <pre><code>  <option key={sector.id} value={sector.id}>     {sector.Manufacturing}   </option> </code></pre> <p>I'm assuming you are trying to implement HTML <code><select></code> dropdown. I think if you use only  tags without surrounding it with  it will just return strings, which is what happening in your example.</p> <p>Try changing your FormSelect function to something like this:</p> <pre><code>const FormSelect = () => {     return (         <select>             {allSectors.map((sector) => (                 <option key={sector.id} value={sector.id}>                     {item}                 </option>             ))}         </select>     ); }; </code></pre> <p><strong>EDIT 1</strong></p> <p>From your comments, I noticed that your <code>sector.Manufacturing</code> is an array, but it should be a string. When you put an array inside option like this <code><option>{array}</option></code> your get all the array values squashed into one <code><option></code> tag.</p> <p>try also looping over <code>sector.Manufacturing</code> rather than allSector. Hard to solve without seeing the full code, but it might look something like this:</p> <pre><code>    const FormSelect = () => {     return (         <select>             {allSectors.map((sector) => (                 <option key={sector.id} value={sector.id}>                     {sector.Manufacturing.map((item) => {                         return item;                     })}                 </option>             ))}         </select>       );    }; </code></pre> <p><strong>EDIT 2</strong> Try this:</p> <pre><code>const FormSelect = () => {     return (         <select>             {allSectors.map((sector) =>                 sector.Manufacturing.map((item, i) => {                     return (                         <option key={i} value={item}>                             {item}                         </option>                     );                 })             )}         </select>     ); }; </code></pre>",1669319858.0,,false
"{'account_id': 26852198, 'reputation': 7407, 'user_id': 20436957, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/88ZOB.png?s=256', 'display_name': 'John Li', 'link': 'https://stackoverflow.com/users/20436957/john-li'}",False,0,1669338869,1669321725,74565933,74565105,CC BY-SA 4.0,"<p>Here is an over simplified example, it generates a random color on each run, and combine it with a generated lightness based on the index <code>i</code> of the list to create a color value for each item.</p> <p>The length of the list is randomly generated, same as the posted code, and the lightness of each item gradually increase (go from dark to light).</p> <p>The color (Hue), min and max lightness of the list can be customized.</p> <p>This example runs in the snippet below for convenience, and displays randomized results by running and hiding the snippet.</p> <p>Hope it will help.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>    class TodoApp extends React.Component {       constructor(props) {         super(props)         this.state = {         }       }              render() {       // ð Set the random range for length of list       const min = 5;       const max = 30;       const rand = min + Math.random() * (max - min);        // ð Get a random color (Hue) for first item, or set a fixed one       const minColor = 0;       const maxColor = 360;       const randColor = minColor + Math.floor(Math.random() * (maxColor - minColor));        // ð Set min and max lightness       const minLit = 50;       const maxLit = 90;       // ð Since the list go lighter, minLit is also the first item lightness, and maxLit the last item lightness        const calcLit = (i) => (Math.floor((i* (maxLit-minLit))/(rand - 1))) + minLit;                        let rows = [];       for (let i = 0; i < rand; i++) {       const itemLit = calcLit(i);       const backgroundColor = `hsl(${randColor} 100% ${itemLit}%)`;       rows.push(<tr style={{backgroundColor}} ><td>{backgroundColor}</td></tr>)}         return (           <div>            <table>             <tr>              <th>Title</th>            </tr>             {rows}          </table>           </div>         )       }     }      ReactDOM.render(<TodoApp />, document.querySelector('#root'));</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div id=""root""></div> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.1.0/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.1.0/umd/react-dom.production.min.js""></script></code></pre>  </div>  </div>  </p>",1669338869.0,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",False,0,1669317476,1669317476,74565392,74565105,CC BY-SA 4.0,"<p>Actually I'd suggest you to use hsv instead of rgb. In hsv, v is represent value, and the lower it is, the darker color will be.</p> <p>So for example you can take range from 20% (0% is fully black) to 100% and make some calculation over it. You can just divide 80 on number of rows, then for each row set V to <code>rowNumber * (80 / numberOfRows)</code>, I'm not sure how it work with decimal numbers, so you might use Math.floor or something like that to get an integer value.</p> <p>Hope it helps</p>",,,false
"{'account_id': 19255761, 'reputation': 907, 'user_id': 15119024, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/LyxLa.png?s=256', 'display_name': 'ClusterH', 'link': 'https://stackoverflow.com/users/15119024/clusterh'}",True,0,1669316149,1669316149,74565190,74565091,CC BY-SA 4.0,"<p>You should add default case with <code>null</code> in the switch-case The error is because it returns <code>undefined</code> if text is not both ""A"" and ""B"", and it does not match type.</p>",,,false
"{'account_id': 17567156, 'reputation': 3020, 'user_id': 12743692, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jG5eJ.png?s=256', 'display_name': 'dreambold', 'link': 'https://stackoverflow.com/users/12743692/dreambold'}",False,1,1669316118,1669316118,74565185,74565025,CC BY-SA 4.0,"<p>This is a docker file for the frontend(<code>client</code> in your case). You can make a <code>dockerfile</code> under your <code>client</code> folder and build the image with <code>docker build -t image-name:tag-name .</code></p> <pre><code># Pull the latest node image from dockerhub FROM node:latest # Create app directory  WORKDIR /usr/src/app # Copy package.json and package-lock.json to the workdir COPY package*.json ./  # Install the dependencies RUN npm install # Bundle app source COPY . . # Run the app in docker CMD [""npm"", ""start""] </code></pre>",,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",False,1,1669323876,1669318435,74565524,74565004,CC BY-SA 4.0,"<p>The better way of doing this in react is actually making it in jsx. Its better always to avoid all ""document.getElement..."" in react because in this way you are working with actual DOM, so just do it in jsx and leave other for react.</p> <p>I'll make a little example for you:</p> <pre><code>import React, {useState} from 'react'  const MyComponent = () => {   const [dropDownItems, setDropDownItems] = setState([])     ...    return (     <>       <input id=""search-input"" type=""text"" value="""" />       <ul id=""dropdown-list"">         {dropDownItems.map(item => (            <div>{item.name}</div>         ))}         </ul>     </>   ) }  </code></pre> <p>Thats not a full example but main thought. You make your request in input's onChange, after successful call you put response to dropDownItems, and it will be automatically rendered to your dropdown list. There is no need of searching for some elements in DOM by yourself.</p> <p>I hope it helps, if not, ask questions and I'll try to answer them.</p> <p><strong>UPDATE</strong></p> <p>So for your situation I think that you may use Map, where key will be id of element or something like that.</p> <p>Now you have all keys of your elements that currently exist in DOM. After this, you can go through your Map and check if key exists in your response from api, if not, you delete that element from DOM and key from map. And final step is you go through your response from api, and check if that element exists in your map. On final step you will have there only keys that exists in your map and response at the same time, so you skip elements if they exists in map and add to DOM new elements if not, also add this key to your map.</p> <p>After that you will have updated DOM and a map that represents DOM.</p> <p>Any operations with DOM are very heavy, so ability to check if element exists in DOM without touching DOM itself will save you a lot of time.</p> <p>Actually that answer is not 100% correct, because in that case we will lose order of your elements in DOM and it will not represent your actual order of elements in array returned from api, but still it might be helpful.</p> <p>Hope it helps</p>",1669323876.0,,false
"{'account_id': 26877426, 'reputation': 361, 'user_id': 20458458, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/QTyWi.jpg?s=256', 'display_name': 'kuuhak-u', 'link': 'https://stackoverflow.com/users/20458458/kuuhak-u'}",True,0,1669315791,1669315791,74565132,74564980,CC BY-SA 4.0,"<p>I think it should be</p> <pre><code>    State.productArr.items.push( {       id: action.payload.productId,       title: action.payload.productTitle, }); </code></pre> <p>Did you try with push method??</p>",,,false
"{'account_id': 19892464, 'reputation': 15280, 'user_id': 14574199, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/e8d8cab70d5567c10c84d5f15e57cd40?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Tiny Wang', 'link': 'https://stackoverflow.com/users/14574199/tiny-wang'}",True,1,1669353783,1669353783,74568623,74564878,CC BY-SA 4.0,"<p>Agree with @ch4mp to call graph api directly in SPA if it's allowed. If not, then I recommend you using <code>on-behalf-flow</code> or <code>client credential flow</code> based on your requirement.</p> <p>Let's come back to your requirement -- call ms graph api in a springboot api project. First, let's see one of the graph api <a href=""https://learn.microsoft.com/en-us/graph/api/user-get?view=graph-rest-1.0&tabs=http#permissions"" rel=""nofollow noreferrer"">getting user api</a>. You can see permission types here: Delegated which means call graph api on behalf of the user, Application which means calling api on behalf of the application(your spingboot api project) itself. If you want to call api behalf of the user, then you have to use on-behalf-of flow. This is because the api project which will be considered as a daemon application, so the project itself doesn't have a UI page to let users enter username/password to sign in and get authenticated.</p> <p>You can certainly use ROPC flow which have to pass the username/password to api but I really think it unsafe, so I don't recommend.</p> <p>If it's not necessary for you to call graph api on behalf of user, you can certainly take client credential flow into consideration. But pls note here, application type api permission is a ""large"" api permission which always have name like <code>User.ReadWrite.All, Mail.ReadWrite.All</code> and it always means the application can not only query user information but also be able to modify user information.</p> <p>If you want to use on-behalf-flow, then you may review <a href=""https://stackoverflow.com/questions/74311506/how-to-create-client-assertion-and-assertion-in-on-behalf-of-flow/74313765#74313765"">this answer</a> and it explained the whole progress...</p>",,,false
"{'account_id': 308139, 'reputation': 11735, 'user_id': 619830, 'user_type': 'registered', 'accept_rate': 75, 'profile_image': 'https://www.gravatar.com/avatar/f4d00b0a82e9307b1d68b29867fee4e5?s=256&d=identicon&r=PG', 'display_name': 'ch4mp', 'link': 'https://stackoverflow.com/users/619830/ch4mp'}",False,0,1669321474,1669319073,74565607,74564878,CC BY-SA 4.0,"<p>I would use authorization-code flow (with PKCE) to get an access-token and then refresh-token flow to ""maintain"" this token, both from client.</p> <p>Authorizing the request to your resource-server with this token only makes sense if Microsoft authorization-server is your main authorization-server. Otherwise (user also logged in with an authorization-server of your own or not using OAuth2 betwean React and backend), you can still send Microsoft access-token in request body.</p> <p>In any case, when issuing requests in the name of the user from the backend, do as you suggest: just set the access-token sent by the client as Bearer Authorization header (token is retrieved either from Spring security context or request body). Backend fetches a new access-token (using client-credentials flow) when issuing requests in its own name (without the context of a user).</p> <p>Side note: have you considered calling Microsoft API directly from React client? If you don't have to store the result of that call on your resource-server (i.e. call graph API to display data and store only what user selected from that data), that would save quite some latency on the client and costs (network and CPU) on the backend.</p>",1669321474.0,,false
"{'account_id': 17784410, 'reputation': 10856, 'user_id': 12914833, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/mNLi2.jpg?s=256', 'display_name': 'Chris Hamilton', 'link': 'https://stackoverflow.com/users/12914833/chris-hamilton'}",True,1,1669314401,1669314401,74564936,74564804,CC BY-SA 4.0,"<p>You first duplicate the array, then you can safely mutate the new array.</p> <pre><code>onChange={(e) => setEditOrders(prevState => ({   const prevOrder = prevState[index];   const nextState = [...prevState];   nextState[index] = { ...prevOrder, weight: e.target.value };   return nextState; }))} </code></pre>",,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",False,1,1669314350,1669314350,74564925,74564804,CC BY-SA 4.0,"<p>Well you can do this by writing a function that gets the index and the value and updating the state like this:</p> <pre class=""lang-js prettyprint-override""><code>const handleOnChange = (event, index) => {   setEditOrders((prevState) => {     const newState = [...prevState];     newState[index].weight = event.target.value;     return newState;   ) ) </code></pre> <p>And then use it like this:</p> <pre class=""lang-js prettyprint-override""><code><MDBox pt={2} pb={1} px={1} sx={{flex: 1}}>   <FormControl variant=""standard"">     <Select       value=""kg""       style={{height: 44}}       label=""Einheit""       endAdornment={         <InputAdornment position=""end"">           <ArrowDropDown fontSize=""medium"" color=""standard""/>         </InputAdornment>       }       onChange={(event) => handleOnChange(event, index)}        disabled={loading && true}     >       <MenuItem value=""g"">g</MenuItem>       <MenuItem value=""kg"">kg</MenuItem>       <MenuItem value=""ml"">ml</MenuItem>       <MenuItem value=""cl"">cl</MenuItem>       <MenuItem value=""l"">l</MenuItem>       <MenuItem value=""StÃ¼ck"">StÃ¼ck</MenuItem>     </Select>   </FormControl> </MDBox> </code></pre>",,,false
"{'account_id': 19787942, 'reputation': 1, 'user_id': 14491526, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-uPxjro_cGn0/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuck-9xgScJCNijiTvLuJYzJYLYnRhQ/s96-c/photo.jpg?sz=256', 'display_name': ' Hash', 'link': 'https://stackoverflow.com/users/14491526/hash'}",False,0,1670128940,1670128940,74672927,74564802,CC BY-SA 4.0,"<p>background: linear-gradient(to bottom, rgba(url(' yourimg '), 0.0), rgba(url('yourimg'), 1.0));</p>",,,false
"{'account_id': 26852198, 'reputation': 7407, 'user_id': 20436957, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/88ZOB.png?s=256', 'display_name': 'John Li', 'link': 'https://stackoverflow.com/users/20436957/john-li'}",True,2,1669885152,1669883345,74638907,74564802,CC BY-SA 4.0,"<p>Here is a possible solution that uses <code>::before</code> and <code>::after</code> pseudo elements on the crop window to create the crop border and the overlay.</p> <p><code>::before</code> works as the overlay for the overflowing part of image:</p> <pre><code>.window::before {   content: """";   position: absolute;   inset: 0;   opacity: 0.8;   outline: 250px solid white;   z-index: 50; } </code></pre> <p><code>::after</code> works as the crop border on top of image:</p> <pre><code>.window::after {   content: """";   position: absolute;   inset: 0;   outline: 5px solid tomato;   z-index: 75; } </code></pre> <p>There are some buttons in below example to move the picture around, which are for testing only. These can be safely removed should this project choose a different approach for functionality.</p> <p>The example runs in snippet for convenience:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""true"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>function Crop({ image, boxSizeX, boxSizeY, step }) {   const [imgX, setImgX] = React.useState(0);   const [imgY, setImgY] = React.useState(0);    const imgRef = React.useRef(null);   const [imgNatural, setImgNatural] = React.useState({ width: 0, height: 0 });    const handleImageLoad = () =>     setImgNatural({       width: imgRef.current.naturalWidth,       height: imgRef.current.naturalHeight,     });    const rangeX = imgNatural.width     ? Math.abs((boxSizeX - imgNatural.width) / 2)     : 100;    const rangeY = imgNatural.height     ? Math.abs((boxSizeY - imgNatural.height) / 2)     : 100;    return (     <div className=""modal"">       <div         className=""window""         style={{ width: `${boxSizeX}px`, height: `${boxSizeY}px` }}       >         <img           src={image}           alt=""""           ref={imgRef}           onLoad={handleImageLoad}           style={{             transform: `translate(${imgX}px, ${imgY}px)`,           }}         />       </div>       <button         onClick={() => {           setImgY((prev) => (prev -= step));         }}         disabled={imgY <= -rangeY ? true : false}       >         ð       </button>       <button         onClick={() => {           setImgY((prev) => (prev += step));         }}         disabled={imgY >= rangeY ? true : false}       >         ð       </button>       <button         onClick={() => {           setImgX((prev) => (prev -= step));         }}         disabled={imgX <= -rangeX ? true : false}       >         ð       </button>       <button         onClick={() => {           setImgX((prev) => (prev += step));         }}         disabled={imgX >= rangeX ? true : false}       >         ð       </button>     </div>   ); }  const App = () => {   return (     <div className=""app"">       <Crop         image={""https://picsum.photos/400/300""}         boxSizeX={200}         boxSizeY={200}         step={10}       />     </div>   ); };  ReactDOM.render(<App />, document.querySelector(""#root""));</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>body {   display: flex;   justify-content: center;   align-items: center;   min-height: 100vh; }  .modal {   width: 450px;   height: 350px;   border-radius: 10px;   overflow: hidden;   display: flex;   justify-content: center;   align-items: center;   position: relative;   outline: 5px solid darkseagreen; }  .window {   background-color: pink;   display: flex;   justify-content: center;   align-items: center;   position: relative; }  .window > img {   z-index: 25; }  .window::before {   content: """";   position: absolute;   inset: 0;   opacity: 0.8;   outline: 250px solid white;   z-index: 50; }  .window::after {   content: """";   position: absolute;   inset: 0;   outline: 5px solid tomato;   z-index: 75; }  button {   position: absolute;   padding: 6px;   z-index: 100; }  button:disabled {   opacity: 0.3; }  button:nth-of-type(1) {   top: 25px; }  button:nth-of-type(2) {   bottom: 25px; }  button:nth-of-type(3) {   left: 70px; }  button:nth-of-type(4) {   right: 70px; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div id=""root""></div> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react/18.1.0/umd/react.production.min.js""></script> <script src=""https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.1.0/umd/react-dom.production.min.js""></script></code></pre>  </div>  </div>  </p>",1669885152.0,,false
"{'account_id': 974639, 'reputation': 1121, 'user_id': 996314, 'user_type': 'registered', 'accept_rate': 67, 'profile_image': 'https://i.sstatic.net/4L1Os.png?s=256', 'display_name': 'Rokit', 'link': 'https://stackoverflow.com/users/996314/rokit'}",False,0,1669534774,1669534129,74588258,74564802,CC BY-SA 4.0,"<p>You could use <a href=""https://developer.mozilla.org/en-US/docs/Web/CSS/background-blend-mode"" rel=""nofollow noreferrer"">background-blend-mode</a>.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-js lang-js prettyprint-override""><code>let imageContainer = document.getElementById(""image-container""); imageContainer.onmousemove = function(e) {   let overlay = document.getElementById(""overlay"");   overlay.style.left = e.offsetX + ""px"";   overlay.style.top = e.offsetY + ""px""; };</code></pre>  <pre class=""snippet-code-css lang-css prettyprint-override""><code>div {   position: relative;   width: 500px;   height: 300px;   background-image: url(""https://images.pexels.com/photos/533769/pexels-photo-533769.jpeg"");   background-color: rgba(0, 0, 0, 0.5);   background-blend-mode: multiply;   background-attachment: fixed;   overflow: hidden; }  #overlay {   position:absolute;   width: 200px;   height: 100px;   background-blend-mode: normal;   pointer-events: none; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div id=""image-container"">   <div id=""overlay""></div> </div></code></pre>  </div>  </div>  </p>",1669534774.0,,false
"{'account_id': 17784410, 'reputation': 10856, 'user_id': 12914833, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/mNLi2.jpg?s=256', 'display_name': 'Chris Hamilton', 'link': 'https://stackoverflow.com/users/12914833/chris-hamilton'}",False,0,1669316800,1669316089,74565178,74564750,CC BY-SA 4.0,"<p>In short, no. That's a drawback of single page applications. Since the page isn't actually being navigated, you can't use the native <code>beforeunload</code> event, and since you're not using a router you can't customize routing in that respect either. What you can do is wrap these navigation components with a custom component so you don't need to repeat yourself everywhere.</p> <pre><code>const MyCustomTabComponent = (props) => {   function navigateIfNotDirty(tabIndex) {     // Check if it's safe to navigate     props.onTabChange?.() // Maybe allow passing another callback in as well     // Finally navigate   }      return <TabComponent {...props} onTabChange={navigateIfNotDirty} /> } </code></pre> <p>I don't know the actual syntax of the components you're using, but that should give you the idea.</p> <p>The actual logic will be specific to the UI library you're using, if any. By your question, it seems like you already figured out how to cancel navigation given a condition, it's just a matter of abstracting that logic into a new, reusable component.</p> <p>If the navigation components are already custom instead of being from a library, then it's even easier.</p>",1669316800.0,,false
"{'account_id': 1790714, 'reputation': 92961, 'user_id': 1631193, 'user_type': 'registered', 'accept_rate': 71, 'profile_image': 'https://www.gravatar.com/avatar/ac9dfee58394495fa69f12f58a928be3?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Gabe Sechan', 'link': 'https://stackoverflow.com/users/1631193/gabe-sechan'}",True,2,1669361605,1669316179,74565195,74564744,CC BY-SA 4.0,"<p>Won't work on modern android-  broadcast receivers are background tasks.  Background tasks can't launch foreground activities.  This method works for you to do some quick background processing, or set up some alarms for later, but it won't allow you to display an activity.</p> <p>Are you a kiosk mode app where you want to take over the homescreen and lock the user into your app?  If so, you should be writing a launcher app.  If not, this kind of behavior is highly discouraged up to almost being active malware-  popping up your app on boot isn't user friendly, its spammy and annoying.</p> <p>To make an activity the home screen for a kiosk, use</p> <pre><code>   <intent-filter>         <action android:name=""android.intent.action.MAIN"" />          <category android:name=""android.intent.category.LAUNCHER"" />          <category android:name=""android.intent.category.HOME"" />          <category android:name=""android.intent.category.DEFAULT"" />      </intent-filter> </code></pre> <p>in your manifest, then set your app as the default launcher after install.  After that, it will always launch your app on boot and when the user clicks the home button.</p>",1669361605.0,,false
"{'account_id': 27142370, 'reputation': 74, 'user_id': 20683072, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3abcb594a17b6d7880d7a86b97b4d161?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Ansuman', 'link': 'https://stackoverflow.com/users/20683072/ansuman'}",False,1,1688698282,1688698068,76633651,74564517,CC BY-SA 4.0,"<p>You are getting this error because of the format You have used in .env file to store the uri, You have written something like this</p> <pre><code>PORT=4000 MONGO_URI=""mongodb+srv://personalinfo.lahdouv.mongodb.net/?retryWrites=true&w=majority"" </code></pre> <p>But in .env file if you will store the uri without quotes and white spaces like this , this error will most probably eliminated (worked for me also).</p> <pre><code>PORT=4000 MONGO_URI=mongodb+srv://personalinfo.lahdouv.mongodb.net/?retryWrites=true&w=majority </code></pre>",1688698282.0,,false
"{'account_id': 21415549, 'reputation': 142, 'user_id': 15774855, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/m6EX7.jpg?s=256', 'display_name': 'huzaifac137', 'link': 'https://stackoverflow.com/users/15774855/huzaifac137'}",True,0,1669314413,1669313589,74564817,74564517,CC BY-SA 4.0,"<p>Instead of using env file you can try this. There is an extended option in render to add environment variable before the apps starts to be deployed . select advanced option and you will see an option to add environment variable . add variable save and deploy</p> <p><a href=""https://i.sstatic.net/69a55.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/69a55.png"" alt=""enter image description here"" /></a></p> <p><a href=""https://i.sstatic.net/skMac.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/skMac.png"" alt=""enter image description here"" /></a></p>",1669314413.0,,false
"{'account_id': 2710229, 'reputation': 5725, 'user_id': 2338858, 'user_type': 'registered', 'accept_rate': 59, 'profile_image': 'https://i.sstatic.net/OyYPI.jpg?s=256', 'display_name': 'shet_tayyy', 'link': 'https://stackoverflow.com/users/2338858/shet-tayyy'}",True,1,1669403958,1669403958,74577130,74564445,CC BY-SA 4.0,"<p>The issue was that the child indicator component wasn't wrapped within the boundary of the indicator container. I resolved this by adding <code>flexWrap: 'wrap'</code> to the parent indicator container.</p> <p>So, the new style looks like this:</p> <pre><code>import { createUseStyle } from '@theme';  // createUseStyle basically returns (fn) => useStyle(fn) export const useStyle = createUseStyle(theme => ({   container: {     position: 'relative',     flexGrow: 1,     backgroundColor: theme.palette.accents.color8,     height: 32,     borderRadius: theme.shape.borderRadius(4.5),   },    indicatorContainer: {     position: 'absolute',     height: 32,     justifyContent: 'center',     alignItems: 'center',     flexWrap: 'wrap'   },    indicator: {     height: 28,     backgroundColor: theme.palette.background.main,     borderRadius: theme.shape.borderRadius(4),   }, })); </code></pre>",,,false
"{'account_id': 14842277, 'reputation': 5378, 'user_id': 10718641, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/bd74eb4e11e9bdab27318ec11f72c9b6?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Abe', 'link': 'https://stackoverflow.com/users/10718641/abe'}",False,0,1669363463,1669315199,74565043,74564445,CC BY-SA 4.0,"<p>Edit: disregard the below, the behavior is not due to hot reloading! I'll leave this up in case anyone else has the same misconception</p> <hr /> <p>Hot reloading is not reliable with Reanimated - there are values on native threads that won't get refreshed. This has no impact on the final app.</p> <p>To test whether it's really working, simply shake the device/sim and hit Reload after you make changes. This is enough to clear any sticky values.  If your component still isn't doing what you want, you can then have the confidence to edit it and be sure it looks right.</p>",1669363463.0,,false
"{'account_id': 21977588, 'reputation': 79, 'user_id': 16253163, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/cc6c80ac11d236759e829d3ddbf67be5?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'sangam4742', 'link': 'https://stackoverflow.com/users/16253163/sangam4742'}",False,0,1669431074,1669431074,74579386,74564346,CC BY-SA 4.0,"<p>I checked my package.json file, I was using react-rainbow-components which was the root cause of this issue. I completely removed and the app is now building quickly.</p>",,,false
"{'account_id': 6739644, 'reputation': 758, 'user_id': 5193262, 'user_type': 'registered', 'profile_image': 'https://lh5.googleusercontent.com/-Av63y6IPreY/AAAAAAAAAAI/AAAAAAAAAHw/mjlBgCwdrXM/photo.jpg?sz=256', 'display_name': 'Wolfspirit', 'link': 'https://stackoverflow.com/users/5193262/wolfspirit'}",True,1,1669328857,1669328440,74566709,74564178,CC BY-SA 4.0,"<p>IClientRequestParametersProvider is registred with the call to</p> <pre class=""lang-cs prettyprint-override""><code>builder.Services.AddIdentityServer()     .AddApiAuthorization<ApplicationUser, ApplicationDbContext>(); </code></pre> <p>The problem is that there is no ""in memory"" store for users per default. Clients in this case is the application and not the user. The default authentication template uses ""IdentityServer"" which is based on ""MS Identity"" which in itself is using EF Core. So to get this working you kind of have to use EF Core. What you can do is instead of using sqlserver to have an inmemory database to store the users.</p> <p>To do that in the csproj replace the SqlServer PackageReference for ""Microsoft.EntityFrameworkCore.SqlServer"" with ""Microsoft.EntityFrameworkCore.Sqlite""</p> <p>Then in <code>Program.cs</code> replace</p> <pre class=""lang-cs prettyprint-override""><code>builder.Services.AddDbContext<ApplicationDbContext>(options =>     options.UseSqlServer(connectionString)); </code></pre> <p>with</p> <pre class=""lang-cs prettyprint-override""><code>var connection = new Microsoft.Data.Sqlite.SqliteConnection(connectionString); // Open the inmemory database to make sure every instance of DbContext gets the same database all the time connection.Open(); builder.Services.AddDbContext<ApplicationDbContext>(options =>     options.UseSqlite(connection)); </code></pre> <p>this ensures that the database is always the same and not recreated.</p> <p>In appsettings.json set the DefaultConnectionString to ""DataSource=:memory:"" for an inmemory database based on sqlite (which is more recommended then the actual ""InMemory"" EF-Core datasource).</p> <p>Starting now will give you a clean database on each start but keeps the database open between different instances of DbContext. Now you need to ""seed"" the users you want on each start. For that you can create an entry in appsettings.json:</p> <pre class=""lang-json prettyprint-override""><code>  ""Users"": {     ""test@test.com"": ""Password1!""    }, </code></pre> <p>And then in Program.cs under <code>var app = builder.Build();</code> make sure the database is created and then loop over that users and seed them to the database like that:</p> <pre class=""lang-cs prettyprint-override""><code>// Create a new service scope for seeding the database using (var scope = app.Services.CreateScope()) {     var dbContext = scope.ServiceProvider.GetRequiredService<ApplicationDbContext>();     // Make sure we create the in-memory database first     await dbContext.Database.EnsureCreatedAsync();     await dbContext.SaveChangesAsync();      // Get the usermanager from that scope. UserManager configures MS Identity Users.     var userManager = scope.ServiceProvider.GetRequiredService<UserManager<ApplicationUser>>();      // Loop over the key value pairs in the ""Users"" Section of the appsettings.json     foreach (var (user, password) in app.Configuration.GetSection(""Users"").Get<Dictionary<string, string>>())     {         // Create the user and make sure the user can log in         var result = await userManager.CreateAsync(new ApplicationUser()         {             UserName = user,             EmailConfirmed = true         }, password);          // Throw if anything goes wrong (e.g. password not safe enough)         if (!result.Succeeded) throw new Exception(string.Join("", "", result.Errors.Select(x => x.Description)));     } } </code></pre> <p>Here is the gist for the full Program.cs and appsettings.json: <a href=""https://gist.github.com/WolfspiritM/cf74430e4178cdaea94de5109413e796"" rel=""nofollow noreferrer"">https://gist.github.com/WolfspiritM/cf74430e4178cdaea94de5109413e796</a></p>",1669328857.0,,false
"{'account_id': 12352648, 'reputation': 203, 'user_id': 9010442, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-9XaER5gBI4w/AAAAAAAAAAI/AAAAAAAAEo0/_CkkT9mJ9bk/photo.jpg?sz=256', 'display_name': 'Isaac Hatilima', 'link': 'https://stackoverflow.com/users/9010442/isaac-hatilima'}",False,1,1675405726,1675405726,75332225,74564019,CC BY-SA 4.0,"<p>For anyone still looking for the solution, add the below in your head block. It did the trick for me.</p> <pre><code><meta name=""viewport"" content=""width=device-width, initial-scale=1, maximum-scale=1, viewport-fit=cover""></meta> </code></pre>",,,false
"{'account_id': 22401714, 'reputation': 1, 'user_id': 16612029, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/C48hY.png?s=256', 'display_name': 'Zohaib Saeed', 'link': 'https://stackoverflow.com/users/16612029/zohaib-saeed'}",False,0,1669399492,1669399492,74576517,74564019,CC BY-SA 4.0,<p>CSS Zoom property was used on the product site to set the layout. Avoid using this property as far as you can because firefox does not supports this property.</p>,,,false
"{'account_id': 13882878, 'reputation': 130, 'user_id': 10022794, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/22ryA.jpg?s=256', 'display_name': 'Daniel Benisti', 'link': 'https://stackoverflow.com/users/10022794/daniel-benisti'}",False,0,1669313239,1669313239,74564773,74564019,CC BY-SA 4.0,"<p>try to use css reset  in the globalStyle.css file. just copy the reset from the following <a href=""https://meyerweb.com/eric/tools/css/reset/"" rel=""nofollow noreferrer"">Link</a> . that should resolve your problem</p>",,,false
"{'account_id': 26444292, 'reputation': 4552, 'user_id': 20088324, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/X5ysV.jpg?s=256', 'display_name': 'RubenSmn', 'link': 'https://stackoverflow.com/users/20088324/rubensmn'}",False,1,1669311075,1669311075,74564465,74563994,CC BY-SA 4.0,"<p>You set the state when you loop over the localstorage. This will update the state causing a re-render and the re-render will loop over the localstorage again.</p> <p>To prevent this you could use a <code>useEffect</code></p> <pre class=""lang-js prettyprint-override""><code>useEffect(() => {   Object.keys(localStorage).forEach(function (key, value) {     let temp = JSON.parse(localStorage.getItem(key));     setdepartment(prev => ({       ...prev,       [temp.department]: depart.Frontend.value +1,     }));   }); }, []); </code></pre>",,,false
"{'account_id': 9451728, 'reputation': 652, 'user_id': 7028321, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/b382eed3962797c487624fbab15adc7e?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Oleg Brazhnichenko', 'link': 'https://stackoverflow.com/users/7028321/oleg-brazhnichenko'}",False,0,1669319191,1669319191,74565623,74563987,CC BY-SA 4.0,"<p>The reason of this behavior is that your <code>ul</code> element after open of another element, lose all classes except <code>collapse</code>, to achieve your expected behavior, you need to modify your conditions for class add like that:</p> <pre><code><ul   className={`collapse ${   openedMenu === ""menu"" && open     ? ""show""     : ""hidden""   }`} > </code></pre> <p>Paste this condition to all places and try it out. <a href=""https://codesandbox.io/s/beautiful-worker-yessdk?file=/src/App.js"" rel=""nofollow noreferrer"">Here is link to updated codesandbox with working example</a></p>",,,false
"{'account_id': 25782746, 'reputation': 330, 'user_id': 19528122, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/AItbvmlwgAvBflc9GWagqoJ3436LJVcaLCPTsrNxBrwT=k-s256', 'display_name': 'Haim', 'link': 'https://stackoverflow.com/users/19528122/haim'}",False,0,1669308265,1669308265,74563963,74563870,CC BY-SA 4.0,"<p>You can use</p> <pre><code>response.data.sort((a, b) => new Date(a.attributes.createdAt) - new Date(b.attributes.createdAt))[0] </code></pre> <p>But I really recommend doing it in the BackEnd</p> <p>Edit: I see now that you are looking for the first 3 responses so you can use the same sorting mechanism and use .slice(0,3)</p> <pre><code>    response.data.sort((a, b) => new Date(a.attributes.createdAt) - new Date(b.attributes.createdAt)).slice(0,3) </code></pre>",,,false
"{'account_id': 23704453, 'reputation': 110, 'user_id': 17727151, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/ba6b1a9df5866ec8825f9995cb95bcaf?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Battledash2', 'link': 'https://stackoverflow.com/users/17727151/battledash2'}",False,1,1669320145,1669311798,74564570,74563836,CC BY-SA 4.0,"<p>Your code is running before the elements are rendered.</p> <p>Plop all of your code inside of a <code>useEffect</code> and it should fix your issue.</p> <pre class=""lang-js prettyprint-override""><code>useEffect(()=>{     // ... your code (except the return and definitions) }, []); </code></pre> <p>The array needs to be empty (but still there) so React knows to only run it once.<br> That function will run once <code>onMount</code>. (<a href=""https://reactjs.org/docs/hooks-effect.html"" rel=""nofollow noreferrer"">React's documentation</a>)</p> <p>Make sure you leave your <code>useRef</code>s and other definitions outside of the <code>useEffect</code> so you can access the ref from your code.</p> <pre class=""lang-js prettyprint-override""><code>function Landing() {   const canvasRef = useRef();   canvasRef.width = window.innerWidth;   canvasRef.height = window.innerHeight;    console.log(canvasRef);      useEffect(() => {     if (canvasRef.current == null) return;      const context = canvasRef.current.getContext(""2d"");     const frameCount = 230;      const currentFrame = (index) =>       `../../assets/landing-animations/${(index + 1).toString()}.jpg`;     const images = [];     let ball = { frame: 0 };      for (let i = 0; i < frameCount; i++) {     const img = new Image();       img.src = currentFrame(i);       images.push(img);     }      function render() {       context.clearRect(0, 0, canvasRef.width, canvasRef.height);       context.drawImage(images[ball.frame]);     }   }, []);    return (     <div className=""landing"">       <h1 className=""landing__header"">Welcome to my portfolio</h1>       <canvas className=""landing__canvas"" ref={canvasRef}></canvas>;     </div>   ); } </code></pre>",1669320145.0,,false
"{'account_id': 19255761, 'reputation': 907, 'user_id': 15119024, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/LyxLa.png?s=256', 'display_name': 'ClusterH', 'link': 'https://stackoverflow.com/users/15119024/clusterh'}",True,1,1669312117,1669309809,74564262,74563717,CC BY-SA 4.0,"<p>According to <a href=""https://reactrouter.com/en/main/router-components/router"" rel=""nofollow noreferrer"">React-Router official docs</a>, you should avoid using <code>Router</code> directly. Instead, use <code>BrowserRouter</code> or <code>StaticRouter</code>(server rendering) And also, As you are going to do <em>Animate Presence exit not working framer motion</em>, You may need to use <code>Routes</code> instead of <code>Switch</code> in case you are using <code>React-Router-Dom</code> v6.</p> <pre><code><Routes location={location} key={location.pathname}>     // Your routes in here     <Route path=""/""                           element={<Home           />} />     <Route path=""Portfolio/:portfolioId""      element={<SingleShooting />} /> </Routes> </code></pre> <p>Edit to fix your commit</p> <p>In your index.tsx</p> <pre><code>const root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement) root.render(   <React.StrictMode>      <BrowserRouter>         <App />      </BrowserRouter>   </React.StrictMode>, ) </code></pre>",1669312117.0,,false
"{'account_id': 4980592, 'reputation': 1566, 'user_id': 4005708, 'user_type': 'registered', 'accept_rate': 60, 'profile_image': 'https://i.sstatic.net/Q49xY.jpg?s=256', 'display_name': 'Raziel', 'link': 'https://stackoverflow.com/users/4005708/raziel'}",False,1,1669309855,1669309855,74564268,74563717,CC BY-SA 4.0,"<ol> <li><p>file extension for typescript should be .tsx, not js.</p> </li> <li><p>Remove location and router from index.tsx so leave it as its original file:</p> </li> </ol> <pre><code>    const root = ReactDOM.createRoot(       document.getElementById('root') as HTMLElement,     );     root.render(       <React.StrictMode>         <App />       </React.StrictMode>,     );          reportWebVitals(); </code></pre> <ol start=""3""> <li>Router setup should be like so:</li> </ol> <pre><code>import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';  function App() {   return (     <Router>       <Routes>         <Route path=""/"" element={< Home />} />         <Route path=""Portfolio/:portfolioId"" element={< SingleShooting />} />       </Routes>     </Router>   ); }  export default App;  </code></pre>",,,false
"{'account_id': 6359580, 'reputation': 406, 'user_id': 4935491, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-d05IH-C_VSo/AAAAAAAAAAI/AAAAAAAAABE/VA7-9JobDx0/photo.jpg?sz=256', 'display_name': 'Sujit Libi', 'link': 'https://stackoverflow.com/users/4935491/sujit-libi'}",True,0,1669309366,1669309366,74564173,74563676,CC BY-SA 4.0,"<p>Convert you useEffect method as:</p> <pre><code>useEffect(() => {   dispatch(getContractors()); }, []);  </code></pre> <p>No need to pass dispatch in your useEffect method. If you are going to call getContractors action only once.</p> <p>and there is typo I guess. <code>const dispatch = useDispatch()</code></p>",,,false
"{'account_id': 19255761, 'reputation': 907, 'user_id': 15119024, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/LyxLa.png?s=256', 'display_name': 'ClusterH', 'link': 'https://stackoverflow.com/users/15119024/clusterh'}",False,0,1669307545,1669307545,74563825,74563676,CC BY-SA 4.0,<p>Convert <code>const dispatch = useDispatch;</code> to <code>const dispatch = useDispatch();</code></p>,,,false
"{'account_id': 6359580, 'reputation': 406, 'user_id': 4935491, 'user_type': 'registered', 'profile_image': 'https://lh6.googleusercontent.com/-d05IH-C_VSo/AAAAAAAAAAI/AAAAAAAAABE/VA7-9JobDx0/photo.jpg?sz=256', 'display_name': 'Sujit Libi', 'link': 'https://stackoverflow.com/users/4935491/sujit-libi'}",False,0,1669308479,1669308479,74564004,74563483,CC BY-SA 4.0,<p>I think you should do something like this inside your <code>handleComplete</code> method:</p> <pre><code>const handleComplete = () => {   setComplete(!comlete)   {setComplete ? <Busket {...props} /> : <Busket />}   // or   // {setComplete ? <Busket {...props} /> : null} } </code></pre>,,,false
"{'account_id': 13173718, 'reputation': 368762, 'user_id': 9515207, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/3d5ccb4452ea5093f95c1da37acc764b?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'CertainPerformance', 'link': 'https://stackoverflow.com/users/9515207/certainperformance'}",True,1,1669306061,1669306061,74563525,74563448,CC BY-SA 4.0,"<p>The only thing that changes is the endpoint. How about making another function around <code>api.post</code> that takes the endpoint as a parameter?</p> <pre><code>const getAPI = async (endpoint: string) => {   const response: ApiResponse<{ result: ReponseType }> = await api.post('endpoint1', reqBody);   if (!response.ok || !response.data) {     return getGeneralApiProblem(response);   }   return { kind: 'ok', userInfo: response.data.result }; } </code></pre> <p>And then your first snippet simplifies to</p> <pre><code>return getAPI('endpoint1'); </code></pre> <p>and your second snippet to</p> <pre><code>return getAPI('endpoint2'); </code></pre> <p>and so on.</p> <p>If <code>reqBody</code> changes, add it as a parameter too.</p>",,,false
"{'account_id': 5965079, 'reputation': 4553, 'user_id': 4689036, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/jzUG2.jpg?s=256', 'display_name': 'GMKHussain', 'link': 'https://stackoverflow.com/users/4689036/gmkhussain'}",True,0,1669317161,1669316823,74565286,74563382,CC BY-SA 4.0,"<p>Use <strong>html-react-parser</strong> instead of <code>React-html-parser</code>, the last release for <code>react-html-parser</code> in 2017</p> <p>It's work for me, usage is same.</p> <pre class=""lang-js prettyprint-override""><code>import HtmlParser from ""html-react-parser""; //...  { HtmlParser(""<h2>Hello World!</h2>"")}  //... </code></pre>",1669317161.0,,false
"{'account_id': 9567208, 'reputation': 1597, 'user_id': 7763383, 'user_type': 'registered', 'accept_rate': 9, 'profile_image': 'https://www.gravatar.com/avatar/1ac2da44f77bf1eb66f180aef23a0c5b?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Brandon', 'link': 'https://stackoverflow.com/users/7763383/brandon'}",False,0,1669305398,1669305398,74563394,74563318,CC BY-SA 4.0,"<p>It was simpler than I expected, figured it out right after posting</p> <pre><code>type Submit = {   form: Object,   handleSubmit: FunctionType<Object, any> };  const onClickSubmit = ({   form,   handleSubmit }: Submit): FunctionType<Object, any> => async (input: Object): Promise<any> => {   await handleSubmit(input);   form.reset(); }; </code></pre>",,,false
"{'account_id': 26250699, 'reputation': 416, 'user_id': 19923550, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/f0095a2006de6244b074f98a7d9222c6?s=256&d=identicon&r=PG', 'display_name': 'Delano van londen', 'link': 'https://stackoverflow.com/users/19923550/delano-van-londen'}",False,0,1669305171,1669305171,74563355,74563318,CC BY-SA 4.0,"<p>you can try:</p> <pre><code>const onClickSubmit = ({   form,   handleSubmit }: Submit) => async (input: Object): Promise<any> => {   await handleSubmit(input);   form.reset(); };  export onClickSubmit; </code></pre>",,,false
"{'account_id': 8559682, 'reputation': 31, 'user_id': 6414094, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/88cf5e79282e09a4520b3fc0e3836263?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Keillion', 'link': 'https://stackoverflow.com/users/6414094/keillion'}",False,0,1716470893,1716468003,78523193,74563291,CC BY-SA 4.0,"<p>I guess you mean <code>Recognition</code> is a component, <code>init</code> is a global function.</p> <pre><code>// ======= global function part ======= let countCompUseRtc = 0; let pInitRtc = null; // promise of initRtc let rtc = null;  const initRtc = async () => {   ++countCompUseRtc;   if (!pInitRtc) {     rtc = new WebRTCConnection();     await (pInitRtc = pInitRtc || rtc.init(""ws://localhost:8080""));     document.getElementById(""studentPeer"").srcObject = rtc.localStream;     document.getElementById(""vcsPositionPeer"").srcObject = rtc.remoteStream;   } }; const releaseRtc = async ()=>{   // no component use rtc now, release   if(0 === --countCompUseRtc){     if(pInitRtc){ await pInitRtc; } // wait for init done     if(0 === countCompUseRtc){ // double check       pInitRtc = null;       rtc.release();       rtc = null;     }   } };  // ======= component Recognition part ======= const CompRecognition = () => {   useEffect(() => {     // Anything in here is fired on component mount.     initRtc();     return () => {       // Anything in here is fired on component unmount.       releaseRtc();     };   }, []);    return (<>...<>) } </code></pre>",1716470893.0,,false
"{'account_id': 13019644, 'reputation': 19, 'user_id': 9897918, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-cIqZ6F5-X5g/AAAAAAAAAAI/AAAAAAAAAjs/5dhmpK1hWw8/photo.jpg?sz=256', 'display_name': 'Vahid Jadidi', 'link': 'https://stackoverflow.com/users/9897918/vahid-jadidi'}",False,-1,1709707918,1709707918,78112319,74563291,CC BY-SA 4.0,"<p><a href=""https://stackoverflow.com/a/72585970/9897918"">https://stackoverflow.com/a/72585970/9897918</a></p> <blockquote> <p>React 18 now has Strict.Mode which can mount, unmount, and remount components which causes the abortController to issue an error on the first unmount. Remember, this only happens in development mode when Strict.Mode is applied in your index.js. We can check for that behaviour while in development-mode. <a href=""https://reactjs.org/docs/strict-mode.html#ensuring-reusable-state"" rel=""nofollow noreferrer"">https://reactjs.org/docs/strict-mode.html#ensuring-reusable-state</a></p> </blockquote>",,,false
"{'account_id': 27029866, 'reputation': 53, 'user_id': 20586425, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0M_HWjCE05L80TgiVfuuvQnsfz_oxEZEd0rhHDGQ=k-s256', 'display_name': 'Lucas Fernando', 'link': 'https://stackoverflow.com/users/20586425/lucas-fernando'}",False,1,1669307584,1669307584,74563834,74563233,CC BY-SA 4.0,"<p>Turns out that before doing the assertions we need to wait for the component update to fully complete with waitFor</p> <pre><code>  it(""should render spinner"", async () => {     const button = container.getByText(""Search"");     const event = await fireEvent.click(button);     const spinner = container.getByTestId(""spinner"");     await waitFor(() => {       expect(spinner).toBeInTheDocument();     });   }); </code></pre>",,,false
"{'account_id': 21415549, 'reputation': 142, 'user_id': 15774855, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/m6EX7.jpg?s=256', 'display_name': 'huzaifac137', 'link': 'https://stackoverflow.com/users/15774855/huzaifac137'}",False,0,1669309982,1669309982,74564284,74563231,CC BY-SA 4.0,<p>Reusable components as like simple components act as individual distinctive when used in different code files. so they will surely re-render again when used in other files.</p>,,,false
"{'account_id': 10705011, 'reputation': 641, 'user_id': 7879109, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/1480449992026266/picture?type=large', 'display_name': 'Jonathan Wieben', 'link': 'https://stackoverflow.com/users/7879109/jonathan-wieben'}",False,1,1669304686,1669304686,74563256,74563157,CC BY-SA 4.0,"<p>You're passing <code>data</code> into your component via <code>getServerSideProps</code>, so you should destructure accordingly:</p> <pre class=""lang-js prettyprint-override""><code>function Products({data}) {   console.log(data);   ... } </code></pre> <p>You can also log your full props object like so:</p> <pre><code>function Products(props) {   console.log(props);   ... } </code></pre>",,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",True,0,1669320567,1669320567,74565804,74563145,CC BY-SA 4.0,"<p>Currently when you run this line:</p> <pre class=""lang-js prettyprint-override""><code>setTodo({...todo, [todo.date]: selectedDate}); </code></pre> <p>It tries to get value of the todo.date (whis is an empty string) as the key and then assign the value (selectedDate) to the key("""").</p> <p>In order to fix this, you should give the key by yourself like this:</p> <pre class=""lang-js prettyprint-override""><code>const handleDateChange = (newValue)=> {     const newSelectedDate = newValue.toString();     setSelectedDate(newSelectedDate)     setTodo({...todo, date: newSelectedDate})       } </code></pre> <p>And also about this warning: ""A component is changing an uncontrolled input to be controlled"", it's happening because the inital value of the selectedDate is null. Changing it to ""(new Date()).toString()"" will fix your warning.</p> <pre class=""lang-js prettyprint-override""><code>const [selectedDate, setSelectedDate] = useState((new Date()).toString()); </code></pre>",,,false
"{'account_id': 26608602, 'reputation': 328, 'user_id': 20229075, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/7fd90a30ba9ff9fe591f5dd3653fa980?s=256&d=identicon&r=PG', 'display_name': 'Marios', 'link': 'https://stackoverflow.com/users/20229075/marios'}",False,0,1669304770,1669304770,74563277,74563135,CC BY-SA 4.0,<p>Use your state value in the <code>select</code> element instead of <code>selected</code> in the option</p> <pre><code><select value={myFruit.name}> // options </select> </code></pre>,,,false
"{'account_id': 12044037, 'reputation': 1, 'user_id': 14779268, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-PC6RB1ppERQ/AAAAAAAAAAI/AAAAAAAABpc/9si1z8ht51s/photo.jpg?sz=256', 'display_name': 'Suvraneel', 'link': 'https://stackoverflow.com/users/14779268/suvraneel'}",False,0,1676622488,1676622488,75481836,74563047,CC BY-SA 4.0,"<p>Not sure if you've already solved it, but here we go:</p> <p>So, to debug this, the following information would be required:</p> <ul> <li><p>Is it deploying correctly on Vercel? The image 'akamai' loader is usually not required if you deploy on Vercel since they optimize much stuff behind the scenes.</p> </li> <li><p>A complete package.json</p> </li> </ul> <p><strong>Suggestion</strong>: Use the default Next.js workflow configuration provided by GitHub Pages and see if the error vanishes.</p> <p>Finally, here's one of my <a href=""https://github.com/Suvraneel/Suvraneel.github.io"" rel=""nofollow noreferrer"">Next.js websites</a> where I've used Spline extensively.<br /> Feel free to use <a href=""https://github.com/Suvraneel/Suvraneel.github.io/blob/main/components/SplineObj.js"" rel=""nofollow noreferrer""><code>components/SplineObj.js</code></a> as a template.</p>",,,false
"{'account_id': 8632300, 'reputation': 100700, 'user_id': 6463558, 'user_type': 'registered', 'accept_rate': 48, 'profile_image': 'https://i.sstatic.net/g22sX.jpg?s=256', 'display_name': 'Lin Du', 'link': 'https://stackoverflow.com/users/6463558/lin-du'}",False,0,1669718674,1669718674,74612795,74563004,CC BY-SA 4.0,"<p>You should create a file named <code>OrderContext.ts</code> and use <code>React.createContext()</code> in the module scope. So that we can export and import the context easily in any component and custom hooks.</p> <p>Besides, you can pass the data returned by custom hooks to the <code>value</code> prop of <code>OrderContext.Provider</code> component. So that the descendant component can get and consume the context value via <code>useContext(OrderContext)</code>.</p> <p>E.g.</p> <p><code>OrderContext.ts</code>:</p> <pre><code>import * as React from 'react';  export const OrderContext = React.createContext({   data: undefined,   isLoading: false, }); </code></pre> <p><code>OrderDetailsView.tsx</code>:</p> <pre><code>import * as React from 'react'; import { OrderContext } from './OrderContext'; import { Test } from './Test';  const useOrderParams = (params, extraHeaders) => {   return { data: 'data from API', isLoading: false }; };  export default function OrderDetailsView() {   const params = {};   const extraHeaders = {};   const { data, isLoading } = useOrderParams(params, extraHeaders);    return (     <OrderContext.Provider value={{ data, isLoading }}>       <Test />     </OrderContext.Provider>   ); } </code></pre> <p><code>Test.tsx</code>:</p> <pre><code>import * as React from 'react'; import { OrderContext } from './OrderContext';  export const Test = () => {   const order = React.useContext(OrderContext);   return <div>{order.data}</div>; }; </code></pre> <p>Demo: <a href=""https://stackblitz.com/edit/react-ts-ubpil6?file=OrderDetailsView.tsx"" rel=""nofollow noreferrer"">stackblitz</a></p>",,,false
"{'account_id': 18047429, 'reputation': 51, 'user_id': 13118032, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/907283573060194/picture?type=large', 'display_name': 'Dinesh P. R', 'link': 'https://stackoverflow.com/users/13118032/dinesh-p-r'}",False,1,1687868440,1687328541,76520490,74562980,CC BY-SA 4.0,"<p>Try installing the package with:</p> <pre><code>npm install @itseasy21/react-elastic-carousel </code></pre> <p>Then import carousel with:</p> <pre><code>import Carousal from ""@itseasy21/react-elastic-carousel""; </code></pre> <p>This worked for me, it should solve your issue.</p>",1687868440.0,,false
"{'account_id': 26250699, 'reputation': 416, 'user_id': 19923550, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/f0095a2006de6244b074f98a7d9222c6?s=256&d=identicon&r=PG', 'display_name': 'Delano van londen', 'link': 'https://stackoverflow.com/users/19923550/delano-van-londen'}",True,1,1669303725,1669303725,74563057,74562980,CC BY-SA 4.0,<p>you most likely want to downgrade you npm version to 15 - 17</p> <p>or you can try:</p> <pre><code>npm install --save react-elastic-carousel --force </code></pre> <p>this forces the install but it can give you a broken package</p>,,,false
"{'account_id': 27036284, 'reputation': 21, 'user_id': 20591858, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/1c49f079c2427691a8f0a7653718c455?s=256&d=identicon&r=PG', 'display_name': 'hectorJDH', 'link': 'https://stackoverflow.com/users/20591858/hectorjdh'}",False,0,1669403709,1669403709,74577095,74562754,CC BY-SA 4.0,"<p>I found the error, there was a problem with the folder organization in my project, my src folder was inside my public folder and that's wrong, it should be at the same level as public.</p>",,,false
"{'account_id': 20656212, 'reputation': 11, 'user_id': 15165261, 'user_type': 'registered', 'profile_image': 'https://lh4.googleusercontent.com/-l9u_CH25NvY/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucm7fV-W_DHxMePDItZdRut5wmH9Ww/s96-c/photo.jpg?sz=256', 'display_name': 'Mohammad Abu-hummos', 'link': 'https://stackoverflow.com/users/15165261/mohammad-abu-hummos'}",False,1,1669304164,1669302882,74562885,74562738,CC BY-SA 4.0,"<p>You need to add .current to access the .getContext</p> <pre><code>canvasRef.current.getContext(""2d"") </code></pre> <p>Try to add useEffect and see the results</p> <pre><code> useEffect(()=>{      if(!!canvasRef){        console.log(canvasRef.current.getContext(""2d""))      }  },[canvasRef]) </code></pre>",1669304164.0,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",False,2,1669302636,1669302366,74562776,74562738,CC BY-SA 4.0,"<p>Need to access the <code>current</code> since the reference to the node becomes accessible at the current attribute of the ref.</p> <p>Additionally wrap this with <code>useMemo</code> to detect changes to canvasRef</p> <pre><code>const context = useMemo(() => canvasRef?.current.getContext(""2d""), [canvasRef]) </code></pre>",1669302636.0,,false
"{'account_id': 26253693, 'reputation': 41, 'user_id': 19926088, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/64d8ad41bc468c46b8aec6fdb6eec962?s=256&d=identicon&r=PG', 'display_name': 'Benjam&#237;n Alonso Larenas Bravo', 'link': 'https://stackoverflow.com/users/19926088/benjam%c3%adn-alonso-larenas-bravo'}",True,0,1669302473,1669302473,74562794,74562626,CC BY-SA 4.0,"<p>I had the same problem last week and I resolved it toggling dark mode manually and adding the class dark inside the html tag instead of body tag and that should be work. After that you could control the toggling throught React js.</p> <p><a href=""https://tailwindcss.com/docs/dark-mode#toggling-dark-mode-manually"" rel=""nofollow noreferrer"">https://tailwindcss.com/docs/dark-mode#toggling-dark-mode-manually</a></p> <pre><code><!DOCTYPE html> <html lang=""en"" class=""dark"">  <head>   <meta charset=""UTF-8"" />   <link rel=""icon"" type=""image/svg+xml"" href=""/vite.svg"" />   <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />   <title >Example</title>  </head>  <body class=""bg-green-50 dark:bg-slate-900 "">   <div id=""root"" ></div>   <script type=""module"" src=""/src/main.jsx""></script>  </body> </html> </code></pre>",,,false
"{'account_id': 164450, 'reputation': 65925, 'user_id': 387194, 'user_type': 'registered', 'accept_rate': 82, 'profile_image': 'https://i.sstatic.net/0yZIu.png?s=256', 'display_name': 'jcubic', 'link': 'https://stackoverflow.com/users/387194/jcubic'}",True,1,1669368273,1669300200,74562324,74562323,CC BY-SA 4.0,"<p>I solved the issue while I was writing the question (using SO as <a href=""https://en.wikipedia.org/wiki/Rubber_duck_debugging"" rel=""nofollow noreferrer"">rubber duck debugging</a>). But it may be valuable to others.</p> <p>The problem was that children were not defined in my props. Before adding the <code>forwarRef</code> I was using this code:</p> <pre class=""lang-js prettyprint-override""><code>interface SectionContentT {   isLoading?: boolean; }  const SectionContent: React.FC<SectionContentT> = ({children, isLoading}) => {  }; </code></pre> <p>and was expecting the <code>forwardRef</code> will have the same signature but it's not. It requires props to have children. So my code was supposed to be:</p> <pre class=""lang-js prettyprint-override""><code>interface SectionContentT {   isLoading?: boolean;   children: ReactElement }  const SectionContent = forwardRef<HTMLDivElement, SectionContentT>(({children, isLoading}, ref) => {  }); </code></pre> <p>The error message shows exactly what the problem is, but I didn't figure out that immediately that's why I'm adding this, so others will not waste time.</p>",1669368273.0,,false
"{'account_id': 15519980, 'reputation': 1584, 'user_id': 11196441, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c97a5db1d6ddca883b712f94af110d25?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Disco', 'link': 'https://stackoverflow.com/users/11196441/disco'}",False,2,1669300694,1669300694,74562430,74562261,CC BY-SA 4.0,"<p>You should really look at how you make the first object. Looks like it is a array converted to an object. Would be easier to stat with a normal array.</p> <p>If you can't do anything to change the initial value you can get the values from the object, which will return an array of the values. Then map it to the type you want.</p> <pre class=""lang-js prettyprint-override""><code>const currentObject = { 1: ""20"", 2: ""2340"", 3: ""1420"" };  // Get values to a array and map them to {rate_id: value} const rates = Object.values(currentObject).map((value) => ({   rate_id: value, })); // rates will look like this [{ rate_id: ""20"" }, { rate_id: ""2340"" }, { rate_id: ""1420"" }]; </code></pre>",,,false
"{'account_id': 4820123, 'reputation': 929, 'user_id': 3891027, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/8095f246719b22f2deab693339d91a1b?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Christian.D', 'link': 'https://stackoverflow.com/users/3891027/christian-d'}",False,0,1683714253,1683714253,76217295,74562123,CC BY-SA 4.0,"<p>According to the automotive guidelines (<a href=""https://source.android.com/docs/devices/automotive/driver_distraction/guidelines"" rel=""nofollow noreferrer"">https://source.android.com/docs/devices/automotive/driver_distraction/guidelines</a>) one would need to be able to configure on a per-android-activity basis if it is distraction-optimised or not. I'm not sure how this would be possible with react native.</p>",,,false
"{'account_id': 26645676, 'reputation': 221, 'user_id': 20260628, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu2qHQIqmDcibdfmcYK0Wvy_LNPTt6gtv49WfUAS=k-s256', 'display_name': 'Ank', 'link': 'https://stackoverflow.com/users/20260628/ank'}",False,0,1670257276,1670257276,74691260,74562123,CC BY-SA 4.0,"<p>I'm not quite sure myself, but under ""application fundamentals"" in the Android Developers Docs it says:</p> <p>""Android apps can be written using Kotlin, Java, and C++ languages"" <a href=""https://developer.android.com/guide/components/fundamentals"" rel=""nofollow noreferrer"">https://developer.android.com/guide/components/fundamentals</a></p> <p>So I'm guessing the answer is no.</p>",,,false
"{'account_id': 453628, 'reputation': 15, 'user_id': 850728, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/mM0BA.jpg?s=256', 'display_name': 'frankp', 'link': 'https://stackoverflow.com/users/850728/frankp'}",False,0,1671390322,1671390322,74843693,74562073,CC BY-SA 4.0,"<p>Admin requests are meant to be used server side. <a href=""https://supabase.com/docs/reference/javascript/admin-api"" rel=""nofollow noreferrer"">https://supabase.com/docs/reference/javascript/admin-api</a></p> <p>You could try having the same user experience by using the auth signup request <a href=""https://supabase.com/docs/reference/javascript/auth-signup"" rel=""nofollow noreferrer"">https://supabase.com/docs/reference/javascript/auth-signup</a></p>",,,false
"{'account_id': 16691391, 'reputation': 48, 'user_id': 12063888, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/4abc5c9248301e25d609d0e0362944f1?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Winston', 'link': 'https://stackoverflow.com/users/12063888/winston'}",False,0,1669299348,1669299348,74562146,74561993,CC BY-SA 4.0,<p>Usuallly Camera permissions are required. Also to save the picture you will need Storage permissions.</p>,,,false
"{'account_id': 72426, 'reputation': 594354, 'user_id': 209103, 'user_type': 'registered', 'accept_rate': 73, 'profile_image': 'https://www.gravatar.com/avatar/12d378e6a9788ab9c94bbafe242b82b4?s=256&d=identicon&r=PG', 'display_name': 'Frank van Puffelen', 'link': 'https://stackoverflow.com/users/209103/frank-van-puffelen'}",False,0,1669302615,1669302615,74562819,74561972,CC BY-SA 4.0,"<p>The <a href=""https://firebase.google.com/docs/reference/js/firestore_.md#adddoc"" rel=""nofollow noreferrer""><code>addDoc</code> function</a> returns a <code>DocumentReference</code>. So if you capture that, you can read its <code>id</code> and use that to create another subcollection under it.</p> <pre><code>const budgetRef = await addDoc(collection(db, 'users', userId, 'budgets'), { name: budget.name, max: budget.max }); const budgetId = budgetRef.id; ... </code></pre>",,"[{'tags': ['google-dataflow', 'vertex-ai-search', 'google-cloud-intellij', 'google-cloud-shell-editor', 'redux-saga-firebase', 'google-cloud-spanner-emulator', 'google-cloud-bigtable', 'google-cloud-nl', 'firebase-security', 'google-cloud-ml-engine', 'google-cloud-instance-template', 'google-cloud-dataproc-metastore', 'firebase-ab-testing', 'google-cloud-metrics', 'google-cloud-billing', 'google-cloud-internal-load-balancer', 'firebase-analytics', 'cloud-document-ai', 'google-cloud-dataproc', 'google-analytics-firebase', 'google-fusion-tables', 'google-cloud-armor', 'google-cloud-tools', 'google-cloud-dataprep', 'google-container-optimized-os', 'google-cloud-composer', 'nativescript-firebase', 'firebase-admob', 'firebase-queue', 'google-cloud-tpu', 'google-cloud-language', 'google-cloud-print', 'google-app-engine-launch', 'rest-firebase', 'firebase-hosting', 'google-cloud-sql', 'google-cloud-transcoder', 'firebase', 'google-cloud-messaging', 'google-cloud-cpp', 'react-native-firebase', 'google-cloud-storage-r', 'google-cloud-php-client', 'google-cloud-visualstudio', 'google-cloud-asset-inventory', 'google-cloud-identity-aware-proxy', 'google-container-os', 'react-redux-firebase', 'google-cloud-firestore', 'google-cloud-dns', 'google-cloud-filestore', 'google-cloud-ops-agent', 'google-cloud-recommendation', 'google-cloud-tasks', 'google-bigquery', 'google-cloud-resource-manager', 'firebase-database', 'google-cloud-node', 'dialogflow-cx', 'google-cloud-dlp', 'google-cloud-monitoring', 'firebase-job-dispatcher', 'firebase-authentication', 'google-cloud-ml', 'google-cloud-datastore', 'google-cloud-robotics', 'google-cloud-vpn', 'google-app-engine-deploy', 'google-cloud-instances', 'google-cloud-code', 'google-cloud-platform', 'google-cloud-dataflow', 'google-cloud-talent-solution', 'google-cloud-stackdriver', 'firebase-mlkit', 'apigee-baas', 'google-cloud-cdn', 'dialogflow-es', 'google-cloud-router', 'google-cloud-trace', 'google-cloud-translate', 'google-cloud-workstations', 'google-cloud-speech', 'google-cloud-interconnect', 'google-cloud-datalab', 'google-container-builder', 'firebase-dynamic-links', 'apigee', 'google-cloud-shell', 'firebase-notifications', 'firebaseui', 'bigtable', 'google-cloud-proxy', 'google-cloud-launcher', 'google-cloud-automl-nl', 'stackdriver', 'google-cloud-data-fusion', 'google-cloud-kms', 'recaptcha-enterprise', 'firebase-storage', 'firebase-util', 'google-cloud-automl', 'firebase-performance', 'google-cloud-error-reporting', 'google-cloud-ai', 'firebase-console', 'google-cloud-console', 'google-cloud-networking', 'looker', 'google-cloud-healthcare', 'google-cloud-run', 'firebase-cli', 'firebase-admin', 'google-cloud-profiler', 'firebase-test-lab', 'google-app-engine-go', 'firebase-tools', 'google-cloud-build', 'google-app-engine-patch', 'google-cloud-search', 'firebase-invites', 'google-cloud-spanner', 'firebase-polymer', 'firebase-predictions', 'google-app-engine-golang', 'google-cloud-functions', 'google-cloud-url-maps', 'google-app-engine', 'google-anthos', 'google-cloud-deploy', 'google-cloud-debugger', 'maven-jib', 'google-cloud-iot', 'google-cloud-test-lab', 'google-cloud-repository', 'google-cloud-vertex-ai', 'google-cloud-pubsublite', 'google-migrate-for-compute-engine', 'google-cloud-print-privet', 'firebasesimplelogin', 'firebase-app-check', 'jib', 'firebase-remote-config', 'google-cloud-save', 'google-cloud-memorystore', 'google-cloud-webrisk', 'google-cloud-sdk', 'firebase-assistant', 'looker-studio', 'firebase-realtime-database', 'google-app-engine-python', 'google-kubernetes-engine', 'firebase-crash-reporting', 'google-cloud-storage', 'google-cloud-http-load-balancer', 'google-container-registry', 'google-cloud-python', 'google-cloud-load-balancer', 'google-cloud-source-repos', 'firebase-extensions', 'google-cloud-pubsub', 'google-cloud-powershell', 'firebase-cloud-messaging', 'google-cloud-vision', 'google-cloud-iam', 'google-cloud-api-gateway', 'google-compute-engine', 'google-cloud-endpoints', 'google-cloud-ai-platform-pipelines', 'firebase-machine-learning', 'cordova-plugin-firebasex', 'google-cloud-endpoints-v2', 'firebase-in-app-messaging', 'google-cloud-network-load-balancer', 'google-prediction', 'firebase-app-distribution', 'google-cloud-logging', 'google-translate', 'google-cloud-marketplace', 'gcloud', 'dialogflow-es-fulfillment', 'google-cloud-registry', 'google-cloud-scheduler', 'firebase-app-indexing', 'google-cloud-identity', 'google-cloud-data-transfer', 'google-app-engine-php'], 'external_links': [{'type': 'support', 'link': 'https://stackoverflow.com/contact?topic=15'}], 'description': 'A collective for developers who utilize Google Cloudâs infrastructure and platform capabilities. This collective is organized and managed by the Stack Overflow community.', 'link': '/collectives/google-cloud', 'name': 'Google Cloud', 'slug': 'google-cloud'}]",false
"{'account_id': 10624852, 'reputation': 11, 'user_id': 7824783, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/-hynqW6Dpr7s/AAAAAAAAAAI/AAAAAAAAAM0/_ScyskyjWaU/photo.jpg?sz=256', 'display_name': 'Edgar MC', 'link': 'https://stackoverflow.com/users/7824783/edgar-mc'}",False,0,1669313623,1669312435,74564660,74561910,CC BY-SA 4.0,"<p>This solution can help you, you need to use pseudo-elements <a href=""https://css-tricks.com/bold-on-hover-without-the-layout-shift/"" rel=""nofollow noreferrer"">https://css-tricks.com/bold-on-hover-without-the-layout-shift/</a> or just assign a specific width on every .category-label</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.skills-category-selector {   display: flex;   justify-content: space-between;   width: 100%;   margin-top: 12px; }  .category-label{   width: 20%;   cursor: pointer;   font-size: 20px;   font-weight: 500; }  .category-label:hover {   font-weight: 800;   text-decoration: underline; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code>   <div class=""skills-category-selector"">      <span class=""category-label"">Category 1</span>      <span class=""category-label"">Category 2</span>      <span class=""category-label"">Category 3</span>      <span class=""category-label"">Category 3</span>    </div></code></pre>  </div>  </div>  </p>",1669313623.0,,false
"{'account_id': 12660537, 'reputation': 15410, 'user_id': 9201587, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/paIso.png?s=256', 'display_name': 'Nick Vu', 'link': 'https://stackoverflow.com/users/9201587/nick-vu'}",False,2,1669299614,1669299614,74562201,74561910,CC BY-SA 4.0,"<p>You can use <code>text-shadow</code> to increase text boldness instead</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">  <div class=""snippet-code"">  <pre class=""snippet-code-css lang-css prettyprint-override""><code>.skills-category-selector {   display: flex;   justify-content: space-between;   width: 100%;   margin-top: 12px; }  .category-label {   cursor: pointer;   font-size: 20px;   font-weight: 500; }  .category-label:hover {   text-shadow: 1px 0 0 black;   text-decoration: underline; }</code></pre>  <pre class=""snippet-code-html lang-html prettyprint-override""><code><div class=""skills-category-selector"">   <span class=""category-label"">Category 1</span>   <span class=""category-label"">Category 2</span>   <span class=""category-label"">Category 3</span> </div></code></pre>  </div>  </div>  </p>",,,false
"{'account_id': 9593976, 'reputation': 1, 'user_id': 7123786, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/fJlJY.jpg?s=256', 'display_name': 'Kennedy Kioko', 'link': 'https://stackoverflow.com/users/7123786/kennedy-kioko'}",False,0,1696994531,1696994531,77270060,74561862,CC BY-SA 4.0,"<p>Chart.js v4 is an ESM-only package, so your project should be also an ES-module. You can try to modify <a href=""https://webpack.js.org/configuration/resolve/#resolveconditionnames"" rel=""nofollow noreferrer"">resolve.conditionnames</a> option and add <code>import</code> condition.</p> <p><a href=""https://github.com/chartjs/Chart.js/issues/10911#issuecomment-1326714877"" rel=""nofollow noreferrer"">Checkout this issue on Github</a></p>",,,false
"{'account_id': 27035723, 'reputation': 21, 'user_id': 20591375, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu0qW7C5SaW72pWuv-zah4iFuaCpq8vDXBh_tW_4=k-s256', 'display_name': 'Lucien Perouze', 'link': 'https://stackoverflow.com/users/20591375/lucien-perouze'}",False,0,1669307515,1669307515,74563816,74561862,CC BY-SA 4.0,<p>Found the bug. As I thought it is a problem with the library itself. It cannot be required since the conditional subpath is missing from the package.json file. Nothing I can do. I'll downgrade untill the push a fix.</p>,,,false
"{'account_id': 52616, 'reputation': 1068681, 'user_id': 157247, 'user_type': 'registered', 'accept_rate': 91, 'profile_image': 'https://i.sstatic.net/lUM5Z.jpg?s=256', 'display_name': 'T.J. Crowder', 'link': 'https://stackoverflow.com/users/157247/t-j-crowder'}",True,1,1669297802,1669297802,74561824,74561652,CC BY-SA 4.0,"<p>The correct type for <code>children</code> in the usual Rect component sense is <code>ReactNode</code> (note it's not an array):</p> <pre class=""lang-typescript prettyprint-override""><code>const Wrapper = ({ children }: { children: ReactNode }): ReactElement => {     return <div className=""wrapper"">{children}</div>; };  const Item = () => <div />;  const items = [1, 2, 3]; const x = (     <Wrapper>         <div />         {items.map((item, index) => {             return <Item />;         })}     </Wrapper> ); </code></pre> <p><a href=""https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDGMA0cDejUYCiANkiEgHZb7owByEAJknAL5wBmUEIcARFAIw+AbgBQYtBAoBneAHUoKMGCRQ4AXjgAKPGgAWwYo0EU2ALlxwDRk5UvJaDZmwCUDoSTKV4GgHy4YnDBcIIwAK5QZgA8jMAAbtbEKDIydCjkGnwA7koqanx+ODbGpqzRAPRx8X7irOKS0nJwAJIwZJo6rpoBsQlwFbUSUrLwwO0gMp0A2gCM2ABM2ADMALriI80AHp3aQSHRisqqUH77IQfVA2cXFzjjZDIAdCDK2toPINjAFMxb3f5ArdgaEkBEonBom0OoNxCC3KxzpCKkd8qcxK4REA"" rel=""nofollow noreferrer"">Playground example</a></p>",,,false
"{'account_id': 21245813, 'reputation': 1067, 'user_id': 15628525, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/QFT1X.jpg?s=256', 'display_name': 'Moussa Bistami', 'link': 'https://stackoverflow.com/users/15628525/moussa-bistami'}",False,1,1698683654,1669296748,74561606,74561562,CC BY-SA 4.0,"<p>Yes, you can use Tailwind with React and I suggest the following <a href=""https://tailwindcss.com/docs/guides/create-react-app"" rel=""nofollow noreferrer"">guide</a>, So you can setup the whole think step by step!</p>",1698683654.0,,false
"{'account_id': 26250699, 'reputation': 416, 'user_id': 19923550, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/f0095a2006de6244b074f98a7d9222c6?s=256&d=identicon&r=PG', 'display_name': 'Delano van londen', 'link': 'https://stackoverflow.com/users/19923550/delano-van-londen'}",False,1,1669296741,1669296741,74561605,74561562,CC BY-SA 4.0,"<pre><code>npx create-react-app (project name)  cd (project name) </code></pre> <pre><code>npm install -D tailwindcss postcss autoprefixer npx tailwindcss init -p </code></pre> <p>then configure you template paths by adding the paths to all your template files in the tailwind.config.js</p> <p>docs: <a href=""https://tailwindcss.com/docs/guides/create-react-app"" rel=""nofollow noreferrer"">https://tailwindcss.com/docs/guides/create-react-app</a></p>",,,false
"{'account_id': 21820209, 'reputation': 2045, 'user_id': 16116506, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/E1zGO.png?s=256', 'display_name': 'Wraithy', 'link': 'https://stackoverflow.com/users/16116506/wraithy'}",False,1,1669296683,1669296683,74561591,74561562,CC BY-SA 4.0,"<p>There is official guide for most used frameworks, including react <a href=""https://tailwindcss.com/docs/installation/framework-guides"" rel=""nofollow noreferrer"">https://tailwindcss.com/docs/installation/framework-guides</a></p>",,,false
"{'account_id': 21351573, 'reputation': 161, 'user_id': 15721021, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AOh14Gi9Pi40GwoQB0UPai5a9fMUReggKeK_U8cTG3u4Og=k-s256', 'display_name': 'Circuit Planet', 'link': 'https://stackoverflow.com/users/15721021/circuit-planet'}",False,0,1669826988,1669826988,74631366,74561413,CC BY-SA 4.0,<p>They are harmless and can be ignored for most of the cases but if they still cause you trouble and you want to resolve them then just install it by:</p> <pre><code>yarn add eslint </code></pre> <p>as for the <code>lockfile</code> warning it will be resolved after you install and package</p> <p>Try:</p> <pre><code>yarn add </code></pre>,,,false
"{'account_id': 209618, 'reputation': 8291, 'user_id': 460750, 'user_type': 'registered', 'accept_rate': 95, 'profile_image': 'https://i.sstatic.net/NDFVp.jpg?s=256', 'display_name': 'Nicu Surdu', 'link': 'https://stackoverflow.com/users/460750/nicu-surdu'}",True,1,1679311192,1679310569,75789545,74561357,CC BY-SA 4.0,"<p><a href=""https://github.com/prettier/prettier/issues/12964"" rel=""nofollow noreferrer"">This is a bug</a> in Prettier.</p> <p>Either change <code>formatOnSaveMode</code> to be <code>""file""</code> or upgrade to a Prettier version greater or equal to 2.8</p>",1679311192.0,,false
"{'account_id': 23981613, 'reputation': 141, 'user_id': 17968946, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/9c4150f8d2b8970ee471d24a62ca6386?s=256&d=identicon&r=PG', 'display_name': 'Venex', 'link': 'https://stackoverflow.com/users/17968946/venex'}",True,1,1669305935,1669300675,74562426,74561313,CC BY-SA 4.0,"<p>Both above answers are correct in that you can use conditional rendering to ensure that the page does not render the component dependent upon if the user is logged in or not.</p> <p>However, this does not stop people from accessing the route by entering it into the browser.</p> <p>You should check out private-routes from React-Router-Dom V6, this will ensure that even if by accident, the link to the register page, cannot be accessed by those who have already registered.</p> <p>Just an added extra to ensure that people cannot create multiple accounts etc.</p> <p><a href=""https://stackoverflow.com/questions/69923420/how-to-use-private-route-in-react-router-domv6"">How to use Private route in react-router-dom@v6</a></p> <p>Edit: You can use useEffect to detect the object (if it is saved in LS) and then set the state too true if it does exist.</p> <pre><code>useEffect(() => { if(localStorage.getItem(""isLoggedIn"")){   setIsLoggedIn(true)  } else {    setIsLoggedIn(false)   } }) </code></pre> <p>This will check if the localStorage.getItem(""isLoggedIn"") exists and then set the loggedIn state to true if found, else, it will keep it false.</p> <p>I would set the initial state of</p> <pre><code>const [isLoggedIn, setIsLoggedIn]=useState(false) </code></pre>",1669305935.0,,false
"{'account_id': 27035620, 'reputation': 11, 'user_id': 20591288, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a/ALm5wu2lmVlxqIBc-y6pXZaebbWWgIXKmj8dAsk5ixr1=k-s256', 'display_name': 'Ahmad Nasser', 'link': 'https://stackoverflow.com/users/20591288/ahmad-nasser'}",False,0,1669299660,1669299660,74562211,74561313,CC BY-SA 4.0,"<p>You could always use the useState feature in react, for example:</p> <pre><code>const [loggedIn, setLoggedIn] = useState(false) </code></pre> <p>and then inside the return of the component</p> <pre><code>{loggedIn ? <NavbarLoggedIn /> : <Navbar />} </code></pre> <p>You could also use Redux toolkit for global states, that would be a better solution to be fair, but yeah thats a basic way of implementing this</p>",,,false
"{'account_id': 16655015, 'reputation': 662, 'user_id': 12036671, 'user_type': 'registered', 'profile_image': 'https://lh3.googleusercontent.com/a-/AAuE7mCaPRfczBrHte382JWjj9A1JB8jte1lpkBeIuqx_A=k-s256', 'display_name': 'Sandil Ranasinghe', 'link': 'https://stackoverflow.com/users/12036671/sandil-ranasinghe'}",False,0,1669297338,1669297338,74561728,74561313,CC BY-SA 4.0,"<p>Take a look at conditional rendering <a href=""https://reactjs.org/docs/conditional-rendering.html"" rel=""nofollow noreferrer"">https://reactjs.org/docs/conditional-rendering.html</a></p> <pre><code>{isLoggedIn && <Navbar.Brand href=""/"">Home</Navbar.Brand>} // show only if logged in <Navbar.Toggle aria-controls=""basic-navbar-nav"" /> <Navbar.Collapse id=""basic-navbar-nav""> <Navbar.Brand href=""/"">About Us</Navbar.Brand> {!isLoggedIn && <Navbar.Brand href=""/register"">Register</Navbar.Brand>} // show only if not logged in {!isLoggedIn && <Navbar.Brand href=""/login"">Login</Navbar.Brand>} </code></pre>",,,false
"{'account_id': 27015748, 'reputation': 66, 'user_id': 20574632, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/D3QRf.jpg?s=256', 'display_name': 'Zidane Zine eddine', 'link': 'https://stackoverflow.com/users/20574632/zidane-zine-eddine'}",True,0,1669295672,1669295672,74561384,74561279,CC BY-SA 4.0,"<p>Since you specified in the headers that the request body will be multipart/form-data, then you need to put all other fields (info, featured, rooms) inside the formData data variable</p>",,,false
"{'account_id': 27035842, 'reputation': 1, 'user_id': 20591483, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/6a7f10a8dcdedc833cf6e96b824f60d9?s=256&d=identicon&r=PG', 'display_name': 'IestynGage', 'link': 'https://stackoverflow.com/users/20591483/iestyngage'}",False,0,1669661775,1669298879,74562049,74561270,CC BY-SA 4.0,"<p><strong>Solution 1:</strong> You could pull the id from the string using a regex.</p> <pre class=""lang-js prettyprint-override""><code>var location = useLocation(); var myRegexp = /main\/(.*)/; var id = myRegexp.exec(location.pathname)[1]; </code></pre> <p>Little explanation of the regex:</p> <ul> <li><code>\/</code> allows us to do match with ""main/""</li> <li><code>(.*)</code> gives the rest of the match as a second result in returned array.</li> </ul> <p>Once you have the id you can store it a reactContext so that it can be used in any child component.</p> <p><strong>Solution 2:</strong> <a href=""https://reactrouter.com/en/main/hooks/use-route-loader-data#userouteloaderdata"" rel=""nofollow noreferrer"">useRouteLoaderData</a></p> <p>This solution would require you to refactor your router so that it one of the data routers but afterwards you should be able to do:</p> <pre class=""lang-js prettyprint-override""><code>const user = useRouteLoaderData(""id""); </code></pre>",1669661775.0,,false
"{'account_id': 15719534, 'reputation': 2027, 'user_id': 11342834, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/Zd1dC.jpg?s=256', 'display_name': 'Amirhossein', 'link': 'https://stackoverflow.com/users/11342834/amirhossein'}",False,0,1669573667,1669573667,74592697,74561270,CC BY-SA 4.0,"<p>Yes you can do it by using useParams only if you know the prefix (You're sure that the path starts with ""/main"" and the rest is dynamic as you mentioned in your question):</p> <pre class=""lang-js prettyprint-override""><code>let params = useParams(); useEffect(() => {   let dynamicPath = ""/main"";   Object.keys(params).forEach((key) => {     dynamicPath += `/:${key}`;   });   console.log(dynamicPath); }, []); </code></pre>",,,false
"{'account_id': 26622415, 'reputation': 876, 'user_id': 20241005, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/nTyPF.png?s=256', 'display_name': 'MalwareMoon', 'link': 'https://stackoverflow.com/users/20241005/malwaremoon'}",False,0,1669568022,1669568022,74591968,74561270,CC BY-SA 4.0,"<p>I doubt that it's possible but you can always just pass it as property.</p> <pre><code><Route     path=""/main/:id""     element={         <Page              path=""/main/:id""         />     } /> </code></pre> <p>Aside from that answer for this is here: <a href=""https://stackoverflow.com/questions/66265608/react-router-v6-get-path-pattern-for-current-route"">react-router v6: get path pattern for current route</a></p>",,,false
"{'account_id': 13902097, 'reputation': 815, 'user_id': 10037470, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/ccVCD.jpg?s=256', 'display_name': 'Devon Ray', 'link': 'https://stackoverflow.com/users/10037470/devon-ray'}",False,0,1669390441,1669390441,74574985,74561270,CC BY-SA 4.0,"<p>I don't think react router gives a way to do this but you could do something like this if you're trying to find an easy solution.</p> <pre><code><Route     path=""/main""     element={         <Page type=""index""/>     } /> <Route     path=""/main/:id""     element={         <Page type=""id""/>     } />  </code></pre> <p>then handle the type parameter in your page component.</p>",,,false
"{'account_id': 17664207, 'reputation': 21, 'user_id': 12822004, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/whPi1.jpg?s=256', 'display_name': 'tpstlk', 'link': 'https://stackoverflow.com/users/12822004/tpstlk'}",False,1,1669297216,1669295832,74561414,74561229,CC BY-SA 4.0,"<p>You should add a <code>key</code> prop to the parent tag in the map if it's unique:</p> <pre><code><div>{cd.map((o) => <p key={o}>{o}</p>)}</div> </code></pre> <p>If it's not unique, you can use <code>index</code> as a <code>key</code> when mapping:</p> <pre><code><div>{cd.map((o, index) => <p key={index}>{o}</p>)}</div> </code></pre> <p>But, read the documentation first, because using the index as a key is not recommended: <a href=""https://reactjs.org/docs/lists-and-keys.html"" rel=""nofollow noreferrer"">https://reactjs.org/docs/lists-and-keys.html</a></p>",1669297216.0,,false
"{'account_id': 10705011, 'reputation': 641, 'user_id': 7879109, 'user_type': 'registered', 'profile_image': 'https://graph.facebook.com/1480449992026266/picture?type=large', 'display_name': 'Jonathan Wieben', 'link': 'https://stackoverflow.com/users/7879109/jonathan-wieben'}",True,0,1669295078,1669295078,74561272,74561229,CC BY-SA 4.0,"<p>You need to provide a unique <code>key</code> tag to elements returned inside the <code>.map</code>, s</p> <pre class=""lang-js prettyprint-override""><code>render() {     let object = eval('('+this.props.objectData+')');     let cd = object.objColAliases;     return (         <div>             {                 cd.map(o=>{                     return <p key={o.id}>{o}</p>                 })             }         </div>     ); } </code></pre> <p>If <code>o</code> does not have a unique property, you can also use the index, like so</p> <pre class=""lang-js prettyprint-override""><code>render() {     let object = eval('('+this.props.objectData+')');     let cd = object.objColAliases;     return (         <div>             {                 cd.map((o, index) =>{                     return <p key={index}>{o}</p>                 })             }         </div>     ); } </code></pre>",,,false
"{'account_id': 4028861, 'reputation': 41132, 'user_id': 6428638, 'user_type': 'registered', 'accept_rate': 81, 'profile_image': 'https://i.sstatic.net/eoaOn.jpg?s=256', 'display_name': 'Sachila Ranawaka', 'link': 'https://stackoverflow.com/users/6428638/sachila-ranawaka'}",True,0,1669295427,1669294712,74561198,74561171,CC BY-SA 4.0,"<p>use the state variables in the default value</p> <pre><code>  <input      type=""text""      required      defaultValue={name || ''}      placeholder=""Set a title""      onChange={(e) => setName(e.target.value)}    />    <input      type=""text""      required      defaultValue={description || ''}      placeholder=""Set a description""      onChange={(e) => setDescription(e.target.value)}    />  </code></pre> <p>And update the state in useEffect</p> <pre><code>useEffect(() => {    if(data){      setDescription(data.description)      setName(data.name)    } }, [data]) </code></pre>",1669295427.0,,false
"{'account_id': 15519980, 'reputation': 1584, 'user_id': 11196441, 'user_type': 'registered', 'profile_image': 'https://www.gravatar.com/avatar/c97a5db1d6ddca883b712f94af110d25?s=256&d=identicon&r=PG&f=y&so-version=2', 'display_name': 'Disco', 'link': 'https://stackoverflow.com/users/11196441/disco'}",False,0,1669301847,1669301847,74562669,74561001,CC BY-SA 4.0,"<p>This is how I load my leaflet components for nextjs</p> <pre class=""lang-js prettyprint-override""><code> interface MapProps extends LeafletMapProps {}  const Map: React.FC<MapProps> = (props) => {   const Map = React.useMemo(     () =>       dynamic(() => import(""src/components/Map/Leaflet/LeafletMap""), {         loading: () => <Skeleton height={""400px""} />,         ssr: false,       }),     []   );   return <Map {...props} />; }; </code></pre>",,,false
"{'account_id': 18788565, 'reputation': 1467, 'user_id': 13701584, 'user_type': 'registered', 'profile_image': 'https://i.sstatic.net/FuYuS.jpg?s=256', 'display_name': 'Alpha', 'link': 'https://stackoverflow.com/users/13701584/alpha'}",True,1,1669294036,1669294036,74561055,74560804,CC BY-SA 4.0,"<p>I think the way your dispatching your action creator is <strong>incorrect</strong>.</p> <p>Your doing like this</p> <pre><code>dispatch({   type: GET_ACCESS_TOKEN,   user: response.data.data.access_token, }) </code></pre> <p>I think it should be like this.</p> <pre><code>dispatch({       type: GET_ACCESS_TOKEN,       payload: response.data.data.access_token,     }); </code></pre>",,,false
